Conflicts:
----------
Conflict in state 105 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 105 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 105 between rule 99 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 105 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 105 between rule 99 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 105 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 105 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 105 between rule 99 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 105 between rule 99 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 105 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 105 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 105 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 105 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 105 between rule 99 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 105 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 105 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 108 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 108 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 108 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 108 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 108 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 108 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 108 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 108 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 108 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 108 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 108 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 108 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 108 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 108 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 108 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 108 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 120 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 120 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 120 between rule 115 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 120 between rule 115 and token OP18_TERNARY resolved as shift.
Conflict in state 120 between rule 115 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 120 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 120 between rule 115 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 120 between rule 115 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 120 between rule 115 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 120 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 120 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 120 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 120 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 120 between rule 115 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 120 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 120 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 197 between rule 117 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 197 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 197 between rule 117 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 197 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 197 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 197 between rule 117 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 197 between rule 117 and token OP18_TERNARY resolved as shift.
Conflict in state 197 between rule 117 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 197 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 197 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 197 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 197 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 197 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 197 between rule 117 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 197 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 197 between rule 117 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 198 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 198 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 198 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 198 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 198 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 198 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 198 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 198 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 198 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 198 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 198 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 198 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 198 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 198 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 198 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 198 between rule 108 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 200 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 200 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 200 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 200 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 200 between rule 112 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 200 between rule 112 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 200 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 200 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 200 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 200 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 200 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 200 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 200 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 200 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 200 between rule 112 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 200 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 202 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 202 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 202 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 202 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 202 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 202 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 202 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 202 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 202 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 202 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 202 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 202 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 202 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 202 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 202 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 202 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 203 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 203 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 203 between rule 107 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 203 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 203 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 203 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 203 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 203 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 203 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 203 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 203 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 203 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 203 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 203 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 204 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 204 between rule 113 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 204 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 204 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 204 between rule 113 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 204 between rule 113 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 204 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 204 between rule 113 and token OP17_LIST_RANGE resolved as error.
Conflict in state 204 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 204 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 204 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 204 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 204 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 204 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 204 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 204 between rule 113 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 205 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 205 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 205 between rule 116 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 205 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 205 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 205 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 205 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 205 between rule 116 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 205 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 205 between rule 116 and token OP18_TERNARY resolved as shift.
Conflict in state 205 between rule 116 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 205 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 205 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 205 between rule 116 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 205 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 205 between rule 116 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 206 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 206 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 206 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 206 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 206 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 206 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 206 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 206 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 206 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 206 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 206 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 206 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 206 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 206 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 206 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 207 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 207 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 207 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 207 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 207 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 207 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 207 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 207 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 207 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 207 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 207 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 207 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 207 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 208 between rule 103 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 208 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 208 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 103 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 208 between rule 103 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 208 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 208 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 208 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 208 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 208 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 208 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 208 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 208 between rule 103 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 208 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 208 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 209 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 209 between rule 102 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 209 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 209 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 102 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 209 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 209 between rule 102 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 209 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 102 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 209 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 209 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 209 between rule 102 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 209 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 209 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 209 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 209 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 210 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 210 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 210 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 210 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 210 between rule 98 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 210 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 98 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 210 between rule 98 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 210 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 210 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 210 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 210 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 210 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 210 between rule 98 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 210 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 211 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 211 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 211 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 211 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 211 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 211 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 211 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 211 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 211 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 211 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 211 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 211 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 211 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 211 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 212 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 212 between rule 104 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 212 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 212 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 212 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 212 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 212 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 212 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 212 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 212 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 212 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 212 between rule 104 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 212 between rule 104 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 212 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 104 and token OP17_LIST_RANGE resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Include
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Constant
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Subroutine
10:	STAR-4 -> /* empty */
11:	PLUS-5 -> PLUS-5 Operation
12:	PLUS-5 -> Operation
13:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5
14:	Module -> Package
15:	Module -> Class
16:	STAR-6 -> STAR-6 Include
17:	STAR-6 -> /* empty */
18:	STAR-7 -> STAR-7 Constant
19:	STAR-7 -> /* empty */
20:	PLUS-8 -> PLUS-8 Subroutine
21:	PLUS-8 -> Subroutine
22:	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'
23:	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'
24:	PLUS-9 -> PLUS-9 WORD
25:	PLUS-9 -> WORD
26:	Include -> 'use' WordScoped ';'
27:	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';'
28:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
29:	OPTIONAL-10 -> TypeInner
30:	OPTIONAL-10 -> /* empty */
31:	OPTIONAL-11 -> TypeInner
32:	OPTIONAL-11 -> /* empty */
33:	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL
34:	STAR-13 -> STAR-13 PAREN-12
35:	STAR-13 -> /* empty */
36:	OPTIONAL-14 -> TypeInner
37:	OPTIONAL-14 -> /* empty */
38:	OPTIONAL-15 -> TypeInner
39:	OPTIONAL-15 -> /* empty */
40:	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL
41:	STAR-17 -> STAR-17 PAREN-16
42:	STAR-17 -> /* empty */
43:	ConstantValue -> LITERAL
44:	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']'
45:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'
46:	OPTIONAL-18 -> SubroutineArguments
47:	OPTIONAL-18 -> /* empty */
48:	PLUS-19 -> PLUS-19 Operation
49:	PLUS-19 -> Operation
50:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'
51:	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
52:	STAR-21 -> STAR-21 PAREN-20
53:	STAR-21 -> /* empty */
54:	STAR-22 -> STAR-22 ArgumentCheck
55:	STAR-22 -> /* empty */
56:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22
57:	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
58:	OPTIONAL-24 -> PAREN-23
59:	OPTIONAL-24 -> /* empty */
60:	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';'
61:	PLUS-25 -> PLUS-25 WordScoped
62:	PLUS-25 -> WordScoped
63:	STAR-26 -> STAR-26 Include
64:	STAR-26 -> /* empty */
65:	STAR-27 -> STAR-27 Constant
66:	STAR-27 -> /* empty */
67:	STAR-28 -> STAR-28 Method
68:	STAR-28 -> /* empty */
69:	PLUS-29 -> PLUS-29 Subroutine
70:	PLUS-29 -> Subroutine
71:	PAREN-30 -> PLUS-29 '1;1;'
72:	OPTIONAL-31 -> PAREN-30
73:	OPTIONAL-31 -> /* empty */
74:	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31
75:	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped
76:	STAR-33 -> STAR-33 PAREN-32
77:	STAR-33 -> /* empty */
78:	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';'
79:	Properties -> 'our %properties = (' ')' ';'
80:	OPTIONAL-34 -> MethodArguments
81:	OPTIONAL-34 -> /* empty */
82:	PLUS-35 -> PLUS-35 Operation
83:	PLUS-35 -> Operation
84:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'
85:	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
86:	STAR-37 -> STAR-37 PAREN-36
87:	STAR-37 -> /* empty */
88:	STAR-38 -> STAR-38 ArgumentCheck
89:	STAR-38 -> /* empty */
90:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38
91:	Operation -> Expression ';'
92:	Operation -> Statement
93:	OPTIONAL-39 -> ListElements
94:	OPTIONAL-39 -> /* empty */
95:	Operator -> OP01_NAMED '(' OPTIONAL-39 ')'
96:	Operator -> OP03_MATH_INC_DEC Variable
97:	Operator -> Variable OP03_MATH_INC_DEC
98:	Operator -> Expression OP04_MATH_POW Expression
99:	Operator -> OP05_LOGICAL_NEG Expression
100:	Operator -> OP05_MATH_NEG Expression ')'
101:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
102:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
103:	Operator -> Expression OP08_MATH_ADD_SUB Expression
104:	Operator -> Expression OP08_STRING_CAT Expression
105:	Operator -> Expression OP09_BITWISE_SHIFT Expression
106:	Operator -> OP10_NAMED_UNARY Expression
107:	Operator -> Expression OP11_COMPARE_LT_GT Expression
108:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
109:	Operator -> Expression OP13_BITWISE_AND Expression
110:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
111:	Operator -> Expression OP15_LOGICAL_AND Expression
112:	Operator -> Expression OP16_LOGICAL_OR Expression
113:	Operator -> Expression OP17_LIST_RANGE Expression
114:	Operator -> Expression OP18_TERNARY Variable ':' Variable
115:	Operator -> OP22_LOGICAL_NOT Expression
116:	Operator -> Expression OP23_LOGICAL_AND Expression
117:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
118:	OPTIONAL-40 -> ListElements
119:	OPTIONAL-40 -> /* empty */
120:	OPTIONAL-41 -> ListElements
121:	OPTIONAL-41 -> /* empty */
122:	OPTIONAL-42 -> ListElements
123:	OPTIONAL-42 -> /* empty */
124:	OPTIONAL-43 -> ListElements
125:	OPTIONAL-43 -> /* empty */
126:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';'
127:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';'
128:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';'
129:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';'
130:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
131:	OPTIONAL-44 -> ListElements
132:	OPTIONAL-44 -> /* empty */
133:	OPTIONAL-45 -> ListElements
134:	OPTIONAL-45 -> /* empty */
135:	Expression -> 'undef'
136:	Expression -> LITERAL
137:	Expression -> Variable
138:	Expression -> ArrayReference
139:	Expression -> ArrayDereferenced
140:	Expression -> HashReference
141:	Expression -> HashDereferenced
142:	Expression -> '{' '}'
143:	Expression -> Operator
144:	Expression -> WordScoped '(' OPTIONAL-44 ')'
145:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'
146:	Expression -> '(' Expression ')'
147:	PAREN-46 -> LoopLabel ':'
148:	OPTIONAL-47 -> PAREN-46
149:	OPTIONAL-47 -> /* empty */
150:	Statement -> Conditional
151:	Statement -> OPTIONAL-47 Loop
152:	Statement -> OperatorVoid
153:	Statement -> VariableDeclaration
154:	Statement -> VariableModification
155:	PAREN-48 -> 'elsif (' Expression ')' CodeBlock
156:	STAR-49 -> STAR-49 PAREN-48
157:	STAR-49 -> /* empty */
158:	PAREN-50 -> 'else' CodeBlock
159:	OPTIONAL-51 -> PAREN-50
160:	OPTIONAL-51 -> /* empty */
161:	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51
162:	Loop -> LoopFor
163:	Loop -> LoopForEach
164:	Loop -> LoopWhile
165:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
166:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
167:	LoopWhile -> 'while (' Expression ')' CodeBlock
168:	PLUS-52 -> PLUS-52 Operation
169:	PLUS-52 -> Operation
170:	CodeBlock -> '{' PLUS-52 '}'
171:	STAR-53 -> STAR-53 VariableRetrieval
172:	STAR-53 -> /* empty */
173:	Variable -> VARIABLE_SYMBOL STAR-53
174:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
175:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
176:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
177:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
178:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'
179:	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';'
180:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
181:	PAREN-54 -> OP21_LIST_COMMA ListElement
182:	STAR-55 -> STAR-55 PAREN-54
183:	STAR-55 -> /* empty */
184:	ListElements -> ListElement STAR-55
185:	ListElement -> Expression
186:	ListElement -> TypeInner Expression
187:	ListElement -> KEYS_OR_VALUES HashDereferenced
188:	OPTIONAL-56 -> ListElements
189:	OPTIONAL-56 -> /* empty */
190:	ArrayReference -> '[' OPTIONAL-56 ']'
191:	ArrayDereferenced -> '@{' Variable '}'
192:	ArrayDereferenced -> '@{' ArrayReference '}'
193:	OPTIONAL-57 -> TypeInner
194:	OPTIONAL-57 -> /* empty */
195:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 Expression
196:	HashEntry -> HashDereferenced
197:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
198:	HashEntryTyped -> HashDereferenced
199:	PAREN-58 -> OP21_LIST_COMMA HashEntry
200:	STAR-59 -> STAR-59 PAREN-58
201:	STAR-59 -> /* empty */
202:	HashReference -> '{' HashEntry STAR-59 '}'
203:	HashDereferenced -> '%{' Variable '}'
204:	HashDereferenced -> '%{' HashReference '}'
205:	PAREN-60 -> '::' WORD
206:	STAR-61 -> STAR-61 PAREN-60
207:	STAR-61 -> /* empty */
208:	WordScoped -> WORD STAR-61
209:	FileHandle -> '{*' WORD '}'
210:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
211:	Type -> WORD
212:	LoopLabel -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 3
	SHEBANG	shift, and go to state 2

	PLUS-1	go to state 7
	Class	go to state 8
	CompileUnit	go to state 4
	Module	go to state 6
	Package	go to state 5
	Program	go to state 1

State 1:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 2:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use strict;'	shift, and go to state 9

	Header	go to state 10

State 3:

	Package -> 'package' . WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	WORD	shift, and go to state 12

	WordScoped	go to state 11

State 4:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 13

State 5:

	Module -> Package .	(Rule 14)

	$default	reduce using rule 14 (Module)

State 6:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 7:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 3

	$end	reduce using rule 4 (CompileUnit)

	Class	go to state 8
	Package	go to state 5
	Module	go to state 14

State 8:

	Module -> Class .	(Rule 15)

	$default	reduce using rule 15 (Module)

State 9:

	Header -> 'use strict;' . 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	'use warnings;'	shift, and go to state 15

State 10:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 16

State 11:

	Package -> 'package' WordScoped . ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	';'	shift, and go to state 17

State 12:

	WordScoped -> WORD . STAR-61	(Rule 208)

	$default	reduce using rule 207 (STAR-61)

	STAR-61	go to state 18

State 13:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 14:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 15:

	Header -> 'use strict;' 'use warnings;' . 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	'our $VERSION ='	shift, and go to state 19

State 16:

	STAR-2 -> STAR-2 . Include	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use'	shift, and go to state 20

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)

	Include	go to state 22
	STAR-3	go to state 21

State 17:

	Package -> 'package' WordScoped ';' . Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	'use strict;'	shift, and go to state 9

	Header	go to state 23

State 18:

	STAR-61 -> STAR-61 . PAREN-60	(Rule 206)
	WordScoped -> WORD STAR-61 .	(Rule 208)

	'::'	shift, and go to state 25

	'('	reduce using rule 208 (WordScoped)
	')'	reduce using rule 208 (WordScoped)
	';'	reduce using rule 208 (WordScoped)
	'qw('	reduce using rule 208 (WordScoped)
	WORD	reduce using rule 208 (WordScoped)

	PAREN-60	go to state 24

State 19:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' . VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	VERSION_NUMBER	shift, and go to state 26

State 20:

	Include -> 'use' . WordScoped ';'	(Rule 26)
	Include -> 'use' . WordScoped 'qw(' PLUS-9 ')' ';'	(Rule 27)

	WORD	shift, and go to state 12

	WordScoped	go to state 27

State 21:

	STAR-3 -> STAR-3 . Constant	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 PLUS-5	(Rule 13)

	'use constant'	shift, and go to state 28

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)

	Constant	go to state 29
	STAR-4	go to state 30

State 22:

	STAR-2 -> STAR-2 Include .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 23:

	Package -> 'package' WordScoped ';' Header . STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	'use parent qw('	shift, and go to state 32

	'our'	reduce using rule 17 (STAR-6)
	'use constant'	reduce using rule 17 (STAR-6)
	'use'	reduce using rule 17 (STAR-6)

	STAR-6	go to state 31

State 24:

	STAR-61 -> STAR-61 PAREN-60 .	(Rule 206)

	$default	reduce using rule 206 (STAR-61)

State 25:

	PAREN-60 -> '::' . WORD	(Rule 205)

	WORD	shift, and go to state 33

State 26:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER . ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	';'	shift, and go to state 34

State 27:

	Include -> 'use' WordScoped . ';'	(Rule 26)
	Include -> 'use' WordScoped . 'qw(' PLUS-9 ')' ';'	(Rule 27)

	';'	shift, and go to state 35
	'qw('	shift, and go to state 36

State 28:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 28)

	WORD	shift, and go to state 37

State 29:

	STAR-3 -> STAR-3 Constant .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 30:

	STAR-4 -> STAR-4 . Subroutine	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . PLUS-5	(Rule 13)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 63
	'our'	shift, and go to state 50
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 56
	OP01_NAMED_VOID_PAREN	shift, and go to state 44
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP19_LOOP_CONTROL	shift, and go to state 69
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 70

	'for my integer'	reduce using rule 149 (OPTIONAL-47)
	'foreach my'	reduce using rule 149 (OPTIONAL-47)
	'while ('	reduce using rule 149 (OPTIONAL-47)

	LoopLabel	go to state 72
	Operator	go to state 51
	ArrayReference	go to state 52
	WordScoped	go to state 73
	PLUS-5	go to state 57
	VariableDeclaration	go to state 74
	Subroutine	go to state 77
	PAREN-46	go to state 75
	Statement	go to state 76
	Operation	go to state 38
	OperatorVoid	go to state 39
	HashReference	go to state 61
	ArrayDereferenced	go to state 62
	Variable	go to state 66
	VariableModification	go to state 67
	Expression	go to state 68
	HashDereferenced	go to state 46
	OPTIONAL-47	go to state 64
	Conditional	go to state 65

State 31:

	STAR-6 -> STAR-6 . Include	(Rule 16)
	Package -> 'package' WordScoped ';' Header STAR-6 . STAR-7 PLUS-8 '1;1;'	(Rule 22)

	'use'	shift, and go to state 20

	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)

	Include	go to state 79
	STAR-7	go to state 78

State 32:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	WORD	shift, and go to state 12

	WordScoped	go to state 81
	PLUS-25	go to state 80

State 33:

	PAREN-60 -> '::' WORD .	(Rule 205)

	$default	reduce using rule 205 (PAREN-60)

State 34:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' . 'use Carp;' 'use RPerl;'	(Rule 23)

	'use Carp;'	shift, and go to state 82

State 35:

	Include -> 'use' WordScoped ';' .	(Rule 26)

	$default	reduce using rule 26 (Include)

State 36:

	Include -> 'use' WordScoped 'qw(' . PLUS-9 ')' ';'	(Rule 27)

	WORD	shift, and go to state 83

	PLUS-9	go to state 84

State 37:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 28)

	OP20_HASH_FATARROW	shift, and go to state 85

State 38:

	PLUS-5 -> Operation .	(Rule 12)

	$default	reduce using rule 12 (PLUS-5)

State 39:

	Statement -> OperatorVoid .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 40:

	HashDereferenced -> '%{' . Variable '}'	(Rule 203)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 204)

	'{'	shift, and go to state 86
	VARIABLE_SYMBOL	shift, and go to state 55

	Variable	go to state 87
	HashReference	go to state 88

State 41:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 100)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 90
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52

State 42:

	Operator -> OP01_NAMED . '(' OPTIONAL-39 ')'	(Rule 95)

	'('	shift, and go to state 91

State 43:

	Expression -> '{' . '}'	(Rule 142)
	HashReference -> '{' . HashEntry STAR-59 '}'	(Rule 202)

	'%{'	shift, and go to state 40
	'}'	shift, and go to state 92
	WORD	shift, and go to state 94

	HashEntry	go to state 95
	HashDereferenced	go to state 93

State 44:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-40 ')' ';'	(Rule 126)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-41 ')' ';'	(Rule 127)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	'{*'	shift, and go to state 103
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	')'	reduce using rule 119 (OPTIONAL-40)

	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	TypeInner	go to state 101
	OPTIONAL-40	go to state 104
	ArrayReference	go to state 52
	HashReference	go to state 61
	ListElements	go to state 102
	Operator	go to state 51
	HashDereferenced	go to state 46
	Expression	go to state 98
	FileHandle	go to state 97
	Variable	go to state 89
	ListElement	go to state 100

State 45:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 99)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Expression	go to state 105
	HashDereferenced	go to state 46
	Variable	go to state 89
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51

State 46:

	Expression -> HashDereferenced .	(Rule 141)

	$default	reduce using rule 141 (Expression)

State 47:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 191)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 192)

	'['	shift, and go to state 53
	VARIABLE_SYMBOL	shift, and go to state 55

	Variable	go to state 107
	ArrayReference	go to state 106

State 48:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 106)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	Expression	go to state 108
	HashDereferenced	go to state 46
	Variable	go to state 89

State 49:

	Expression -> LITERAL .	(Rule 136)

	$default	reduce using rule 136 (Expression)

State 50:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 50)

	WORD	shift, and go to state 110

	Type	go to state 109

State 51:

	Expression -> Operator .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 52:

	Expression -> ArrayReference .	(Rule 138)

	$default	reduce using rule 138 (Expression)

State 53:

	ArrayReference -> '[' . OPTIONAL-56 ']'	(Rule 190)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	']'	reduce using rule 189 (OPTIONAL-56)

	ArrayDereferenced	go to state 62
	TypeInner	go to state 101
	WordScoped	go to state 73
	ListElements	go to state 112
	HashReference	go to state 61
	ArrayReference	go to state 52
	OPTIONAL-56	go to state 111
	Operator	go to state 51
	ListElement	go to state 100
	HashDereferenced	go to state 46
	Expression	go to state 98
	Variable	go to state 89

State 54:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 96)

	VARIABLE_SYMBOL	shift, and go to state 55

	Variable	go to state 113

State 55:

	Variable -> VARIABLE_SYMBOL . STAR-53	(Rule 173)

	$default	reduce using rule 172 (STAR-53)

	STAR-53	go to state 114

State 56:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-42 ';'	(Rule 128)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-43 ';'	(Rule 129)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	'{*'	shift, and go to state 103
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	';'	reduce using rule 123 (OPTIONAL-42)

	OPTIONAL-42	go to state 117
	ListElement	go to state 100
	HashDereferenced	go to state 46
	Expression	go to state 98
	FileHandle	go to state 115
	Variable	go to state 89
	ArrayReference	go to state 52
	ListElements	go to state 116
	HashReference	go to state 61
	Operator	go to state 51
	ArrayDereferenced	go to state 62
	TypeInner	go to state 101
	WordScoped	go to state 73

State 57:

	PLUS-5 -> PLUS-5 . Operation	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5 .	(Rule 13)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 56
	OP01_NAMED_VOID_PAREN	shift, and go to state 44
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP19_LOOP_CONTROL	shift, and go to state 69
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 70

	$end	reduce using rule 13 (Program)
	'for my integer'	reduce using rule 149 (OPTIONAL-47)
	'foreach my'	reduce using rule 149 (OPTIONAL-47)
	'while ('	reduce using rule 149 (OPTIONAL-47)

	ArrayDereferenced	go to state 62
	HashReference	go to state 61
	OperatorVoid	go to state 39
	Operation	go to state 118
	Conditional	go to state 65
	OPTIONAL-47	go to state 64
	Expression	go to state 68
	HashDereferenced	go to state 46
	VariableModification	go to state 67
	Variable	go to state 66
	WordScoped	go to state 73
	ArrayReference	go to state 52
	Operator	go to state 51
	LoopLabel	go to state 72
	PAREN-46	go to state 75
	Statement	go to state 76
	VariableDeclaration	go to state 74

State 58:

	Expression -> 'undef' .	(Rule 135)

	$default	reduce using rule 135 (Expression)

State 59:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 161)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	Operator	go to state 51
	ArrayReference	go to state 52
	HashReference	go to state 61
	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 119

State 60:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 115)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51
	HashDereferenced	go to state 46
	Expression	go to state 120
	Variable	go to state 89

State 61:

	Expression -> HashReference .	(Rule 140)

	$default	reduce using rule 140 (Expression)

State 62:

	Expression -> ArrayDereferenced .	(Rule 139)

	$default	reduce using rule 139 (Expression)

State 63:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 177)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 178)

	WORD	shift, and go to state 110

	Type	go to state 121

State 64:

	Statement -> OPTIONAL-47 . Loop	(Rule 151)

	'for my integer'	shift, and go to state 125
	'foreach my'	shift, and go to state 124
	'while ('	shift, and go to state 126

	LoopFor	go to state 123
	LoopWhile	go to state 127
	Loop	go to state 122
	LoopForEach	go to state 128

State 65:

	Statement -> Conditional .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 66:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 97)
	Expression -> Variable .	(Rule 137)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 145)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 179)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 180)

	OP02_METHOD_THINARROW	shift, and go to state 132
	OP03_MATH_INC_DEC	shift, and go to state 129
	OP19_VARIABLE_ASSIGN	shift, and go to state 131
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 130

	';'	reduce using rule 137 (Expression)
	OP04_MATH_POW	reduce using rule 137 (Expression)
	OP06_REGEX_MATCH	reduce using rule 137 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (Expression)
	OP08_STRING_CAT	reduce using rule 137 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 137 (Expression)
	OP13_BITWISE_AND	reduce using rule 137 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (Expression)
	OP15_LOGICAL_AND	reduce using rule 137 (Expression)
	OP16_LOGICAL_OR	reduce using rule 137 (Expression)
	OP17_LIST_RANGE	reduce using rule 137 (Expression)
	OP18_TERNARY	reduce using rule 137 (Expression)
	OP23_LOGICAL_AND	reduce using rule 137 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (Expression)

State 67:

	Statement -> VariableModification .	(Rule 154)

	$default	reduce using rule 154 (Statement)

State 68:

	Operation -> Expression . ';'	(Rule 91)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	';'	shift, and go to state 134
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 69:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 130)

	WORD	shift, and go to state 150

	LoopLabel	go to state 151

State 70:

	WordScoped -> WORD . STAR-61	(Rule 208)
	LoopLabel -> WORD .	(Rule 212)

	'('	reduce using rule 207 (STAR-61)
	':'	reduce using rule 212 (LoopLabel)
	'::'	reduce using rule 207 (STAR-61)

	STAR-61	go to state 18

State 71:

	Expression -> '(' . Expression ')'	(Rule 146)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	HashReference	go to state 61
	ArrayReference	go to state 52
	Operator	go to state 51
	Expression	go to state 152
	HashDereferenced	go to state 46
	Variable	go to state 89

State 72:

	PAREN-46 -> LoopLabel . ':'	(Rule 147)

	':'	shift, and go to state 153

State 73:

	Expression -> WordScoped . '(' OPTIONAL-44 ')'	(Rule 144)

	'('	shift, and go to state 154

State 74:

	Statement -> VariableDeclaration .	(Rule 153)

	$default	reduce using rule 153 (Statement)

State 75:

	OPTIONAL-47 -> PAREN-46 .	(Rule 148)

	$default	reduce using rule 148 (OPTIONAL-47)

State 76:

	Operation -> Statement .	(Rule 92)

	$default	reduce using rule 92 (Operation)

State 77:

	STAR-4 -> STAR-4 Subroutine .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 78:

	STAR-7 -> STAR-7 . Constant	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 . PLUS-8 '1;1;'	(Rule 22)

	'our'	shift, and go to state 50
	'use constant'	shift, and go to state 28

	Subroutine	go to state 155
	Constant	go to state 157
	PLUS-8	go to state 156

State 79:

	STAR-6 -> STAR-6 Include .	(Rule 16)

	$default	reduce using rule 16 (STAR-6)

State 80:

	PLUS-25 -> PLUS-25 . WordScoped	(Rule 61)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 . ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	')'	shift, and go to state 158
	WORD	shift, and go to state 12

	WordScoped	go to state 159

State 81:

	PLUS-25 -> WordScoped .	(Rule 62)

	$default	reduce using rule 62 (PLUS-25)

State 82:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' . 'use RPerl;'	(Rule 23)

	'use RPerl;'	shift, and go to state 160

State 83:

	PLUS-9 -> WORD .	(Rule 25)

	$default	reduce using rule 25 (PLUS-9)

State 84:

	PLUS-9 -> PLUS-9 . WORD	(Rule 24)
	Include -> 'use' WordScoped 'qw(' PLUS-9 . ')' ';'	(Rule 27)

	')'	shift, and go to state 161
	WORD	shift, and go to state 162

State 85:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 28)

	'my'	shift, and go to state 99

	TypeInner	go to state 163

State 86:

	HashReference -> '{' . HashEntry STAR-59 '}'	(Rule 202)

	'%{'	shift, and go to state 40
	WORD	shift, and go to state 94

	HashEntry	go to state 95
	HashDereferenced	go to state 93

State 87:

	HashDereferenced -> '%{' Variable . '}'	(Rule 203)

	'}'	shift, and go to state 164

State 88:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 204)

	'}'	shift, and go to state 165

State 89:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 97)
	Expression -> Variable .	(Rule 137)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 145)

	OP02_METHOD_THINARROW	shift, and go to state 132
	OP03_MATH_INC_DEC	shift, and go to state 129

	')'	reduce using rule 137 (Expression)
	'..'	reduce using rule 137 (Expression)
	';'	reduce using rule 137 (Expression)
	']'	reduce using rule 137 (Expression)
	'}'	reduce using rule 137 (Expression)
	OP04_MATH_POW	reduce using rule 137 (Expression)
	OP06_REGEX_MATCH	reduce using rule 137 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (Expression)
	OP08_STRING_CAT	reduce using rule 137 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 137 (Expression)
	OP13_BITWISE_AND	reduce using rule 137 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (Expression)
	OP15_LOGICAL_AND	reduce using rule 137 (Expression)
	OP16_LOGICAL_OR	reduce using rule 137 (Expression)
	OP17_LIST_RANGE	reduce using rule 137 (Expression)
	OP18_TERNARY	reduce using rule 137 (Expression)
	OP21_LIST_COMMA	reduce using rule 137 (Expression)
	OP23_LOGICAL_AND	reduce using rule 137 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (Expression)

State 90:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	')'	shift, and go to state 166
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 91:

	Operator -> OP01_NAMED '(' . OPTIONAL-39 ')'	(Rule 95)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	')'	reduce using rule 94 (OPTIONAL-39)

	Operator	go to state 51
	ArrayReference	go to state 52
	ListElements	go to state 168
	HashReference	go to state 61
	TypeInner	go to state 101
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	OPTIONAL-39	go to state 167
	ListElement	go to state 100
	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 98

State 92:

	Expression -> '{' '}' .	(Rule 142)

	$default	reduce using rule 142 (Expression)

State 93:

	HashEntry -> HashDereferenced .	(Rule 196)

	$default	reduce using rule 196 (HashEntry)

State 94:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-57 Expression	(Rule 195)

	OP20_HASH_FATARROW	shift, and go to state 169

State 95:

	HashReference -> '{' HashEntry . STAR-59 '}'	(Rule 202)

	$default	reduce using rule 201 (STAR-59)

	STAR-59	go to state 170

State 96:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 187)

	'%{'	shift, and go to state 40

	HashDereferenced	go to state 171

State 97:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-41 ')' ';'	(Rule 127)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	')'	reduce using rule 121 (OPTIONAL-41)

	Variable	go to state 89
	Expression	go to state 98
	HashDereferenced	go to state 46
	ListElement	go to state 100
	WordScoped	go to state 73
	TypeInner	go to state 101
	ArrayDereferenced	go to state 62
	OPTIONAL-41	go to state 173
	Operator	go to state 51
	ArrayReference	go to state 52
	ListElements	go to state 172
	HashReference	go to state 61

State 98:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	ListElement -> Expression .	(Rule 185)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

	')'	reduce using rule 185 (ListElement)
	';'	reduce using rule 185 (ListElement)
	']'	reduce using rule 185 (ListElement)
	OP21_LIST_COMMA	reduce using rule 185 (ListElement)

State 99:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 210)

	WORD	shift, and go to state 110

	Type	go to state 174

State 100:

	ListElements -> ListElement . STAR-55	(Rule 184)

	$default	reduce using rule 183 (STAR-55)

	STAR-55	go to state 175

State 101:

	ListElement -> TypeInner . Expression	(Rule 186)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	HashDereferenced	go to state 46
	Expression	go to state 176
	Variable	go to state 89
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51

State 102:

	OPTIONAL-40 -> ListElements .	(Rule 118)

	$default	reduce using rule 118 (OPTIONAL-40)

State 103:

	FileHandle -> '{*' . WORD '}'	(Rule 209)

	WORD	shift, and go to state 177

State 104:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 . ')' ';'	(Rule 126)

	')'	shift, and go to state 178

State 105:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 99)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147

	')'	reduce using rule 99 (Operator)
	'..'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP06_REGEX_MATCH	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 106:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 192)

	'}'	shift, and go to state 179

State 107:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 191)

	'}'	shift, and go to state 180

State 108:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 106)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 109:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 181

State 110:

	Type -> WORD .	(Rule 211)

	$default	reduce using rule 211 (Type)

State 111:

	ArrayReference -> '[' OPTIONAL-56 . ']'	(Rule 190)

	']'	shift, and go to state 182

State 112:

	OPTIONAL-56 -> ListElements .	(Rule 188)

	$default	reduce using rule 188 (OPTIONAL-56)

State 113:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 96)

	$default	reduce using rule 96 (Operator)

State 114:

	STAR-53 -> STAR-53 . VariableRetrieval	(Rule 171)
	Variable -> VARIABLE_SYMBOL STAR-53 .	(Rule 173)

	OP02_ARRAY_THINARROW	shift, and go to state 183
	OP02_HASH_THINARROW	shift, and go to state 184

	')'	reduce using rule 173 (Variable)
	'..'	reduce using rule 173 (Variable)
	':'	reduce using rule 173 (Variable)
	';'	reduce using rule 173 (Variable)
	']'	reduce using rule 173 (Variable)
	'}'	reduce using rule 173 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 173 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 173 (Variable)
	OP04_MATH_POW	reduce using rule 173 (Variable)
	OP06_REGEX_MATCH	reduce using rule 173 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 173 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 173 (Variable)
	OP08_STRING_CAT	reduce using rule 173 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 173 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 173 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 173 (Variable)
	OP13_BITWISE_AND	reduce using rule 173 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 173 (Variable)
	OP15_LOGICAL_AND	reduce using rule 173 (Variable)
	OP16_LOGICAL_OR	reduce using rule 173 (Variable)
	OP17_LIST_RANGE	reduce using rule 173 (Variable)
	OP18_TERNARY	reduce using rule 173 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 173 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 173 (Variable)
	OP21_LIST_COMMA	reduce using rule 173 (Variable)
	OP23_LOGICAL_AND	reduce using rule 173 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 173 (Variable)

	VariableRetrieval	go to state 185

State 115:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-43 ';'	(Rule 129)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	';'	reduce using rule 125 (OPTIONAL-43)

	WordScoped	go to state 73
	OPTIONAL-43	go to state 187
	ArrayDereferenced	go to state 62
	TypeInner	go to state 101
	HashReference	go to state 61
	ListElements	go to state 186
	ArrayReference	go to state 52
	Operator	go to state 51
	Expression	go to state 98
	HashDereferenced	go to state 46
	Variable	go to state 89
	ListElement	go to state 100

State 116:

	OPTIONAL-42 -> ListElements .	(Rule 122)

	$default	reduce using rule 122 (OPTIONAL-42)

State 117:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 . ';'	(Rule 128)

	';'	shift, and go to state 188

State 118:

	PLUS-5 -> PLUS-5 Operation .	(Rule 11)

	$default	reduce using rule 11 (PLUS-5)

State 119:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 161)

	')'	shift, and go to state 189
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 120:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 121:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 177)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 178)

	VARIABLE_SYMBOL	shift, and go to state 190

State 122:

	Statement -> OPTIONAL-47 Loop .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 123:

	Loop -> LoopFor .	(Rule 162)

	$default	reduce using rule 162 (Loop)

State 124:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 166)

	WORD	shift, and go to state 110

	Type	go to state 191

State 125:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 165)

	VARIABLE_SYMBOL	shift, and go to state 192

State 126:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 167)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	HashReference	go to state 61
	ArrayReference	go to state 52
	Operator	go to state 51
	Expression	go to state 193
	HashDereferenced	go to state 46
	Variable	go to state 89

State 127:

	Loop -> LoopWhile .	(Rule 164)

	$default	reduce using rule 164 (Loop)

State 128:

	Loop -> LoopForEach .	(Rule 163)

	$default	reduce using rule 163 (Loop)

State 129:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 97)

	$default	reduce using rule 97 (Operator)

State 130:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 180)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52
	Variable	go to state 89
	Expression	go to state 194
	HashDereferenced	go to state 46

State 131:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 179)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	Expression	go to state 195
	HashDereferenced	go to state 46
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73

State 132:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-45 ')'	(Rule 145)

	WORD	shift, and go to state 196

State 133:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 117)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	Expression	go to state 197
	HashDereferenced	go to state 46
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	Operator	go to state 51
	ArrayReference	go to state 52
	HashReference	go to state 61

State 134:

	Operation -> Expression ';' .	(Rule 91)

	$default	reduce using rule 91 (Operation)

State 135:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 108)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52
	Variable	go to state 89
	Expression	go to state 198
	HashDereferenced	go to state 46

State 136:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 101)

	'/'	shift, and go to state 199

State 137:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 112)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	HashDereferenced	go to state 46
	Expression	go to state 200
	Variable	go to state 89

State 138:

	Operator -> Expression OP18_TERNARY . Variable ':' Variable	(Rule 114)

	VARIABLE_SYMBOL	shift, and go to state 55

	Variable	go to state 201

State 139:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 109)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	Expression	go to state 202
	HashDereferenced	go to state 46
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73

State 140:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 107)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	Expression	go to state 203
	HashDereferenced	go to state 46
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52

State 141:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 113)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	HashDereferenced	go to state 46
	Expression	go to state 204
	Variable	go to state 89
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	HashReference	go to state 61
	ArrayReference	go to state 52
	Operator	go to state 51

State 142:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 116)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	Expression	go to state 205
	HashDereferenced	go to state 46
	Operator	go to state 51
	ArrayReference	go to state 52
	HashReference	go to state 61
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73

State 143:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 105)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	HashReference	go to state 61
	ArrayReference	go to state 52
	Operator	go to state 51
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	HashDereferenced	go to state 46
	Expression	go to state 206
	Variable	go to state 89

State 144:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 111)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	HashDereferenced	go to state 46
	Expression	go to state 207
	Variable	go to state 89

State 145:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 103)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 208
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52

State 146:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 102)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 209
	Operator	go to state 51
	ArrayReference	go to state 52
	HashReference	go to state 61
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62

State 147:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 98)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52
	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 210

State 148:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 110)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	HashDereferenced	go to state 46
	Expression	go to state 211
	Variable	go to state 89
	HashReference	go to state 61
	ArrayReference	go to state 52
	Operator	go to state 51
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62

State 149:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 104)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	HashDereferenced	go to state 46
	Expression	go to state 212
	Variable	go to state 89
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	HashReference	go to state 61
	ArrayReference	go to state 52
	Operator	go to state 51

State 150:

	LoopLabel -> WORD .	(Rule 212)

	$default	reduce using rule 212 (LoopLabel)

State 151:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 130)

	';'	shift, and go to state 213

State 152:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	Expression -> '(' Expression . ')'	(Rule 146)

	')'	shift, and go to state 214
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 153:

	PAREN-46 -> LoopLabel ':' .	(Rule 147)

	$default	reduce using rule 147 (PAREN-46)

State 154:

	Expression -> WordScoped '(' . OPTIONAL-44 ')'	(Rule 144)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	')'	reduce using rule 132 (OPTIONAL-44)

	WordScoped	go to state 73
	TypeInner	go to state 101
	ArrayDereferenced	go to state 62
	OPTIONAL-44	go to state 216
	Operator	go to state 51
	HashReference	go to state 61
	ListElements	go to state 215
	ArrayReference	go to state 52
	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 98
	ListElement	go to state 100

State 155:

	PLUS-8 -> Subroutine .	(Rule 21)

	$default	reduce using rule 21 (PLUS-8)

State 156:

	PLUS-8 -> PLUS-8 . Subroutine	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 . '1;1;'	(Rule 22)

	'1;1;'	shift, and go to state 218
	'our'	shift, and go to state 50

	Subroutine	go to state 217

State 157:

	STAR-7 -> STAR-7 Constant .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 158:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' . ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	';'	shift, and go to state 219

State 159:

	PLUS-25 -> PLUS-25 WordScoped .	(Rule 61)

	$default	reduce using rule 61 (PLUS-25)

State 160:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' .	(Rule 23)

	$default	reduce using rule 23 (Header)

State 161:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' . ';'	(Rule 27)

	';'	shift, and go to state 220

State 162:

	PLUS-9 -> PLUS-9 WORD .	(Rule 24)

	$default	reduce using rule 24 (PLUS-9)

State 163:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 28)

	'['	shift, and go to state 222
	'{'	shift, and go to state 224
	LITERAL	shift, and go to state 223

	ConstantValue	go to state 221

State 164:

	HashDereferenced -> '%{' Variable '}' .	(Rule 203)

	$default	reduce using rule 203 (HashDereferenced)

State 165:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 204)

	$default	reduce using rule 204 (HashDereferenced)

State 166:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 100)

	$default	reduce using rule 100 (Operator)

State 167:

	Operator -> OP01_NAMED '(' OPTIONAL-39 . ')'	(Rule 95)

	')'	shift, and go to state 225

State 168:

	OPTIONAL-39 -> ListElements .	(Rule 93)

	$default	reduce using rule 93 (OPTIONAL-39)

State 169:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-57 Expression	(Rule 195)

	'my'	shift, and go to state 99

	'%{'	reduce using rule 194 (OPTIONAL-57)
	'('	reduce using rule 194 (OPTIONAL-57)
	'@{'	reduce using rule 194 (OPTIONAL-57)
	'['	reduce using rule 194 (OPTIONAL-57)
	'undef'	reduce using rule 194 (OPTIONAL-57)
	'{'	reduce using rule 194 (OPTIONAL-57)
	LITERAL	reduce using rule 194 (OPTIONAL-57)
	OP01_NAMED	reduce using rule 194 (OPTIONAL-57)
	OP03_MATH_INC_DEC	reduce using rule 194 (OPTIONAL-57)
	OP05_LOGICAL_NEG	reduce using rule 194 (OPTIONAL-57)
	OP05_MATH_NEG	reduce using rule 194 (OPTIONAL-57)
	OP10_NAMED_UNARY	reduce using rule 194 (OPTIONAL-57)
	OP22_LOGICAL_NOT	reduce using rule 194 (OPTIONAL-57)
	VARIABLE_SYMBOL	reduce using rule 194 (OPTIONAL-57)
	WORD	reduce using rule 194 (OPTIONAL-57)

	OPTIONAL-57	go to state 226
	TypeInner	go to state 227

State 170:

	STAR-59 -> STAR-59 . PAREN-58	(Rule 200)
	HashReference -> '{' HashEntry STAR-59 . '}'	(Rule 202)

	'}'	shift, and go to state 229
	OP21_LIST_COMMA	shift, and go to state 228

	PAREN-58	go to state 230

State 171:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 187)

	$default	reduce using rule 187 (ListElement)

State 172:

	OPTIONAL-41 -> ListElements .	(Rule 120)

	$default	reduce using rule 120 (OPTIONAL-41)

State 173:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 . ')' ';'	(Rule 127)

	')'	shift, and go to state 231

State 174:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 210)

	'$TYPED_'	shift, and go to state 232

State 175:

	STAR-55 -> STAR-55 . PAREN-54	(Rule 182)
	ListElements -> ListElement STAR-55 .	(Rule 184)

	OP21_LIST_COMMA	shift, and go to state 234

	')'	reduce using rule 184 (ListElements)
	';'	reduce using rule 184 (ListElements)
	']'	reduce using rule 184 (ListElements)

	PAREN-54	go to state 233

State 176:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	ListElement -> TypeInner Expression .	(Rule 186)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

	')'	reduce using rule 186 (ListElement)
	';'	reduce using rule 186 (ListElement)
	']'	reduce using rule 186 (ListElement)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)

State 177:

	FileHandle -> '{*' WORD . '}'	(Rule 209)

	'}'	shift, and go to state 235

State 178:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' . ';'	(Rule 126)

	';'	shift, and go to state 236

State 179:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 192)

	$default	reduce using rule 192 (ArrayDereferenced)

State 180:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 191)

	$default	reduce using rule 191 (ArrayDereferenced)

State 181:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 50)

	'= sub {'	shift, and go to state 237

State 182:

	ArrayReference -> '[' OPTIONAL-56 ']' .	(Rule 190)

	$default	reduce using rule 190 (ArrayReference)

State 183:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 174)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 238
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62

State 184:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 175)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 176)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 239

	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51
	HashDereferenced	go to state 46
	Expression	go to state 240
	Variable	go to state 89

State 185:

	STAR-53 -> STAR-53 VariableRetrieval .	(Rule 171)

	$default	reduce using rule 171 (STAR-53)

State 186:

	OPTIONAL-43 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-43)

State 187:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 . ';'	(Rule 129)

	';'	shift, and go to state 241

State 188:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';' .	(Rule 128)

	$default	reduce using rule 128 (OperatorVoid)

State 189:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-49 OPTIONAL-51	(Rule 161)

	'{'	shift, and go to state 242

	CodeBlock	go to state 243

State 190:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 177)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 178)

	';'	shift, and go to state 245
	OP19_VARIABLE_ASSIGN	shift, and go to state 244

State 191:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 166)

	VARIABLE_SYMBOL	shift, and go to state 246

State 192:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 165)

	'('	shift, and go to state 247

State 193:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 167)

	')'	shift, and go to state 248
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 194:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 180)

	';'	shift, and go to state 249
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 195:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 179)

	';'	shift, and go to state 250
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 196:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-45 ')'	(Rule 145)

	'('	shift, and go to state 251

State 197:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 198:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP13_BITWISE_AND	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 199:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 101)

	OP06_REGEX_PATTERN	shift, and go to state 252

State 200:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 201:

	Operator -> Expression OP18_TERNARY Variable . ':' Variable	(Rule 114)

	':'	shift, and go to state 253

State 202:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 203:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 204:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 205:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 206:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 207:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 208:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 103 (Operator)
	OP08_STRING_CAT	reduce using rule 103 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 103 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 103 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 209:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136

	')'	reduce using rule 102 (Operator)
	'..'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 102 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 102 (Operator)
	OP08_STRING_CAT	reduce using rule 102 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 102 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 102 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 210:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147

	')'	reduce using rule 98 (Operator)
	'..'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP06_REGEX_MATCH	reduce using rule 98 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 98 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 98 (Operator)
	OP08_STRING_CAT	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 211:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 212:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP08_STRING_CAT	reduce using rule 104 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 104 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 104 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 213:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 130)

	$default	reduce using rule 130 (OperatorVoid)

State 214:

	Expression -> '(' Expression ')' .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 215:

	OPTIONAL-44 -> ListElements .	(Rule 131)

	$default	reduce using rule 131 (OPTIONAL-44)

State 216:

	Expression -> WordScoped '(' OPTIONAL-44 . ')'	(Rule 144)

	')'	shift, and go to state 254

State 217:

	PLUS-8 -> PLUS-8 Subroutine .	(Rule 20)

	$default	reduce using rule 20 (PLUS-8)

State 218:

	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;' .	(Rule 22)

	$default	reduce using rule 22 (Package)

State 219:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' . STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 255

State 220:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';' .	(Rule 27)

	$default	reduce using rule 27 (Include)

State 221:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 28)

	';'	shift, and go to state 256

State 222:

	ConstantValue -> '[' . OPTIONAL-10 LITERAL STAR-13 ']'	(Rule 44)

	'my'	shift, and go to state 99

	LITERAL	reduce using rule 30 (OPTIONAL-10)

	OPTIONAL-10	go to state 257
	TypeInner	go to state 258

State 223:

	ConstantValue -> LITERAL .	(Rule 43)

	$default	reduce using rule 43 (ConstantValue)

State 224:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 45)

	WORD	shift, and go to state 259

State 225:

	Operator -> OP01_NAMED '(' OPTIONAL-39 ')' .	(Rule 95)

	$default	reduce using rule 95 (Operator)

State 226:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 . Expression	(Rule 195)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	HashDereferenced	go to state 46
	Expression	go to state 260
	Variable	go to state 89
	HashReference	go to state 61
	ArrayReference	go to state 52
	Operator	go to state 51
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73

State 227:

	OPTIONAL-57 -> TypeInner .	(Rule 193)

	$default	reduce using rule 193 (OPTIONAL-57)

State 228:

	PAREN-58 -> OP21_LIST_COMMA . HashEntry	(Rule 199)

	'%{'	shift, and go to state 40
	WORD	shift, and go to state 94

	HashDereferenced	go to state 93
	HashEntry	go to state 261

State 229:

	HashReference -> '{' HashEntry STAR-59 '}' .	(Rule 202)

	$default	reduce using rule 202 (HashReference)

State 230:

	STAR-59 -> STAR-59 PAREN-58 .	(Rule 200)

	$default	reduce using rule 200 (STAR-59)

State 231:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' . ';'	(Rule 127)

	';'	shift, and go to state 262

State 232:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 210)

	WORD	shift, and go to state 263

State 233:

	STAR-55 -> STAR-55 PAREN-54 .	(Rule 182)

	$default	reduce using rule 182 (STAR-55)

State 234:

	PAREN-54 -> OP21_LIST_COMMA . ListElement	(Rule 181)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ListElement	go to state 264
	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 98
	TypeInner	go to state 101
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	Operator	go to state 51
	ArrayReference	go to state 52
	HashReference	go to state 61

State 235:

	FileHandle -> '{*' WORD '}' .	(Rule 209)

	$default	reduce using rule 209 (FileHandle)

State 236:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';' .	(Rule 126)

	$default	reduce using rule 126 (OperatorVoid)

State 237:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-18 PLUS-19 '}' ';'	(Rule 50)

	'( my'	shift, and go to state 267

	'%{'	reduce using rule 47 (OPTIONAL-18)
	'('	reduce using rule 47 (OPTIONAL-18)
	'@{'	reduce using rule 47 (OPTIONAL-18)
	'['	reduce using rule 47 (OPTIONAL-18)
	'for my integer'	reduce using rule 47 (OPTIONAL-18)
	'foreach my'	reduce using rule 47 (OPTIONAL-18)
	'if ('	reduce using rule 47 (OPTIONAL-18)
	'my'	reduce using rule 47 (OPTIONAL-18)
	'undef'	reduce using rule 47 (OPTIONAL-18)
	'while ('	reduce using rule 47 (OPTIONAL-18)
	'{'	reduce using rule 47 (OPTIONAL-18)
	LITERAL	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_PAREN	reduce using rule 47 (OPTIONAL-18)
	OP03_MATH_INC_DEC	reduce using rule 47 (OPTIONAL-18)
	OP05_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	OP05_MATH_NEG	reduce using rule 47 (OPTIONAL-18)
	OP10_NAMED_UNARY	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL	reduce using rule 47 (OPTIONAL-18)
	OP22_LOGICAL_NOT	reduce using rule 47 (OPTIONAL-18)
	VARIABLE_SYMBOL	reduce using rule 47 (OPTIONAL-18)
	WORD	reduce using rule 47 (OPTIONAL-18)

	OPTIONAL-18	go to state 266
	SubroutineArguments	go to state 265

State 238:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 174)

	']'	shift, and go to state 268
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 239:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 176)
	WordScoped -> WORD . STAR-61	(Rule 208)

	'}'	shift, and go to state 269

	'('	reduce using rule 207 (STAR-61)
	'::'	reduce using rule 207 (STAR-61)

	STAR-61	go to state 18

State 240:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 175)

	'}'	shift, and go to state 270
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 241:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';' .	(Rule 129)

	$default	reduce using rule 129 (OperatorVoid)

State 242:

	CodeBlock -> '{' . PLUS-52 '}'	(Rule 170)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 56
	OP01_NAMED_VOID_PAREN	shift, and go to state 44
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP19_LOOP_CONTROL	shift, and go to state 69
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 70

	'for my integer'	reduce using rule 149 (OPTIONAL-47)
	'foreach my'	reduce using rule 149 (OPTIONAL-47)
	'while ('	reduce using rule 149 (OPTIONAL-47)

	Conditional	go to state 65
	OPTIONAL-47	go to state 64
	Expression	go to state 68
	HashDereferenced	go to state 46
	Variable	go to state 66
	VariableModification	go to state 67
	ArrayDereferenced	go to state 62
	OperatorVoid	go to state 39
	HashReference	go to state 61
	Operation	go to state 272
	PAREN-46	go to state 75
	Statement	go to state 76
	VariableDeclaration	go to state 74
	WordScoped	go to state 73
	ArrayReference	go to state 52
	Operator	go to state 51
	LoopLabel	go to state 72
	PLUS-52	go to state 271

State 243:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-49 OPTIONAL-51	(Rule 161)

	$default	reduce using rule 157 (STAR-49)

	STAR-49	go to state 273

State 244:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 178)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51
	Expression	go to state 274
	HashDereferenced	go to state 46
	Variable	go to state 89

State 245:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 177)

	$default	reduce using rule 177 (VariableDeclaration)

State 246:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 166)

	'('	shift, and go to state 275

State 247:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	HashReference	go to state 61
	ArrayReference	go to state 52
	Operator	go to state 51
	HashDereferenced	go to state 46
	Expression	go to state 276
	Variable	go to state 89

State 248:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 167)

	'{'	shift, and go to state 242

	CodeBlock	go to state 277

State 249:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 180)

	$default	reduce using rule 180 (VariableModification)

State 250:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 179)

	$default	reduce using rule 179 (VariableModification)

State 251:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-45 ')'	(Rule 145)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	')'	reduce using rule 134 (OPTIONAL-45)

	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	TypeInner	go to state 101
	ListElements	go to state 279
	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51
	HashDereferenced	go to state 46
	Expression	go to state 98
	Variable	go to state 89
	ListElement	go to state 100
	OPTIONAL-45	go to state 278

State 252:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 101)

	'/'	shift, and go to state 280

State 253:

	Operator -> Expression OP18_TERNARY Variable ':' . Variable	(Rule 114)

	VARIABLE_SYMBOL	shift, and go to state 55

	Variable	go to state 281

State 254:

	Expression -> WordScoped '(' OPTIONAL-44 ')' .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 255:

	STAR-26 -> STAR-26 . Include	(Rule 63)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 . STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	'use'	shift, and go to state 20

	'our %properties = ('	reduce using rule 66 (STAR-27)
	'use constant'	reduce using rule 66 (STAR-27)

	STAR-27	go to state 282
	Include	go to state 283

State 256:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 28)

	$default	reduce using rule 28 (Constant)

State 257:

	ConstantValue -> '[' OPTIONAL-10 . LITERAL STAR-13 ']'	(Rule 44)

	LITERAL	shift, and go to state 284

State 258:

	OPTIONAL-10 -> TypeInner .	(Rule 29)

	$default	reduce using rule 29 (OPTIONAL-10)

State 259:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 45)

	OP20_HASH_FATARROW	shift, and go to state 285

State 260:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 Expression .	(Rule 195)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

	'}'	reduce using rule 195 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 195 (HashEntry)

State 261:

	PAREN-58 -> OP21_LIST_COMMA HashEntry .	(Rule 199)

	$default	reduce using rule 199 (PAREN-58)

State 262:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';' .	(Rule 127)

	$default	reduce using rule 127 (OperatorVoid)

State 263:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 210)

	OP19_VARIABLE_ASSIGN	shift, and go to state 286

State 264:

	PAREN-54 -> OP21_LIST_COMMA ListElement .	(Rule 181)

	$default	reduce using rule 181 (PAREN-54)

State 265:

	OPTIONAL-18 -> SubroutineArguments .	(Rule 46)

	$default	reduce using rule 46 (OPTIONAL-18)

State 266:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 . PLUS-19 '}' ';'	(Rule 50)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 56
	OP01_NAMED_VOID_PAREN	shift, and go to state 44
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP19_LOOP_CONTROL	shift, and go to state 69
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 70

	'for my integer'	reduce using rule 149 (OPTIONAL-47)
	'foreach my'	reduce using rule 149 (OPTIONAL-47)
	'while ('	reduce using rule 149 (OPTIONAL-47)

	OperatorVoid	go to state 39
	HashReference	go to state 61
	Operation	go to state 288
	ArrayDereferenced	go to state 62
	HashDereferenced	go to state 46
	Expression	go to state 68
	Variable	go to state 66
	VariableModification	go to state 67
	OPTIONAL-47	go to state 64
	Conditional	go to state 65
	LoopLabel	go to state 72
	ArrayReference	go to state 52
	Operator	go to state 51
	PLUS-19	go to state 287
	WordScoped	go to state 73
	VariableDeclaration	go to state 74
	PAREN-46	go to state 75
	Statement	go to state 76

State 267:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	WORD	shift, and go to state 110

	Type	go to state 289

State 268:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 174)

	$default	reduce using rule 174 (VariableRetrieval)

State 269:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 176)

	$default	reduce using rule 176 (VariableRetrieval)

State 270:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 175)

	$default	reduce using rule 175 (VariableRetrieval)

State 271:

	PLUS-52 -> PLUS-52 . Operation	(Rule 168)
	CodeBlock -> '{' PLUS-52 . '}'	(Rule 170)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	'}'	shift, and go to state 291
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 56
	OP01_NAMED_VOID_PAREN	shift, and go to state 44
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP19_LOOP_CONTROL	shift, and go to state 69
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 70

	'for my integer'	reduce using rule 149 (OPTIONAL-47)
	'foreach my'	reduce using rule 149 (OPTIONAL-47)
	'while ('	reduce using rule 149 (OPTIONAL-47)

	Conditional	go to state 65
	OPTIONAL-47	go to state 64
	VariableModification	go to state 67
	Variable	go to state 66
	Expression	go to state 68
	HashDereferenced	go to state 46
	Operation	go to state 290
	OperatorVoid	go to state 39
	HashReference	go to state 61
	ArrayDereferenced	go to state 62
	VariableDeclaration	go to state 74
	Statement	go to state 76
	PAREN-46	go to state 75
	Operator	go to state 51
	ArrayReference	go to state 52
	LoopLabel	go to state 72
	WordScoped	go to state 73

State 272:

	PLUS-52 -> Operation .	(Rule 169)

	$default	reduce using rule 169 (PLUS-52)

State 273:

	STAR-49 -> STAR-49 . PAREN-48	(Rule 156)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 . OPTIONAL-51	(Rule 161)

	'else'	shift, and go to state 295
	'elsif ('	shift, and go to state 292

	$end	reduce using rule 160 (OPTIONAL-51)
	'%{'	reduce using rule 160 (OPTIONAL-51)
	'('	reduce using rule 160 (OPTIONAL-51)
	'@{'	reduce using rule 160 (OPTIONAL-51)
	'['	reduce using rule 160 (OPTIONAL-51)
	'for my integer'	reduce using rule 160 (OPTIONAL-51)
	'foreach my'	reduce using rule 160 (OPTIONAL-51)
	'if ('	reduce using rule 160 (OPTIONAL-51)
	'my'	reduce using rule 160 (OPTIONAL-51)
	'undef'	reduce using rule 160 (OPTIONAL-51)
	'while ('	reduce using rule 160 (OPTIONAL-51)
	'{'	reduce using rule 160 (OPTIONAL-51)
	'}'	reduce using rule 160 (OPTIONAL-51)
	LITERAL	reduce using rule 160 (OPTIONAL-51)
	OP01_NAMED	reduce using rule 160 (OPTIONAL-51)
	OP01_NAMED_VOID	reduce using rule 160 (OPTIONAL-51)
	OP01_NAMED_VOID_PAREN	reduce using rule 160 (OPTIONAL-51)
	OP03_MATH_INC_DEC	reduce using rule 160 (OPTIONAL-51)
	OP05_LOGICAL_NEG	reduce using rule 160 (OPTIONAL-51)
	OP05_MATH_NEG	reduce using rule 160 (OPTIONAL-51)
	OP10_NAMED_UNARY	reduce using rule 160 (OPTIONAL-51)
	OP19_LOOP_CONTROL	reduce using rule 160 (OPTIONAL-51)
	OP22_LOGICAL_NOT	reduce using rule 160 (OPTIONAL-51)
	VARIABLE_SYMBOL	reduce using rule 160 (OPTIONAL-51)
	WORD	reduce using rule 160 (OPTIONAL-51)

	OPTIONAL-51	go to state 294
	PAREN-48	go to state 293
	PAREN-50	go to state 296

State 274:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 178)

	';'	shift, and go to state 297
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 275:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'my'	shift, and go to state 99
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayDereferenced	go to state 62
	TypeInner	go to state 101
	WordScoped	go to state 73
	HashReference	go to state 61
	ArrayReference	go to state 52
	ListElements	go to state 298
	Operator	go to state 51
	ListElement	go to state 100
	Expression	go to state 98
	HashDereferenced	go to state 46
	Variable	go to state 89

State 276:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 165)

	'..'	shift, and go to state 299
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 277:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 167)

	$default	reduce using rule 167 (LoopWhile)

State 278:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 . ')'	(Rule 145)

	')'	shift, and go to state 300

State 279:

	OPTIONAL-45 -> ListElements .	(Rule 133)

	$default	reduce using rule 133 (OPTIONAL-45)

State 280:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 281:

	Operator -> Expression OP18_TERNARY Variable ':' Variable .	(Rule 114)

	$default	reduce using rule 114 (Operator)

State 282:

	STAR-27 -> STAR-27 . Constant	(Rule 65)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 . Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	'our %properties = ('	shift, and go to state 301
	'use constant'	shift, and go to state 28

	Constant	go to state 303
	Properties	go to state 302

State 283:

	STAR-26 -> STAR-26 Include .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 284:

	ConstantValue -> '[' OPTIONAL-10 LITERAL . STAR-13 ']'	(Rule 44)

	$default	reduce using rule 35 (STAR-13)

	STAR-13	go to state 304

State 285:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 45)

	'my'	shift, and go to state 99

	LITERAL	reduce using rule 37 (OPTIONAL-14)

	OPTIONAL-14	go to state 305
	TypeInner	go to state 306

State 286:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 210)

	$default	reduce using rule 210 (TypeInner)

State 287:

	PLUS-19 -> PLUS-19 . Operation	(Rule 48)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 . '}' ';'	(Rule 50)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	'}'	shift, and go to state 307
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 56
	OP01_NAMED_VOID_PAREN	shift, and go to state 44
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP19_LOOP_CONTROL	shift, and go to state 69
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 70

	'for my integer'	reduce using rule 149 (OPTIONAL-47)
	'foreach my'	reduce using rule 149 (OPTIONAL-47)
	'while ('	reduce using rule 149 (OPTIONAL-47)

	PAREN-46	go to state 75
	Statement	go to state 76
	VariableDeclaration	go to state 74
	WordScoped	go to state 73
	Operator	go to state 51
	ArrayReference	go to state 52
	LoopLabel	go to state 72
	Conditional	go to state 65
	OPTIONAL-47	go to state 64
	Variable	go to state 66
	VariableModification	go to state 67
	HashDereferenced	go to state 46
	Expression	go to state 68
	ArrayDereferenced	go to state 62
	Operation	go to state 308
	OperatorVoid	go to state 39
	HashReference	go to state 61

State 288:

	PLUS-19 -> Operation .	(Rule 49)

	$default	reduce using rule 49 (PLUS-19)

State 289:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	VARIABLE_SYMBOL	shift, and go to state 309

State 290:

	PLUS-52 -> PLUS-52 Operation .	(Rule 168)

	$default	reduce using rule 168 (PLUS-52)

State 291:

	CodeBlock -> '{' PLUS-52 '}' .	(Rule 170)

	$default	reduce using rule 170 (CodeBlock)

State 292:

	PAREN-48 -> 'elsif (' . Expression ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	Expression	go to state 310
	HashDereferenced	go to state 46
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	Operator	go to state 51
	ArrayReference	go to state 52
	HashReference	go to state 61

State 293:

	STAR-49 -> STAR-49 PAREN-48 .	(Rule 156)

	$default	reduce using rule 156 (STAR-49)

State 294:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51 .	(Rule 161)

	$default	reduce using rule 161 (Conditional)

State 295:

	PAREN-50 -> 'else' . CodeBlock	(Rule 158)

	'{'	shift, and go to state 242

	CodeBlock	go to state 311

State 296:

	OPTIONAL-51 -> PAREN-50 .	(Rule 159)

	$default	reduce using rule 159 (OPTIONAL-51)

State 297:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableDeclaration)

State 298:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 166)

	')'	shift, and go to state 312

State 299:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 313

State 300:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')' .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 301:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-33 ')' ';'	(Rule 78)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 79)

	'%{'	shift, and go to state 40
	')'	shift, and go to state 314
	WORD	shift, and go to state 317

	HashEntryTyped	go to state 316
	HashDereferenced	go to state 315

State 302:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties . STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	$default	reduce using rule 68 (STAR-28)

	STAR-28	go to state 318

State 303:

	STAR-27 -> STAR-27 Constant .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 304:

	STAR-13 -> STAR-13 . PAREN-12	(Rule 34)
	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 . ']'	(Rule 44)

	']'	shift, and go to state 321
	OP21_LIST_COMMA	shift, and go to state 319

	PAREN-12	go to state 320

State 305:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 . LITERAL STAR-17 '}'	(Rule 45)

	LITERAL	shift, and go to state 322

State 306:

	OPTIONAL-14 -> TypeInner .	(Rule 36)

	$default	reduce using rule 36 (OPTIONAL-14)

State 307:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' . ';'	(Rule 50)

	';'	shift, and go to state 323

State 308:

	PLUS-19 -> PLUS-19 Operation .	(Rule 48)

	$default	reduce using rule 48 (PLUS-19)

State 309:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	$default	reduce using rule 53 (STAR-21)

	STAR-21	go to state 324

State 310:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	PAREN-48 -> 'elsif (' Expression . ')' CodeBlock	(Rule 155)

	')'	shift, and go to state 325
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 311:

	PAREN-50 -> 'else' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (PAREN-50)

State 312:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 166)

	'{'	shift, and go to state 242

	CodeBlock	go to state 326

State 313:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 327
	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 314:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 79)

	';'	shift, and go to state 328

State 315:

	HashEntryTyped -> HashDereferenced .	(Rule 198)

	$default	reduce using rule 198 (HashEntryTyped)

State 316:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-33 ')' ';'	(Rule 78)

	$default	reduce using rule 77 (STAR-33)

	STAR-33	go to state 329

State 317:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 197)

	OP20_HASH_FATARROW	shift, and go to state 330

State 318:

	STAR-28 -> STAR-28 . Method	(Rule 67)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 . '1;1;' OPTIONAL-31	(Rule 74)

	'1;1;'	shift, and go to state 332
	'our'	shift, and go to state 333

	Method	go to state 331

State 319:

	PAREN-12 -> OP21_LIST_COMMA . OPTIONAL-11 LITERAL	(Rule 33)

	'my'	shift, and go to state 99

	LITERAL	reduce using rule 32 (OPTIONAL-11)

	TypeInner	go to state 335
	OPTIONAL-11	go to state 334

State 320:

	STAR-13 -> STAR-13 PAREN-12 .	(Rule 34)

	$default	reduce using rule 34 (STAR-13)

State 321:

	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']' .	(Rule 44)

	$default	reduce using rule 44 (ConstantValue)

State 322:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL . STAR-17 '}'	(Rule 45)

	$default	reduce using rule 42 (STAR-17)

	STAR-17	go to state 336

State 323:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';' .	(Rule 50)

	$default	reduce using rule 50 (Subroutine)

State 324:

	STAR-21 -> STAR-21 . PAREN-20	(Rule 52)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	')'	shift, and go to state 339
	OP21_LIST_COMMA	shift, and go to state 338

	PAREN-20	go to state 337

State 325:

	PAREN-48 -> 'elsif (' Expression ')' . CodeBlock	(Rule 155)

	'{'	shift, and go to state 242

	CodeBlock	go to state 340

State 326:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (LoopForEach)

State 327:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 165)

	'{'	shift, and go to state 242

	CodeBlock	go to state 341

State 328:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 79)

	$default	reduce using rule 79 (Properties)

State 329:

	STAR-33 -> STAR-33 . PAREN-32	(Rule 76)
	Properties -> 'our %properties = (' HashEntryTyped STAR-33 . ')' ';'	(Rule 78)

	')'	shift, and go to state 342
	OP21_LIST_COMMA	shift, and go to state 343

	PAREN-32	go to state 344

State 330:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 197)

	'my'	shift, and go to state 99

	TypeInner	go to state 345

State 331:

	STAR-28 -> STAR-28 Method .	(Rule 67)

	$default	reduce using rule 67 (STAR-28)

State 332:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' . OPTIONAL-31	(Rule 74)

	'our'	shift, and go to state 50

	$end	reduce using rule 73 (OPTIONAL-31)
	'package'	reduce using rule 73 (OPTIONAL-31)

	PLUS-29	go to state 349
	PAREN-30	go to state 348
	OPTIONAL-31	go to state 346
	Subroutine	go to state 347

State 333:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 84)

	WORD	shift, and go to state 110

	Type	go to state 350

State 334:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 . LITERAL	(Rule 33)

	LITERAL	shift, and go to state 351

State 335:

	OPTIONAL-11 -> TypeInner .	(Rule 31)

	$default	reduce using rule 31 (OPTIONAL-11)

State 336:

	STAR-17 -> STAR-17 . PAREN-16	(Rule 41)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 . '}'	(Rule 45)

	'}'	shift, and go to state 353
	OP21_LIST_COMMA	shift, and go to state 352

	PAREN-16	go to state 354

State 337:

	STAR-21 -> STAR-21 PAREN-20 .	(Rule 52)

	$default	reduce using rule 52 (STAR-21)

State 338:

	PAREN-20 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 51)

	'my'	shift, and go to state 355

State 339:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	OP19_VARIABLE_ASSIGN	shift, and go to state 356

State 340:

	PAREN-48 -> 'elsif (' Expression ')' CodeBlock .	(Rule 155)

	$default	reduce using rule 155 (PAREN-48)

State 341:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (LoopFor)

State 342:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' . ';'	(Rule 78)

	';'	shift, and go to state 357

State 343:

	PAREN-32 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 75)

	'%{'	shift, and go to state 40
	WORD	shift, and go to state 317

	HashEntryTyped	go to state 358
	HashDereferenced	go to state 315

State 344:

	STAR-33 -> STAR-33 PAREN-32 .	(Rule 76)

	$default	reduce using rule 76 (STAR-33)

State 345:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 197)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	ArrayReference	go to state 52
	HashReference	go to state 61
	Operator	go to state 51
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	HashDereferenced	go to state 46
	Expression	go to state 359
	Variable	go to state 89

State 346:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31 .	(Rule 74)

	$default	reduce using rule 74 (Class)

State 347:

	PLUS-29 -> Subroutine .	(Rule 70)

	$default	reduce using rule 70 (PLUS-29)

State 348:

	OPTIONAL-31 -> PAREN-30 .	(Rule 72)

	$default	reduce using rule 72 (OPTIONAL-31)

State 349:

	PLUS-29 -> PLUS-29 . Subroutine	(Rule 69)
	PAREN-30 -> PLUS-29 . '1;1;'	(Rule 71)

	'1;1;'	shift, and go to state 360
	'our'	shift, and go to state 50

	Subroutine	go to state 361

State 350:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 84)

	VARIABLE_SYMBOL	shift, and go to state 362

State 351:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL .	(Rule 33)

	$default	reduce using rule 33 (PAREN-12)

State 352:

	PAREN-16 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 40)

	WORD	shift, and go to state 363

State 353:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}' .	(Rule 45)

	$default	reduce using rule 45 (ConstantValue)

State 354:

	STAR-17 -> STAR-17 PAREN-16 .	(Rule 41)

	$default	reduce using rule 41 (STAR-17)

State 355:

	PAREN-20 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 51)

	WORD	shift, and go to state 110

	Type	go to state 364

State 356:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-22	(Rule 56)

	'@_;'	shift, and go to state 365

State 357:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';' .	(Rule 78)

	$default	reduce using rule 78 (Properties)

State 358:

	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 75)

	$default	reduce using rule 75 (PAREN-32)

State 359:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 197)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

	')'	reduce using rule 197 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 197 (HashEntryTyped)

State 360:

	PAREN-30 -> PLUS-29 '1;1;' .	(Rule 71)

	$default	reduce using rule 71 (PAREN-30)

State 361:

	PLUS-29 -> PLUS-29 Subroutine .	(Rule 69)

	$default	reduce using rule 69 (PLUS-29)

State 362:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 84)

	'= sub {'	shift, and go to state 366

State 363:

	PAREN-16 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 40)

	OP20_HASH_FATARROW	shift, and go to state 367

State 364:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 51)

	VARIABLE_SYMBOL	shift, and go to state 368

State 365:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-22	(Rule 56)

	$default	reduce using rule 55 (STAR-22)

	STAR-22	go to state 369

State 366:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-34 PLUS-35 '}' ';'	(Rule 84)

	'( my'	shift, and go to state 370

	'%{'	reduce using rule 81 (OPTIONAL-34)
	'('	reduce using rule 81 (OPTIONAL-34)
	'@{'	reduce using rule 81 (OPTIONAL-34)
	'['	reduce using rule 81 (OPTIONAL-34)
	'for my integer'	reduce using rule 81 (OPTIONAL-34)
	'foreach my'	reduce using rule 81 (OPTIONAL-34)
	'if ('	reduce using rule 81 (OPTIONAL-34)
	'my'	reduce using rule 81 (OPTIONAL-34)
	'undef'	reduce using rule 81 (OPTIONAL-34)
	'while ('	reduce using rule 81 (OPTIONAL-34)
	'{'	reduce using rule 81 (OPTIONAL-34)
	LITERAL	reduce using rule 81 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 81 (OPTIONAL-34)
	OP01_NAMED_VOID	reduce using rule 81 (OPTIONAL-34)
	OP01_NAMED_VOID_PAREN	reduce using rule 81 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 81 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 81 (OPTIONAL-34)
	OP05_MATH_NEG	reduce using rule 81 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 81 (OPTIONAL-34)
	OP19_LOOP_CONTROL	reduce using rule 81 (OPTIONAL-34)
	OP22_LOGICAL_NOT	reduce using rule 81 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 81 (OPTIONAL-34)
	WORD	reduce using rule 81 (OPTIONAL-34)

	OPTIONAL-34	go to state 371
	MethodArguments	go to state 372

State 367:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-15 LITERAL	(Rule 40)

	'my'	shift, and go to state 99

	LITERAL	reduce using rule 39 (OPTIONAL-15)

	TypeInner	go to state 374
	OPTIONAL-15	go to state 373

State 368:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 51)

	$default	reduce using rule 51 (PAREN-20)

State 369:

	STAR-22 -> STAR-22 . ArgumentCheck	(Rule 54)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22 .	(Rule 56)

	'::'	shift, and go to state 375

	'%{'	reduce using rule 56 (SubroutineArguments)
	'('	reduce using rule 56 (SubroutineArguments)
	'@{'	reduce using rule 56 (SubroutineArguments)
	'['	reduce using rule 56 (SubroutineArguments)
	'for my integer'	reduce using rule 56 (SubroutineArguments)
	'foreach my'	reduce using rule 56 (SubroutineArguments)
	'if ('	reduce using rule 56 (SubroutineArguments)
	'my'	reduce using rule 56 (SubroutineArguments)
	'undef'	reduce using rule 56 (SubroutineArguments)
	'while ('	reduce using rule 56 (SubroutineArguments)
	'{'	reduce using rule 56 (SubroutineArguments)
	LITERAL	reduce using rule 56 (SubroutineArguments)
	OP01_NAMED	reduce using rule 56 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 56 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 56 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 56 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 56 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 56 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 56 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 56 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 56 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 56 (SubroutineArguments)
	WORD	reduce using rule 56 (SubroutineArguments)

	ArgumentCheck	go to state 376

State 370:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	TYPE_CLASS_OR_SELF	shift, and go to state 377

State 371:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 . PLUS-35 '}' ';'	(Rule 84)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 56
	OP01_NAMED_VOID_PAREN	shift, and go to state 44
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP19_LOOP_CONTROL	shift, and go to state 69
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 70

	'for my integer'	reduce using rule 149 (OPTIONAL-47)
	'foreach my'	reduce using rule 149 (OPTIONAL-47)
	'while ('	reduce using rule 149 (OPTIONAL-47)

	Expression	go to state 68
	HashDereferenced	go to state 46
	Variable	go to state 66
	VariableModification	go to state 67
	Conditional	go to state 65
	OPTIONAL-47	go to state 64
	PLUS-35	go to state 379
	ArrayDereferenced	go to state 62
	HashReference	go to state 61
	OperatorVoid	go to state 39
	Operation	go to state 378
	Statement	go to state 76
	PAREN-46	go to state 75
	VariableDeclaration	go to state 74
	WordScoped	go to state 73
	LoopLabel	go to state 72
	ArrayReference	go to state 52
	Operator	go to state 51

State 372:

	OPTIONAL-34 -> MethodArguments .	(Rule 80)

	$default	reduce using rule 80 (OPTIONAL-34)

State 373:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 . LITERAL	(Rule 40)

	LITERAL	shift, and go to state 380

State 374:

	OPTIONAL-15 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-15)

State 375:

	ArgumentCheck -> '::' . CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';'	(Rule 60)

	CHECK_OR_CHECKTRACE	shift, and go to state 381

State 376:

	STAR-22 -> STAR-22 ArgumentCheck .	(Rule 54)

	$default	reduce using rule 54 (STAR-22)

State 377:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	$default	reduce using rule 87 (STAR-37)

	STAR-37	go to state 382

State 378:

	PLUS-35 -> Operation .	(Rule 83)

	$default	reduce using rule 83 (PLUS-35)

State 379:

	PLUS-35 -> PLUS-35 . Operation	(Rule 82)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 . '}' ';'	(Rule 84)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	'}'	shift, and go to state 383
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 56
	OP01_NAMED_VOID_PAREN	shift, and go to state 44
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP19_LOOP_CONTROL	shift, and go to state 69
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 70

	'for my integer'	reduce using rule 149 (OPTIONAL-47)
	'foreach my'	reduce using rule 149 (OPTIONAL-47)
	'while ('	reduce using rule 149 (OPTIONAL-47)

	Conditional	go to state 65
	OPTIONAL-47	go to state 64
	Variable	go to state 66
	VariableModification	go to state 67
	HashDereferenced	go to state 46
	Expression	go to state 68
	Operation	go to state 384
	OperatorVoid	go to state 39
	HashReference	go to state 61
	ArrayDereferenced	go to state 62
	VariableDeclaration	go to state 74
	PAREN-46	go to state 75
	Statement	go to state 76
	Operator	go to state 51
	ArrayReference	go to state 52
	LoopLabel	go to state 72
	WordScoped	go to state 73

State 380:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL .	(Rule 40)

	$default	reduce using rule 40 (PAREN-16)

State 381:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-24 ')' ';'	(Rule 60)

	'('	shift, and go to state 385

State 382:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 86)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	')'	shift, and go to state 387
	OP21_LIST_COMMA	shift, and go to state 388

	PAREN-36	go to state 386

State 383:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' . ';'	(Rule 84)

	';'	shift, and go to state 389

State 384:

	PLUS-35 -> PLUS-35 Operation .	(Rule 82)

	$default	reduce using rule 82 (PLUS-35)

State 385:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-24 ')' ';'	(Rule 60)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Operator	go to state 51
	ArrayReference	go to state 52
	HashReference	go to state 61
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73
	Variable	go to state 89
	Expression	go to state 390
	HashDereferenced	go to state 46

State 386:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 86)

	$default	reduce using rule 86 (STAR-37)

State 387:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	OP19_VARIABLE_ASSIGN	shift, and go to state 391

State 388:

	PAREN-36 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 85)

	'my'	shift, and go to state 392

State 389:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';' .	(Rule 84)

	$default	reduce using rule 84 (Method)

State 390:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-24 ')' ';'	(Rule 60)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP21_LIST_COMMA	shift, and go to state 395
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

	')'	reduce using rule 59 (OPTIONAL-24)

	OPTIONAL-24	go to state 393
	PAREN-23	go to state 394

State 391:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-38	(Rule 90)

	'@_;'	shift, and go to state 396

State 392:

	PAREN-36 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 85)

	WORD	shift, and go to state 110

	Type	go to state 397

State 393:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 . ')' ';'	(Rule 60)

	')'	shift, and go to state 398

State 394:

	OPTIONAL-24 -> PAREN-23 .	(Rule 58)

	$default	reduce using rule 58 (OPTIONAL-24)

State 395:

	PAREN-23 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 57)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 399
	WordScoped	go to state 73
	ArrayDereferenced	go to state 62
	Operator	go to state 51
	ArrayReference	go to state 52
	HashReference	go to state 61

State 396:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-38	(Rule 90)

	$default	reduce using rule 89 (STAR-38)

	STAR-38	go to state 400

State 397:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 85)

	VARIABLE_SYMBOL	shift, and go to state 401

State 398:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' . ';'	(Rule 60)

	';'	shift, and go to state 402

State 399:

	PAREN-23 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 57)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP21_LIST_COMMA	shift, and go to state 403
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

State 400:

	STAR-38 -> STAR-38 . ArgumentCheck	(Rule 88)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38 .	(Rule 90)

	'::'	shift, and go to state 375

	'%{'	reduce using rule 90 (MethodArguments)
	'('	reduce using rule 90 (MethodArguments)
	'@{'	reduce using rule 90 (MethodArguments)
	'['	reduce using rule 90 (MethodArguments)
	'for my integer'	reduce using rule 90 (MethodArguments)
	'foreach my'	reduce using rule 90 (MethodArguments)
	'if ('	reduce using rule 90 (MethodArguments)
	'my'	reduce using rule 90 (MethodArguments)
	'undef'	reduce using rule 90 (MethodArguments)
	'while ('	reduce using rule 90 (MethodArguments)
	'{'	reduce using rule 90 (MethodArguments)
	LITERAL	reduce using rule 90 (MethodArguments)
	OP01_NAMED	reduce using rule 90 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 90 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 90 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 90 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 90 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 90 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 90 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 90 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 90 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 90 (MethodArguments)
	WORD	reduce using rule 90 (MethodArguments)

	ArgumentCheck	go to state 404

State 401:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 85)

	$default	reduce using rule 85 (PAREN-36)

State 402:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';' .	(Rule 60)

	$default	reduce using rule 60 (ArgumentCheck)

State 403:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 57)

	'%{'	shift, and go to state 40
	'('	shift, and go to state 71
	'@{'	shift, and go to state 47
	'['	shift, and go to state 53
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 43
	LITERAL	shift, and go to state 49
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 54
	OP05_LOGICAL_NEG	shift, and go to state 45
	OP05_MATH_NEG	shift, and go to state 41
	OP10_NAMED_UNARY	shift, and go to state 48
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 55
	WORD	shift, and go to state 12

	Variable	go to state 89
	HashDereferenced	go to state 46
	Expression	go to state 405
	Operator	go to state 51
	HashReference	go to state 61
	ArrayReference	go to state 52
	ArrayDereferenced	go to state 62
	WordScoped	go to state 73

State 404:

	STAR-38 -> STAR-38 ArgumentCheck .	(Rule 88)

	$default	reduce using rule 88 (STAR-38)

State 405:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 57)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 147
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 149
	OP09_BITWISE_SHIFT	shift, and go to state 143
	OP11_COMPARE_LT_GT	shift, and go to state 140
	OP12_COMPARE_EQ_NEQ	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 139
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 137
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 133

	')'	reduce using rule 57 (PAREN-23)


Summary:
--------
Number of rules         : 213
Number of terminals     : 81
Number of non-terminals : 105
Number of states        : 406
