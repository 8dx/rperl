Conflicts:
----------
Conflict in state 96 between rule 116 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 96 between rule 116 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 96 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 96 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 96 between rule 116 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 96 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 96 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 96 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 96 between rule 116 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 96 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 96 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 96 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 96 between rule 116 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 96 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 96 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 96 between rule 116 and token OP18_TERNARY resolved as shift.
Conflict in state 104 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 104 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 104 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 104 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 104 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 104 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 104 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 104 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 104 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 104 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 104 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 104 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 104 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 104 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 104 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 104 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 105 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 105 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 105 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 105 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 105 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 105 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 105 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 105 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 105 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 105 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 105 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 105 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 105 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 105 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 105 between rule 107 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 105 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 145 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 145 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 145 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 145 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 145 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 145 between rule 99 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 145 between rule 99 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 145 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 145 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 145 between rule 99 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 145 between rule 99 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 145 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 145 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 145 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 145 between rule 99 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 145 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 185 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 185 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 185 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 185 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 185 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 185 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 185 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 185 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 185 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 185 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 185 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 185 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 185 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 185 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 185 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 185 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 186 between rule 112 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 186 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 186 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 186 between rule 112 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 186 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 186 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 186 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 186 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 186 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 186 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 186 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 186 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 186 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 186 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 187 between rule 98 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 187 between rule 98 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 187 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 187 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 187 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 187 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 187 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 187 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 187 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 187 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 187 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 187 between rule 98 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 187 between rule 98 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 187 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 187 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 187 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 188 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 188 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 188 between rule 114 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 188 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 188 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 188 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 188 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 188 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 188 between rule 114 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 188 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 188 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 188 between rule 114 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 188 between rule 114 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 188 between rule 114 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 188 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 188 between rule 114 and token OP17_LIST_RANGE resolved as error.
Conflict in state 189 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 189 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 189 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 189 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 189 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 189 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 189 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 189 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 189 between rule 108 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 189 between rule 108 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 189 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 189 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 189 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 189 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 189 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 189 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 190 between rule 118 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 190 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 190 between rule 118 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 190 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 190 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 190 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 190 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 190 between rule 118 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 190 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 190 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 190 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 190 between rule 118 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 190 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 190 between rule 118 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 190 between rule 118 and token OP18_TERNARY resolved as shift.
Conflict in state 190 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 191 between rule 104 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 191 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 191 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 191 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 191 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 191 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 191 between rule 104 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 191 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 191 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 191 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 191 between rule 104 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 191 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 191 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 191 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 193 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 193 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 193 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 193 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 193 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 193 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 193 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 193 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 193 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 193 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 193 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 193 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 194 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 194 between rule 113 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 194 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 194 between rule 113 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 194 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 194 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 194 between rule 113 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 194 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 194 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 194 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 194 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 194 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 194 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 194 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 194 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 194 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 195 between rule 117 and token OP18_TERNARY resolved as shift.
Conflict in state 195 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 195 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 195 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 195 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 195 between rule 117 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 195 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 195 between rule 117 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 195 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 195 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 195 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 195 between rule 117 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 195 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 195 between rule 117 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 195 between rule 117 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 195 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 196 between rule 103 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 196 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 196 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 196 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 196 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 196 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 196 between rule 103 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 196 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 196 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 196 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 196 between rule 103 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 196 between rule 103 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 196 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 196 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 196 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 196 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 198 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 198 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 198 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 198 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 198 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 198 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 198 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 198 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 198 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 198 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 198 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 198 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 198 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 198 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 198 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 198 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 199 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 199 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 199 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 199 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 199 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 199 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 199 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 199 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 199 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 199 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 199 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 199 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 199 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 199 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 199 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 199 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 200 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 200 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 200 between rule 102 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 200 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 200 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 200 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 200 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 200 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 200 between rule 102 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 200 between rule 102 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 200 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 200 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 200 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 200 between rule 102 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 200 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 200 between rule 102 and token OP08_STRING_CAT resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Include
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Constant
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Subroutine
10:	STAR-4 -> /* empty */
11:	PLUS-5 -> PLUS-5 Operation
12:	PLUS-5 -> Operation
13:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5
14:	Module -> Package
15:	Module -> Class
16:	STAR-6 -> STAR-6 Include
17:	STAR-6 -> /* empty */
18:	STAR-7 -> STAR-7 Constant
19:	STAR-7 -> /* empty */
20:	PLUS-8 -> PLUS-8 Subroutine
21:	PLUS-8 -> Subroutine
22:	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'
23:	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'
24:	PLUS-9 -> PLUS-9 WORD
25:	PLUS-9 -> WORD
26:	Include -> 'use' WordScoped ';'
27:	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';'
28:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
29:	OPTIONAL-10 -> TypeInner
30:	OPTIONAL-10 -> /* empty */
31:	OPTIONAL-11 -> TypeInner
32:	OPTIONAL-11 -> /* empty */
33:	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL
34:	STAR-13 -> STAR-13 PAREN-12
35:	STAR-13 -> /* empty */
36:	OPTIONAL-14 -> TypeInner
37:	OPTIONAL-14 -> /* empty */
38:	OPTIONAL-15 -> TypeInner
39:	OPTIONAL-15 -> /* empty */
40:	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL
41:	STAR-17 -> STAR-17 PAREN-16
42:	STAR-17 -> /* empty */
43:	ConstantValue -> LITERAL
44:	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']'
45:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'
46:	OPTIONAL-18 -> SubroutineArguments
47:	OPTIONAL-18 -> /* empty */
48:	PLUS-19 -> PLUS-19 Operation
49:	PLUS-19 -> Operation
50:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'
51:	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
52:	STAR-21 -> STAR-21 PAREN-20
53:	STAR-21 -> /* empty */
54:	STAR-22 -> STAR-22 ArgumentCheck
55:	STAR-22 -> /* empty */
56:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22
57:	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
58:	OPTIONAL-24 -> PAREN-23
59:	OPTIONAL-24 -> /* empty */
60:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';'
61:	PLUS-25 -> PLUS-25 WordScoped
62:	PLUS-25 -> WordScoped
63:	STAR-26 -> STAR-26 Include
64:	STAR-26 -> /* empty */
65:	STAR-27 -> STAR-27 Constant
66:	STAR-27 -> /* empty */
67:	STAR-28 -> STAR-28 Method
68:	STAR-28 -> /* empty */
69:	PLUS-29 -> PLUS-29 Subroutine
70:	PLUS-29 -> Subroutine
71:	PAREN-30 -> PLUS-29 '1;1;'
72:	OPTIONAL-31 -> PAREN-30
73:	OPTIONAL-31 -> /* empty */
74:	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31
75:	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped
76:	STAR-33 -> STAR-33 PAREN-32
77:	STAR-33 -> /* empty */
78:	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';'
79:	Properties -> 'our %properties = (' ')' ';'
80:	OPTIONAL-34 -> MethodArguments
81:	OPTIONAL-34 -> /* empty */
82:	PLUS-35 -> PLUS-35 Operation
83:	PLUS-35 -> Operation
84:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'
85:	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
86:	STAR-37 -> STAR-37 PAREN-36
87:	STAR-37 -> /* empty */
88:	STAR-38 -> STAR-38 ArgumentCheck
89:	STAR-38 -> /* empty */
90:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38
91:	Operation -> Expression ';'
92:	Operation -> Statement
93:	OPTIONAL-39 -> ListElements
94:	OPTIONAL-39 -> /* empty */
95:	Operator -> OP01_NAMED '(' OPTIONAL-39 ')'
96:	Operator -> OP03_MATH_INC_DEC Variable
97:	Operator -> Variable OP03_MATH_INC_DEC
98:	Operator -> Expression OP04_MATH_POW Expression
99:	Operator -> OP05_LOGICAL_NEG Expression
100:	Operator -> OP05_MATH_NEG Expression ')'
101:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
102:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
103:	Operator -> Expression OP08_MATH_ADD_SUB Expression
104:	Operator -> Expression OP08_STRING_CAT Expression
105:	Operator -> Expression OP09_BITWISE_SHIFT Expression
106:	Operator -> OP10_NAMED_UNARY Expression
107:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
108:	Operator -> Expression OP11_COMPARE_LT_GT Expression
109:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
110:	Operator -> Expression OP13_BITWISE_AND Expression
111:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
112:	Operator -> Expression OP15_LOGICAL_AND Expression
113:	Operator -> Expression OP16_LOGICAL_OR Expression
114:	Operator -> Expression OP17_LIST_RANGE Expression
115:	Operator -> Expression OP18_TERNARY Variable COLON Variable
116:	Operator -> OP22_LOGICAL_NOT Expression
117:	Operator -> Expression OP23_LOGICAL_AND Expression
118:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
119:	OPTIONAL-40 -> ListElements
120:	OPTIONAL-40 -> /* empty */
121:	OPTIONAL-41 -> ListElements
122:	OPTIONAL-41 -> /* empty */
123:	OPTIONAL-42 -> ListElements
124:	OPTIONAL-42 -> /* empty */
125:	OPTIONAL-43 -> ListElements
126:	OPTIONAL-43 -> /* empty */
127:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';'
128:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';'
129:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';'
130:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';'
131:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
132:	OPTIONAL-44 -> ListElements
133:	OPTIONAL-44 -> /* empty */
134:	OPTIONAL-45 -> ListElements
135:	OPTIONAL-45 -> /* empty */
136:	Expression -> 'undef'
137:	Expression -> LITERAL
138:	Expression -> Variable
139:	Expression -> ArrayReference
140:	Expression -> ArrayDereferenced
141:	Expression -> HashReference
142:	Expression -> HashDereferenced
143:	Expression -> '{' '}'
144:	Expression -> Operator
145:	Expression -> WordScoped '(' OPTIONAL-44 ')'
146:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'
147:	Expression -> '(' Expression ')'
148:	PAREN-46 -> LoopLabel COLON
149:	OPTIONAL-47 -> PAREN-46
150:	OPTIONAL-47 -> /* empty */
151:	Statement -> Conditional
152:	Statement -> OPTIONAL-47 Loop
153:	Statement -> OperatorVoid
154:	Statement -> VariableDeclaration
155:	Statement -> VariableModification
156:	PAREN-48 -> 'elsif (' Expression ')' CodeBlock
157:	STAR-49 -> STAR-49 PAREN-48
158:	STAR-49 -> /* empty */
159:	PAREN-50 -> 'else' CodeBlock
160:	OPTIONAL-51 -> PAREN-50
161:	OPTIONAL-51 -> /* empty */
162:	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51
163:	Loop -> LoopFor
164:	Loop -> LoopForEach
165:	Loop -> LoopWhile
166:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
167:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
168:	LoopWhile -> 'while (' Expression ')' CodeBlock
169:	PLUS-52 -> PLUS-52 Operation
170:	PLUS-52 -> Operation
171:	CodeBlock -> '{' PLUS-52 '}'
172:	STAR-53 -> STAR-53 VariableRetrieval
173:	STAR-53 -> /* empty */
174:	Variable -> VARIABLE_SYMBOL STAR-53
175:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
176:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
177:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
178:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
179:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'
180:	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';'
181:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
182:	PAREN-54 -> OP21_LIST_COMMA ListElement
183:	STAR-55 -> STAR-55 PAREN-54
184:	STAR-55 -> /* empty */
185:	ListElements -> ListElement STAR-55
186:	ListElement -> Expression
187:	ListElement -> TypeInner Expression
188:	ListElement -> KEYS_OR_VALUES HashDereferenced
189:	OPTIONAL-56 -> ListElements
190:	OPTIONAL-56 -> /* empty */
191:	ArrayReference -> '[' OPTIONAL-56 ']'
192:	ArrayDereferenced -> '@{' Variable '}'
193:	ArrayDereferenced -> '@{' ArrayReference '}'
194:	OPTIONAL-57 -> TypeInner
195:	OPTIONAL-57 -> /* empty */
196:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 Expression
197:	HashEntry -> HashDereferenced
198:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
199:	HashEntryTyped -> HashDereferenced
200:	PAREN-58 -> OP21_LIST_COMMA HashEntry
201:	STAR-59 -> STAR-59 PAREN-58
202:	STAR-59 -> /* empty */
203:	HashReference -> '{' HashEntry STAR-59 '}'
204:	HashDereferenced -> '%{' Variable '}'
205:	HashDereferenced -> '%{' HashReference '}'
206:	WordScoped -> WORD
207:	WordScoped -> WORD_SCOPED
208:	FileHandle -> '{*' WORD '}'
209:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
210:	Type -> WORD
211:	LoopLabel -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 7
	SHEBANG	shift, and go to state 8

	Module	go to state 1
	Class	go to state 2
	Package	go to state 4
	CompileUnit	go to state 5
	PLUS-1	go to state 6
	Program	go to state 3

State 1:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 2:

	Module -> Class .	(Rule 15)

	$default	reduce using rule 15 (Module)

State 3:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 4:

	Module -> Package .	(Rule 14)

	$default	reduce using rule 14 (Module)

State 5:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 9

State 6:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 7

	$end	reduce using rule 4 (CompileUnit)

	Package	go to state 4
	Class	go to state 2
	Module	go to state 10

State 7:

	Package -> 'package' . WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 12

State 8:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use strict;'	shift, and go to state 14

	Header	go to state 15

State 9:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 10:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 11:

	WordScoped -> WORD_SCOPED .	(Rule 207)

	$default	reduce using rule 207 (WordScoped)

State 12:

	Package -> 'package' WordScoped . ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	';'	shift, and go to state 16

State 13:

	WordScoped -> WORD .	(Rule 206)

	$default	reduce using rule 206 (WordScoped)

State 14:

	Header -> 'use strict;' . 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	'use warnings;'	shift, and go to state 17

State 15:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 18

State 16:

	Package -> 'package' WordScoped ';' . Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	'use strict;'	shift, and go to state 14

	Header	go to state 19

State 17:

	Header -> 'use strict;' 'use warnings;' . 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	'our $VERSION ='	shift, and go to state 20

State 18:

	STAR-2 -> STAR-2 . Include	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use'	shift, and go to state 21

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)
	WORD_SCOPED	reduce using rule 8 (STAR-3)

	STAR-3	go to state 22
	Include	go to state 23

State 19:

	Package -> 'package' WordScoped ';' Header . STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	'use parent qw('	shift, and go to state 24

	'our'	reduce using rule 17 (STAR-6)
	'use constant'	reduce using rule 17 (STAR-6)
	'use'	reduce using rule 17 (STAR-6)

	STAR-6	go to state 25

State 20:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' . VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	VERSION_NUMBER	shift, and go to state 26

State 21:

	Include -> 'use' . WordScoped ';'	(Rule 26)
	Include -> 'use' . WordScoped 'qw(' PLUS-9 ')' ';'	(Rule 27)

	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 27

State 22:

	STAR-3 -> STAR-3 . Constant	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 PLUS-5	(Rule 13)

	'use constant'	shift, and go to state 28

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)
	WORD_SCOPED	reduce using rule 10 (STAR-4)

	Constant	go to state 30
	STAR-4	go to state 29

State 23:

	STAR-2 -> STAR-2 Include .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 24:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	PLUS-25	go to state 31
	WordScoped	go to state 32

State 25:

	STAR-6 -> STAR-6 . Include	(Rule 16)
	Package -> 'package' WordScoped ';' Header STAR-6 . STAR-7 PLUS-8 '1;1;'	(Rule 22)

	'use'	shift, and go to state 21

	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)

	Include	go to state 33
	STAR-7	go to state 34

State 26:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER . ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	';'	shift, and go to state 35

State 27:

	Include -> 'use' WordScoped . ';'	(Rule 26)
	Include -> 'use' WordScoped . 'qw(' PLUS-9 ')' ';'	(Rule 27)

	';'	shift, and go to state 36
	'qw('	shift, and go to state 37

State 28:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 28)

	WORD	shift, and go to state 38

State 29:

	STAR-4 -> STAR-4 . Subroutine	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . PLUS-5	(Rule 13)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'if ('	shift, and go to state 42
	'my'	shift, and go to state 75
	'our'	shift, and go to state 41
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 72
	OP01_NAMED_VOID_PAREN	shift, and go to state 79
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP19_LOOP_CONTROL	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 150 (OPTIONAL-47)
	'foreach my'	reduce using rule 150 (OPTIONAL-47)
	'while ('	reduce using rule 150 (OPTIONAL-47)

	HashReference	go to state 77
	Subroutine	go to state 58
	OPTIONAL-47	go to state 76
	VariableModification	go to state 51
	PAREN-46	go to state 52
	ArrayReference	go to state 54
	LoopLabel	go to state 55
	Variable	go to state 57
	WordScoped	go to state 56
	Statement	go to state 70
	Operation	go to state 67
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashDereferenced	go to state 49
	OperatorVoid	go to state 71
	PLUS-5	go to state 61
	Conditional	go to state 39
	VariableDeclaration	go to state 65
	Expression	go to state 64

State 30:

	STAR-3 -> STAR-3 Constant .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 31:

	PLUS-25 -> PLUS-25 . WordScoped	(Rule 61)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 . ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	')'	shift, and go to state 80
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 81

State 32:

	PLUS-25 -> WordScoped .	(Rule 62)

	$default	reduce using rule 62 (PLUS-25)

State 33:

	STAR-6 -> STAR-6 Include .	(Rule 16)

	$default	reduce using rule 16 (STAR-6)

State 34:

	STAR-7 -> STAR-7 . Constant	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 . PLUS-8 '1;1;'	(Rule 22)

	'our'	shift, and go to state 41
	'use constant'	shift, and go to state 28

	PLUS-8	go to state 84
	Subroutine	go to state 82
	Constant	go to state 83

State 35:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' . 'use Carp;' 'use RPerl;'	(Rule 23)

	'use Carp;'	shift, and go to state 85

State 36:

	Include -> 'use' WordScoped ';' .	(Rule 26)

	$default	reduce using rule 26 (Include)

State 37:

	Include -> 'use' WordScoped 'qw(' . PLUS-9 ')' ';'	(Rule 27)

	WORD	shift, and go to state 87

	PLUS-9	go to state 86

State 38:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 28)

	OP20_HASH_FATARROW	shift, and go to state 88

State 39:

	Statement -> Conditional .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 40:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 96)

	VARIABLE_SYMBOL	shift, and go to state 53

	Variable	go to state 89

State 41:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 50)

	WORD	shift, and go to state 90

	Type	go to state 91

State 42:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 162)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 49
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashReference	go to state 77
	Expression	go to state 93
	ArrayReference	go to state 54
	WordScoped	go to state 56
	Variable	go to state 92

State 43:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 131)

	WORD	shift, and go to state 94

	LoopLabel	go to state 95

State 44:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 116)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Expression	go to state 96
	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashDereferenced	go to state 49

State 45:

	WordScoped -> WORD .	(Rule 206)
	LoopLabel -> WORD .	(Rule 211)

	'('	reduce using rule 206 (WordScoped)
	COLON	reduce using rule 211 (LoopLabel)

State 46:

	Expression -> '{' . '}'	(Rule 143)
	HashReference -> '{' . HashEntry STAR-59 '}'	(Rule 203)

	'%{'	shift, and go to state 47
	'}'	shift, and go to state 99
	WORD	shift, and go to state 97

	HashDereferenced	go to state 98
	HashEntry	go to state 100

State 47:

	HashDereferenced -> '%{' . Variable '}'	(Rule 204)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 205)

	'{'	shift, and go to state 102
	VARIABLE_SYMBOL	shift, and go to state 53

	Variable	go to state 103
	HashReference	go to state 101

State 48:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 106)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Expression	go to state 104
	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashDereferenced	go to state 49

State 49:

	Expression -> HashDereferenced .	(Rule 142)

	$default	reduce using rule 142 (Expression)

State 50:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 107)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Expression	go to state 105
	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashDereferenced	go to state 49

State 51:

	Statement -> VariableModification .	(Rule 155)

	$default	reduce using rule 155 (Statement)

State 52:

	OPTIONAL-47 -> PAREN-46 .	(Rule 149)

	$default	reduce using rule 149 (OPTIONAL-47)

State 53:

	Variable -> VARIABLE_SYMBOL . STAR-53	(Rule 174)

	$default	reduce using rule 173 (STAR-53)

	STAR-53	go to state 106

State 54:

	Expression -> ArrayReference .	(Rule 139)

	$default	reduce using rule 139 (Expression)

State 55:

	PAREN-46 -> LoopLabel . COLON	(Rule 148)

	COLON	shift, and go to state 107

State 56:

	Expression -> WordScoped . '(' OPTIONAL-44 ')'	(Rule 145)

	'('	shift, and go to state 108

State 57:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 97)
	Expression -> Variable .	(Rule 138)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 146)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 180)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 181)

	OP02_METHOD_THINARROW	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 111
	OP19_VARIABLE_ASSIGN	shift, and go to state 110
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 112

	';'	reduce using rule 138 (Expression)
	OP04_MATH_POW	reduce using rule 138 (Expression)
	OP06_REGEX_MATCH	reduce using rule 138 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 138 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 138 (Expression)
	OP08_STRING_CAT	reduce using rule 138 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 138 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 138 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 138 (Expression)
	OP13_BITWISE_AND	reduce using rule 138 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 138 (Expression)
	OP15_LOGICAL_AND	reduce using rule 138 (Expression)
	OP16_LOGICAL_OR	reduce using rule 138 (Expression)
	OP17_LIST_RANGE	reduce using rule 138 (Expression)
	OP18_TERNARY	reduce using rule 138 (Expression)
	OP23_LOGICAL_AND	reduce using rule 138 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 138 (Expression)

State 58:

	STAR-4 -> STAR-4 Subroutine .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 59:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 192)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 193)

	'['	shift, and go to state 78
	VARIABLE_SYMBOL	shift, and go to state 53

	ArrayReference	go to state 114
	Variable	go to state 113

State 60:

	Expression -> 'undef' .	(Rule 136)

	$default	reduce using rule 136 (Expression)

State 61:

	PLUS-5 -> PLUS-5 . Operation	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5 .	(Rule 13)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'if ('	shift, and go to state 42
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 72
	OP01_NAMED_VOID_PAREN	shift, and go to state 79
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP19_LOOP_CONTROL	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 11

	$end	reduce using rule 13 (Program)
	'for my integer'	reduce using rule 150 (OPTIONAL-47)
	'foreach my'	reduce using rule 150 (OPTIONAL-47)
	'while ('	reduce using rule 150 (OPTIONAL-47)

	VariableDeclaration	go to state 65
	Expression	go to state 64
	Conditional	go to state 39
	HashDereferenced	go to state 49
	OperatorVoid	go to state 71
	Statement	go to state 70
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	Operation	go to state 115
	Variable	go to state 57
	WordScoped	go to state 56
	LoopLabel	go to state 55
	ArrayReference	go to state 54
	PAREN-46	go to state 52
	VariableModification	go to state 51
	HashReference	go to state 77
	OPTIONAL-47	go to state 76

State 62:

	Expression -> LITERAL .	(Rule 137)

	$default	reduce using rule 137 (Expression)

State 63:

	Operator -> OP01_NAMED . '(' OPTIONAL-39 ')'	(Rule 95)

	'('	shift, and go to state 116

State 64:

	Operation -> Expression . ';'	(Rule 91)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	';'	shift, and go to state 128
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 65:

	Statement -> VariableDeclaration .	(Rule 154)

	$default	reduce using rule 154 (Statement)

State 66:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 100)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashDereferenced	go to state 49
	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56
	Expression	go to state 134

State 67:

	PLUS-5 -> Operation .	(Rule 12)

	$default	reduce using rule 12 (PLUS-5)

State 68:

	Expression -> Operator .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 69:

	Expression -> ArrayDereferenced .	(Rule 140)

	$default	reduce using rule 140 (Expression)

State 70:

	Operation -> Statement .	(Rule 92)

	$default	reduce using rule 92 (Operation)

State 71:

	Statement -> OperatorVoid .	(Rule 153)

	$default	reduce using rule 153 (Statement)

State 72:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-42 ';'	(Rule 129)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-43 ';'	(Rule 130)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	'{*'	shift, and go to state 136
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	';'	reduce using rule 124 (OPTIONAL-42)

	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56
	TypeInner	go to state 143
	Expression	go to state 137
	OPTIONAL-42	go to state 139
	ListElement	go to state 141
	HashReference	go to state 77
	ListElements	go to state 138
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashDereferenced	go to state 49
	FileHandle	go to state 142

State 73:

	Expression -> '(' . Expression ')'	(Rule 147)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashDereferenced	go to state 49
	ArrayReference	go to state 54
	WordScoped	go to state 56
	Variable	go to state 92
	Expression	go to state 144

State 74:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 99)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Expression	go to state 145
	HashDereferenced	go to state 49
	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69

State 75:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 178)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 179)

	WORD	shift, and go to state 90

	Type	go to state 146

State 76:

	Statement -> OPTIONAL-47 . Loop	(Rule 152)

	'for my integer'	shift, and go to state 147
	'foreach my'	shift, and go to state 152
	'while ('	shift, and go to state 149

	Loop	go to state 153
	LoopFor	go to state 151
	LoopForEach	go to state 150
	LoopWhile	go to state 148

State 77:

	Expression -> HashReference .	(Rule 141)

	$default	reduce using rule 141 (Expression)

State 78:

	ArrayReference -> '[' . OPTIONAL-56 ']'	(Rule 191)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	']'	reduce using rule 190 (OPTIONAL-56)

	ArrayDereferenced	go to state 69
	Operator	go to state 68
	ListElements	go to state 154
	HashReference	go to state 77
	HashDereferenced	go to state 49
	OPTIONAL-56	go to state 155
	Expression	go to state 137
	ListElement	go to state 141
	TypeInner	go to state 143
	Variable	go to state 92
	WordScoped	go to state 56
	ArrayReference	go to state 54

State 79:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-40 ')' ';'	(Rule 127)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-41 ')' ';'	(Rule 128)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	'{*'	shift, and go to state 136
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 120 (OPTIONAL-40)

	FileHandle	go to state 156
	OPTIONAL-40	go to state 157
	HashDereferenced	go to state 49
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	ListElements	go to state 158
	HashReference	go to state 77
	ListElement	go to state 141
	Expression	go to state 137
	TypeInner	go to state 143
	Variable	go to state 92
	WordScoped	go to state 56
	ArrayReference	go to state 54

State 80:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' . ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	';'	shift, and go to state 159

State 81:

	PLUS-25 -> PLUS-25 WordScoped .	(Rule 61)

	$default	reduce using rule 61 (PLUS-25)

State 82:

	PLUS-8 -> Subroutine .	(Rule 21)

	$default	reduce using rule 21 (PLUS-8)

State 83:

	STAR-7 -> STAR-7 Constant .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 84:

	PLUS-8 -> PLUS-8 . Subroutine	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 . '1;1;'	(Rule 22)

	'1;1;'	shift, and go to state 161
	'our'	shift, and go to state 41

	Subroutine	go to state 160

State 85:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' . 'use RPerl;'	(Rule 23)

	'use RPerl;'	shift, and go to state 162

State 86:

	PLUS-9 -> PLUS-9 . WORD	(Rule 24)
	Include -> 'use' WordScoped 'qw(' PLUS-9 . ')' ';'	(Rule 27)

	')'	shift, and go to state 164
	WORD	shift, and go to state 163

State 87:

	PLUS-9 -> WORD .	(Rule 25)

	$default	reduce using rule 25 (PLUS-9)

State 88:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 28)

	'my'	shift, and go to state 135

	TypeInner	go to state 165

State 89:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 96)

	$default	reduce using rule 96 (Operator)

State 90:

	Type -> WORD .	(Rule 210)

	$default	reduce using rule 210 (Type)

State 91:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 166

State 92:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 97)
	Expression -> Variable .	(Rule 138)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 146)

	OP02_METHOD_THINARROW	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 111

	')'	reduce using rule 138 (Expression)
	'..'	reduce using rule 138 (Expression)
	';'	reduce using rule 138 (Expression)
	']'	reduce using rule 138 (Expression)
	'}'	reduce using rule 138 (Expression)
	OP04_MATH_POW	reduce using rule 138 (Expression)
	OP06_REGEX_MATCH	reduce using rule 138 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 138 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 138 (Expression)
	OP08_STRING_CAT	reduce using rule 138 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 138 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 138 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 138 (Expression)
	OP13_BITWISE_AND	reduce using rule 138 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 138 (Expression)
	OP15_LOGICAL_AND	reduce using rule 138 (Expression)
	OP16_LOGICAL_OR	reduce using rule 138 (Expression)
	OP17_LIST_RANGE	reduce using rule 138 (Expression)
	OP18_TERNARY	reduce using rule 138 (Expression)
	OP21_LIST_COMMA	reduce using rule 138 (Expression)
	OP23_LOGICAL_AND	reduce using rule 138 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 138 (Expression)

State 93:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 162)

	')'	shift, and go to state 167
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 94:

	LoopLabel -> WORD .	(Rule 211)

	$default	reduce using rule 211 (LoopLabel)

State 95:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 131)

	';'	shift, and go to state 168

State 96:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 116)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 97:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-57 Expression	(Rule 196)

	OP20_HASH_FATARROW	shift, and go to state 169

State 98:

	HashEntry -> HashDereferenced .	(Rule 197)

	$default	reduce using rule 197 (HashEntry)

State 99:

	Expression -> '{' '}' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 100:

	HashReference -> '{' HashEntry . STAR-59 '}'	(Rule 203)

	$default	reduce using rule 202 (STAR-59)

	STAR-59	go to state 170

State 101:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 205)

	'}'	shift, and go to state 171

State 102:

	HashReference -> '{' . HashEntry STAR-59 '}'	(Rule 203)

	'%{'	shift, and go to state 47
	WORD	shift, and go to state 97

	HashEntry	go to state 100
	HashDereferenced	go to state 98

State 103:

	HashDereferenced -> '%{' Variable . '}'	(Rule 204)

	'}'	shift, and go to state 172

State 104:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 106)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 105:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 106:

	STAR-53 -> STAR-53 . VariableRetrieval	(Rule 172)
	Variable -> VARIABLE_SYMBOL STAR-53 .	(Rule 174)

	OP02_ARRAY_THINARROW	shift, and go to state 174
	OP02_HASH_THINARROW	shift, and go to state 173

	')'	reduce using rule 174 (Variable)
	'..'	reduce using rule 174 (Variable)
	';'	reduce using rule 174 (Variable)
	']'	reduce using rule 174 (Variable)
	'}'	reduce using rule 174 (Variable)
	COLON	reduce using rule 174 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 174 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 174 (Variable)
	OP04_MATH_POW	reduce using rule 174 (Variable)
	OP06_REGEX_MATCH	reduce using rule 174 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 174 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 174 (Variable)
	OP08_STRING_CAT	reduce using rule 174 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 174 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 174 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 174 (Variable)
	OP13_BITWISE_AND	reduce using rule 174 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 174 (Variable)
	OP15_LOGICAL_AND	reduce using rule 174 (Variable)
	OP16_LOGICAL_OR	reduce using rule 174 (Variable)
	OP17_LIST_RANGE	reduce using rule 174 (Variable)
	OP18_TERNARY	reduce using rule 174 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 174 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 174 (Variable)
	OP21_LIST_COMMA	reduce using rule 174 (Variable)
	OP23_LOGICAL_AND	reduce using rule 174 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 174 (Variable)

	VariableRetrieval	go to state 175

State 107:

	PAREN-46 -> LoopLabel COLON .	(Rule 148)

	$default	reduce using rule 148 (PAREN-46)

State 108:

	Expression -> WordScoped '(' . OPTIONAL-44 ')'	(Rule 145)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 133 (OPTIONAL-44)

	ArrayDereferenced	go to state 69
	Operator	go to state 68
	ListElements	go to state 177
	HashReference	go to state 77
	HashDereferenced	go to state 49
	OPTIONAL-44	go to state 176
	Expression	go to state 137
	ListElement	go to state 141
	TypeInner	go to state 143
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54

State 109:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-45 ')'	(Rule 146)

	WORD	shift, and go to state 178

State 110:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 180)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 92
	WordScoped	go to state 56
	ArrayReference	go to state 54
	Expression	go to state 179
	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashDereferenced	go to state 49

State 111:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 97)

	$default	reduce using rule 97 (Operator)

State 112:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 181)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 180
	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56
	HashDereferenced	go to state 49
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashReference	go to state 77

State 113:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 192)

	'}'	shift, and go to state 181

State 114:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 193)

	'}'	shift, and go to state 182

State 115:

	PLUS-5 -> PLUS-5 Operation .	(Rule 11)

	$default	reduce using rule 11 (PLUS-5)

State 116:

	Operator -> OP01_NAMED '(' . OPTIONAL-39 ')'	(Rule 95)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 94 (OPTIONAL-39)

	ArrayDereferenced	go to state 69
	Operator	go to state 68
	ListElements	go to state 183
	HashReference	go to state 77
	HashDereferenced	go to state 49
	OPTIONAL-39	go to state 184
	Expression	go to state 137
	ListElement	go to state 141
	TypeInner	go to state 143
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54

State 117:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 105)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 185
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashReference	go to state 77
	HashDereferenced	go to state 49

State 118:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 112)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56
	Expression	go to state 186
	HashDereferenced	go to state 49
	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68

State 119:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 98)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56
	Expression	go to state 187
	HashDereferenced	go to state 49
	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69

State 120:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 114)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashDereferenced	go to state 49
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Expression	go to state 188

State 121:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 108)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 49
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashReference	go to state 77
	Expression	go to state 189
	Variable	go to state 92
	WordScoped	go to state 56
	ArrayReference	go to state 54

State 122:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 118)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 49
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashReference	go to state 77
	Expression	go to state 190
	Variable	go to state 92
	WordScoped	go to state 56
	ArrayReference	go to state 54

State 123:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 104)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashReference	go to state 77
	HashDereferenced	go to state 49
	Expression	go to state 191
	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56

State 124:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 115)

	VARIABLE_SYMBOL	shift, and go to state 53

	Variable	go to state 192

State 125:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 109)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashDereferenced	go to state 49
	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56
	Expression	go to state 193

State 126:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 113)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 49
	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	ArrayReference	go to state 54
	WordScoped	go to state 56
	Variable	go to state 92
	Expression	go to state 194

State 127:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 117)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 195
	ArrayReference	go to state 54
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashReference	go to state 77
	HashDereferenced	go to state 49

State 128:

	Operation -> Expression ';' .	(Rule 91)

	$default	reduce using rule 91 (Operation)

State 129:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 103)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 196
	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56
	HashDereferenced	go to state 49
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashReference	go to state 77

State 130:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 101)

	'/'	shift, and go to state 197

State 131:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 110)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 54
	WordScoped	go to state 56
	Variable	go to state 92
	Expression	go to state 198
	HashDereferenced	go to state 49
	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69

State 132:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 111)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashReference	go to state 77
	HashDereferenced	go to state 49
	Expression	go to state 199
	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56

State 133:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 102)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashReference	go to state 77
	HashDereferenced	go to state 49
	Expression	go to state 200
	ArrayReference	go to state 54
	WordScoped	go to state 56
	Variable	go to state 92

State 134:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	')'	shift, and go to state 201
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 135:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 209)

	WORD	shift, and go to state 90

	Type	go to state 202

State 136:

	FileHandle -> '{*' . WORD '}'	(Rule 208)

	WORD	shift, and go to state 203

State 137:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	ListElement -> Expression .	(Rule 186)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

	')'	reduce using rule 186 (ListElement)
	';'	reduce using rule 186 (ListElement)
	']'	reduce using rule 186 (ListElement)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)

State 138:

	OPTIONAL-42 -> ListElements .	(Rule 123)

	$default	reduce using rule 123 (OPTIONAL-42)

State 139:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 . ';'	(Rule 129)

	';'	shift, and go to state 204

State 140:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 188)

	'%{'	shift, and go to state 47

	HashDereferenced	go to state 205

State 141:

	ListElements -> ListElement . STAR-55	(Rule 185)

	$default	reduce using rule 184 (STAR-55)

	STAR-55	go to state 206

State 142:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-43 ';'	(Rule 130)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	';'	reduce using rule 126 (OPTIONAL-43)

	Expression	go to state 137
	ListElement	go to state 141
	TypeInner	go to state 143
	Variable	go to state 92
	WordScoped	go to state 56
	ArrayReference	go to state 54
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	ListElements	go to state 207
	OPTIONAL-43	go to state 208
	HashReference	go to state 77
	HashDereferenced	go to state 49

State 143:

	ListElement -> TypeInner . Expression	(Rule 187)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Expression	go to state 209
	HashDereferenced	go to state 49
	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68

State 144:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	Expression -> '(' Expression . ')'	(Rule 147)

	')'	shift, and go to state 210
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 145:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 99)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119

	')'	reduce using rule 99 (Operator)
	'..'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP06_REGEX_MATCH	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 146:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 178)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 179)

	VARIABLE_SYMBOL	shift, and go to state 211

State 147:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 166)

	VARIABLE_SYMBOL	shift, and go to state 212

State 148:

	Loop -> LoopWhile .	(Rule 165)

	$default	reduce using rule 165 (Loop)

State 149:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 168)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashDereferenced	go to state 49
	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56
	Expression	go to state 213

State 150:

	Loop -> LoopForEach .	(Rule 164)

	$default	reduce using rule 164 (Loop)

State 151:

	Loop -> LoopFor .	(Rule 163)

	$default	reduce using rule 163 (Loop)

State 152:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 167)

	WORD	shift, and go to state 90

	Type	go to state 214

State 153:

	Statement -> OPTIONAL-47 Loop .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 154:

	OPTIONAL-56 -> ListElements .	(Rule 189)

	$default	reduce using rule 189 (OPTIONAL-56)

State 155:

	ArrayReference -> '[' OPTIONAL-56 . ']'	(Rule 191)

	']'	shift, and go to state 215

State 156:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-41 ')' ';'	(Rule 128)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 122 (OPTIONAL-41)

	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	OPTIONAL-41	go to state 216
	Expression	go to state 137
	ListElement	go to state 141
	TypeInner	go to state 143
	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	ListElements	go to state 217
	HashDereferenced	go to state 49

State 157:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 . ')' ';'	(Rule 127)

	')'	shift, and go to state 218

State 158:

	OPTIONAL-40 -> ListElements .	(Rule 119)

	$default	reduce using rule 119 (OPTIONAL-40)

State 159:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' . STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 219

State 160:

	PLUS-8 -> PLUS-8 Subroutine .	(Rule 20)

	$default	reduce using rule 20 (PLUS-8)

State 161:

	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;' .	(Rule 22)

	$default	reduce using rule 22 (Package)

State 162:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' .	(Rule 23)

	$default	reduce using rule 23 (Header)

State 163:

	PLUS-9 -> PLUS-9 WORD .	(Rule 24)

	$default	reduce using rule 24 (PLUS-9)

State 164:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' . ';'	(Rule 27)

	';'	shift, and go to state 220

State 165:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 28)

	'['	shift, and go to state 224
	'{'	shift, and go to state 221
	LITERAL	shift, and go to state 223

	ConstantValue	go to state 222

State 166:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 50)

	'= sub {'	shift, and go to state 225

State 167:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-49 OPTIONAL-51	(Rule 162)

	'{'	shift, and go to state 226

	CodeBlock	go to state 227

State 168:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 131)

	$default	reduce using rule 131 (OperatorVoid)

State 169:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-57 Expression	(Rule 196)

	'my'	shift, and go to state 135

	'%{'	reduce using rule 195 (OPTIONAL-57)
	'('	reduce using rule 195 (OPTIONAL-57)
	'@{'	reduce using rule 195 (OPTIONAL-57)
	'['	reduce using rule 195 (OPTIONAL-57)
	'undef'	reduce using rule 195 (OPTIONAL-57)
	'{'	reduce using rule 195 (OPTIONAL-57)
	LITERAL	reduce using rule 195 (OPTIONAL-57)
	OP01_NAMED	reduce using rule 195 (OPTIONAL-57)
	OP03_MATH_INC_DEC	reduce using rule 195 (OPTIONAL-57)
	OP05_LOGICAL_NEG	reduce using rule 195 (OPTIONAL-57)
	OP05_MATH_NEG	reduce using rule 195 (OPTIONAL-57)
	OP10_NAMED_UNARY	reduce using rule 195 (OPTIONAL-57)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 195 (OPTIONAL-57)
	OP22_LOGICAL_NOT	reduce using rule 195 (OPTIONAL-57)
	VARIABLE_SYMBOL	reduce using rule 195 (OPTIONAL-57)
	WORD	reduce using rule 195 (OPTIONAL-57)
	WORD_SCOPED	reduce using rule 195 (OPTIONAL-57)

	TypeInner	go to state 229
	OPTIONAL-57	go to state 228

State 170:

	STAR-59 -> STAR-59 . PAREN-58	(Rule 201)
	HashReference -> '{' HashEntry STAR-59 . '}'	(Rule 203)

	'}'	shift, and go to state 230
	OP21_LIST_COMMA	shift, and go to state 232

	PAREN-58	go to state 231

State 171:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 205)

	$default	reduce using rule 205 (HashDereferenced)

State 172:

	HashDereferenced -> '%{' Variable '}' .	(Rule 204)

	$default	reduce using rule 204 (HashDereferenced)

State 173:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 176)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 177)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 234
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 49
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashReference	go to state 77
	Expression	go to state 233
	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56

State 174:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 175)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56
	Expression	go to state 235
	HashDereferenced	go to state 49
	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69

State 175:

	STAR-53 -> STAR-53 VariableRetrieval .	(Rule 172)

	$default	reduce using rule 172 (STAR-53)

State 176:

	Expression -> WordScoped '(' OPTIONAL-44 . ')'	(Rule 145)

	')'	shift, and go to state 236

State 177:

	OPTIONAL-44 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-44)

State 178:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-45 ')'	(Rule 146)

	'('	shift, and go to state 237

State 179:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 180)

	';'	shift, and go to state 238
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 180:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 181)

	';'	shift, and go to state 239
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 181:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 192)

	$default	reduce using rule 192 (ArrayDereferenced)

State 182:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 193)

	$default	reduce using rule 193 (ArrayDereferenced)

State 183:

	OPTIONAL-39 -> ListElements .	(Rule 93)

	$default	reduce using rule 93 (OPTIONAL-39)

State 184:

	Operator -> OP01_NAMED '(' OPTIONAL-39 . ')'	(Rule 95)

	')'	shift, and go to state 240

State 185:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 186:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 187:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119

	')'	reduce using rule 98 (Operator)
	'..'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP06_REGEX_MATCH	reduce using rule 98 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 98 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 98 (Operator)
	OP08_STRING_CAT	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 188:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 189:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 108 (Operator)
	OP13_BITWISE_AND	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 190:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 191:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP08_STRING_CAT	reduce using rule 104 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 104 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 104 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 192:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 115)

	COLON	shift, and go to state 241

State 193:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 194:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 195:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 196:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 103 (Operator)
	OP08_STRING_CAT	reduce using rule 103 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 103 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 103 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 197:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 101)

	OP06_REGEX_PATTERN	shift, and go to state 242

State 198:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 199:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 200:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130

	')'	reduce using rule 102 (Operator)
	'..'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 102 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 102 (Operator)
	OP08_STRING_CAT	reduce using rule 102 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 102 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 102 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 201:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 100)

	$default	reduce using rule 100 (Operator)

State 202:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 209)

	'$TYPED_'	shift, and go to state 243

State 203:

	FileHandle -> '{*' WORD . '}'	(Rule 208)

	'}'	shift, and go to state 244

State 204:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';' .	(Rule 129)

	$default	reduce using rule 129 (OperatorVoid)

State 205:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 188)

	$default	reduce using rule 188 (ListElement)

State 206:

	STAR-55 -> STAR-55 . PAREN-54	(Rule 183)
	ListElements -> ListElement STAR-55 .	(Rule 185)

	OP21_LIST_COMMA	shift, and go to state 245

	')'	reduce using rule 185 (ListElements)
	';'	reduce using rule 185 (ListElements)
	']'	reduce using rule 185 (ListElements)

	PAREN-54	go to state 246

State 207:

	OPTIONAL-43 -> ListElements .	(Rule 125)

	$default	reduce using rule 125 (OPTIONAL-43)

State 208:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 . ';'	(Rule 130)

	';'	shift, and go to state 247

State 209:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	ListElement -> TypeInner Expression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

	')'	reduce using rule 187 (ListElement)
	';'	reduce using rule 187 (ListElement)
	']'	reduce using rule 187 (ListElement)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)

State 210:

	Expression -> '(' Expression ')' .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 211:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 178)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 179)

	';'	shift, and go to state 248
	OP19_VARIABLE_ASSIGN	shift, and go to state 249

State 212:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 166)

	'('	shift, and go to state 250

State 213:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 168)

	')'	shift, and go to state 251
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 214:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 167)

	VARIABLE_SYMBOL	shift, and go to state 252

State 215:

	ArrayReference -> '[' OPTIONAL-56 ']' .	(Rule 191)

	$default	reduce using rule 191 (ArrayReference)

State 216:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 . ')' ';'	(Rule 128)

	')'	shift, and go to state 253

State 217:

	OPTIONAL-41 -> ListElements .	(Rule 121)

	$default	reduce using rule 121 (OPTIONAL-41)

State 218:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' . ';'	(Rule 127)

	';'	shift, and go to state 254

State 219:

	STAR-26 -> STAR-26 . Include	(Rule 63)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 . STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	'use'	shift, and go to state 21

	'our %properties = ('	reduce using rule 66 (STAR-27)
	'use constant'	reduce using rule 66 (STAR-27)

	STAR-27	go to state 256
	Include	go to state 255

State 220:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';' .	(Rule 27)

	$default	reduce using rule 27 (Include)

State 221:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 45)

	WORD	shift, and go to state 257

State 222:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 28)

	';'	shift, and go to state 258

State 223:

	ConstantValue -> LITERAL .	(Rule 43)

	$default	reduce using rule 43 (ConstantValue)

State 224:

	ConstantValue -> '[' . OPTIONAL-10 LITERAL STAR-13 ']'	(Rule 44)

	'my'	shift, and go to state 135

	LITERAL	reduce using rule 30 (OPTIONAL-10)

	OPTIONAL-10	go to state 260
	TypeInner	go to state 259

State 225:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-18 PLUS-19 '}' ';'	(Rule 50)

	'( my'	shift, and go to state 261

	'%{'	reduce using rule 47 (OPTIONAL-18)
	'('	reduce using rule 47 (OPTIONAL-18)
	'@{'	reduce using rule 47 (OPTIONAL-18)
	'['	reduce using rule 47 (OPTIONAL-18)
	'for my integer'	reduce using rule 47 (OPTIONAL-18)
	'foreach my'	reduce using rule 47 (OPTIONAL-18)
	'if ('	reduce using rule 47 (OPTIONAL-18)
	'my'	reduce using rule 47 (OPTIONAL-18)
	'undef'	reduce using rule 47 (OPTIONAL-18)
	'while ('	reduce using rule 47 (OPTIONAL-18)
	'{'	reduce using rule 47 (OPTIONAL-18)
	LITERAL	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_PAREN	reduce using rule 47 (OPTIONAL-18)
	OP03_MATH_INC_DEC	reduce using rule 47 (OPTIONAL-18)
	OP05_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	OP05_MATH_NEG	reduce using rule 47 (OPTIONAL-18)
	OP10_NAMED_UNARY	reduce using rule 47 (OPTIONAL-18)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL	reduce using rule 47 (OPTIONAL-18)
	OP22_LOGICAL_NOT	reduce using rule 47 (OPTIONAL-18)
	VARIABLE_SYMBOL	reduce using rule 47 (OPTIONAL-18)
	WORD	reduce using rule 47 (OPTIONAL-18)
	WORD_SCOPED	reduce using rule 47 (OPTIONAL-18)

	OPTIONAL-18	go to state 263
	SubroutineArguments	go to state 262

State 226:

	CodeBlock -> '{' . PLUS-52 '}'	(Rule 171)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'if ('	shift, and go to state 42
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 72
	OP01_NAMED_VOID_PAREN	shift, and go to state 79
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP19_LOOP_CONTROL	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 150 (OPTIONAL-47)
	'foreach my'	reduce using rule 150 (OPTIONAL-47)
	'while ('	reduce using rule 150 (OPTIONAL-47)

	PAREN-46	go to state 52
	PLUS-52	go to state 264
	VariableModification	go to state 51
	Variable	go to state 57
	WordScoped	go to state 56
	LoopLabel	go to state 55
	ArrayReference	go to state 54
	OPTIONAL-47	go to state 76
	HashReference	go to state 77
	Conditional	go to state 39
	Expression	go to state 64
	VariableDeclaration	go to state 65
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	Operation	go to state 265
	Statement	go to state 70
	OperatorVoid	go to state 71
	HashDereferenced	go to state 49

State 227:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-49 OPTIONAL-51	(Rule 162)

	$default	reduce using rule 158 (STAR-49)

	STAR-49	go to state 266

State 228:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 . Expression	(Rule 196)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashReference	go to state 77
	HashDereferenced	go to state 49
	Expression	go to state 267
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54

State 229:

	OPTIONAL-57 -> TypeInner .	(Rule 194)

	$default	reduce using rule 194 (OPTIONAL-57)

State 230:

	HashReference -> '{' HashEntry STAR-59 '}' .	(Rule 203)

	$default	reduce using rule 203 (HashReference)

State 231:

	STAR-59 -> STAR-59 PAREN-58 .	(Rule 201)

	$default	reduce using rule 201 (STAR-59)

State 232:

	PAREN-58 -> OP21_LIST_COMMA . HashEntry	(Rule 200)

	'%{'	shift, and go to state 47
	WORD	shift, and go to state 97

	HashEntry	go to state 268
	HashDereferenced	go to state 98

State 233:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 176)

	'}'	shift, and go to state 269
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 234:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 177)
	WordScoped -> WORD .	(Rule 206)

	'}'	shift, and go to state 270

	'('	reduce using rule 206 (WordScoped)

State 235:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 175)

	']'	shift, and go to state 271
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 236:

	Expression -> WordScoped '(' OPTIONAL-44 ')' .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 237:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-45 ')'	(Rule 146)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 135 (OPTIONAL-45)

	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	ListElements	go to state 272
	HashDereferenced	go to state 49
	Variable	go to state 92
	WordScoped	go to state 56
	ArrayReference	go to state 54
	Expression	go to state 137
	ListElement	go to state 141
	OPTIONAL-45	go to state 273
	TypeInner	go to state 143

State 238:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 180)

	$default	reduce using rule 180 (VariableModification)

State 239:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 181)

	$default	reduce using rule 181 (VariableModification)

State 240:

	Operator -> OP01_NAMED '(' OPTIONAL-39 ')' .	(Rule 95)

	$default	reduce using rule 95 (Operator)

State 241:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 115)

	VARIABLE_SYMBOL	shift, and go to state 53

	Variable	go to state 274

State 242:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 101)

	'/'	shift, and go to state 275

State 243:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 209)

	WORD	shift, and go to state 276

State 244:

	FileHandle -> '{*' WORD '}' .	(Rule 208)

	$default	reduce using rule 208 (FileHandle)

State 245:

	PAREN-54 -> OP21_LIST_COMMA . ListElement	(Rule 182)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 49
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashReference	go to state 77
	Expression	go to state 137
	ListElement	go to state 277
	TypeInner	go to state 143
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54

State 246:

	STAR-55 -> STAR-55 PAREN-54 .	(Rule 183)

	$default	reduce using rule 183 (STAR-55)

State 247:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';' .	(Rule 130)

	$default	reduce using rule 130 (OperatorVoid)

State 248:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableDeclaration)

State 249:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 179)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 278
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	HashDereferenced	go to state 49
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashReference	go to state 77

State 250:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 279
	ArrayReference	go to state 54
	WordScoped	go to state 56
	Variable	go to state 92
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashReference	go to state 77
	HashDereferenced	go to state 49

State 251:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 168)

	'{'	shift, and go to state 226

	CodeBlock	go to state 280

State 252:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 167)

	'('	shift, and go to state 281

State 253:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' . ';'	(Rule 128)

	';'	shift, and go to state 282

State 254:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';' .	(Rule 127)

	$default	reduce using rule 127 (OperatorVoid)

State 255:

	STAR-26 -> STAR-26 Include .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 256:

	STAR-27 -> STAR-27 . Constant	(Rule 65)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 . Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	'our %properties = ('	shift, and go to state 283
	'use constant'	shift, and go to state 28

	Constant	go to state 285
	Properties	go to state 284

State 257:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 45)

	OP20_HASH_FATARROW	shift, and go to state 286

State 258:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 28)

	$default	reduce using rule 28 (Constant)

State 259:

	OPTIONAL-10 -> TypeInner .	(Rule 29)

	$default	reduce using rule 29 (OPTIONAL-10)

State 260:

	ConstantValue -> '[' OPTIONAL-10 . LITERAL STAR-13 ']'	(Rule 44)

	LITERAL	shift, and go to state 287

State 261:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	WORD	shift, and go to state 90

	Type	go to state 288

State 262:

	OPTIONAL-18 -> SubroutineArguments .	(Rule 46)

	$default	reduce using rule 46 (OPTIONAL-18)

State 263:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 . PLUS-19 '}' ';'	(Rule 50)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'if ('	shift, and go to state 42
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 72
	OP01_NAMED_VOID_PAREN	shift, and go to state 79
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP19_LOOP_CONTROL	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 150 (OPTIONAL-47)
	'foreach my'	reduce using rule 150 (OPTIONAL-47)
	'while ('	reduce using rule 150 (OPTIONAL-47)

	Conditional	go to state 39
	VariableDeclaration	go to state 65
	Expression	go to state 64
	Statement	go to state 70
	Operation	go to state 290
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashDereferenced	go to state 49
	OperatorVoid	go to state 71
	VariableModification	go to state 51
	PAREN-46	go to state 52
	ArrayReference	go to state 54
	Variable	go to state 57
	WordScoped	go to state 56
	LoopLabel	go to state 55
	HashReference	go to state 77
	PLUS-19	go to state 289
	OPTIONAL-47	go to state 76

State 264:

	PLUS-52 -> PLUS-52 . Operation	(Rule 169)
	CodeBlock -> '{' PLUS-52 . '}'	(Rule 171)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'if ('	shift, and go to state 42
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	'}'	shift, and go to state 291
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 72
	OP01_NAMED_VOID_PAREN	shift, and go to state 79
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP19_LOOP_CONTROL	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 150 (OPTIONAL-47)
	'foreach my'	reduce using rule 150 (OPTIONAL-47)
	'while ('	reduce using rule 150 (OPTIONAL-47)

	HashReference	go to state 77
	OPTIONAL-47	go to state 76
	ArrayReference	go to state 54
	Variable	go to state 57
	WordScoped	go to state 56
	LoopLabel	go to state 55
	VariableModification	go to state 51
	PAREN-46	go to state 52
	HashDereferenced	go to state 49
	OperatorVoid	go to state 71
	Statement	go to state 70
	Operation	go to state 292
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	VariableDeclaration	go to state 65
	Expression	go to state 64
	Conditional	go to state 39

State 265:

	PLUS-52 -> Operation .	(Rule 170)

	$default	reduce using rule 170 (PLUS-52)

State 266:

	STAR-49 -> STAR-49 . PAREN-48	(Rule 157)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 . OPTIONAL-51	(Rule 162)

	'else'	shift, and go to state 296
	'elsif ('	shift, and go to state 293

	$end	reduce using rule 161 (OPTIONAL-51)
	'%{'	reduce using rule 161 (OPTIONAL-51)
	'('	reduce using rule 161 (OPTIONAL-51)
	'@{'	reduce using rule 161 (OPTIONAL-51)
	'['	reduce using rule 161 (OPTIONAL-51)
	'for my integer'	reduce using rule 161 (OPTIONAL-51)
	'foreach my'	reduce using rule 161 (OPTIONAL-51)
	'if ('	reduce using rule 161 (OPTIONAL-51)
	'my'	reduce using rule 161 (OPTIONAL-51)
	'undef'	reduce using rule 161 (OPTIONAL-51)
	'while ('	reduce using rule 161 (OPTIONAL-51)
	'{'	reduce using rule 161 (OPTIONAL-51)
	'}'	reduce using rule 161 (OPTIONAL-51)
	LITERAL	reduce using rule 161 (OPTIONAL-51)
	OP01_NAMED	reduce using rule 161 (OPTIONAL-51)
	OP01_NAMED_VOID	reduce using rule 161 (OPTIONAL-51)
	OP01_NAMED_VOID_PAREN	reduce using rule 161 (OPTIONAL-51)
	OP03_MATH_INC_DEC	reduce using rule 161 (OPTIONAL-51)
	OP05_LOGICAL_NEG	reduce using rule 161 (OPTIONAL-51)
	OP05_MATH_NEG	reduce using rule 161 (OPTIONAL-51)
	OP10_NAMED_UNARY	reduce using rule 161 (OPTIONAL-51)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 161 (OPTIONAL-51)
	OP19_LOOP_CONTROL	reduce using rule 161 (OPTIONAL-51)
	OP22_LOGICAL_NOT	reduce using rule 161 (OPTIONAL-51)
	VARIABLE_SYMBOL	reduce using rule 161 (OPTIONAL-51)
	WORD	reduce using rule 161 (OPTIONAL-51)
	WORD_SCOPED	reduce using rule 161 (OPTIONAL-51)

	PAREN-48	go to state 294
	OPTIONAL-51	go to state 297
	PAREN-50	go to state 295

State 267:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 Expression .	(Rule 196)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

	'}'	reduce using rule 196 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 196 (HashEntry)

State 268:

	PAREN-58 -> OP21_LIST_COMMA HashEntry .	(Rule 200)

	$default	reduce using rule 200 (PAREN-58)

State 269:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 176)

	$default	reduce using rule 176 (VariableRetrieval)

State 270:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 177)

	$default	reduce using rule 177 (VariableRetrieval)

State 271:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 175)

	$default	reduce using rule 175 (VariableRetrieval)

State 272:

	OPTIONAL-45 -> ListElements .	(Rule 134)

	$default	reduce using rule 134 (OPTIONAL-45)

State 273:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 . ')'	(Rule 146)

	')'	shift, and go to state 298

State 274:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 115)

	$default	reduce using rule 115 (Operator)

State 275:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 276:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 209)

	OP19_VARIABLE_ASSIGN	shift, and go to state 299

State 277:

	PAREN-54 -> OP21_LIST_COMMA ListElement .	(Rule 182)

	$default	reduce using rule 182 (PAREN-54)

State 278:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 179)

	';'	shift, and go to state 300
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 279:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 166)

	'..'	shift, and go to state 301
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 280:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 168)

	$default	reduce using rule 168 (LoopWhile)

State 281:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 167)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'my'	shift, and go to state 135
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 140
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	ListElements	go to state 302
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashReference	go to state 77
	HashDereferenced	go to state 49
	TypeInner	go to state 143
	Expression	go to state 137
	ListElement	go to state 141
	ArrayReference	go to state 54
	Variable	go to state 92
	WordScoped	go to state 56

State 282:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';' .	(Rule 128)

	$default	reduce using rule 128 (OperatorVoid)

State 283:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-33 ')' ';'	(Rule 78)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 79)

	'%{'	shift, and go to state 47
	')'	shift, and go to state 305
	WORD	shift, and go to state 303

	HashEntryTyped	go to state 306
	HashDereferenced	go to state 304

State 284:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties . STAR-28 '1;1;' OPTIONAL-31	(Rule 74)

	$default	reduce using rule 68 (STAR-28)

	STAR-28	go to state 307

State 285:

	STAR-27 -> STAR-27 Constant .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 286:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 45)

	'my'	shift, and go to state 135

	LITERAL	reduce using rule 37 (OPTIONAL-14)

	TypeInner	go to state 309
	OPTIONAL-14	go to state 308

State 287:

	ConstantValue -> '[' OPTIONAL-10 LITERAL . STAR-13 ']'	(Rule 44)

	$default	reduce using rule 35 (STAR-13)

	STAR-13	go to state 310

State 288:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	VARIABLE_SYMBOL	shift, and go to state 311

State 289:

	PLUS-19 -> PLUS-19 . Operation	(Rule 48)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 . '}' ';'	(Rule 50)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'if ('	shift, and go to state 42
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	'}'	shift, and go to state 312
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 72
	OP01_NAMED_VOID_PAREN	shift, and go to state 79
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP19_LOOP_CONTROL	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 150 (OPTIONAL-47)
	'foreach my'	reduce using rule 150 (OPTIONAL-47)
	'while ('	reduce using rule 150 (OPTIONAL-47)

	Statement	go to state 70
	Operation	go to state 313
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashDereferenced	go to state 49
	OperatorVoid	go to state 71
	Conditional	go to state 39
	VariableDeclaration	go to state 65
	Expression	go to state 64
	HashReference	go to state 77
	OPTIONAL-47	go to state 76
	VariableModification	go to state 51
	PAREN-46	go to state 52
	ArrayReference	go to state 54
	WordScoped	go to state 56
	Variable	go to state 57
	LoopLabel	go to state 55

State 290:

	PLUS-19 -> Operation .	(Rule 49)

	$default	reduce using rule 49 (PLUS-19)

State 291:

	CodeBlock -> '{' PLUS-52 '}' .	(Rule 171)

	$default	reduce using rule 171 (CodeBlock)

State 292:

	PLUS-52 -> PLUS-52 Operation .	(Rule 169)

	$default	reduce using rule 169 (PLUS-52)

State 293:

	PAREN-48 -> 'elsif (' . Expression ')' CodeBlock	(Rule 156)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 49
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashReference	go to state 77
	Expression	go to state 314
	ArrayReference	go to state 54
	WordScoped	go to state 56
	Variable	go to state 92

State 294:

	STAR-49 -> STAR-49 PAREN-48 .	(Rule 157)

	$default	reduce using rule 157 (STAR-49)

State 295:

	OPTIONAL-51 -> PAREN-50 .	(Rule 160)

	$default	reduce using rule 160 (OPTIONAL-51)

State 296:

	PAREN-50 -> 'else' . CodeBlock	(Rule 159)

	'{'	shift, and go to state 226

	CodeBlock	go to state 315

State 297:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51 .	(Rule 162)

	$default	reduce using rule 162 (Conditional)

State 298:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')' .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 299:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 209)

	$default	reduce using rule 209 (TypeInner)

State 300:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 179)

	$default	reduce using rule 179 (VariableDeclaration)

State 301:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 49
	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	Variable	go to state 92
	WordScoped	go to state 56
	ArrayReference	go to state 54
	Expression	go to state 316

State 302:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 167)

	')'	shift, and go to state 317

State 303:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 198)

	OP20_HASH_FATARROW	shift, and go to state 318

State 304:

	HashEntryTyped -> HashDereferenced .	(Rule 199)

	$default	reduce using rule 199 (HashEntryTyped)

State 305:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 79)

	';'	shift, and go to state 319

State 306:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-33 ')' ';'	(Rule 78)

	$default	reduce using rule 77 (STAR-33)

	STAR-33	go to state 320

State 307:

	STAR-28 -> STAR-28 . Method	(Rule 67)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 . '1;1;' OPTIONAL-31	(Rule 74)

	'1;1;'	shift, and go to state 322
	'our'	shift, and go to state 323

	Method	go to state 321

State 308:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 . LITERAL STAR-17 '}'	(Rule 45)

	LITERAL	shift, and go to state 324

State 309:

	OPTIONAL-14 -> TypeInner .	(Rule 36)

	$default	reduce using rule 36 (OPTIONAL-14)

State 310:

	STAR-13 -> STAR-13 . PAREN-12	(Rule 34)
	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 . ']'	(Rule 44)

	']'	shift, and go to state 325
	OP21_LIST_COMMA	shift, and go to state 326

	PAREN-12	go to state 327

State 311:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	$default	reduce using rule 53 (STAR-21)

	STAR-21	go to state 328

State 312:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' . ';'	(Rule 50)

	';'	shift, and go to state 329

State 313:

	PLUS-19 -> PLUS-19 Operation .	(Rule 48)

	$default	reduce using rule 48 (PLUS-19)

State 314:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	PAREN-48 -> 'elsif (' Expression . ')' CodeBlock	(Rule 156)

	')'	shift, and go to state 330
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 315:

	PAREN-50 -> 'else' CodeBlock .	(Rule 159)

	$default	reduce using rule 159 (PAREN-50)

State 316:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 166)

	')'	shift, and go to state 331
	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 317:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 167)

	'{'	shift, and go to state 226

	CodeBlock	go to state 332

State 318:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 198)

	'my'	shift, and go to state 135

	TypeInner	go to state 333

State 319:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 79)

	$default	reduce using rule 79 (Properties)

State 320:

	STAR-33 -> STAR-33 . PAREN-32	(Rule 76)
	Properties -> 'our %properties = (' HashEntryTyped STAR-33 . ')' ';'	(Rule 78)

	')'	shift, and go to state 334
	OP21_LIST_COMMA	shift, and go to state 335

	PAREN-32	go to state 336

State 321:

	STAR-28 -> STAR-28 Method .	(Rule 67)

	$default	reduce using rule 67 (STAR-28)

State 322:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' . OPTIONAL-31	(Rule 74)

	'our'	shift, and go to state 41

	$end	reduce using rule 73 (OPTIONAL-31)
	'package'	reduce using rule 73 (OPTIONAL-31)

	OPTIONAL-31	go to state 339
	Subroutine	go to state 337
	PLUS-29	go to state 340
	PAREN-30	go to state 338

State 323:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 84)

	WORD	shift, and go to state 90

	Type	go to state 341

State 324:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL . STAR-17 '}'	(Rule 45)

	$default	reduce using rule 42 (STAR-17)

	STAR-17	go to state 342

State 325:

	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']' .	(Rule 44)

	$default	reduce using rule 44 (ConstantValue)

State 326:

	PAREN-12 -> OP21_LIST_COMMA . OPTIONAL-11 LITERAL	(Rule 33)

	'my'	shift, and go to state 135

	LITERAL	reduce using rule 32 (OPTIONAL-11)

	OPTIONAL-11	go to state 344
	TypeInner	go to state 343

State 327:

	STAR-13 -> STAR-13 PAREN-12 .	(Rule 34)

	$default	reduce using rule 34 (STAR-13)

State 328:

	STAR-21 -> STAR-21 . PAREN-20	(Rule 52)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	')'	shift, and go to state 346
	OP21_LIST_COMMA	shift, and go to state 347

	PAREN-20	go to state 345

State 329:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';' .	(Rule 50)

	$default	reduce using rule 50 (Subroutine)

State 330:

	PAREN-48 -> 'elsif (' Expression ')' . CodeBlock	(Rule 156)

	'{'	shift, and go to state 226

	CodeBlock	go to state 348

State 331:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 166)

	'{'	shift, and go to state 226

	CodeBlock	go to state 349

State 332:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 167)

	$default	reduce using rule 167 (LoopForEach)

State 333:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 198)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashDereferenced	go to state 49
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Expression	go to state 350

State 334:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' . ';'	(Rule 78)

	';'	shift, and go to state 351

State 335:

	PAREN-32 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 75)

	'%{'	shift, and go to state 47
	WORD	shift, and go to state 303

	HashEntryTyped	go to state 352
	HashDereferenced	go to state 304

State 336:

	STAR-33 -> STAR-33 PAREN-32 .	(Rule 76)

	$default	reduce using rule 76 (STAR-33)

State 337:

	PLUS-29 -> Subroutine .	(Rule 70)

	$default	reduce using rule 70 (PLUS-29)

State 338:

	OPTIONAL-31 -> PAREN-30 .	(Rule 72)

	$default	reduce using rule 72 (OPTIONAL-31)

State 339:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31 .	(Rule 74)

	$default	reduce using rule 74 (Class)

State 340:

	PLUS-29 -> PLUS-29 . Subroutine	(Rule 69)
	PAREN-30 -> PLUS-29 . '1;1;'	(Rule 71)

	'1;1;'	shift, and go to state 354
	'our'	shift, and go to state 41

	Subroutine	go to state 353

State 341:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 84)

	VARIABLE_SYMBOL	shift, and go to state 355

State 342:

	STAR-17 -> STAR-17 . PAREN-16	(Rule 41)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 . '}'	(Rule 45)

	'}'	shift, and go to state 358
	OP21_LIST_COMMA	shift, and go to state 356

	PAREN-16	go to state 357

State 343:

	OPTIONAL-11 -> TypeInner .	(Rule 31)

	$default	reduce using rule 31 (OPTIONAL-11)

State 344:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 . LITERAL	(Rule 33)

	LITERAL	shift, and go to state 359

State 345:

	STAR-21 -> STAR-21 PAREN-20 .	(Rule 52)

	$default	reduce using rule 52 (STAR-21)

State 346:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	OP19_VARIABLE_ASSIGN	shift, and go to state 360

State 347:

	PAREN-20 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 51)

	'my'	shift, and go to state 361

State 348:

	PAREN-48 -> 'elsif (' Expression ')' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (PAREN-48)

State 349:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (LoopFor)

State 350:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 198)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

	')'	reduce using rule 198 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 198 (HashEntryTyped)

State 351:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';' .	(Rule 78)

	$default	reduce using rule 78 (Properties)

State 352:

	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 75)

	$default	reduce using rule 75 (PAREN-32)

State 353:

	PLUS-29 -> PLUS-29 Subroutine .	(Rule 69)

	$default	reduce using rule 69 (PLUS-29)

State 354:

	PAREN-30 -> PLUS-29 '1;1;' .	(Rule 71)

	$default	reduce using rule 71 (PAREN-30)

State 355:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 84)

	'= sub {'	shift, and go to state 362

State 356:

	PAREN-16 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 40)

	WORD	shift, and go to state 363

State 357:

	STAR-17 -> STAR-17 PAREN-16 .	(Rule 41)

	$default	reduce using rule 41 (STAR-17)

State 358:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}' .	(Rule 45)

	$default	reduce using rule 45 (ConstantValue)

State 359:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL .	(Rule 33)

	$default	reduce using rule 33 (PAREN-12)

State 360:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-22	(Rule 56)

	'@_;'	shift, and go to state 364

State 361:

	PAREN-20 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 51)

	WORD	shift, and go to state 90

	Type	go to state 365

State 362:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-34 PLUS-35 '}' ';'	(Rule 84)

	'( my'	shift, and go to state 367

	'%{'	reduce using rule 81 (OPTIONAL-34)
	'('	reduce using rule 81 (OPTIONAL-34)
	'@{'	reduce using rule 81 (OPTIONAL-34)
	'['	reduce using rule 81 (OPTIONAL-34)
	'for my integer'	reduce using rule 81 (OPTIONAL-34)
	'foreach my'	reduce using rule 81 (OPTIONAL-34)
	'if ('	reduce using rule 81 (OPTIONAL-34)
	'my'	reduce using rule 81 (OPTIONAL-34)
	'undef'	reduce using rule 81 (OPTIONAL-34)
	'while ('	reduce using rule 81 (OPTIONAL-34)
	'{'	reduce using rule 81 (OPTIONAL-34)
	LITERAL	reduce using rule 81 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 81 (OPTIONAL-34)
	OP01_NAMED_VOID	reduce using rule 81 (OPTIONAL-34)
	OP01_NAMED_VOID_PAREN	reduce using rule 81 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 81 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 81 (OPTIONAL-34)
	OP05_MATH_NEG	reduce using rule 81 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 81 (OPTIONAL-34)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 81 (OPTIONAL-34)
	OP19_LOOP_CONTROL	reduce using rule 81 (OPTIONAL-34)
	OP22_LOGICAL_NOT	reduce using rule 81 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 81 (OPTIONAL-34)
	WORD	reduce using rule 81 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 81 (OPTIONAL-34)

	MethodArguments	go to state 368
	OPTIONAL-34	go to state 366

State 363:

	PAREN-16 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 40)

	OP20_HASH_FATARROW	shift, and go to state 369

State 364:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-22	(Rule 56)

	$default	reduce using rule 55 (STAR-22)

	STAR-22	go to state 370

State 365:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 51)

	VARIABLE_SYMBOL	shift, and go to state 371

State 366:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 . PLUS-35 '}' ';'	(Rule 84)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'if ('	shift, and go to state 42
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 72
	OP01_NAMED_VOID_PAREN	shift, and go to state 79
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP19_LOOP_CONTROL	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 150 (OPTIONAL-47)
	'foreach my'	reduce using rule 150 (OPTIONAL-47)
	'while ('	reduce using rule 150 (OPTIONAL-47)

	Conditional	go to state 39
	Expression	go to state 64
	VariableDeclaration	go to state 65
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	Operation	go to state 372
	Statement	go to state 70
	PLUS-35	go to state 373
	OperatorVoid	go to state 71
	HashDereferenced	go to state 49
	PAREN-46	go to state 52
	VariableModification	go to state 51
	LoopLabel	go to state 55
	Variable	go to state 57
	WordScoped	go to state 56
	ArrayReference	go to state 54
	OPTIONAL-47	go to state 76
	HashReference	go to state 77

State 367:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	TYPE_CLASS_OR_SELF	shift, and go to state 374

State 368:

	OPTIONAL-34 -> MethodArguments .	(Rule 80)

	$default	reduce using rule 80 (OPTIONAL-34)

State 369:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-15 LITERAL	(Rule 40)

	'my'	shift, and go to state 135

	LITERAL	reduce using rule 39 (OPTIONAL-15)

	TypeInner	go to state 375
	OPTIONAL-15	go to state 376

State 370:

	STAR-22 -> STAR-22 . ArgumentCheck	(Rule 54)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22 .	(Rule 56)

	CHECK_OR_CHECKTRACE	shift, and go to state 377

	'%{'	reduce using rule 56 (SubroutineArguments)
	'('	reduce using rule 56 (SubroutineArguments)
	'@{'	reduce using rule 56 (SubroutineArguments)
	'['	reduce using rule 56 (SubroutineArguments)
	'for my integer'	reduce using rule 56 (SubroutineArguments)
	'foreach my'	reduce using rule 56 (SubroutineArguments)
	'if ('	reduce using rule 56 (SubroutineArguments)
	'my'	reduce using rule 56 (SubroutineArguments)
	'undef'	reduce using rule 56 (SubroutineArguments)
	'while ('	reduce using rule 56 (SubroutineArguments)
	'{'	reduce using rule 56 (SubroutineArguments)
	LITERAL	reduce using rule 56 (SubroutineArguments)
	OP01_NAMED	reduce using rule 56 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 56 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 56 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 56 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 56 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 56 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 56 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 56 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 56 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 56 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 56 (SubroutineArguments)
	WORD	reduce using rule 56 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 56 (SubroutineArguments)

	ArgumentCheck	go to state 378

State 371:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 51)

	$default	reduce using rule 51 (PAREN-20)

State 372:

	PLUS-35 -> Operation .	(Rule 83)

	$default	reduce using rule 83 (PLUS-35)

State 373:

	PLUS-35 -> PLUS-35 . Operation	(Rule 82)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 . '}' ';'	(Rule 84)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'if ('	shift, and go to state 42
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	'}'	shift, and go to state 379
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 72
	OP01_NAMED_VOID_PAREN	shift, and go to state 79
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP19_LOOP_CONTROL	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 150 (OPTIONAL-47)
	'foreach my'	reduce using rule 150 (OPTIONAL-47)
	'while ('	reduce using rule 150 (OPTIONAL-47)

	Conditional	go to state 39
	VariableDeclaration	go to state 65
	Expression	go to state 64
	Statement	go to state 70
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	Operation	go to state 380
	HashDereferenced	go to state 49
	OperatorVoid	go to state 71
	PAREN-46	go to state 52
	VariableModification	go to state 51
	LoopLabel	go to state 55
	WordScoped	go to state 56
	Variable	go to state 57
	ArrayReference	go to state 54
	HashReference	go to state 77
	OPTIONAL-47	go to state 76

State 374:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	$default	reduce using rule 87 (STAR-37)

	STAR-37	go to state 381

State 375:

	OPTIONAL-15 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-15)

State 376:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 . LITERAL	(Rule 40)

	LITERAL	shift, and go to state 382

State 377:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-24 ')' ';'	(Rule 60)

	'('	shift, and go to state 383

State 378:

	STAR-22 -> STAR-22 ArgumentCheck .	(Rule 54)

	$default	reduce using rule 54 (STAR-22)

State 379:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' . ';'	(Rule 84)

	';'	shift, and go to state 384

State 380:

	PLUS-35 -> PLUS-35 Operation .	(Rule 82)

	$default	reduce using rule 82 (PLUS-35)

State 381:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 86)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	')'	shift, and go to state 387
	OP21_LIST_COMMA	shift, and go to state 386

	PAREN-36	go to state 385

State 382:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL .	(Rule 40)

	$default	reduce using rule 40 (PAREN-16)

State 383:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-24 ')' ';'	(Rule 60)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 92
	WordScoped	go to state 56
	ArrayReference	go to state 54
	Expression	go to state 388
	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	HashDereferenced	go to state 49

State 384:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';' .	(Rule 84)

	$default	reduce using rule 84 (Method)

State 385:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 86)

	$default	reduce using rule 86 (STAR-37)

State 386:

	PAREN-36 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 85)

	'my'	shift, and go to state 389

State 387:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	OP19_VARIABLE_ASSIGN	shift, and go to state 390

State 388:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-24 ')' ';'	(Rule 60)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP21_LIST_COMMA	shift, and go to state 392
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

	')'	reduce using rule 59 (OPTIONAL-24)

	OPTIONAL-24	go to state 393
	PAREN-23	go to state 391

State 389:

	PAREN-36 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 85)

	WORD	shift, and go to state 90

	Type	go to state 394

State 390:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-38	(Rule 90)

	'@_;'	shift, and go to state 395

State 391:

	OPTIONAL-24 -> PAREN-23 .	(Rule 58)

	$default	reduce using rule 58 (OPTIONAL-24)

State 392:

	PAREN-23 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 57)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 77
	Operator	go to state 68
	ArrayDereferenced	go to state 69
	HashDereferenced	go to state 49
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Expression	go to state 396

State 393:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 . ')' ';'	(Rule 60)

	')'	shift, and go to state 397

State 394:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 85)

	VARIABLE_SYMBOL	shift, and go to state 398

State 395:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-38	(Rule 90)

	$default	reduce using rule 89 (STAR-38)

	STAR-38	go to state 399

State 396:

	PAREN-23 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 57)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP21_LIST_COMMA	shift, and go to state 400
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

State 397:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' . ';'	(Rule 60)

	';'	shift, and go to state 401

State 398:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 85)

	$default	reduce using rule 85 (PAREN-36)

State 399:

	STAR-38 -> STAR-38 . ArgumentCheck	(Rule 88)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38 .	(Rule 90)

	CHECK_OR_CHECKTRACE	shift, and go to state 377

	'%{'	reduce using rule 90 (MethodArguments)
	'('	reduce using rule 90 (MethodArguments)
	'@{'	reduce using rule 90 (MethodArguments)
	'['	reduce using rule 90 (MethodArguments)
	'for my integer'	reduce using rule 90 (MethodArguments)
	'foreach my'	reduce using rule 90 (MethodArguments)
	'if ('	reduce using rule 90 (MethodArguments)
	'my'	reduce using rule 90 (MethodArguments)
	'undef'	reduce using rule 90 (MethodArguments)
	'while ('	reduce using rule 90 (MethodArguments)
	'{'	reduce using rule 90 (MethodArguments)
	LITERAL	reduce using rule 90 (MethodArguments)
	OP01_NAMED	reduce using rule 90 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 90 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 90 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 90 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 90 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 90 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 90 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 90 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 90 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 90 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 90 (MethodArguments)
	WORD	reduce using rule 90 (MethodArguments)
	WORD_SCOPED	reduce using rule 90 (MethodArguments)

	ArgumentCheck	go to state 402

State 400:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 57)

	'%{'	shift, and go to state 47
	'('	shift, and go to state 73
	'@{'	shift, and go to state 59
	'['	shift, and go to state 78
	'undef'	shift, and go to state 60
	'{'	shift, and go to state 46
	LITERAL	shift, and go to state 62
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 40
	OP05_LOGICAL_NEG	shift, and go to state 74
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 44
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 13
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 49
	HashReference	go to state 77
	ArrayDereferenced	go to state 69
	Operator	go to state 68
	WordScoped	go to state 56
	Variable	go to state 92
	ArrayReference	go to state 54
	Expression	go to state 403

State 401:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';' .	(Rule 60)

	$default	reduce using rule 60 (ArgumentCheck)

State 402:

	STAR-38 -> STAR-38 ArgumentCheck .	(Rule 88)

	$default	reduce using rule 88 (STAR-38)

State 403:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 57)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 108)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 109)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 110)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 111)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 112)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 113)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 114)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 118)

	OP04_MATH_POW	shift, and go to state 119
	OP06_REGEX_MATCH	shift, and go to state 130
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 133
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 123
	OP09_BITWISE_SHIFT	shift, and go to state 117
	OP11_COMPARE_LT_GT	shift, and go to state 121
	OP12_COMPARE_EQ_NEQ	shift, and go to state 125
	OP13_BITWISE_AND	shift, and go to state 131
	OP14_BITWISE_OR_XOR	shift, and go to state 132
	OP15_LOGICAL_AND	shift, and go to state 118
	OP16_LOGICAL_OR	shift, and go to state 126
	OP17_LIST_RANGE	shift, and go to state 120
	OP18_TERNARY	shift, and go to state 124
	OP23_LOGICAL_AND	shift, and go to state 127
	OP24_LOGICAL_OR_XOR	shift, and go to state 122

	')'	reduce using rule 57 (PAREN-23)


Summary:
--------
Number of rules         : 212
Number of terminals     : 82
Number of non-terminals : 103
Number of states        : 404
