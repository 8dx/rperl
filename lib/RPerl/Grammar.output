Conflicts:
----------
Conflict in state 169 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 169 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 169 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 169 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 169 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 169 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 169 between rule 94 and token OP08_STRING_CAT resolved as shift.
Conflict in state 169 between rule 94 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 169 between rule 94 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 169 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 169 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 169 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 169 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 169 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 169 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 169 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 169 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 178 between rule 86 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 178 between rule 86 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 178 between rule 86 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 178 between rule 86 and token OP04_MATH_POW resolved as shift.
Conflict in state 178 between rule 86 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 178 between rule 86 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 178 between rule 86 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 178 between rule 86 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 178 between rule 86 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 178 between rule 86 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 178 between rule 86 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 178 between rule 86 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 178 between rule 86 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 178 between rule 86 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 178 between rule 86 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 178 between rule 86 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 178 between rule 86 and token OP18_TERNARY resolved as reduce.
Conflict in state 195 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 195 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 195 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 195 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 195 between rule 104 and token OP18_TERNARY resolved as shift.
Conflict in state 195 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 195 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 195 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 195 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 195 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 195 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 195 between rule 104 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 195 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 195 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 195 between rule 104 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 195 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 195 between rule 104 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 200 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 200 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 200 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 200 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 200 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 200 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 200 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 200 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 200 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 200 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 200 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 200 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 200 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 200 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 200 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 200 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 200 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 215 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 215 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 215 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 215 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 215 between rule 105 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 215 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 215 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 105 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 215 between rule 105 and token OP18_TERNARY resolved as shift.
Conflict in state 215 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 215 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 215 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 215 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 215 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 215 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 215 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 216 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 216 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 216 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 216 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 216 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 216 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 216 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 216 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 216 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 216 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 216 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 216 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 216 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 216 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 216 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 216 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 217 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 217 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 217 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 217 between rule 100 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 217 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 217 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 217 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 217 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 217 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 217 between rule 100 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 217 between rule 100 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 217 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 217 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 217 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 217 between rule 100 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 218 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 218 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 218 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 218 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 218 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 218 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 218 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 218 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 218 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 218 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 218 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 218 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 218 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 218 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 218 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 219 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 219 between rule 97 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 219 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 219 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 219 between rule 97 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 219 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 219 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 219 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 219 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 219 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 219 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 219 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 219 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 219 between rule 97 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 219 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 223 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 223 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 223 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 223 between rule 91 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 223 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 223 between rule 91 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 223 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 223 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 223 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 223 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 223 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 223 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 223 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 223 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 223 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 224 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 224 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 224 between rule 106 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 224 between rule 106 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 224 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 224 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 224 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 224 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 224 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 224 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 224 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 224 between rule 106 and token OP18_TERNARY resolved as shift.
Conflict in state 224 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 224 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 224 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 224 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 224 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 225 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 225 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 225 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 225 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 225 between rule 98 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 225 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 225 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 225 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 225 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 225 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 225 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 98 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 225 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 225 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 225 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 225 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 226 between rule 93 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 226 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 226 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 226 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 226 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 226 between rule 93 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 226 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 226 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 226 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 226 between rule 93 and token OP08_STRING_CAT resolved as shift.
Conflict in state 226 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 226 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 226 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 226 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 226 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 226 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 92 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 227 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 227 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 227 between rule 92 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 227 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 227 between rule 92 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 227 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 227 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 227 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 227 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 227 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 227 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 227 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 227 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 227 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 228 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 228 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 228 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 228 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 228 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 228 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 228 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 228 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 228 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 228 between rule 96 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 228 between rule 96 and token OP08_STRING_CAT resolved as shift.
Conflict in state 228 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 228 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 228 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 228 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 228 between rule 96 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 228 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 229 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 229 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 229 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 229 between rule 101 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 229 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 229 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 229 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 229 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 229 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 229 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 229 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 229 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 229 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 229 between rule 101 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 229 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 229 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 229 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 230 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 230 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 230 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 230 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 230 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 230 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 230 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 230 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 230 between rule 90 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 230 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 230 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 230 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 230 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 230 between rule 90 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 230 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 231 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 231 between rule 89 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 231 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 231 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 231 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 231 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 231 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 231 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 231 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 231 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 231 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 231 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 231 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 231 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 231 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 232 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 232 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 232 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 232 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 232 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 232 between rule 99 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 232 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 232 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 232 between rule 99 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 232 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 232 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 232 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 232 between rule 99 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 232 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 232 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 237 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 237 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 237 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 237 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 237 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 237 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 237 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 237 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 237 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 237 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 237 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 237 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 237 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 237 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 237 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 383 between rule 81 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 383 between rule 81 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 383 between rule 81 and token OP04_MATH_POW resolved as shift.
Conflict in state 383 between rule 81 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 383 between rule 81 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 383 between rule 81 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 383 between rule 81 and token OP08_STRING_CAT resolved as shift.
Conflict in state 383 between rule 81 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 383 between rule 81 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 383 between rule 81 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 383 between rule 81 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 383 between rule 81 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 383 between rule 81 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 383 between rule 81 and token OP18_TERNARY resolved as shift.
Conflict in state 383 between rule 81 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 383 between rule 81 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 383 between rule 81 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 394 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 394 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 394 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 394 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 394 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 394 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 394 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 394 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 394 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 394 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 394 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 394 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 394 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 394 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 394 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 394 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 394 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 MethodOrSubroutine
58:	STAR-23 -> /* empty */
59:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'
60:	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped
61:	STAR-25 -> STAR-25 PAREN-24
62:	STAR-25 -> /* empty */
63:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'
64:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
65:	OPTIONAL-26 -> MethodArguments
66:	OPTIONAL-26 -> /* empty */
67:	PLUS-27 -> PLUS-27 Operation
68:	PLUS-27 -> Operation
69:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'
70:	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
71:	STAR-29 -> STAR-29 PAREN-28
72:	STAR-29 -> /* empty */
73:	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'
74:	MethodOrSubroutine -> Method
75:	MethodOrSubroutine -> Subroutine
76:	Operation -> Expression ';'
77:	Operation -> Statement
78:	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
79:	Operator -> OP01_NAMED SubExpression
80:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
81:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
82:	Operator -> OP01_CLOSE FH_REF_SYMBOL
83:	Operator -> OP03_MATH_INC_DEC Variable
84:	Operator -> Variable OP03_MATH_INC_DEC
85:	Operator -> SubExpression OP04_MATH_POW SubExpression
86:	Operator -> OP05_LOGICAL_NEG SubExpression
87:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
88:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
89:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
90:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
91:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
92:	Operator -> SubExpression OP08_STRING_CAT SubExpression
93:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
94:	Operator -> OP10_NAMED_UNARY SubExpression
95:	Operator -> OP10_NAMED_UNARY
96:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
97:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
98:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
99:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
100:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
101:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
102:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
103:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
104:	Operator -> OP22_LOGICAL_NEG SubExpression
105:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
106:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
107:	PAREN-30 -> STDOUT_STDERR
108:	OPTIONAL-31 -> PAREN-30
109:	OPTIONAL-31 -> /* empty */
110:	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';'
111:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
112:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
113:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
114:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
115:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
116:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
117:	OPTIONAL-32 -> ListElements
118:	OPTIONAL-32 -> /* empty */
119:	OPTIONAL-33 -> ListElements
120:	OPTIONAL-33 -> /* empty */
121:	Expression -> Operator
122:	Expression -> WordScoped LPAREN OPTIONAL-32 ')'
123:	Expression -> WORD_UPPERCASE LPAREN ')'
124:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'
125:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
126:	SubExpression -> Expression
127:	SubExpression -> 'undef'
128:	SubExpression -> Literal
129:	SubExpression -> Variable
130:	SubExpression -> ArrayReference
131:	SubExpression -> ArrayDereference
132:	SubExpression -> HashReference
133:	SubExpression -> HashDereference
134:	SubExpression -> LPAREN SubExpression ')'
135:	SubExpressionOrStdin -> SubExpression
136:	SubExpressionOrStdin -> STDIN
137:	PAREN-34 -> LoopLabel COLON
138:	OPTIONAL-35 -> PAREN-34
139:	OPTIONAL-35 -> /* empty */
140:	Statement -> Conditional
141:	Statement -> OPTIONAL-35 Loop
142:	Statement -> OperatorVoid
143:	Statement -> VariableDeclaration
144:	Statement -> VariableModification
145:	PAREN-36 -> 'elsif' LPAREN SubExpression ')' CodeBlock
146:	STAR-37 -> STAR-37 PAREN-36
147:	STAR-37 -> /* empty */
148:	PAREN-38 -> 'else' CodeBlock
149:	OPTIONAL-39 -> PAREN-38
150:	OPTIONAL-39 -> /* empty */
151:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-37 OPTIONAL-39
152:	Loop -> LoopFor
153:	Loop -> LoopForEach
154:	Loop -> LoopWhile
155:	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
156:	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
157:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
158:	PLUS-40 -> PLUS-40 Operation
159:	PLUS-40 -> Operation
160:	CodeBlock -> LBRACE PLUS-40 '}'
161:	STAR-41 -> STAR-41 VariableRetrieval
162:	STAR-41 -> /* empty */
163:	Variable -> VARIABLE_SYMBOL STAR-41
164:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
165:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
166:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
167:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
168:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
169:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
170:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
171:	PAREN-42 -> OP21_LIST_COMMA ListElement
172:	STAR-43 -> STAR-43 PAREN-42
173:	STAR-43 -> /* empty */
174:	ListElements -> ListElement STAR-43
175:	PLUS-44 -> PLUS-44 WORD
176:	PLUS-44 -> WORD
177:	ListElement -> SubExpression
178:	ListElement -> TypeInner SubExpression
179:	ListElement -> OP01_QW PLUS-44 ')'
180:	OPTIONAL-45 -> ListElements
181:	OPTIONAL-45 -> /* empty */
182:	ArrayReference -> LBRACKET OPTIONAL-45 ']'
183:	ArrayDereference -> '@{' Variable '}'
184:	ArrayDereference -> '@{' ArrayReference '}'
185:	OPTIONAL-46 -> TypeInner
186:	OPTIONAL-46 -> /* empty */
187:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 SubExpression
188:	HashEntry -> HashDereference
189:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
190:	HashEntryTyped -> HashDereference
191:	PAREN-47 -> OP21_LIST_COMMA HashEntry
192:	STAR-48 -> STAR-48 PAREN-47
193:	STAR-48 -> /* empty */
194:	HashReference -> LBRACE HashEntry STAR-48 '}'
195:	HashReference -> LBRACE '}'
196:	HashDereference -> '%{' Variable '}'
197:	HashDereference -> '%{' HashReference '}'
198:	WordScoped -> WORD
199:	WordScoped -> WORD_SCOPED
200:	LoopLabel -> WORD_UPPERCASE
201:	Type -> WORD
202:	Type -> TYPE_INTEGER
203:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
204:	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
205:	VariableOrLiteral -> Variable
206:	VariableOrLiteral -> Literal
207:	Literal -> LITERAL_STRING
208:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 7
	SHEBANG	shift, and go to state 6

	'package'	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 3
	PAREN-1	go to state 4
	PLUS-2	go to state 9
	ModuleHeader	go to state 1
	Critic	go to state 2
	CompileUnit	go to state 5
	Program	go to state 8

State 1:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 14

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Package	go to state 12
	Module	go to state 10
	Class	go to state 13
	STAR-10	go to state 11

State 2:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 3:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 15

State 4:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 5:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 16

State 6:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 7

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 17
	Critic	go to state 18

State 7:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 19

	PLUS-14	go to state 20

State 8:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 9:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 7

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 3
	PAREN-1	go to state 21
	Critic	go to state 2
	ModuleHeader	go to state 1

State 10:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 11:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 7

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	STAR-11	go to state 22
	Critic	go to state 23

State 12:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 13:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 14:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26

	WordScoped	go to state 25

State 15:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26

	WordScoped	go to state 27

State 16:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 17:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 28

	Header	go to state 29

State 18:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 19:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 20:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 31
	WORD	shift, and go to state 30

State 21:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 22:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 34

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 33
	STAR-12	go to state 32

State 23:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 24:

	WordScoped -> WORD .	(Rule 198)

	$default	reduce using rule 198 (WordScoped)

State 25:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	')'	shift, and go to state 35

State 26:

	WordScoped -> WORD_SCOPED .	(Rule 199)

	$default	reduce using rule 199 (WordScoped)

State 27:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 36

State 28:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 37

State 29:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 38

State 30:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 31:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 32:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 40
	'use constant'	shift, and go to state 43

	PLUS-13	go to state 41
	Constant	go to state 39
	Subroutine	go to state 42

State 33:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 34:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped OP01_QW PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26

	WordScoped	go to state 44

State 35:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	';'	shift, and go to state 45

State 36:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 28

	Header	go to state 46

State 37:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 47

State 38:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 7

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	Critic	go to state 49
	STAR-5	go to state 48

State 39:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 40:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	TYPE_INTEGER	shift, and go to state 52
	WORD	shift, and go to state 50

	Type	go to state 51

State 41:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 40
	LITERAL_NUMBER	shift, and go to state 54

	Subroutine	go to state 53

State 42:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 43:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	WORD_UPPERCASE	shift, and go to state 55

State 44:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . OP01_QW PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 57
	OP01_QW	shift, and go to state 56

State 45:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 34

	Include	go to state 58

State 46:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 47:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 59

State 48:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 34

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	Include	go to state 61
	STAR-6	go to state 60

State 49:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 50:

	Type -> WORD .	(Rule 201)

	$default	reduce using rule 201 (Type)

State 51:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 62

State 52:

	Type -> TYPE_INTEGER .	(Rule 202)

	$default	reduce using rule 202 (Type)

State 53:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 54:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 63

State 55:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 64

State 56:

	Include -> 'use' WordScoped OP01_QW . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 66

	PLUS-15	go to state 65

State 57:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 58:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 67

State 59:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 68

State 60:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 43

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	Constant	go to state 70
	STAR-7	go to state 69

State 61:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 62:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 71

State 63:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 64:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 41)

	'my'	shift, and go to state 72

	TypeInnerConstant	go to state 73

State 65:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped OP01_QW PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 74
	WORD	shift, and go to state 75

State 66:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 67:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'## no critic qw('	shift, and go to state 7

	'our hash_ref $properties'	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	STAR-21	go to state 76
	Critic	go to state 77

State 68:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 69:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'if'	shift, and go to state 86
	'my'	shift, and go to state 123
	'our'	shift, and go to state 40
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 93
	OP01_NAMED_VOID_SCOLON	shift, and go to state 115
	OP01_OPEN	shift, and go to state 104
	OP01_PRINT	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 99

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	VariableDeclaration	go to state 89
	OperatorVoid	go to state 90
	HashReference	go to state 91
	Conditional	go to state 92
	Operation	go to state 87
	OPTIONAL-35	go to state 111
	SubExpression	go to state 81
	Variable	go to state 110
	ArrayDereference	go to state 109
	PLUS-8	go to state 79
	PAREN-34	go to state 78
	Operator	go to state 106
	Literal	go to state 100
	Subroutine	go to state 101
	WordScoped	go to state 102
	VariableModification	go to state 121
	LoopLabel	go to state 120
	ArrayReference	go to state 118
	Statement	go to state 98
	Expression	go to state 97
	HashDereference	go to state 117

State 70:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 71:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	LPAREN_MY	shift, and go to state 125

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for'	reduce using rule 43 (OPTIONAL-16)
	'foreach'	reduce using rule 43 (OPTIONAL-16)
	'if'	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while'	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)
	WORD_UPPERCASE	reduce using rule 43 (OPTIONAL-16)

	OPTIONAL-16	go to state 126
	SubroutineArguments	go to state 124

State 72:

	TypeInnerConstant -> 'my' . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 204)

	TYPE_INTEGER	shift, and go to state 52
	WORD	shift, and go to state 50

	Type	go to state 127

State 73:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85

	Literal	go to state 128

State 74:

	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 129

State 75:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 76:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 34

	'our hash_ref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	STAR-22	go to state 131
	Include	go to state 130

State 77:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 78:

	OPTIONAL-35 -> PAREN-34 .	(Rule 138)

	$default	reduce using rule 138 (OPTIONAL-35)

State 79:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'if'	shift, and go to state 86
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 93
	OP01_NAMED_VOID_SCOLON	shift, and go to state 115
	OP01_OPEN	shift, and go to state 104
	OP01_PRINT	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 99

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	WordScoped	go to state 102
	Literal	go to state 100
	HashDereference	go to state 117
	Expression	go to state 97
	Statement	go to state 98
	ArrayReference	go to state 118
	LoopLabel	go to state 120
	VariableModification	go to state 121
	Operation	go to state 132
	OperatorVoid	go to state 90
	HashReference	go to state 91
	Conditional	go to state 92
	VariableDeclaration	go to state 89
	Operator	go to state 106
	ArrayDereference	go to state 109
	PAREN-34	go to state 78
	Variable	go to state 110
	SubExpression	go to state 81
	OPTIONAL-35	go to state 111

State 80:

	SubExpression -> 'undef' .	(Rule 127)

	$default	reduce using rule 127 (SubExpression)

State 81:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 82:

	OperatorVoid -> OP01_PRINT . OPTIONAL-31 ListElements ';'	(Rule 110)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 111)

	FH_REF_SYMBOL_BRACES	shift, and go to state 153
	STDOUT_STDERR	shift, and go to state 150

	'%{'	reduce using rule 109 (OPTIONAL-31)
	'@{'	reduce using rule 109 (OPTIONAL-31)
	'my'	reduce using rule 109 (OPTIONAL-31)
	'undef'	reduce using rule 109 (OPTIONAL-31)
	LBRACE	reduce using rule 109 (OPTIONAL-31)
	LBRACKET	reduce using rule 109 (OPTIONAL-31)
	LITERAL_NUMBER	reduce using rule 109 (OPTIONAL-31)
	LITERAL_STRING	reduce using rule 109 (OPTIONAL-31)
	LPAREN	reduce using rule 109 (OPTIONAL-31)
	OP01_CLOSE	reduce using rule 109 (OPTIONAL-31)
	OP01_NAMED	reduce using rule 109 (OPTIONAL-31)
	OP01_OPEN	reduce using rule 109 (OPTIONAL-31)
	OP01_QW	reduce using rule 109 (OPTIONAL-31)
	OP03_MATH_INC_DEC	reduce using rule 109 (OPTIONAL-31)
	OP05_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	OP05_MATH_NEG_LPAREN	reduce using rule 109 (OPTIONAL-31)
	OP10_NAMED_UNARY	reduce using rule 109 (OPTIONAL-31)
	OP22_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	VARIABLE_SYMBOL	reduce using rule 109 (OPTIONAL-31)
	WORD	reduce using rule 109 (OPTIONAL-31)
	WORD_SCOPED	reduce using rule 109 (OPTIONAL-31)
	WORD_UPPERCASE	reduce using rule 109 (OPTIONAL-31)

	OPTIONAL-31	go to state 151
	PAREN-30	go to state 152

State 83:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 87)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Literal	go to state 100
	WordScoped	go to state 102
	HashReference	go to state 91
	Operator	go to state 106
	HashDereference	go to state 117
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155
	SubExpression	go to state 156
	Variable	go to state 158

State 84:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 82)

	FH_REF_SYMBOL	shift, and go to state 159

State 85:

	Literal -> LITERAL_STRING .	(Rule 207)

	$default	reduce using rule 207 (Literal)

State 86:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 151)

	LPAREN	shift, and go to state 160

State 87:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 88:

	ArrayReference -> LBRACKET . OPTIONAL-45 ']'	(Rule 182)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	']'	reduce using rule 181 (OPTIONAL-45)

	Literal	go to state 100
	WordScoped	go to state 102
	TypeInner	go to state 163
	OPTIONAL-45	go to state 162
	ListElements	go to state 166
	HashReference	go to state 91
	Operator	go to state 106
	HashDereference	go to state 117
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	Expression	go to state 155
	ListElement	go to state 164
	SubExpression	go to state 161
	Variable	go to state 158

State 89:

	Statement -> VariableDeclaration .	(Rule 143)

	$default	reduce using rule 143 (Statement)

State 90:

	Statement -> OperatorVoid .	(Rule 142)

	$default	reduce using rule 142 (Statement)

State 91:

	SubExpression -> HashReference .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 92:

	Statement -> Conditional .	(Rule 140)

	$default	reduce using rule 140 (Statement)

State 93:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 113)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	TypeInner	go to state 163
	ListElements	go to state 168
	HashReference	go to state 91
	Literal	go to state 100
	WordScoped	go to state 102
	SubExpression	go to state 161
	Variable	go to state 158
	HashDereference	go to state 117
	Operator	go to state 106
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	ListElement	go to state 164
	Expression	go to state 155

State 94:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 94)
	Operator -> OP10_NAMED_UNARY .	(Rule 95)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP04_MATH_POW	reduce using rule 95 (Operator)
	OP06_REGEX_MATCH	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP07_STRING_REPEAT	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 169
	Operator	go to state 106
	HashDereference	go to state 117
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109

State 95:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 96:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 83)

	VARIABLE_SYMBOL	shift, and go to state 107

	Variable	go to state 170

State 97:

	Operation -> Expression . ';'	(Rule 76)
	SubExpression -> Expression .	(Rule 126)

	';'	shift, and go to state 171

	OP04_MATH_POW	reduce using rule 126 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 126 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 126 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 126 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 126 (SubExpression)
	OP08_STRING_CAT	reduce using rule 126 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 126 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 126 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 126 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 126 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 126 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 126 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 126 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 126 (SubExpression)
	OP18_TERNARY	reduce using rule 126 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 126 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 126 (SubExpression)

State 98:

	Operation -> Statement .	(Rule 77)

	$default	reduce using rule 77 (Operation)

State 99:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 123)
	LoopLabel -> WORD_UPPERCASE .	(Rule 200)

	LPAREN	shift, and go to state 172

	COLON	reduce using rule 200 (LoopLabel)

State 100:

	SubExpression -> Literal .	(Rule 128)

	$default	reduce using rule 128 (SubExpression)

State 101:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 102:

	Expression -> WordScoped . LPAREN OPTIONAL-32 ')'	(Rule 122)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 125)

	LPAREN	shift, and go to state 174
	OP02_METHOD_THINARROW_NEW	shift, and go to state 173

State 103:

	ArrayDereference -> '@{' . Variable '}'	(Rule 183)
	ArrayDereference -> '@{' . ArrayReference '}'	(Rule 184)

	LBRACKET	shift, and go to state 88
	VARIABLE_SYMBOL	shift, and go to state 107

	ArrayReference	go to state 175
	Variable	go to state 176

State 104:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	'my'	shift, and go to state 177

State 105:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 86)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	SubExpression	go to state 178
	Variable	go to state 158
	HashDereference	go to state 117
	Operator	go to state 106
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	Expression	go to state 155
	HashReference	go to state 91
	Literal	go to state 100
	WordScoped	go to state 102

State 106:

	Expression -> Operator .	(Rule 121)

	$default	reduce using rule 121 (Expression)

State 107:

	Variable -> VARIABLE_SYMBOL . STAR-41	(Rule 163)

	$default	reduce using rule 162 (STAR-41)

	STAR-41	go to state 179

State 108:

	Literal -> LITERAL_NUMBER .	(Rule 208)

	$default	reduce using rule 208 (Literal)

State 109:

	SubExpression -> ArrayDereference .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 110:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 124)
	SubExpression -> Variable .	(Rule 129)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 169)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 170)

	OP02_METHOD_THINARROW	shift, and go to state 183
	OP03_MATH_INC_DEC	shift, and go to state 182
	OP19_VARIABLE_ASSIGN	shift, and go to state 181
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 180

	OP04_MATH_POW	reduce using rule 129 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 129 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 129 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 129 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 129 (SubExpression)
	OP08_STRING_CAT	reduce using rule 129 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 129 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 129 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 129 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 129 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 129 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 129 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 129 (SubExpression)
	OP18_TERNARY	reduce using rule 129 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 129 (SubExpression)

State 111:

	Statement -> OPTIONAL-35 . Loop	(Rule 141)

	'for'	shift, and go to state 188
	'foreach'	shift, and go to state 189
	'while'	shift, and go to state 186

	LoopWhile	go to state 184
	LoopFor	go to state 190
	Loop	go to state 185
	LoopForEach	go to state 187

State 112:

	HashDereference -> '%{' . Variable '}'	(Rule 196)
	HashDereference -> '%{' . HashReference '}'	(Rule 197)

	LBRACE	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 107

	HashReference	go to state 191
	Variable	go to state 192

State 113:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 116)

	WORD_UPPERCASE	shift, and go to state 193

	LoopLabel	go to state 194

State 114:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 104)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91
	HashDereference	go to state 117
	Operator	go to state 106
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Variable	go to state 158
	SubExpression	go to state 195

State 115:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 112)

	$default	reduce using rule 112 (OperatorVoid)

State 116:

	Operator -> LPAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 134)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 198
	OP01_OPEN	shift, and go to state 104
	OP01_PRINT	shift, and go to state 197
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Literal	go to state 100
	WordScoped	go to state 102
	HashReference	go to state 91
	Operator	go to state 106
	HashDereference	go to state 117
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155
	SubExpression	go to state 196
	Variable	go to state 158

State 117:

	SubExpression -> HashDereference .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 118:

	SubExpression -> ArrayReference .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 119:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 114)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Operator	go to state 106
	HashDereference	go to state 117
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	ListElement	go to state 199
	Expression	go to state 155
	SubExpression	go to state 200
	Variable	go to state 158
	Literal	go to state 100
	WordScoped	go to state 102
	TypeInner	go to state 163
	HashReference	go to state 91

State 120:

	PAREN-34 -> LoopLabel . COLON	(Rule 137)

	COLON	shift, and go to state 201

State 121:

	Statement -> VariableModification .	(Rule 144)

	$default	reduce using rule 144 (Statement)

State 122:

	HashReference -> LBRACE . HashEntry STAR-48 '}'	(Rule 194)
	HashReference -> LBRACE . '}'	(Rule 195)

	'%{'	shift, and go to state 112
	'}'	shift, and go to state 205
	WORD	shift, and go to state 204

	HashDereference	go to state 202
	HashEntry	go to state 203

State 123:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 167)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 168)

	TYPE_INTEGER	shift, and go to state 52
	WORD	shift, and go to state 50

	Type	go to state 206

State 124:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 125:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	TYPE_INTEGER	shift, and go to state 52
	WORD	shift, and go to state 50

	Type	go to state 207

State 126:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'if'	shift, and go to state 86
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 93
	OP01_NAMED_VOID_SCOLON	shift, and go to state 115
	OP01_OPEN	shift, and go to state 104
	OP01_PRINT	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 99

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	Literal	go to state 100
	WordScoped	go to state 102
	VariableModification	go to state 121
	LoopLabel	go to state 120
	ArrayReference	go to state 118
	Expression	go to state 97
	Statement	go to state 98
	HashDereference	go to state 117
	VariableDeclaration	go to state 89
	OperatorVoid	go to state 90
	HashReference	go to state 91
	Conditional	go to state 92
	Operation	go to state 209
	OPTIONAL-35	go to state 111
	PLUS-17	go to state 208
	SubExpression	go to state 81
	Variable	go to state 110
	PAREN-34	go to state 78
	ArrayDereference	go to state 109
	Operator	go to state 106

State 127:

	TypeInnerConstant -> 'my' Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 204)

	'$TYPED_'	shift, and go to state 210

State 128:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 41)

	';'	shift, and go to state 211

State 129:

	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 130:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 131:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'our hash_ref $properties'	shift, and go to state 213
	'use constant'	shift, and go to state 43

	Constant	go to state 212
	Properties	go to state 214

State 132:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 133:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Operator	go to state 106
	HashDereference	go to state 117
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Variable	go to state 158
	SubExpression	go to state 215
	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91

State 134:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Operator	go to state 106
	HashDereference	go to state 117
	Variable	go to state 158
	SubExpression	go to state 216
	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91

State 135:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 100)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Literal	go to state 100
	WordScoped	go to state 102
	HashReference	go to state 91
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155
	Operator	go to state 106
	HashDereference	go to state 117
	SubExpression	go to state 217
	Variable	go to state 158

State 136:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 85)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91
	HashDereference	go to state 117
	Operator	go to state 106
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Variable	go to state 158
	SubExpression	go to state 218

State 137:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 97)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 219
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Operator	go to state 106
	HashDereference	go to state 117

State 138:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 107

	Literal	go to state 220
	VariableOrLiteral	go to state 221
	Variable	go to state 222

State 139:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 91)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashDereference	go to state 117
	Operator	go to state 106
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155
	SubExpression	go to state 223
	Variable	go to state 158
	Literal	go to state 100
	WordScoped	go to state 102
	HashReference	go to state 91

State 140:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Variable	go to state 158
	SubExpression	go to state 224
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	HashDereference	go to state 117
	Operator	go to state 106
	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100

State 141:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 98)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 225
	Expression	go to state 155
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	Operator	go to state 106
	HashDereference	go to state 117

State 142:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Literal	go to state 100
	WordScoped	go to state 102
	HashReference	go to state 91
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	Expression	go to state 155
	Operator	go to state 106
	HashDereference	go to state 117
	SubExpression	go to state 226
	Variable	go to state 158

State 143:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 92)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	SubExpression	go to state 227
	Variable	go to state 158
	Operator	go to state 106
	HashDereference	go to state 117
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	Expression	go to state 155
	HashReference	go to state 91
	Literal	go to state 100
	WordScoped	go to state 102

State 144:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 228
	HashDereference	go to state 117
	Operator	go to state 106
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109

State 145:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 101)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	Literal	go to state 100
	WordScoped	go to state 102
	SubExpression	go to state 229
	Variable	go to state 158
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155
	Operator	go to state 106
	HashDereference	go to state 117

State 146:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 90)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashDereference	go to state 117
	Operator	go to state 106
	Expression	go to state 155
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	Variable	go to state 158
	SubExpression	go to state 230
	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91

State 147:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 89)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 231
	Operator	go to state 106
	HashDereference	go to state 117
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109

State 148:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 99)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Variable	go to state 158
	SubExpression	go to state 232
	Expression	go to state 155
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	HashDereference	go to state 117
	Operator	go to state 106
	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100

State 149:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 88)

	OP06_REGEX_PATTERN	shift, and go to state 233

State 150:

	PAREN-30 -> STDOUT_STDERR .	(Rule 107)

	$default	reduce using rule 107 (PAREN-30)

State 151:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 . ListElements ';'	(Rule 110)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Expression	go to state 155
	ListElement	go to state 164
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	HashDereference	go to state 117
	Operator	go to state 106
	Variable	go to state 158
	SubExpression	go to state 161
	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91
	ListElements	go to state 234
	TypeInner	go to state 163

State 152:

	OPTIONAL-31 -> PAREN-30 .	(Rule 108)

	$default	reduce using rule 108 (OPTIONAL-31)

State 153:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 111)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	ListElements	go to state 235
	TypeInner	go to state 163
	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 161
	HashDereference	go to state 117
	Operator	go to state 106
	ListElement	go to state 164
	Expression	go to state 155
	ArrayDereference	go to state 109
	ArrayReference	go to state 118

State 154:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 123)

	LPAREN	shift, and go to state 172

State 155:

	SubExpression -> Expression .	(Rule 126)

	$default	reduce using rule 126 (SubExpression)

State 156:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	shift, and go to state 236
	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 157:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Literal	go to state 100
	WordScoped	go to state 102
	HashReference	go to state 91
	HashDereference	go to state 117
	Operator	go to state 106
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155
	SubExpression	go to state 237
	Variable	go to state 158

State 158:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 124)
	SubExpression -> Variable .	(Rule 129)

	OP02_METHOD_THINARROW	shift, and go to state 183
	OP03_MATH_INC_DEC	shift, and go to state 182

	')'	reduce using rule 129 (SubExpression)
	';'	reduce using rule 129 (SubExpression)
	']'	reduce using rule 129 (SubExpression)
	'}'	reduce using rule 129 (SubExpression)
	OP04_MATH_POW	reduce using rule 129 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 129 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 129 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 129 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 129 (SubExpression)
	OP08_STRING_CAT	reduce using rule 129 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 129 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 129 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 129 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 129 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 129 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 129 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 129 (SubExpression)
	OP18_TERNARY	reduce using rule 129 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 129 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 129 (SubExpression)

State 159:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 160:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 151)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	Literal	go to state 100
	WordScoped	go to state 102
	SubExpression	go to state 238
	Variable	go to state 158
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155
	Operator	go to state 106
	HashDereference	go to state 117

State 161:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 177)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	')'	reduce using rule 177 (ListElement)
	';'	reduce using rule 177 (ListElement)
	']'	reduce using rule 177 (ListElement)
	OP21_LIST_COMMA	reduce using rule 177 (ListElement)

State 162:

	ArrayReference -> LBRACKET OPTIONAL-45 . ']'	(Rule 182)

	']'	shift, and go to state 239

State 163:

	ListElement -> TypeInner . SubExpression	(Rule 178)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 240
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Operator	go to state 106
	HashDereference	go to state 117

State 164:

	ListElements -> ListElement . STAR-43	(Rule 174)

	$default	reduce using rule 173 (STAR-43)

	STAR-43	go to state 241

State 165:

	ListElement -> OP01_QW . PLUS-44 ')'	(Rule 179)

	WORD	shift, and go to state 242

	PLUS-44	go to state 243

State 166:

	OPTIONAL-45 -> ListElements .	(Rule 180)

	$default	reduce using rule 180 (OPTIONAL-45)

State 167:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 203)

	TYPE_INTEGER	shift, and go to state 52
	WORD	shift, and go to state 50

	Type	go to state 244

State 168:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 113)

	';'	shift, and go to state 245

State 169:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 94)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 170:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 83)

	$default	reduce using rule 83 (Operator)

State 171:

	Operation -> Expression ';' .	(Rule 76)

	$default	reduce using rule 76 (Operation)

State 172:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 123)

	')'	shift, and go to state 246

State 173:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 125)

	')'	shift, and go to state 247

State 174:

	Expression -> WordScoped LPAREN . OPTIONAL-32 ')'	(Rule 122)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	')'	reduce using rule 118 (OPTIONAL-32)

	TypeInner	go to state 163
	ListElements	go to state 248
	HashReference	go to state 91
	OPTIONAL-32	go to state 249
	Literal	go to state 100
	WordScoped	go to state 102
	SubExpression	go to state 161
	Variable	go to state 158
	HashDereference	go to state 117
	Operator	go to state 106
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	ListElement	go to state 164
	Expression	go to state 155

State 175:

	ArrayDereference -> '@{' ArrayReference . '}'	(Rule 184)

	'}'	shift, and go to state 250

State 176:

	ArrayDereference -> '@{' Variable . '}'	(Rule 183)

	'}'	shift, and go to state 251

State 177:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	'filehandle_ref'	shift, and go to state 252

State 178:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 86)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136

	')'	reduce using rule 86 (Operator)
	';'	reduce using rule 86 (Operator)
	']'	reduce using rule 86 (Operator)
	'}'	reduce using rule 86 (Operator)
	OP06_REGEX_MATCH	reduce using rule 86 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 86 (Operator)
	OP07_STRING_REPEAT	reduce using rule 86 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 86 (Operator)
	OP08_STRING_CAT	reduce using rule 86 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 86 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 86 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 86 (Operator)
	OP13_BITWISE_AND	reduce using rule 86 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 86 (Operator)
	OP15_LOGICAL_AND	reduce using rule 86 (Operator)
	OP16_LOGICAL_OR	reduce using rule 86 (Operator)
	OP17_LIST_RANGE	reduce using rule 86 (Operator)
	OP18_TERNARY	reduce using rule 86 (Operator)
	OP21_LIST_COMMA	reduce using rule 86 (Operator)
	OP23_LOGICAL_AND	reduce using rule 86 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 86 (Operator)

State 179:

	STAR-41 -> STAR-41 . VariableRetrieval	(Rule 161)
	Variable -> VARIABLE_SYMBOL STAR-41 .	(Rule 163)

	OP02_ARRAY_THINARROW	shift, and go to state 253
	OP02_HASH_THINARROW	shift, and go to state 254

	')'	reduce using rule 163 (Variable)
	';'	reduce using rule 163 (Variable)
	']'	reduce using rule 163 (Variable)
	'}'	reduce using rule 163 (Variable)
	COLON	reduce using rule 163 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 163 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 163 (Variable)
	OP04_MATH_POW	reduce using rule 163 (Variable)
	OP06_REGEX_MATCH	reduce using rule 163 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 163 (Variable)
	OP07_STRING_REPEAT	reduce using rule 163 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 163 (Variable)
	OP08_STRING_CAT	reduce using rule 163 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 163 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 163 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 163 (Variable)
	OP13_BITWISE_AND	reduce using rule 163 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 163 (Variable)
	OP15_LOGICAL_AND	reduce using rule 163 (Variable)
	OP16_LOGICAL_OR	reduce using rule 163 (Variable)
	OP17_LIST_RANGE	reduce using rule 163 (Variable)
	OP18_TERNARY	reduce using rule 163 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 163 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 163 (Variable)
	OP21_LIST_COMMA	reduce using rule 163 (Variable)
	OP23_LOGICAL_AND	reduce using rule 163 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 163 (Variable)

	VariableRetrieval	go to state 255

State 180:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 170)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91
	Operator	go to state 106
	HashDereference	go to state 117
	Expression	go to state 155
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	Variable	go to state 158
	SubExpression	go to state 256

State 181:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 169)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	STDIN	shift, and go to state 257
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91
	SubExpressionOrStdin	go to state 258
	HashDereference	go to state 117
	Operator	go to state 106
	Expression	go to state 155
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	Variable	go to state 158
	SubExpression	go to state 259

State 182:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 183:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-33 ')'	(Rule 124)

	LPAREN	shift, and go to state 260

State 184:

	Loop -> LoopWhile .	(Rule 154)

	$default	reduce using rule 154 (Loop)

State 185:

	Statement -> OPTIONAL-35 Loop .	(Rule 141)

	$default	reduce using rule 141 (Statement)

State 186:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 157)

	LPAREN	shift, and go to state 261

State 187:

	Loop -> LoopForEach .	(Rule 153)

	$default	reduce using rule 153 (Loop)

State 188:

	LoopFor -> 'for' . 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	'my'	shift, and go to state 262

State 189:

	LoopForEach -> 'foreach' . 'my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 156)

	'my'	shift, and go to state 263

State 190:

	Loop -> LoopFor .	(Rule 152)

	$default	reduce using rule 152 (Loop)

State 191:

	HashDereference -> '%{' HashReference . '}'	(Rule 197)

	'}'	shift, and go to state 264

State 192:

	HashDereference -> '%{' Variable . '}'	(Rule 196)

	'}'	shift, and go to state 265

State 193:

	LoopLabel -> WORD_UPPERCASE .	(Rule 200)

	$default	reduce using rule 200 (LoopLabel)

State 194:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 116)

	';'	shift, and go to state 266

State 195:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 196:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 134)

	')'	shift, and go to state 267
	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 197:

	Operator -> LPAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)

	FH_REF_SYMBOL_BRACES	shift, and go to state 268

State 198:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Variable	go to state 158
	SubExpression	go to state 200
	Operator	go to state 106
	HashDereference	go to state 117
	ListElement	go to state 269
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	TypeInner	go to state 163
	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100

State 199:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 114)

	OP21_LIST_COMMA	shift, and go to state 270

State 200:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 177)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 177 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 201:

	PAREN-34 -> LoopLabel COLON .	(Rule 137)

	$default	reduce using rule 137 (PAREN-34)

State 202:

	HashEntry -> HashDereference .	(Rule 188)

	$default	reduce using rule 188 (HashEntry)

State 203:

	HashReference -> LBRACE HashEntry . STAR-48 '}'	(Rule 194)

	$default	reduce using rule 193 (STAR-48)

	STAR-48	go to state 271

State 204:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-46 SubExpression	(Rule 187)

	OP20_HASH_FATARROW	shift, and go to state 272

State 205:

	HashReference -> LBRACE '}' .	(Rule 195)

	$default	reduce using rule 195 (HashReference)

State 206:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 167)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 168)

	VARIABLE_SYMBOL	shift, and go to state 273

State 207:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 274

State 208:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'if'	shift, and go to state 86
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 80
	'}'	shift, and go to state 275
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 93
	OP01_NAMED_VOID_SCOLON	shift, and go to state 115
	OP01_OPEN	shift, and go to state 104
	OP01_PRINT	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 99

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	OPTIONAL-35	go to state 111
	SubExpression	go to state 81
	Variable	go to state 110
	ArrayDereference	go to state 109
	PAREN-34	go to state 78
	Operator	go to state 106
	VariableDeclaration	go to state 89
	HashReference	go to state 91
	OperatorVoid	go to state 90
	Conditional	go to state 92
	Operation	go to state 276
	VariableModification	go to state 121
	LoopLabel	go to state 120
	ArrayReference	go to state 118
	Statement	go to state 98
	Expression	go to state 97
	HashDereference	go to state 117
	Literal	go to state 100
	WordScoped	go to state 102

State 209:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 210:

	TypeInnerConstant -> 'my' Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 204)

	WORD_UPPERCASE	shift, and go to state 277

State 211:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 212:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 213:

	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 64)

	OP19_VARIABLE_ASSIGN	shift, and go to state 278

State 214:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 279

State 215:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 216:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 217:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 218:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 219:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 220:

	VariableOrLiteral -> Literal .	(Rule 206)

	$default	reduce using rule 206 (VariableOrLiteral)

State 221:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 103)

	COLON	shift, and go to state 280

State 222:

	VariableOrLiteral -> Variable .	(Rule 205)

	$default	reduce using rule 205 (VariableOrLiteral)

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 224:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 225:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 226:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 227:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 228:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 229:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 230:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_STRING_REPEAT	shift, and go to state 147

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 231:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 233:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 234:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements . ';'	(Rule 110)

	';'	shift, and go to state 281

State 235:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 111)

	';'	shift, and go to state 282

State 236:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 237:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	']'	reduce using rule 79 (Operator)
	'}'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 79 (Operator)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 238:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 151)

	')'	shift, and go to state 283
	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 239:

	ArrayReference -> LBRACKET OPTIONAL-45 ']' .	(Rule 182)

	$default	reduce using rule 182 (ArrayReference)

State 240:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> TypeInner SubExpression .	(Rule 178)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	')'	reduce using rule 178 (ListElement)
	';'	reduce using rule 178 (ListElement)
	']'	reduce using rule 178 (ListElement)
	OP21_LIST_COMMA	reduce using rule 178 (ListElement)

State 241:

	STAR-43 -> STAR-43 . PAREN-42	(Rule 172)
	ListElements -> ListElement STAR-43 .	(Rule 174)

	OP21_LIST_COMMA	shift, and go to state 285

	')'	reduce using rule 174 (ListElements)
	';'	reduce using rule 174 (ListElements)
	']'	reduce using rule 174 (ListElements)

	PAREN-42	go to state 284

State 242:

	PLUS-44 -> WORD .	(Rule 176)

	$default	reduce using rule 176 (PLUS-44)

State 243:

	PLUS-44 -> PLUS-44 . WORD	(Rule 175)
	ListElement -> OP01_QW PLUS-44 . ')'	(Rule 179)

	')'	shift, and go to state 287
	WORD	shift, and go to state 286

State 244:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 203)

	'$TYPED_'	shift, and go to state 288

State 245:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 113)

	$default	reduce using rule 113 (OperatorVoid)

State 246:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 123)

	$default	reduce using rule 123 (Expression)

State 247:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 125)

	$default	reduce using rule 125 (Expression)

State 248:

	OPTIONAL-32 -> ListElements .	(Rule 117)

	$default	reduce using rule 117 (OPTIONAL-32)

State 249:

	Expression -> WordScoped LPAREN OPTIONAL-32 . ')'	(Rule 122)

	')'	shift, and go to state 289

State 250:

	ArrayDereference -> '@{' ArrayReference '}' .	(Rule 184)

	$default	reduce using rule 184 (ArrayDereference)

State 251:

	ArrayDereference -> '@{' Variable '}' .	(Rule 183)

	$default	reduce using rule 183 (ArrayDereference)

State 252:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	FH_REF_SYMBOL	shift, and go to state 290

State 253:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 164)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 291
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	HashDereference	go to state 117
	Operator	go to state 106

State 254:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 165)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 166)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 293
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Variable	go to state 158
	SubExpression	go to state 292
	HashDereference	go to state 117
	Operator	go to state 106
	Expression	go to state 155
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100

State 255:

	STAR-41 -> STAR-41 VariableRetrieval .	(Rule 161)

	$default	reduce using rule 161 (STAR-41)

State 256:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 170)

	';'	shift, and go to state 294
	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 257:

	SubExpressionOrStdin -> STDIN .	(Rule 136)

	$default	reduce using rule 136 (SubExpressionOrStdin)

State 258:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 169)

	';'	shift, and go to state 295

State 259:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpressionOrStdin -> SubExpression .	(Rule 135)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	';'	reduce using rule 135 (SubExpressionOrStdin)

State 260:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-33 ')'	(Rule 124)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	')'	reduce using rule 120 (OPTIONAL-33)

	HashDereference	go to state 117
	Operator	go to state 106
	Expression	go to state 155
	OPTIONAL-33	go to state 296
	ListElement	go to state 164
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	Variable	go to state 158
	SubExpression	go to state 161
	WordScoped	go to state 102
	Literal	go to state 100
	ListElements	go to state 297
	TypeInner	go to state 163
	HashReference	go to state 91

State 261:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 157)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91
	HashDereference	go to state 117
	Operator	go to state 106
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Variable	go to state 158
	SubExpression	go to state 298

State 262:

	LoopFor -> 'for' 'my' . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	TYPE_INTEGER	shift, and go to state 299

State 263:

	LoopForEach -> 'foreach' 'my' . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 156)

	TYPE_INTEGER	shift, and go to state 52
	WORD	shift, and go to state 50

	Type	go to state 300

State 264:

	HashDereference -> '%{' HashReference '}' .	(Rule 197)

	$default	reduce using rule 197 (HashDereference)

State 265:

	HashDereference -> '%{' Variable '}' .	(Rule 196)

	$default	reduce using rule 196 (HashDereference)

State 266:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 267:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 268:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 78)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91
	ListElements	go to state 301
	TypeInner	go to state 163
	ListElement	go to state 164
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Operator	go to state 106
	HashDereference	go to state 117
	Variable	go to state 158
	SubExpression	go to state 161

State 269:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 80)

	OP21_LIST_COMMA	shift, and go to state 302

State 270:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 114)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	ListElements	go to state 303
	TypeInner	go to state 163
	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 161
	HashDereference	go to state 117
	Operator	go to state 106
	Expression	go to state 155
	ListElement	go to state 164
	ArrayDereference	go to state 109
	ArrayReference	go to state 118

State 271:

	STAR-48 -> STAR-48 . PAREN-47	(Rule 192)
	HashReference -> LBRACE HashEntry STAR-48 . '}'	(Rule 194)

	'}'	shift, and go to state 305
	OP21_LIST_COMMA	shift, and go to state 306

	PAREN-47	go to state 304

State 272:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-46 SubExpression	(Rule 187)

	'my'	shift, and go to state 167

	'%{'	reduce using rule 186 (OPTIONAL-46)
	'@{'	reduce using rule 186 (OPTIONAL-46)
	'undef'	reduce using rule 186 (OPTIONAL-46)
	LBRACE	reduce using rule 186 (OPTIONAL-46)
	LBRACKET	reduce using rule 186 (OPTIONAL-46)
	LITERAL_NUMBER	reduce using rule 186 (OPTIONAL-46)
	LITERAL_STRING	reduce using rule 186 (OPTIONAL-46)
	LPAREN	reduce using rule 186 (OPTIONAL-46)
	OP01_CLOSE	reduce using rule 186 (OPTIONAL-46)
	OP01_NAMED	reduce using rule 186 (OPTIONAL-46)
	OP01_OPEN	reduce using rule 186 (OPTIONAL-46)
	OP03_MATH_INC_DEC	reduce using rule 186 (OPTIONAL-46)
	OP05_LOGICAL_NEG	reduce using rule 186 (OPTIONAL-46)
	OP05_MATH_NEG_LPAREN	reduce using rule 186 (OPTIONAL-46)
	OP10_NAMED_UNARY	reduce using rule 186 (OPTIONAL-46)
	OP22_LOGICAL_NEG	reduce using rule 186 (OPTIONAL-46)
	VARIABLE_SYMBOL	reduce using rule 186 (OPTIONAL-46)
	WORD	reduce using rule 186 (OPTIONAL-46)
	WORD_SCOPED	reduce using rule 186 (OPTIONAL-46)
	WORD_UPPERCASE	reduce using rule 186 (OPTIONAL-46)

	TypeInner	go to state 308
	OPTIONAL-46	go to state 307

State 273:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 167)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 168)

	';'	shift, and go to state 309
	OP19_VARIABLE_ASSIGN	shift, and go to state 310

State 274:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 311

State 275:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 312

State 276:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 277:

	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 204)

	OP19_VARIABLE_ASSIGN	shift, and go to state 313

State 278:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 64)

	LBRACE	shift, and go to state 314

State 279:

	STAR-23 -> STAR-23 . MethodOrSubroutine	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 . LITERAL_NUMBER ';'	(Rule 59)

	'our'	shift, and go to state 315
	LITERAL_NUMBER	shift, and go to state 319

	Subroutine	go to state 316
	Method	go to state 317
	MethodOrSubroutine	go to state 318

State 280:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	VARIABLE_SYMBOL	shift, and go to state 107

	Literal	go to state 220
	VariableOrLiteral	go to state 320
	Variable	go to state 222

State 281:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';' .	(Rule 110)

	$default	reduce using rule 110 (OperatorVoid)

State 282:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 111)

	$default	reduce using rule 111 (OperatorVoid)

State 283:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-37 OPTIONAL-39	(Rule 151)

	LBRACE	shift, and go to state 321

	CodeBlock	go to state 322

State 284:

	STAR-43 -> STAR-43 PAREN-42 .	(Rule 172)

	$default	reduce using rule 172 (STAR-43)

State 285:

	PAREN-42 -> OP21_LIST_COMMA . ListElement	(Rule 171)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Expression	go to state 155
	ListElement	go to state 323
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Operator	go to state 106
	HashDereference	go to state 117
	Variable	go to state 158
	SubExpression	go to state 161
	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91
	TypeInner	go to state 163

State 286:

	PLUS-44 -> PLUS-44 WORD .	(Rule 175)

	$default	reduce using rule 175 (PLUS-44)

State 287:

	ListElement -> OP01_QW PLUS-44 ')' .	(Rule 179)

	$default	reduce using rule 179 (ListElement)

State 288:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 203)

	WORD	shift, and go to state 324

State 289:

	Expression -> WordScoped LPAREN OPTIONAL-32 ')' .	(Rule 122)

	$default	reduce using rule 122 (Expression)

State 290:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 325

State 291:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 164)

	']'	shift, and go to state 326
	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 292:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 165)

	'}'	shift, and go to state 327
	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 293:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 166)
	WordScoped -> WORD .	(Rule 198)

	'}'	shift, and go to state 328

	LPAREN	reduce using rule 198 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 198 (WordScoped)

State 294:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 170)

	$default	reduce using rule 170 (VariableModification)

State 295:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 169)

	$default	reduce using rule 169 (VariableModification)

State 296:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 . ')'	(Rule 124)

	')'	shift, and go to state 329

State 297:

	OPTIONAL-33 -> ListElements .	(Rule 119)

	$default	reduce using rule 119 (OPTIONAL-33)

State 298:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 157)

	')'	shift, and go to state 330
	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 299:

	LoopFor -> 'for' 'my' TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	VARIABLE_SYMBOL	shift, and go to state 331

State 300:

	LoopForEach -> 'foreach' 'my' Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 156)

	VARIABLE_SYMBOL	shift, and go to state 332

State 301:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 78)

	')'	shift, and go to state 333

State 302:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	WordScoped	go to state 102
	Literal	go to state 100
	HashReference	go to state 91
	ListElements	go to state 334
	TypeInner	go to state 163
	ListElement	go to state 164
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Operator	go to state 106
	HashDereference	go to state 117
	Variable	go to state 158
	SubExpression	go to state 161

State 303:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 114)

	';'	shift, and go to state 335

State 304:

	STAR-48 -> STAR-48 PAREN-47 .	(Rule 192)

	$default	reduce using rule 192 (STAR-48)

State 305:

	HashReference -> LBRACE HashEntry STAR-48 '}' .	(Rule 194)

	$default	reduce using rule 194 (HashReference)

State 306:

	PAREN-47 -> OP21_LIST_COMMA . HashEntry	(Rule 191)

	'%{'	shift, and go to state 112
	WORD	shift, and go to state 204

	HashDereference	go to state 202
	HashEntry	go to state 336

State 307:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 . SubExpression	(Rule 187)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Variable	go to state 158
	SubExpression	go to state 337
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	HashDereference	go to state 117
	Operator	go to state 106
	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100

State 308:

	OPTIONAL-46 -> TypeInner .	(Rule 185)

	$default	reduce using rule 185 (OPTIONAL-46)

State 309:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 167)

	$default	reduce using rule 167 (VariableDeclaration)

State 310:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 168)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	STDIN	shift, and go to state 257
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Literal	go to state 100
	WordScoped	go to state 102
	HashReference	go to state 91
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155
	Operator	go to state 106
	HashDereference	go to state 117
	SubExpressionOrStdin	go to state 338
	SubExpression	go to state 259
	Variable	go to state 158

State 311:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 340
	OP21_LIST_COMMA	shift, and go to state 341

	PAREN-18	go to state 339

State 312:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 313:

	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 204)

	$default	reduce using rule 204 (TypeInnerConstant)

State 314:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 64)

	'%{'	shift, and go to state 112
	'}'	shift, and go to state 343
	WORD	shift, and go to state 345

	HashDereference	go to state 344
	HashEntryTyped	go to state 342

State 315:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	TYPE_INTEGER	shift, and go to state 52
	TYPE_METHOD	shift, and go to state 346
	WORD	shift, and go to state 50

	Type	go to state 51

State 316:

	MethodOrSubroutine -> Subroutine .	(Rule 75)

	$default	reduce using rule 75 (MethodOrSubroutine)

State 317:

	MethodOrSubroutine -> Method .	(Rule 74)

	$default	reduce using rule 74 (MethodOrSubroutine)

State 318:

	STAR-23 -> STAR-23 MethodOrSubroutine .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 319:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER . ';'	(Rule 59)

	';'	shift, and go to state 347

State 320:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 321:

	CodeBlock -> LBRACE . PLUS-40 '}'	(Rule 160)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'if'	shift, and go to state 86
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 93
	OP01_NAMED_VOID_SCOLON	shift, and go to state 115
	OP01_OPEN	shift, and go to state 104
	OP01_PRINT	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 99

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	WordScoped	go to state 102
	Literal	go to state 100
	HashDereference	go to state 117
	Expression	go to state 97
	Statement	go to state 98
	ArrayReference	go to state 118
	LoopLabel	go to state 120
	VariableModification	go to state 121
	Operation	go to state 348
	OperatorVoid	go to state 90
	Conditional	go to state 92
	HashReference	go to state 91
	VariableDeclaration	go to state 89
	Operator	go to state 106
	PLUS-40	go to state 349
	ArrayDereference	go to state 109
	PAREN-34	go to state 78
	Variable	go to state 110
	SubExpression	go to state 81
	OPTIONAL-35	go to state 111

State 322:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-37 OPTIONAL-39	(Rule 151)

	$default	reduce using rule 147 (STAR-37)

	STAR-37	go to state 350

State 323:

	PAREN-42 -> OP21_LIST_COMMA ListElement .	(Rule 171)

	$default	reduce using rule 171 (PAREN-42)

State 324:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 203)

	OP19_VARIABLE_ASSIGN	shift, and go to state 351

State 325:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	LITERAL_STRING	shift, and go to state 352

State 326:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 164)

	$default	reduce using rule 164 (VariableRetrieval)

State 327:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 165)

	$default	reduce using rule 165 (VariableRetrieval)

State 328:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 166)

	$default	reduce using rule 166 (VariableRetrieval)

State 329:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')' .	(Rule 124)

	$default	reduce using rule 124 (Expression)

State 330:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 157)

	LBRACE	shift, and go to state 321

	CodeBlock	go to state 353

State 331:

	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	LPAREN	shift, and go to state 354

State 332:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 156)

	LPAREN	shift, and go to state 355

State 333:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 78)

	$default	reduce using rule 78 (Operator)

State 334:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 80)

	')'	shift, and go to state 356

State 335:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 336:

	PAREN-47 -> OP21_LIST_COMMA HashEntry .	(Rule 191)

	$default	reduce using rule 191 (PAREN-47)

State 337:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 SubExpression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	'}'	reduce using rule 187 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 187 (HashEntry)

State 338:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 168)

	';'	shift, and go to state 357

State 339:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 340:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 358

State 341:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 359

State 342:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-25 '}' ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 360

State 343:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 64)

	';'	shift, and go to state 361

State 344:

	HashEntryTyped -> HashDereference .	(Rule 190)

	$default	reduce using rule 190 (HashEntryTyped)

State 345:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 189)

	OP20_HASH_FATARROW	shift, and go to state 362

State 346:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	VARIABLE_SYMBOL	shift, and go to state 363

State 347:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';' .	(Rule 59)

	$default	reduce using rule 59 (Class)

State 348:

	PLUS-40 -> Operation .	(Rule 159)

	$default	reduce using rule 159 (PLUS-40)

State 349:

	PLUS-40 -> PLUS-40 . Operation	(Rule 158)
	CodeBlock -> LBRACE PLUS-40 . '}'	(Rule 160)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'if'	shift, and go to state 86
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 80
	'}'	shift, and go to state 365
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 93
	OP01_NAMED_VOID_SCOLON	shift, and go to state 115
	OP01_OPEN	shift, and go to state 104
	OP01_PRINT	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 99

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	LoopLabel	go to state 120
	VariableModification	go to state 121
	HashDereference	go to state 117
	Statement	go to state 98
	Expression	go to state 97
	ArrayReference	go to state 118
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 110
	SubExpression	go to state 81
	OPTIONAL-35	go to state 111
	Operator	go to state 106
	ArrayDereference	go to state 109
	PAREN-34	go to state 78
	Conditional	go to state 92
	OperatorVoid	go to state 90
	HashReference	go to state 91
	VariableDeclaration	go to state 89
	Operation	go to state 364

State 350:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 146)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-37 . OPTIONAL-39	(Rule 151)

	'else'	shift, and go to state 367
	'elsif'	shift, and go to state 369

	$end	reduce using rule 150 (OPTIONAL-39)
	'%{'	reduce using rule 150 (OPTIONAL-39)
	'@{'	reduce using rule 150 (OPTIONAL-39)
	'for'	reduce using rule 150 (OPTIONAL-39)
	'foreach'	reduce using rule 150 (OPTIONAL-39)
	'if'	reduce using rule 150 (OPTIONAL-39)
	'my'	reduce using rule 150 (OPTIONAL-39)
	'undef'	reduce using rule 150 (OPTIONAL-39)
	'while'	reduce using rule 150 (OPTIONAL-39)
	'}'	reduce using rule 150 (OPTIONAL-39)
	LBRACE	reduce using rule 150 (OPTIONAL-39)
	LBRACKET	reduce using rule 150 (OPTIONAL-39)
	LITERAL_NUMBER	reduce using rule 150 (OPTIONAL-39)
	LITERAL_STRING	reduce using rule 150 (OPTIONAL-39)
	LPAREN	reduce using rule 150 (OPTIONAL-39)
	OP01_CLOSE	reduce using rule 150 (OPTIONAL-39)
	OP01_NAMED	reduce using rule 150 (OPTIONAL-39)
	OP01_NAMED_VOID	reduce using rule 150 (OPTIONAL-39)
	OP01_NAMED_VOID_SCOLON	reduce using rule 150 (OPTIONAL-39)
	OP01_OPEN	reduce using rule 150 (OPTIONAL-39)
	OP01_PRINT	reduce using rule 150 (OPTIONAL-39)
	OP03_MATH_INC_DEC	reduce using rule 150 (OPTIONAL-39)
	OP05_LOGICAL_NEG	reduce using rule 150 (OPTIONAL-39)
	OP05_MATH_NEG_LPAREN	reduce using rule 150 (OPTIONAL-39)
	OP10_NAMED_UNARY	reduce using rule 150 (OPTIONAL-39)
	OP19_LOOP_CONTROL	reduce using rule 150 (OPTIONAL-39)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 150 (OPTIONAL-39)
	OP22_LOGICAL_NEG	reduce using rule 150 (OPTIONAL-39)
	VARIABLE_SYMBOL	reduce using rule 150 (OPTIONAL-39)
	WORD	reduce using rule 150 (OPTIONAL-39)
	WORD_SCOPED	reduce using rule 150 (OPTIONAL-39)
	WORD_UPPERCASE	reduce using rule 150 (OPTIONAL-39)

	OPTIONAL-39	go to state 368
	PAREN-38	go to state 366
	PAREN-36	go to state 370

State 351:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 203)

	$default	reduce using rule 203 (TypeInner)

State 352:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 371

State 353:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 157)

	$default	reduce using rule 157 (LoopWhile)

State 354:

	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100
	Variable	go to state 158
	SubExpression	go to state 372
	Expression	go to state 155
	ArrayDereference	go to state 109
	ArrayReference	go to state 118
	HashDereference	go to state 117
	Operator	go to state 106

State 355:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 156)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'my'	shift, and go to state 167
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP01_QW	shift, and go to state 165
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Literal	go to state 100
	WordScoped	go to state 102
	HashReference	go to state 91
	TypeInner	go to state 163
	ListElements	go to state 373
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	ListElement	go to state 164
	Expression	go to state 155
	Operator	go to state 106
	HashDereference	go to state 117
	SubExpression	go to state 161
	Variable	go to state 158

State 356:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 80)

	$default	reduce using rule 80 (Operator)

State 357:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 168)

	$default	reduce using rule 168 (VariableDeclaration)

State 358:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 374

State 359:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	TYPE_INTEGER	shift, and go to state 52
	WORD	shift, and go to state 50

	Type	go to state 375

State 360:

	STAR-25 -> STAR-25 . PAREN-24	(Rule 61)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 . '}' ';'	(Rule 63)

	'}'	shift, and go to state 377
	OP21_LIST_COMMA	shift, and go to state 376

	PAREN-24	go to state 378

State 361:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 64)

	$default	reduce using rule 64 (Properties)

State 362:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 189)

	'my'	shift, and go to state 167

	TypeInner	go to state 379

State 363:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	'= sub {'	shift, and go to state 380

State 364:

	PLUS-40 -> PLUS-40 Operation .	(Rule 158)

	$default	reduce using rule 158 (PLUS-40)

State 365:

	CodeBlock -> LBRACE PLUS-40 '}' .	(Rule 160)

	$default	reduce using rule 160 (CodeBlock)

State 366:

	OPTIONAL-39 -> PAREN-38 .	(Rule 149)

	$default	reduce using rule 149 (OPTIONAL-39)

State 367:

	PAREN-38 -> 'else' . CodeBlock	(Rule 148)

	LBRACE	shift, and go to state 321

	CodeBlock	go to state 381

State 368:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-37 OPTIONAL-39 .	(Rule 151)

	$default	reduce using rule 151 (Conditional)

State 369:

	PAREN-36 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 145)

	LPAREN	shift, and go to state 382

State 370:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 146)

	$default	reduce using rule 146 (STAR-37)

State 371:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 81)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashReference	go to state 91
	Literal	go to state 100
	WordScoped	go to state 102
	SubExpression	go to state 383
	Variable	go to state 158
	HashDereference	go to state 117
	Operator	go to state 106
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155

State 372:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 384
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 373:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 156)

	')'	shift, and go to state 385

State 374:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 375:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 386

State 376:

	PAREN-24 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 60)

	'%{'	shift, and go to state 112
	WORD	shift, and go to state 345

	HashDereference	go to state 344
	HashEntryTyped	go to state 387

State 377:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' . ';'	(Rule 63)

	';'	shift, and go to state 388

State 378:

	STAR-25 -> STAR-25 PAREN-24 .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 379:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 189)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Variable	go to state 158
	SubExpression	go to state 389
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Operator	go to state 106
	HashDereference	go to state 117
	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100

State 380:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	LPAREN_MY	shift, and go to state 392

	'%{'	reduce using rule 66 (OPTIONAL-26)
	'@{'	reduce using rule 66 (OPTIONAL-26)
	'for'	reduce using rule 66 (OPTIONAL-26)
	'foreach'	reduce using rule 66 (OPTIONAL-26)
	'if'	reduce using rule 66 (OPTIONAL-26)
	'my'	reduce using rule 66 (OPTIONAL-26)
	'undef'	reduce using rule 66 (OPTIONAL-26)
	'while'	reduce using rule 66 (OPTIONAL-26)
	LBRACE	reduce using rule 66 (OPTIONAL-26)
	LBRACKET	reduce using rule 66 (OPTIONAL-26)
	LITERAL_NUMBER	reduce using rule 66 (OPTIONAL-26)
	LITERAL_STRING	reduce using rule 66 (OPTIONAL-26)
	LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP01_CLOSE	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP01_OPEN	reduce using rule 66 (OPTIONAL-26)
	OP01_PRINT	reduce using rule 66 (OPTIONAL-26)
	OP03_MATH_INC_DEC	reduce using rule 66 (OPTIONAL-26)
	OP05_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	OP05_MATH_NEG_LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP10_NAMED_UNARY	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP22_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	VARIABLE_SYMBOL	reduce using rule 66 (OPTIONAL-26)
	WORD	reduce using rule 66 (OPTIONAL-26)
	WORD_SCOPED	reduce using rule 66 (OPTIONAL-26)
	WORD_UPPERCASE	reduce using rule 66 (OPTIONAL-26)

	OPTIONAL-26	go to state 390
	MethodArguments	go to state 391

State 381:

	PAREN-38 -> 'else' CodeBlock .	(Rule 148)

	$default	reduce using rule 148 (PAREN-38)

State 382:

	PAREN-36 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 145)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	HashDereference	go to state 117
	Operator	go to state 106
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Expression	go to state 155
	SubExpression	go to state 393
	Variable	go to state 158
	Literal	go to state 100
	WordScoped	go to state 102
	HashReference	go to state 91

State 383:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 81)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138

	')'	reduce using rule 81 (Operator)
	';'	reduce using rule 81 (Operator)
	']'	reduce using rule 81 (Operator)
	'}'	reduce using rule 81 (Operator)
	OP21_LIST_COMMA	reduce using rule 81 (Operator)
	OP23_LOGICAL_AND	reduce using rule 81 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 81 (Operator)

State 384:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)
	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 104
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 154

	Variable	go to state 158
	SubExpression	go to state 394
	Expression	go to state 155
	ArrayReference	go to state 118
	ArrayDereference	go to state 109
	Operator	go to state 106
	HashDereference	go to state 117
	HashReference	go to state 91
	WordScoped	go to state 102
	Literal	go to state 100

State 385:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 156)

	LBRACE	shift, and go to state 321

	CodeBlock	go to state 395

State 386:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 387:

	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 60)

	$default	reduce using rule 60 (PAREN-24)

State 388:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';' .	(Rule 63)

	$default	reduce using rule 63 (Properties)

State 389:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 189)

	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	'}'	reduce using rule 189 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 189 (HashEntryTyped)

State 390:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 . PLUS-27 '}' ';'	(Rule 69)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'if'	shift, and go to state 86
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 80
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 93
	OP01_NAMED_VOID_SCOLON	shift, and go to state 115
	OP01_OPEN	shift, and go to state 104
	OP01_PRINT	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 99

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	Operation	go to state 396
	Conditional	go to state 92
	OperatorVoid	go to state 90
	HashReference	go to state 91
	VariableDeclaration	go to state 89
	ArrayDereference	go to state 109
	PAREN-34	go to state 78
	Operator	go to state 106
	OPTIONAL-35	go to state 111
	Variable	go to state 110
	PLUS-27	go to state 397
	SubExpression	go to state 81
	WordScoped	go to state 102
	Literal	go to state 100
	Statement	go to state 98
	Expression	go to state 97
	ArrayReference	go to state 118
	HashDereference	go to state 117
	VariableModification	go to state 121
	LoopLabel	go to state 120

State 391:

	OPTIONAL-26 -> MethodArguments .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-26)

State 392:

	MethodArguments -> LPAREN_MY . TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	TYPE_SELF	shift, and go to state 398

State 393:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	PAREN-36 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 145)

	')'	shift, and go to state 399
	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 138
	OP23_LOGICAL_AND	shift, and go to state 133
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 394:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 155)

	')'	shift, and go to state 400
	OP04_MATH_POW	shift, and go to state 136
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 146
	OP07_STRING_REPEAT	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 139
	OP08_STRING_CAT	shift, and go to state 143
	OP09_BITWISE_SHIFT	shift, and go to state 142
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 137
	OP13_BITWISE_AND	shift, and go to state 141
	OP14_BITWISE_OR_XOR	shift, and go to state 148
	OP15_LOGICAL_AND	shift, and go to state 135
	OP16_LOGICAL_OR	shift, and go to state 145

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 395:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (LoopForEach)

State 396:

	PLUS-27 -> Operation .	(Rule 68)

	$default	reduce using rule 68 (PLUS-27)

State 397:

	PLUS-27 -> PLUS-27 . Operation	(Rule 67)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 . '}' ';'	(Rule 69)

	'%{'	shift, and go to state 112
	'@{'	shift, and go to state 103
	'if'	shift, and go to state 86
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 80
	'}'	shift, and go to state 402
	LBRACE	shift, and go to state 122
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 108
	LITERAL_STRING	shift, and go to state 85
	LPAREN	shift, and go to state 116
	OP01_CLOSE	shift, and go to state 84
	OP01_NAMED	shift, and go to state 119
	OP01_NAMED_VOID	shift, and go to state 93
	OP01_NAMED_VOID_SCOLON	shift, and go to state 115
	OP01_OPEN	shift, and go to state 104
	OP01_PRINT	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 96
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 94
	OP19_LOOP_CONTROL	shift, and go to state 113
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 95
	OP22_LOGICAL_NEG	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 107
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 26
	WORD_UPPERCASE	shift, and go to state 99

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	OPTIONAL-35	go to state 111
	Variable	go to state 110
	SubExpression	go to state 81
	ArrayDereference	go to state 109
	PAREN-34	go to state 78
	Operator	go to state 106
	OperatorVoid	go to state 90
	Conditional	go to state 92
	HashReference	go to state 91
	VariableDeclaration	go to state 89
	Operation	go to state 401
	VariableModification	go to state 121
	LoopLabel	go to state 120
	Expression	go to state 97
	Statement	go to state 98
	ArrayReference	go to state 118
	HashDereference	go to state 117
	WordScoped	go to state 102
	Literal	go to state 100

State 398:

	MethodArguments -> LPAREN_MY TYPE_SELF . STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 403

State 399:

	PAREN-36 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 145)

	LBRACE	shift, and go to state 321

	CodeBlock	go to state 404

State 400:

	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 155)

	LBRACE	shift, and go to state 321

	CodeBlock	go to state 405

State 401:

	PLUS-27 -> PLUS-27 Operation .	(Rule 67)

	$default	reduce using rule 67 (PLUS-27)

State 402:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' . ';'	(Rule 69)

	';'	shift, and go to state 406

State 403:

	STAR-29 -> STAR-29 . PAREN-28	(Rule 71)
	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	')'	shift, and go to state 408
	OP21_LIST_COMMA	shift, and go to state 407

	PAREN-28	go to state 409

State 404:

	PAREN-36 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 145)

	$default	reduce using rule 145 (PAREN-36)

State 405:

	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 155)

	$default	reduce using rule 155 (LoopFor)

State 406:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';' .	(Rule 69)

	$default	reduce using rule 69 (Method)

State 407:

	PAREN-28 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 70)

	'my'	shift, and go to state 410

State 408:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	OP19_VARIABLE_ASSIGN	shift, and go to state 411

State 409:

	STAR-29 -> STAR-29 PAREN-28 .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 410:

	PAREN-28 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 70)

	TYPE_INTEGER	shift, and go to state 52
	WORD	shift, and go to state 50

	Type	go to state 412

State 411:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 73)

	'@_;'	shift, and go to state 413

State 412:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 70)

	VARIABLE_SYMBOL	shift, and go to state 414

State 413:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 73)

	$default	reduce using rule 73 (MethodArguments)

State 414:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 70)

	$default	reduce using rule 70 (PAREN-28)


Summary:
--------
Number of rules         : 209
Number of terminals     : 89
Number of non-terminals : 97
Number of states        : 415
