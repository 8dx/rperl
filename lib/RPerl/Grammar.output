Conflicts:
----------
Conflict in state 147 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 147 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 147 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 147 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 147 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 147 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 147 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 147 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 147 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 147 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 147 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 147 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 147 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 147 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 147 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 147 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 147 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 173 between rule 92 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 173 between rule 92 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 173 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 173 between rule 92 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 173 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 173 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 173 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 173 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 173 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 173 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 173 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 173 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 173 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 173 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 173 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 173 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 173 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 203 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 203 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 203 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 203 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 203 between rule 100 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 203 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 203 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 203 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 203 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 203 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 203 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 203 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 203 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 203 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 203 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 205 between rule 111 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 205 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 205 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 205 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 205 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 205 between rule 111 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 205 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 205 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 205 between rule 111 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 205 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 205 between rule 111 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 205 between rule 111 and token OP18_TERNARY resolved as shift.
Conflict in state 205 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 205 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 205 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 205 between rule 111 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 205 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 218 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 218 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 218 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 218 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 218 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 218 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 218 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 218 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 218 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 218 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 218 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 218 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 218 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 218 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 218 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 231 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 231 between rule 97 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 231 between rule 97 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 231 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 231 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 231 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 231 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 231 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 231 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 231 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 231 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 231 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 231 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 231 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 231 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 232 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 232 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 232 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 232 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 232 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 232 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 232 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 232 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 232 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 232 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 232 between rule 99 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 232 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 232 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 232 between rule 99 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 232 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 233 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 233 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 233 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 233 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 233 between rule 109 and token OP17_LIST_RANGE resolved as error.
Conflict in state 233 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 233 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 233 between rule 109 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 233 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 233 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 233 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 233 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 233 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 233 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 233 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 233 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 233 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 234 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 234 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 234 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 234 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 234 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 234 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 234 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 234 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 234 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 234 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 234 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 234 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 234 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 234 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 234 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 235 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 235 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 235 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 235 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 235 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 235 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 235 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 235 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 235 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 235 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 235 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 235 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 235 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 236 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 236 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 236 between rule 103 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 236 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 236 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 236 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 236 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 236 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 236 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 236 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 236 between rule 103 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 236 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 236 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 236 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 236 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 237 between rule 113 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 237 between rule 113 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 237 between rule 113 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 237 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 237 between rule 113 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 237 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 237 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 237 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 237 between rule 113 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 237 between rule 113 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 237 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 237 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 237 between rule 113 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 237 between rule 113 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 237 between rule 113 and token OP18_TERNARY resolved as shift.
Conflict in state 237 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 238 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 238 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 238 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 238 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 238 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 238 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 238 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 238 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 238 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 238 between rule 107 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 238 between rule 107 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 238 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 238 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 238 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 238 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 239 between rule 95 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 239 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 239 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 239 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 239 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 239 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 239 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 239 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 239 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 239 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 239 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 239 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 239 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 239 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 239 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 239 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 239 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 240 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 240 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 240 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 240 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 240 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 240 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 240 between rule 98 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 240 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 240 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 240 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 240 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 240 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 240 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 240 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 242 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 242 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 242 between rule 104 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 242 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 242 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 242 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 242 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 242 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 242 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 242 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 242 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 242 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 242 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 242 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 242 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 243 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 243 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 243 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 243 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 243 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 243 between rule 108 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 243 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 243 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 243 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 243 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 243 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 243 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 243 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 243 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 243 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 243 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 243 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 247 between rule 112 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 247 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 247 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 112 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 247 between rule 112 and token OP18_TERNARY resolved as shift.
Conflict in state 247 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 247 between rule 112 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 247 between rule 112 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 247 between rule 112 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 247 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 247 between rule 112 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 247 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 247 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 247 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 247 between rule 112 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 248 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 248 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 248 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 248 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 248 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 248 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 248 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 248 between rule 96 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 248 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 248 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 248 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 248 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 248 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 248 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 248 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 249 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 249 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 249 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 249 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 249 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 249 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 249 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 249 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 249 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 249 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 249 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 249 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 249 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 249 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 249 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 249 between rule 91 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 249 between rule 91 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 374 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 374 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 374 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 374 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 374 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 374 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 374 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 374 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 374 between rule 109 and token OP17_LIST_RANGE resolved as error.
Conflict in state 374 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 374 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 374 between rule 109 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 374 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 374 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 374 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 374 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 374 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 390 between rule 87 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 390 between rule 87 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 390 between rule 87 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 390 between rule 87 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 390 between rule 87 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 390 between rule 87 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 390 between rule 87 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 390 between rule 87 and token OP08_STRING_CAT resolved as shift.
Conflict in state 390 between rule 87 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 390 between rule 87 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 390 between rule 87 and token OP04_MATH_POW resolved as shift.
Conflict in state 390 between rule 87 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 390 between rule 87 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 390 between rule 87 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 390 between rule 87 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 390 between rule 87 and token OP18_TERNARY resolved as shift.
Conflict in state 390 between rule 87 and token OP16_LOGICAL_OR resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	OPTIONAL-23 -> PropertiesClass
58:	OPTIONAL-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-26 '}' ';'
66:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
67:	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped
68:	STAR-28 -> STAR-28 PAREN-27
69:	STAR-28 -> /* empty */
70:	PropertiesClass -> 'our hash_ref $class_properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-28 '}' ';'
71:	OPTIONAL-29 -> MethodArguments
72:	OPTIONAL-29 -> /* empty */
73:	PLUS-30 -> PLUS-30 Operation
74:	PLUS-30 -> Operation
75:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'
76:	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
77:	STAR-32 -> STAR-32 PAREN-31
78:	STAR-32 -> /* empty */
79:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'
80:	MethodOrSubroutine -> Method
81:	MethodOrSubroutine -> Subroutine
82:	Operation -> Expression ';'
83:	Operation -> Statement
84:	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
85:	Operator -> OP01_NAMED SubExpression
86:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
87:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
88:	Operator -> OP01_CLOSE FH_REF_SYMBOL
89:	Operator -> OP03_MATH_INC_DEC Variable
90:	Operator -> Variable OP03_MATH_INC_DEC
91:	Operator -> SubExpression OP04_MATH_POW SubExpression
92:	Operator -> OP05_LOGICAL_NEG SubExpression
93:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
94:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
95:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
96:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
97:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
98:	Operator -> SubExpression OP08_STRING_CAT SubExpression
99:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
100:	Operator -> OP10_NAMED_UNARY SubExpression
101:	Operator -> OP10_NAMED_UNARY
102:	Operator -> OP10_STRINGIFY_UNARY SubExpression ')'
103:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
104:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
105:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
106:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
107:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
108:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
109:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
110:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
111:	Operator -> OP22_LOGICAL_NEG SubExpression
112:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
113:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
114:	PAREN-33 -> STDOUT_STDERR
115:	OPTIONAL-34 -> PAREN-33
116:	OPTIONAL-34 -> /* empty */
117:	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';'
118:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
119:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
120:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
121:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
122:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
123:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
124:	OPTIONAL-35 -> ListElements
125:	OPTIONAL-35 -> /* empty */
126:	OPTIONAL-36 -> ListElements
127:	OPTIONAL-36 -> /* empty */
128:	OPTIONAL-37 -> ListElements
129:	OPTIONAL-37 -> /* empty */
130:	Expression -> Operator
131:	Expression -> WordScoped LPAREN OPTIONAL-35 ')'
132:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'
133:	Expression -> WordScoped OP02_METHOD_THINARROW LPAREN OPTIONAL-37 ')'
134:	SubExpression -> Expression
135:	SubExpression -> 'undef'
136:	SubExpression -> Literal
137:	SubExpression -> Variable
138:	SubExpression -> ArrayReference
139:	SubExpression -> ArrayDereferenced
140:	SubExpression -> HashReference
141:	SubExpression -> HashDereferenced
142:	SubExpression -> LBRACE '}'
143:	SubExpression -> LPAREN SubExpression ')'
144:	SubExpressionOrStdin -> SubExpression
145:	SubExpressionOrStdin -> STDIN
146:	PAREN-38 -> LoopLabel COLON
147:	OPTIONAL-39 -> PAREN-38
148:	OPTIONAL-39 -> /* empty */
149:	Statement -> Conditional
150:	Statement -> OPTIONAL-39 Loop
151:	Statement -> OperatorVoid
152:	Statement -> VariableDeclaration
153:	Statement -> VariableModification
154:	PAREN-40 -> 'elsif (' SubExpression ')' CodeBlock
155:	STAR-41 -> STAR-41 PAREN-40
156:	STAR-41 -> /* empty */
157:	PAREN-42 -> 'else' CodeBlock
158:	OPTIONAL-43 -> PAREN-42
159:	OPTIONAL-43 -> /* empty */
160:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 OPTIONAL-43
161:	Loop -> LoopFor
162:	Loop -> LoopForEach
163:	Loop -> LoopWhile
164:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
165:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
166:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
167:	PLUS-44 -> PLUS-44 Operation
168:	PLUS-44 -> Operation
169:	CodeBlock -> LBRACE PLUS-44 '}'
170:	STAR-45 -> STAR-45 VariableRetrieval
171:	STAR-45 -> /* empty */
172:	Variable -> VARIABLE_SYMBOL STAR-45
173:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
174:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
175:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
176:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
177:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
178:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
179:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
180:	PAREN-46 -> OP21_LIST_COMMA ListElement
181:	STAR-47 -> STAR-47 PAREN-46
182:	STAR-47 -> /* empty */
183:	PLUS-48 -> PLUS-48 WORD
184:	PLUS-48 -> WORD
185:	ListElements -> ListElement STAR-47
186:	ListElements -> OP01_QW PLUS-48 ')'
187:	ListElement -> SubExpression
188:	ListElement -> TypeInner SubExpression
189:	ListElement -> KEYS_OR_VALUES HashDereferenced
190:	OPTIONAL-49 -> ListElements
191:	OPTIONAL-49 -> /* empty */
192:	ArrayReference -> LBRACKET OPTIONAL-49 ']'
193:	ArrayDereferenced -> '@{' Variable '}'
194:	ArrayDereferenced -> '@{' ArrayReference '}'
195:	OPTIONAL-50 -> TypeInner
196:	OPTIONAL-50 -> /* empty */
197:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 SubExpression
198:	HashEntry -> HashDereferenced
199:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
200:	HashEntryTyped -> HashDereferenced
201:	PAREN-51 -> OP21_LIST_COMMA HashEntry
202:	STAR-52 -> STAR-52 PAREN-51
203:	STAR-52 -> /* empty */
204:	HashReference -> LBRACE HashEntry STAR-52 '}'
205:	HashDereferenced -> '%{' Variable '}'
206:	HashDereferenced -> '%{' HashReference '}'
207:	WordScoped -> WORD
208:	WordScoped -> WORD_SCOPED
209:	LoopLabel -> WORD
210:	Type -> WORD
211:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
212:	VariableOrLiteral -> Variable
213:	VariableOrLiteral -> Literal
214:	Literal -> LITERAL_STRING
215:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 7
	SHEBANG	shift, and go to state 5

	'package'	reduce using rule 20 (OPTIONAL-9)

	ModuleHeader	go to state 2
	Program	go to state 6
	Critic	go to state 1
	PAREN-1	go to state 3
	CompileUnit	go to state 4
	PLUS-2	go to state 9
	OPTIONAL-9	go to state 8

State 1:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 2:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 12

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Package	go to state 13
	STAR-10	go to state 14
	Module	go to state 10
	Class	go to state 11

State 3:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 4:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 15

State 5:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 7

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 17
	OPTIONAL-3	go to state 16

State 6:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 7:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 18

	PLUS-14	go to state 19

State 8:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 20

State 9:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 7

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	ModuleHeader	go to state 2
	Critic	go to state 1
	PAREN-1	go to state 21
	OPTIONAL-9	go to state 8

State 10:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 11:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 12:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 22

State 13:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 14:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 7

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 26
	STAR-11	go to state 25

State 15:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 16:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 28

	Header	go to state 27

State 17:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 18:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 19:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 29
	WORD	shift, and go to state 30

State 20:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 31

State 21:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 22:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 32

State 23:

	WordScoped -> WORD .	(Rule 207)

	$default	reduce using rule 207 (WordScoped)

State 24:

	WordScoped -> WORD_SCOPED .	(Rule 208)

	$default	reduce using rule 208 (WordScoped)

State 25:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 33

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 34
	STAR-12	go to state 35

State 26:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 27:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 36

State 28:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 37

State 29:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 30:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 31:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 38

State 32:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 39

State 33:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 40

State 34:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 35:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 43
	'use constant'	shift, and go to state 42

	Subroutine	go to state 41
	PLUS-13	go to state 44
	Constant	go to state 45

State 36:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 7

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_STRINGIFY_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 46
	STAR-5	go to state 47

State 37:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 48

State 38:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 28

	Header	go to state 49

State 39:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 33

	Include	go to state 50

State 40:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 52
	'qw('	shift, and go to state 51

State 41:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 42:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 53

State 43:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 55

	Type	go to state 54

State 44:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 43
	LITERAL_NUMBER	shift, and go to state 57

	Subroutine	go to state 56

State 45:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 46:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 47:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 33

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_STRINGIFY_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	Include	go to state 58
	STAR-6	go to state 59

State 48:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 60

State 49:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 50:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 61

State 51:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 63

	PLUS-15	go to state 62

State 52:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 53:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 64

State 54:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 65

State 55:

	Type -> WORD .	(Rule 210)

	$default	reduce using rule 210 (Type)

State 56:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 57:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 66

State 58:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 59:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 42

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_STRINGIFY_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	STAR-7	go to state 68
	Constant	go to state 67

State 60:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 69

State 61:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 7

	'our hash_ref $properties'	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 70
	STAR-21	go to state 71

State 62:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 72
	WORD	shift, and go to state 73

State 63:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 64:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 75

	TypeInner	go to state 74

State 65:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 76

State 66:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 67:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'if ('	shift, and go to state 101
	'my'	shift, and go to state 81
	'our'	shift, and go to state 43
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 87
	OP01_NAMED_VOID	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 112
	OP01_OPEN	shift, and go to state 105
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-39)
	'foreach my'	reduce using rule 148 (OPTIONAL-39)
	'while ('	reduce using rule 148 (OPTIONAL-39)

	Operation	go to state 114
	ArrayReference	go to state 113
	SubExpression	go to state 89
	PLUS-8	go to state 110
	Conditional	go to state 79
	OPTIONAL-39	go to state 77
	VariableDeclaration	go to state 82
	VariableModification	go to state 111
	Subroutine	go to state 99
	HashDereferenced	go to state 98
	Statement	go to state 120
	HashReference	go to state 108
	LoopLabel	go to state 123
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	Variable	go to state 95
	Operator	go to state 91
	Expression	go to state 93
	OperatorVoid	go to state 117
	PAREN-38	go to state 97
	Literal	go to state 119

State 69:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 70:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 71:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 33

	'our hash_ref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 125
	STAR-22	go to state 124

State 72:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 126

State 73:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 74:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121

	Literal	go to state 127

State 75:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	WORD	shift, and go to state 55

	Type	go to state 128

State 76:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 130

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_STRINGIFY_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 131
	OPTIONAL-16	go to state 129

State 77:

	Statement -> OPTIONAL-39 . Loop	(Rule 150)

	'for my integer'	shift, and go to state 133
	'foreach my'	shift, and go to state 134
	'while ('	shift, and go to state 138

	LoopWhile	go to state 136
	LoopFor	go to state 135
	LoopForEach	go to state 137
	Loop	go to state 132

State 78:

	WordScoped -> WORD .	(Rule 207)
	LoopLabel -> WORD .	(Rule 209)

	COLON	reduce using rule 209 (LoopLabel)
	LPAREN	reduce using rule 207 (WordScoped)
	OP02_METHOD_THINARROW	reduce using rule 207 (WordScoped)

State 79:

	Statement -> Conditional .	(Rule 149)

	$default	reduce using rule 149 (Statement)

State 80:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 93)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	SubExpression	go to state 140
	HashReference	go to state 108
	HashDereferenced	go to state 98
	ArrayReference	go to state 113

State 81:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 176)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 177)

	WORD	shift, and go to state 55

	Type	go to state 143

State 82:

	Statement -> VariableDeclaration .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 83:

	SubExpression -> 'undef' .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 84:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 193)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 194)

	LBRACKET	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 85

	ArrayReference	go to state 145
	Variable	go to state 144

State 85:

	Variable -> VARIABLE_SYMBOL . STAR-45	(Rule 172)

	$default	reduce using rule 171 (STAR-45)

	STAR-45	go to state 146

State 86:

	Literal -> LITERAL_NUMBER .	(Rule 215)

	$default	reduce using rule 215 (Literal)

State 87:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	ListElement	go to state 148
	Literal	go to state 119
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	TypeInner	go to state 150
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	HashReference	go to state 108
	SubExpression	go to state 147

State 88:

	SubExpression -> LBRACE . '}'	(Rule 142)
	HashReference -> LBRACE . HashEntry STAR-52 '}'	(Rule 204)

	'%{'	shift, and go to state 94
	'}'	shift, and go to state 154
	WORD	shift, and go to state 153

	HashEntry	go to state 151
	HashDereferenced	go to state 152

State 89:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 90:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 89)

	VARIABLE_SYMBOL	shift, and go to state 85

	Variable	go to state 172

State 91:

	Expression -> Operator .	(Rule 130)

	$default	reduce using rule 130 (Expression)

State 92:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 92)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	SubExpression	go to state 173
	HashReference	go to state 108
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	Literal	go to state 119
	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141

State 93:

	Operation -> Expression . ';'	(Rule 82)
	SubExpression -> Expression .	(Rule 134)

	';'	shift, and go to state 174

	OP04_MATH_POW	reduce using rule 134 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 134 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 134 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 134 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 134 (SubExpression)
	OP08_STRING_CAT	reduce using rule 134 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 134 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 134 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 134 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 134 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 134 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 134 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 134 (SubExpression)
	OP18_TERNARY	reduce using rule 134 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 134 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 134 (SubExpression)

State 94:

	HashDereferenced -> '%{' . Variable '}'	(Rule 205)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 206)

	LBRACE	shift, and go to state 177
	VARIABLE_SYMBOL	shift, and go to state 85

	Variable	go to state 176
	HashReference	go to state 175

State 95:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 178)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 179)

	OP02_METHOD_THINARROW	shift, and go to state 179
	OP03_MATH_INC_DEC	shift, and go to state 178
	OP19_VARIABLE_ASSIGN	shift, and go to state 180
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 181

	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 96:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 120)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	ListElement	go to state 184
	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashReference	go to state 108
	SubExpression	go to state 183
	ArrayReference	go to state 113
	TypeInner	go to state 150
	ListElements	go to state 182
	HashDereferenced	go to state 98

State 97:

	OPTIONAL-39 -> PAREN-38 .	(Rule 147)

	$default	reduce using rule 147 (OPTIONAL-39)

State 98:

	SubExpression -> HashDereferenced .	(Rule 141)

	$default	reduce using rule 141 (SubExpression)

State 99:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 100:

	Operator -> LPAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 143)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 187
	OP01_OPEN	shift, and go to state 105
	OP01_PRINT	shift, and go to state 188
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	HashReference	go to state 108
	SubExpression	go to state 186
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	Literal	go to state 119
	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91

State 101:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-41 OPTIONAL-43	(Rule 160)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	HashReference	go to state 108
	SubExpression	go to state 189
	HashDereferenced	go to state 98
	ArrayReference	go to state 113

State 102:

	SubExpression -> ArrayDereferenced .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 103:

	Expression -> WordScoped . LPAREN OPTIONAL-35 ')'	(Rule 131)
	Expression -> WordScoped . OP02_METHOD_THINARROW LPAREN OPTIONAL-37 ')'	(Rule 133)

	LPAREN	shift, and go to state 191
	OP02_METHOD_THINARROW	shift, and go to state 190

State 104:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 122)

	$default	reduce using rule 122 (OperatorVoid)

State 105:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'my'	shift, and go to state 192

State 106:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 123)

	WORD	shift, and go to state 193

	LoopLabel	go to state 194

State 107:

	OperatorVoid -> OP01_PRINT . OPTIONAL-34 ListElements ';'	(Rule 117)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 118)

	FH_REF_SYMBOL_BRACES	shift, and go to state 196
	STDOUT_STDERR	shift, and go to state 198

	'%{'	reduce using rule 116 (OPTIONAL-34)
	'@{'	reduce using rule 116 (OPTIONAL-34)
	'my'	reduce using rule 116 (OPTIONAL-34)
	'undef'	reduce using rule 116 (OPTIONAL-34)
	KEYS_OR_VALUES	reduce using rule 116 (OPTIONAL-34)
	LBRACE	reduce using rule 116 (OPTIONAL-34)
	LBRACKET	reduce using rule 116 (OPTIONAL-34)
	LITERAL_NUMBER	reduce using rule 116 (OPTIONAL-34)
	LITERAL_STRING	reduce using rule 116 (OPTIONAL-34)
	LPAREN	reduce using rule 116 (OPTIONAL-34)
	OP01_CLOSE	reduce using rule 116 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 116 (OPTIONAL-34)
	OP01_OPEN	reduce using rule 116 (OPTIONAL-34)
	OP01_QW	reduce using rule 116 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 116 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 116 (OPTIONAL-34)
	OP05_MATH_NEG_LPAREN	reduce using rule 116 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 116 (OPTIONAL-34)
	OP10_STRINGIFY_UNARY	reduce using rule 116 (OPTIONAL-34)
	OP22_LOGICAL_NEG	reduce using rule 116 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 116 (OPTIONAL-34)
	WORD	reduce using rule 116 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 116 (OPTIONAL-34)

	PAREN-33	go to state 195
	OPTIONAL-34	go to state 197

State 108:

	SubExpression -> HashReference .	(Rule 140)

	$default	reduce using rule 140 (SubExpression)

State 109:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 88)

	FH_REF_SYMBOL	shift, and go to state 199

State 110:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'if ('	shift, and go to state 101
	'my'	shift, and go to state 81
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 87
	OP01_NAMED_VOID	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 112
	OP01_OPEN	shift, and go to state 105
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 24

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 148 (OPTIONAL-39)
	'foreach my'	reduce using rule 148 (OPTIONAL-39)
	'while ('	reduce using rule 148 (OPTIONAL-39)

	OperatorVoid	go to state 117
	Operator	go to state 91
	Expression	go to state 93
	Variable	go to state 95
	PAREN-38	go to state 97
	Literal	go to state 119
	Statement	go to state 120
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	LoopLabel	go to state 123
	HashReference	go to state 108
	Conditional	go to state 79
	OPTIONAL-39	go to state 77
	VariableModification	go to state 111
	VariableDeclaration	go to state 82
	ArrayReference	go to state 113
	Operation	go to state 200
	SubExpression	go to state 89

State 111:

	Statement -> VariableModification .	(Rule 153)

	$default	reduce using rule 153 (Statement)

State 112:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 113:

	SubExpression -> ArrayReference .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 114:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 115:

	ArrayReference -> LBRACKET . OPTIONAL-49 ']'	(Rule 192)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	']'	reduce using rule 191 (OPTIONAL-49)

	Literal	go to state 119
	ListElement	go to state 184
	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	SubExpression	go to state 183
	HashReference	go to state 108
	HashDereferenced	go to state 98
	ListElements	go to state 202
	ArrayReference	go to state 113
	TypeInner	go to state 150
	OPTIONAL-49	go to state 201

State 116:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 100)
	Operator -> OP10_NAMED_UNARY .	(Rule 101)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP04_MATH_POW	reduce using rule 101 (Operator)
	OP06_REGEX_MATCH	reduce using rule 101 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 101 (Operator)
	OP07_STRING_REPEAT	reduce using rule 101 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 101 (Operator)
	OP08_STRING_CAT	reduce using rule 101 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 101 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

	Literal	go to state 119
	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	HashReference	go to state 108
	SubExpression	go to state 203
	HashDereferenced	go to state 98
	ArrayReference	go to state 113

State 117:

	Statement -> OperatorVoid .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 118:

	Operator -> OP10_STRINGIFY_UNARY . SubExpression ')'	(Rule 102)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	HashReference	go to state 108
	SubExpression	go to state 204
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	Literal	go to state 119
	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141

State 119:

	SubExpression -> Literal .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 120:

	Operation -> Statement .	(Rule 83)

	$default	reduce using rule 83 (Operation)

State 121:

	Literal -> LITERAL_STRING .	(Rule 214)

	$default	reduce using rule 214 (Literal)

State 122:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 111)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	Literal	go to state 119
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	HashReference	go to state 108
	SubExpression	go to state 205
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103

State 123:

	PAREN-38 -> LoopLabel . COLON	(Rule 146)

	COLON	shift, and go to state 206

State 124:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our hash_ref $properties'	shift, and go to state 208
	'use constant'	shift, and go to state 42

	Properties	go to state 207
	Constant	go to state 209

State 125:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 126:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 127:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 210

State 128:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	'$TYPED_'	shift, and go to state 211

State 129:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'if ('	shift, and go to state 101
	'my'	shift, and go to state 81
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 87
	OP01_NAMED_VOID	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 112
	OP01_OPEN	shift, and go to state 105
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-39)
	'foreach my'	reduce using rule 148 (OPTIONAL-39)
	'while ('	reduce using rule 148 (OPTIONAL-39)

	Statement	go to state 120
	HashDereferenced	go to state 98
	HashReference	go to state 108
	ArrayDereferenced	go to state 102
	LoopLabel	go to state 123
	WordScoped	go to state 103
	PLUS-17	go to state 212
	Expression	go to state 93
	Operator	go to state 91
	Variable	go to state 95
	OperatorVoid	go to state 117
	Literal	go to state 119
	PAREN-38	go to state 97
	Operation	go to state 213
	ArrayReference	go to state 113
	SubExpression	go to state 89
	OPTIONAL-39	go to state 77
	Conditional	go to state 79
	VariableModification	go to state 111
	VariableDeclaration	go to state 82

State 130:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 55

	Type	go to state 214

State 131:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 132:

	Statement -> OPTIONAL-39 Loop .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 133:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 164)

	VARIABLE_SYMBOL	shift, and go to state 215

State 134:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 165)

	WORD	shift, and go to state 55

	Type	go to state 216

State 135:

	Loop -> LoopFor .	(Rule 161)

	$default	reduce using rule 161 (Loop)

State 136:

	Loop -> LoopWhile .	(Rule 163)

	$default	reduce using rule 163 (Loop)

State 137:

	Loop -> LoopForEach .	(Rule 162)

	$default	reduce using rule 162 (Loop)

State 138:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	SubExpression	go to state 217
	HashReference	go to state 108
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	Literal	go to state 119
	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142

State 139:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	SubExpression	go to state 218
	HashReference	go to state 108
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	Literal	go to state 119
	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91

State 140:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 93)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	')'	shift, and go to state 219
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 141:

	SubExpression -> Expression .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 142:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 137)

	OP02_METHOD_THINARROW	shift, and go to state 179
	OP03_MATH_INC_DEC	shift, and go to state 178

	')'	reduce using rule 137 (SubExpression)
	';'	reduce using rule 137 (SubExpression)
	']'	reduce using rule 137 (SubExpression)
	'}'	reduce using rule 137 (SubExpression)
	OP04_MATH_POW	reduce using rule 137 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 137 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 137 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 137 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 137 (SubExpression)
	OP08_STRING_CAT	reduce using rule 137 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 137 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 137 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 137 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 137 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 137 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 137 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 137 (SubExpression)
	OP18_TERNARY	reduce using rule 137 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 137 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 137 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 137 (SubExpression)

State 143:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 176)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 177)

	VARIABLE_SYMBOL	shift, and go to state 220

State 144:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 193)

	'}'	shift, and go to state 221

State 145:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 194)

	'}'	shift, and go to state 222

State 146:

	STAR-45 -> STAR-45 . VariableRetrieval	(Rule 170)
	Variable -> VARIABLE_SYMBOL STAR-45 .	(Rule 172)

	OP02_ARRAY_THINARROW	shift, and go to state 225
	OP02_HASH_THINARROW	shift, and go to state 224

	')'	reduce using rule 172 (Variable)
	';'	reduce using rule 172 (Variable)
	']'	reduce using rule 172 (Variable)
	'}'	reduce using rule 172 (Variable)
	COLON	reduce using rule 172 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 172 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 172 (Variable)
	OP04_MATH_POW	reduce using rule 172 (Variable)
	OP06_REGEX_MATCH	reduce using rule 172 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 172 (Variable)
	OP07_STRING_REPEAT	reduce using rule 172 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 172 (Variable)
	OP08_STRING_CAT	reduce using rule 172 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 172 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 172 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 172 (Variable)
	OP13_BITWISE_AND	reduce using rule 172 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 172 (Variable)
	OP15_LOGICAL_AND	reduce using rule 172 (Variable)
	OP16_LOGICAL_OR	reduce using rule 172 (Variable)
	OP17_LIST_RANGE	reduce using rule 172 (Variable)
	OP18_TERNARY	reduce using rule 172 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 172 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 172 (Variable)
	OP21_LIST_COMMA	reduce using rule 172 (Variable)
	OP23_LOGICAL_AND	reduce using rule 172 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 172 (Variable)

	VariableRetrieval	go to state 223

State 147:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	ListElement -> SubExpression .	(Rule 187)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 148:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 121)

	OP21_LIST_COMMA	shift, and go to state 226

State 149:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 189)

	'%{'	shift, and go to state 94

	HashDereferenced	go to state 227

State 150:

	ListElement -> TypeInner . SubExpression	(Rule 188)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	Literal	go to state 119
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	SubExpression	go to state 228
	HashReference	go to state 108
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102

State 151:

	HashReference -> LBRACE HashEntry . STAR-52 '}'	(Rule 204)

	$default	reduce using rule 203 (STAR-52)

	STAR-52	go to state 229

State 152:

	HashEntry -> HashDereferenced .	(Rule 198)

	$default	reduce using rule 198 (HashEntry)

State 153:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-50 SubExpression	(Rule 197)

	OP20_HASH_FATARROW	shift, and go to state 230

State 154:

	SubExpression -> LBRACE '}' .	(Rule 142)

	$default	reduce using rule 142 (SubExpression)

State 155:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 97)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	SubExpression	go to state 231
	HashReference	go to state 108
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	ArrayReference	go to state 113
	HashDereferenced	go to state 98

State 156:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 99)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	HashReference	go to state 108
	SubExpression	go to state 232
	ArrayReference	go to state 113
	HashDereferenced	go to state 98

State 157:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 109)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	SubExpression	go to state 233
	HashReference	go to state 108
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	Literal	go to state 119

State 158:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	HashReference	go to state 108
	SubExpression	go to state 234
	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	Literal	go to state 119

State 159:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	SubExpression	go to state 235
	HashReference	go to state 108
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	Literal	go to state 119
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142

State 160:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 103)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	SubExpression	go to state 236
	HashReference	go to state 108
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	Literal	go to state 119

State 161:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 113)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashReference	go to state 108
	SubExpression	go to state 237
	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142
	Literal	go to state 119

State 162:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 107)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	HashReference	go to state 108
	SubExpression	go to state 238
	ArrayReference	go to state 113
	HashDereferenced	go to state 98

State 163:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 95)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	HashReference	go to state 108
	SubExpression	go to state 239
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	Literal	go to state 119

State 164:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 98)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashReference	go to state 108
	SubExpression	go to state 240
	HashDereferenced	go to state 98
	ArrayReference	go to state 113

State 165:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 94)

	OP06_REGEX_PATTERN	shift, and go to state 241

State 166:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 104)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	HashReference	go to state 108
	SubExpression	go to state 242
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	ArrayReference	go to state 113
	HashDereferenced	go to state 98

State 167:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 108)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	HashReference	go to state 108
	SubExpression	go to state 243
	HashDereferenced	go to state 98
	ArrayReference	go to state 113

State 168:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 110)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	VARIABLE_SYMBOL	shift, and go to state 85

	VariableOrLiteral	go to state 245
	Variable	go to state 244
	Literal	go to state 246

State 169:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 112)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	HashReference	go to state 108
	SubExpression	go to state 247
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142
	Literal	go to state 119

State 170:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 96)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	Literal	go to state 119
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	SubExpression	go to state 248
	HashReference	go to state 108
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103

State 171:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 91)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	SubExpression	go to state 249
	HashReference	go to state 108
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	Literal	go to state 119
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142

State 172:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 89)

	$default	reduce using rule 89 (Operator)

State 173:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 92)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP06_REGEX_MATCH	reduce using rule 92 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Operator)
	OP07_STRING_REPEAT	reduce using rule 92 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 174:

	Operation -> Expression ';' .	(Rule 82)

	$default	reduce using rule 82 (Operation)

State 175:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 206)

	'}'	shift, and go to state 250

State 176:

	HashDereferenced -> '%{' Variable . '}'	(Rule 205)

	'}'	shift, and go to state 251

State 177:

	HashReference -> LBRACE . HashEntry STAR-52 '}'	(Rule 204)

	'%{'	shift, and go to state 94
	WORD	shift, and go to state 153

	HashDereferenced	go to state 152
	HashEntry	go to state 151

State 178:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 179:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-36 ')'	(Rule 132)

	LPAREN	shift, and go to state 252

State 180:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 178)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	STDIN	shift, and go to state 255
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	SubExpression	go to state 253
	HashReference	go to state 108
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	Literal	go to state 119
	SubExpressionOrStdin	go to state 254
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142

State 181:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 179)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	Literal	go to state 119
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	SubExpression	go to state 256
	HashReference	go to state 108
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102

State 182:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 120)

	';'	shift, and go to state 257

State 183:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	ListElement -> SubExpression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

	')'	reduce using rule 187 (ListElement)
	';'	reduce using rule 187 (ListElement)
	']'	reduce using rule 187 (ListElement)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)

State 184:

	ListElements -> ListElement . STAR-47	(Rule 185)

	$default	reduce using rule 182 (STAR-47)

	STAR-47	go to state 258

State 185:

	ListElements -> OP01_QW . PLUS-48 ')'	(Rule 186)

	WORD	shift, and go to state 260

	PLUS-48	go to state 259

State 186:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 143)

	')'	shift, and go to state 261
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 187:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142
	Literal	go to state 119
	ListElement	go to state 262
	TypeInner	go to state 150
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	SubExpression	go to state 147
	HashReference	go to state 108

State 188:

	Operator -> LPAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)

	FH_REF_SYMBOL_BRACES	shift, and go to state 263

State 189:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-41 OPTIONAL-43	(Rule 160)

	')'	shift, and go to state 264
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 190:

	Expression -> WordScoped OP02_METHOD_THINARROW . LPAREN OPTIONAL-37 ')'	(Rule 133)

	LPAREN	shift, and go to state 265

State 191:

	Expression -> WordScoped LPAREN . OPTIONAL-35 ')'	(Rule 131)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 125 (OPTIONAL-35)

	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	TypeInner	go to state 150
	ListElements	go to state 267
	WordScoped	go to state 103
	OPTIONAL-35	go to state 266
	ArrayDereferenced	go to state 102
	SubExpression	go to state 183
	HashReference	go to state 108
	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	Literal	go to state 119
	ListElement	go to state 184

State 192:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'filehandle_ref'	shift, and go to state 268

State 193:

	LoopLabel -> WORD .	(Rule 209)

	$default	reduce using rule 209 (LoopLabel)

State 194:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 123)

	';'	shift, and go to state 269

State 195:

	OPTIONAL-34 -> PAREN-33 .	(Rule 115)

	$default	reduce using rule 115 (OPTIONAL-34)

State 196:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 118)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	Literal	go to state 119
	ListElement	go to state 184
	ListElements	go to state 270
	TypeInner	go to state 150
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	SubExpression	go to state 183
	HashReference	go to state 108

State 197:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ListElement	go to state 184
	Literal	go to state 119
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	SubExpression	go to state 183
	HashReference	go to state 108
	TypeInner	go to state 150
	ArrayReference	go to state 113
	ListElements	go to state 271
	HashDereferenced	go to state 98

State 198:

	PAREN-33 -> STDOUT_STDERR .	(Rule 114)

	$default	reduce using rule 114 (PAREN-33)

State 199:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 200:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 201:

	ArrayReference -> LBRACKET OPTIONAL-49 . ']'	(Rule 192)

	']'	shift, and go to state 272

State 202:

	OPTIONAL-49 -> ListElements .	(Rule 190)

	$default	reduce using rule 190 (OPTIONAL-49)

State 203:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 100)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 204:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> OP10_STRINGIFY_UNARY SubExpression . ')'	(Rule 102)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	')'	shift, and go to state 273
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 205:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 111)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168

	')'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 206:

	PAREN-38 -> LoopLabel COLON .	(Rule 146)

	$default	reduce using rule 146 (PAREN-38)

State 207:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our hash_ref $class_properties'	shift, and go to state 274

	'our'	reduce using rule 58 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 58 (OPTIONAL-23)

	PropertiesClass	go to state 275
	OPTIONAL-23	go to state 276

State 208:

	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 66)

	OP19_VARIABLE_ASSIGN	shift, and go to state 277

State 209:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 210:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 211:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	WORD	shift, and go to state 278

State 212:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'if ('	shift, and go to state 101
	'my'	shift, and go to state 81
	'undef'	shift, and go to state 83
	'}'	shift, and go to state 280
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 87
	OP01_NAMED_VOID	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 112
	OP01_OPEN	shift, and go to state 105
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-39)
	'foreach my'	reduce using rule 148 (OPTIONAL-39)
	'while ('	reduce using rule 148 (OPTIONAL-39)

	Literal	go to state 119
	PAREN-38	go to state 97
	OperatorVoid	go to state 117
	Variable	go to state 95
	Operator	go to state 91
	Expression	go to state 93
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	LoopLabel	go to state 123
	HashReference	go to state 108
	HashDereferenced	go to state 98
	Statement	go to state 120
	VariableDeclaration	go to state 82
	VariableModification	go to state 111
	OPTIONAL-39	go to state 77
	Conditional	go to state 79
	SubExpression	go to state 89
	ArrayReference	go to state 113
	Operation	go to state 279

State 213:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 214:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 281

State 215:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 164)

	LPAREN	shift, and go to state 282

State 216:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 165)

	VARIABLE_SYMBOL	shift, and go to state 283

State 217:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 166)

	')'	shift, and go to state 284
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 218:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 219:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 220:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 176)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 177)

	';'	shift, and go to state 285
	OP19_VARIABLE_ASSIGN	shift, and go to state 286

State 221:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 193)

	$default	reduce using rule 193 (ArrayDereferenced)

State 222:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 194)

	$default	reduce using rule 194 (ArrayDereferenced)

State 223:

	STAR-45 -> STAR-45 VariableRetrieval .	(Rule 170)

	$default	reduce using rule 170 (STAR-45)

State 224:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 174)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 175)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 287
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	Literal	go to state 119
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	SubExpression	go to state 288
	HashReference	go to state 108
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102

State 225:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 173)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	Literal	go to state 119
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	HashReference	go to state 108
	SubExpression	go to state 289
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103

State 226:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	Literal	go to state 119
	ListElement	go to state 184
	TypeInner	go to state 150
	ArrayReference	go to state 113
	ListElements	go to state 290
	HashDereferenced	go to state 98
	HashReference	go to state 108
	SubExpression	go to state 183
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102

State 227:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 189)

	$default	reduce using rule 189 (ListElement)

State 228:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	ListElement -> TypeInner SubExpression .	(Rule 188)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

	')'	reduce using rule 188 (ListElement)
	';'	reduce using rule 188 (ListElement)
	']'	reduce using rule 188 (ListElement)
	OP21_LIST_COMMA	reduce using rule 188 (ListElement)

State 229:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 202)
	HashReference -> LBRACE HashEntry STAR-52 . '}'	(Rule 204)

	'}'	shift, and go to state 291
	OP21_LIST_COMMA	shift, and go to state 293

	PAREN-51	go to state 292

State 230:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-50 SubExpression	(Rule 197)

	'my'	shift, and go to state 75

	'%{'	reduce using rule 196 (OPTIONAL-50)
	'@{'	reduce using rule 196 (OPTIONAL-50)
	'undef'	reduce using rule 196 (OPTIONAL-50)
	LBRACE	reduce using rule 196 (OPTIONAL-50)
	LBRACKET	reduce using rule 196 (OPTIONAL-50)
	LITERAL_NUMBER	reduce using rule 196 (OPTIONAL-50)
	LITERAL_STRING	reduce using rule 196 (OPTIONAL-50)
	LPAREN	reduce using rule 196 (OPTIONAL-50)
	OP01_CLOSE	reduce using rule 196 (OPTIONAL-50)
	OP01_NAMED	reduce using rule 196 (OPTIONAL-50)
	OP01_OPEN	reduce using rule 196 (OPTIONAL-50)
	OP03_MATH_INC_DEC	reduce using rule 196 (OPTIONAL-50)
	OP05_LOGICAL_NEG	reduce using rule 196 (OPTIONAL-50)
	OP05_MATH_NEG_LPAREN	reduce using rule 196 (OPTIONAL-50)
	OP10_NAMED_UNARY	reduce using rule 196 (OPTIONAL-50)
	OP10_STRINGIFY_UNARY	reduce using rule 196 (OPTIONAL-50)
	OP22_LOGICAL_NEG	reduce using rule 196 (OPTIONAL-50)
	VARIABLE_SYMBOL	reduce using rule 196 (OPTIONAL-50)
	WORD	reduce using rule 196 (OPTIONAL-50)
	WORD_SCOPED	reduce using rule 196 (OPTIONAL-50)

	TypeInner	go to state 294
	OPTIONAL-50	go to state 295

State 231:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 97 (Operator)
	OP08_STRING_CAT	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 233:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 236:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 237:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169

	')'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 238:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 239:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP07_STRING_REPEAT	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 240:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP08_STRING_CAT	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 241:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 94)

	$default	reduce using rule 94 (Operator)

State 242:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 243:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 244:

	VariableOrLiteral -> Variable .	(Rule 212)

	$default	reduce using rule 212 (VariableOrLiteral)

State 245:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 110)

	COLON	shift, and go to state 296

State 246:

	VariableOrLiteral -> Literal .	(Rule 213)

	$default	reduce using rule 213 (VariableOrLiteral)

State 247:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168

	')'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 248:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_STRING_REPEAT	shift, and go to state 163

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 96 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 249:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP06_REGEX_MATCH	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP07_STRING_REPEAT	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 250:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 206)

	$default	reduce using rule 206 (HashDereferenced)

State 251:

	HashDereferenced -> '%{' Variable '}' .	(Rule 205)

	$default	reduce using rule 205 (HashDereferenced)

State 252:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-36 ')'	(Rule 132)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 127 (OPTIONAL-36)

	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142
	Literal	go to state 119
	ListElement	go to state 184
	ListElements	go to state 298
	TypeInner	go to state 150
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashReference	go to state 108
	SubExpression	go to state 183
	OPTIONAL-36	go to state 297

State 253:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	SubExpressionOrStdin -> SubExpression .	(Rule 144)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

	';'	reduce using rule 144 (SubExpressionOrStdin)

State 254:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 178)

	';'	shift, and go to state 299

State 255:

	SubExpressionOrStdin -> STDIN .	(Rule 145)

	$default	reduce using rule 145 (SubExpressionOrStdin)

State 256:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 179)

	';'	shift, and go to state 300
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 257:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 258:

	STAR-47 -> STAR-47 . PAREN-46	(Rule 181)
	ListElements -> ListElement STAR-47 .	(Rule 185)

	OP21_LIST_COMMA	shift, and go to state 301

	')'	reduce using rule 185 (ListElements)
	';'	reduce using rule 185 (ListElements)
	']'	reduce using rule 185 (ListElements)

	PAREN-46	go to state 302

State 259:

	PLUS-48 -> PLUS-48 . WORD	(Rule 183)
	ListElements -> OP01_QW PLUS-48 . ')'	(Rule 186)

	')'	shift, and go to state 303
	WORD	shift, and go to state 304

State 260:

	PLUS-48 -> WORD .	(Rule 184)

	$default	reduce using rule 184 (PLUS-48)

State 261:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 143)

	$default	reduce using rule 143 (SubExpression)

State 262:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 86)

	OP21_LIST_COMMA	shift, and go to state 305

State 263:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	HashReference	go to state 108
	SubExpression	go to state 183
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	TypeInner	go to state 150
	ListElements	go to state 306
	Literal	go to state 119
	ListElement	go to state 184
	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141

State 264:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-41 OPTIONAL-43	(Rule 160)

	LBRACE	shift, and go to state 307

	CodeBlock	go to state 308

State 265:

	Expression -> WordScoped OP02_METHOD_THINARROW LPAREN . OPTIONAL-37 ')'	(Rule 133)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 129 (OPTIONAL-37)

	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashReference	go to state 108
	SubExpression	go to state 183
	TypeInner	go to state 150
	ListElements	go to state 309
	OPTIONAL-37	go to state 310
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	ListElement	go to state 184
	Literal	go to state 119
	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142

State 266:

	Expression -> WordScoped LPAREN OPTIONAL-35 . ')'	(Rule 131)

	')'	shift, and go to state 311

State 267:

	OPTIONAL-35 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-35)

State 268:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	FH_REF_SYMBOL	shift, and go to state 312

State 269:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 123)

	$default	reduce using rule 123 (OperatorVoid)

State 270:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 118)

	';'	shift, and go to state 313

State 271:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements . ';'	(Rule 117)

	';'	shift, and go to state 314

State 272:

	ArrayReference -> LBRACKET OPTIONAL-49 ']' .	(Rule 192)

	$default	reduce using rule 192 (ArrayReference)

State 273:

	Operator -> OP10_STRINGIFY_UNARY SubExpression ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 274:

	PropertiesClass -> 'our hash_ref $class_properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-28 '}' ';'	(Rule 70)

	OP19_VARIABLE_ASSIGN	shift, and go to state 315

State 275:

	OPTIONAL-23 -> PropertiesClass .	(Rule 57)

	$default	reduce using rule 57 (OPTIONAL-23)

State 276:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 316

State 277:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 66)

	LBRACE	shift, and go to state 317

State 278:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 211)

	OP19_VARIABLE_ASSIGN	shift, and go to state 318

State 279:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 280:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 319

State 281:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 320

State 282:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	HashReference	go to state 108
	SubExpression	go to state 321
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	ArrayReference	go to state 113
	HashDereferenced	go to state 98

State 283:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 165)

	LPAREN	shift, and go to state 322

State 284:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 166)

	LBRACE	shift, and go to state 307

	CodeBlock	go to state 323

State 285:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 176)

	$default	reduce using rule 176 (VariableDeclaration)

State 286:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 177)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	STDIN	shift, and go to state 255
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	SubExpressionOrStdin	go to state 324
	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	HashReference	go to state 108
	SubExpression	go to state 253
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashDereferenced	go to state 98
	ArrayReference	go to state 113

State 287:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 175)
	WordScoped -> WORD .	(Rule 207)

	'}'	shift, and go to state 325

	LPAREN	reduce using rule 207 (WordScoped)
	OP02_METHOD_THINARROW	reduce using rule 207 (WordScoped)

State 288:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 174)

	'}'	shift, and go to state 326
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 289:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 173)

	']'	shift, and go to state 327
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 290:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 121)

	';'	shift, and go to state 328

State 291:

	HashReference -> LBRACE HashEntry STAR-52 '}' .	(Rule 204)

	$default	reduce using rule 204 (HashReference)

State 292:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 202)

	$default	reduce using rule 202 (STAR-52)

State 293:

	PAREN-51 -> OP21_LIST_COMMA . HashEntry	(Rule 201)

	'%{'	shift, and go to state 94
	WORD	shift, and go to state 153

	HashDereferenced	go to state 152
	HashEntry	go to state 329

State 294:

	OPTIONAL-50 -> TypeInner .	(Rule 195)

	$default	reduce using rule 195 (OPTIONAL-50)

State 295:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 . SubExpression	(Rule 197)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	SubExpression	go to state 330
	HashReference	go to state 108
	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	Literal	go to state 119
	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142

State 296:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 110)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	VARIABLE_SYMBOL	shift, and go to state 85

	Literal	go to state 246
	VariableOrLiteral	go to state 331
	Variable	go to state 244

State 297:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 . ')'	(Rule 132)

	')'	shift, and go to state 332

State 298:

	OPTIONAL-36 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-36)

State 299:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableModification)

State 300:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 179)

	$default	reduce using rule 179 (VariableModification)

State 301:

	PAREN-46 -> OP21_LIST_COMMA . ListElement	(Rule 180)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 113
	TypeInner	go to state 150
	HashDereferenced	go to state 98
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	SubExpression	go to state 183
	HashReference	go to state 108
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	ListElement	go to state 333
	Literal	go to state 119

State 302:

	STAR-47 -> STAR-47 PAREN-46 .	(Rule 181)

	$default	reduce using rule 181 (STAR-47)

State 303:

	ListElements -> OP01_QW PLUS-48 ')' .	(Rule 186)

	$default	reduce using rule 186 (ListElements)

State 304:

	PLUS-48 -> PLUS-48 WORD .	(Rule 183)

	$default	reduce using rule 183 (PLUS-48)

State 305:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	SubExpression	go to state 183
	HashReference	go to state 108
	ListElements	go to state 334
	ArrayReference	go to state 113
	TypeInner	go to state 150
	HashDereferenced	go to state 98
	ListElement	go to state 184
	Literal	go to state 119
	Operator	go to state 91
	Expression	go to state 141
	Variable	go to state 142

State 306:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 84)

	')'	shift, and go to state 335

State 307:

	CodeBlock -> LBRACE . PLUS-44 '}'	(Rule 169)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'if ('	shift, and go to state 101
	'my'	shift, and go to state 81
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 87
	OP01_NAMED_VOID	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 112
	OP01_OPEN	shift, and go to state 105
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-39)
	'foreach my'	reduce using rule 148 (OPTIONAL-39)
	'while ('	reduce using rule 148 (OPTIONAL-39)

	ArrayReference	go to state 113
	Operation	go to state 337
	SubExpression	go to state 89
	OPTIONAL-39	go to state 77
	Conditional	go to state 79
	PLUS-44	go to state 336
	VariableDeclaration	go to state 82
	VariableModification	go to state 111
	HashDereferenced	go to state 98
	Statement	go to state 120
	ArrayDereferenced	go to state 102
	LoopLabel	go to state 123
	WordScoped	go to state 103
	HashReference	go to state 108
	OperatorVoid	go to state 117
	Variable	go to state 95
	Expression	go to state 93
	Operator	go to state 91
	Literal	go to state 119
	PAREN-38	go to state 97

State 308:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-41 OPTIONAL-43	(Rule 160)

	$default	reduce using rule 156 (STAR-41)

	STAR-41	go to state 338

State 309:

	OPTIONAL-37 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-37)

State 310:

	Expression -> WordScoped OP02_METHOD_THINARROW LPAREN OPTIONAL-37 . ')'	(Rule 133)

	')'	shift, and go to state 339

State 311:

	Expression -> WordScoped LPAREN OPTIONAL-35 ')' .	(Rule 131)

	$default	reduce using rule 131 (Expression)

State 312:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 340

State 313:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 314:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 315:

	PropertiesClass -> 'our hash_ref $class_properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-28 '}' ';'	(Rule 70)

	LBRACE	shift, and go to state 341

State 316:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 345
	LITERAL_NUMBER	shift, and go to state 344

	MethodOrSubroutine	go to state 342
	Method	go to state 343
	Subroutine	go to state 346

State 317:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 66)

	'%{'	shift, and go to state 94
	'}'	shift, and go to state 349
	WORD	shift, and go to state 348

	HashEntryTyped	go to state 347
	HashDereferenced	go to state 350

State 318:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 211)

	$default	reduce using rule 211 (TypeInner)

State 319:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 320:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 352
	OP21_LIST_COMMA	shift, and go to state 353

	PAREN-18	go to state 351

State 321:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 164)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 354
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 322:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'my'	shift, and go to state 75
	'undef'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 149
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP01_QW	shift, and go to state 185
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	HashDereferenced	go to state 98
	TypeInner	go to state 150
	ListElements	go to state 355
	ArrayReference	go to state 113
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashReference	go to state 108
	SubExpression	go to state 183
	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	ListElement	go to state 184
	Literal	go to state 119

State 323:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (LoopWhile)

State 324:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 177)

	';'	shift, and go to state 356

State 325:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 175)

	$default	reduce using rule 175 (VariableRetrieval)

State 326:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 174)

	$default	reduce using rule 174 (VariableRetrieval)

State 327:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 173)

	$default	reduce using rule 173 (VariableRetrieval)

State 328:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 329:

	PAREN-51 -> OP21_LIST_COMMA HashEntry .	(Rule 201)

	$default	reduce using rule 201 (PAREN-51)

State 330:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 SubExpression .	(Rule 197)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

	'}'	reduce using rule 197 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 197 (HashEntry)

State 331:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 110)

	$default	reduce using rule 110 (Operator)

State 332:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-36 ')' .	(Rule 132)

	$default	reduce using rule 132 (Expression)

State 333:

	PAREN-46 -> OP21_LIST_COMMA ListElement .	(Rule 180)

	$default	reduce using rule 180 (PAREN-46)

State 334:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 86)

	')'	shift, and go to state 357

State 335:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 336:

	PLUS-44 -> PLUS-44 . Operation	(Rule 167)
	CodeBlock -> LBRACE PLUS-44 . '}'	(Rule 169)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'if ('	shift, and go to state 101
	'my'	shift, and go to state 81
	'undef'	shift, and go to state 83
	'}'	shift, and go to state 359
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 87
	OP01_NAMED_VOID	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 112
	OP01_OPEN	shift, and go to state 105
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-39)
	'foreach my'	reduce using rule 148 (OPTIONAL-39)
	'while ('	reduce using rule 148 (OPTIONAL-39)

	Operation	go to state 358
	ArrayReference	go to state 113
	SubExpression	go to state 89
	OPTIONAL-39	go to state 77
	Conditional	go to state 79
	VariableDeclaration	go to state 82
	VariableModification	go to state 111
	HashDereferenced	go to state 98
	Statement	go to state 120
	HashReference	go to state 108
	ArrayDereferenced	go to state 102
	LoopLabel	go to state 123
	WordScoped	go to state 103
	Variable	go to state 95
	Operator	go to state 91
	Expression	go to state 93
	OperatorVoid	go to state 117
	Literal	go to state 119
	PAREN-38	go to state 97

State 337:

	PLUS-44 -> Operation .	(Rule 168)

	$default	reduce using rule 168 (PLUS-44)

State 338:

	STAR-41 -> STAR-41 . PAREN-40	(Rule 155)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 . OPTIONAL-43	(Rule 160)

	'else'	shift, and go to state 362
	'elsif ('	shift, and go to state 363

	$end	reduce using rule 159 (OPTIONAL-43)
	'%{'	reduce using rule 159 (OPTIONAL-43)
	'@{'	reduce using rule 159 (OPTIONAL-43)
	'for my integer'	reduce using rule 159 (OPTIONAL-43)
	'foreach my'	reduce using rule 159 (OPTIONAL-43)
	'if ('	reduce using rule 159 (OPTIONAL-43)
	'my'	reduce using rule 159 (OPTIONAL-43)
	'undef'	reduce using rule 159 (OPTIONAL-43)
	'while ('	reduce using rule 159 (OPTIONAL-43)
	'}'	reduce using rule 159 (OPTIONAL-43)
	LBRACE	reduce using rule 159 (OPTIONAL-43)
	LBRACKET	reduce using rule 159 (OPTIONAL-43)
	LITERAL_NUMBER	reduce using rule 159 (OPTIONAL-43)
	LITERAL_STRING	reduce using rule 159 (OPTIONAL-43)
	LPAREN	reduce using rule 159 (OPTIONAL-43)
	OP01_CLOSE	reduce using rule 159 (OPTIONAL-43)
	OP01_NAMED	reduce using rule 159 (OPTIONAL-43)
	OP01_NAMED_VOID	reduce using rule 159 (OPTIONAL-43)
	OP01_NAMED_VOID_SCOLON	reduce using rule 159 (OPTIONAL-43)
	OP01_OPEN	reduce using rule 159 (OPTIONAL-43)
	OP01_PRINT	reduce using rule 159 (OPTIONAL-43)
	OP03_MATH_INC_DEC	reduce using rule 159 (OPTIONAL-43)
	OP05_LOGICAL_NEG	reduce using rule 159 (OPTIONAL-43)
	OP05_MATH_NEG_LPAREN	reduce using rule 159 (OPTIONAL-43)
	OP10_NAMED_UNARY	reduce using rule 159 (OPTIONAL-43)
	OP10_STRINGIFY_UNARY	reduce using rule 159 (OPTIONAL-43)
	OP19_LOOP_CONTROL	reduce using rule 159 (OPTIONAL-43)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 159 (OPTIONAL-43)
	OP22_LOGICAL_NEG	reduce using rule 159 (OPTIONAL-43)
	VARIABLE_SYMBOL	reduce using rule 159 (OPTIONAL-43)
	WORD	reduce using rule 159 (OPTIONAL-43)
	WORD_SCOPED	reduce using rule 159 (OPTIONAL-43)

	OPTIONAL-43	go to state 361
	PAREN-40	go to state 364
	PAREN-42	go to state 360

State 339:

	Expression -> WordScoped OP02_METHOD_THINARROW LPAREN OPTIONAL-37 ')' .	(Rule 133)

	$default	reduce using rule 133 (Expression)

State 340:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	LITERAL_STRING	shift, and go to state 365

State 341:

	PropertiesClass -> 'our hash_ref $class_properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-28 '}' ';'	(Rule 70)

	'%{'	shift, and go to state 94
	WORD	shift, and go to state 348

	HashDereferenced	go to state 350
	HashEntryTyped	go to state 366

State 342:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 343:

	MethodOrSubroutine -> Method .	(Rule 80)

	$default	reduce using rule 80 (MethodOrSubroutine)

State 344:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 367

State 345:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	TYPE_METHOD	shift, and go to state 368
	WORD	shift, and go to state 55

	Type	go to state 54

State 346:

	MethodOrSubroutine -> Subroutine .	(Rule 81)

	$default	reduce using rule 81 (MethodOrSubroutine)

State 347:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-26 '}' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 369

State 348:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 199)

	OP20_HASH_FATARROW	shift, and go to state 370

State 349:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 66)

	';'	shift, and go to state 371

State 350:

	HashEntryTyped -> HashDereferenced .	(Rule 200)

	$default	reduce using rule 200 (HashEntryTyped)

State 351:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 352:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 372

State 353:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 373

State 354:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 109)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	SubExpression	go to state 374
	HashReference	go to state 108
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	Variable	go to state 142
	Expression	go to state 141
	Operator	go to state 91
	Literal	go to state 119

State 355:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 375

State 356:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 177)

	$default	reduce using rule 177 (VariableDeclaration)

State 357:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 358:

	PLUS-44 -> PLUS-44 Operation .	(Rule 167)

	$default	reduce using rule 167 (PLUS-44)

State 359:

	CodeBlock -> LBRACE PLUS-44 '}' .	(Rule 169)

	$default	reduce using rule 169 (CodeBlock)

State 360:

	OPTIONAL-43 -> PAREN-42 .	(Rule 158)

	$default	reduce using rule 158 (OPTIONAL-43)

State 361:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 OPTIONAL-43 .	(Rule 160)

	$default	reduce using rule 160 (Conditional)

State 362:

	PAREN-42 -> 'else' . CodeBlock	(Rule 157)

	LBRACE	shift, and go to state 307

	CodeBlock	go to state 376

State 363:

	PAREN-40 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 154)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 119
	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	SubExpression	go to state 377
	HashReference	go to state 108
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashDereferenced	go to state 98
	ArrayReference	go to state 113

State 364:

	STAR-41 -> STAR-41 PAREN-40 .	(Rule 155)

	$default	reduce using rule 155 (STAR-41)

State 365:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 378

State 366:

	PropertiesClass -> 'our hash_ref $class_properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-28 '}' ';'	(Rule 70)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 379

State 367:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 368:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	VARIABLE_SYMBOL	shift, and go to state 380

State 369:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-26 . '}' ';'	(Rule 65)

	'}'	shift, and go to state 382
	OP21_LIST_COMMA	shift, and go to state 383

	PAREN-25	go to state 381

State 370:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 199)

	'my'	shift, and go to state 75

	TypeInner	go to state 384

State 371:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 372:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 385

State 373:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 55

	Type	go to state 386

State 374:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 164)

	')'	shift, and go to state 387
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 375:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 165)

	LBRACE	shift, and go to state 307

	CodeBlock	go to state 388

State 376:

	PAREN-42 -> 'else' CodeBlock .	(Rule 157)

	$default	reduce using rule 157 (PAREN-42)

State 377:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	PAREN-40 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 154)

	')'	shift, and go to state 389
	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

State 378:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 87)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 113
	HashDereferenced	go to state 98
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashReference	go to state 108
	SubExpression	go to state 390
	Expression	go to state 141
	Operator	go to state 91
	Variable	go to state 142
	Literal	go to state 119

State 379:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 68)
	PropertiesClass -> 'our hash_ref $class_properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-28 . '}' ';'	(Rule 70)

	'}'	shift, and go to state 392
	OP21_LIST_COMMA	shift, and go to state 391

	PAREN-27	go to state 393

State 380:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'= sub {'	shift, and go to state 394

State 381:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 382:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-26 '}' . ';'	(Rule 65)

	';'	shift, and go to state 395

State 383:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 62)

	'%{'	shift, and go to state 94
	WORD	shift, and go to state 348

	HashEntryTyped	go to state 396
	HashDereferenced	go to state 350

State 384:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 199)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 142
	Operator	go to state 91
	Expression	go to state 141
	Literal	go to state 119
	HashDereferenced	go to state 98
	ArrayReference	go to state 113
	WordScoped	go to state 103
	ArrayDereferenced	go to state 102
	HashReference	go to state 108
	SubExpression	go to state 397

State 385:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 386:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 398

State 387:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 164)

	LBRACE	shift, and go to state 307

	CodeBlock	go to state 399

State 388:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (LoopForEach)

State 389:

	PAREN-40 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 154)

	LBRACE	shift, and go to state 307

	CodeBlock	go to state 400

State 390:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 87)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168

	')'	reduce using rule 87 (Operator)
	';'	reduce using rule 87 (Operator)
	']'	reduce using rule 87 (Operator)
	'}'	reduce using rule 87 (Operator)
	OP21_LIST_COMMA	reduce using rule 87 (Operator)
	OP23_LOGICAL_AND	reduce using rule 87 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 87 (Operator)

State 391:

	PAREN-27 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 67)

	'%{'	shift, and go to state 94
	WORD	shift, and go to state 348

	HashDereferenced	go to state 350
	HashEntryTyped	go to state 401

State 392:

	PropertiesClass -> 'our hash_ref $class_properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-28 '}' . ';'	(Rule 70)

	';'	shift, and go to state 402

State 393:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 394:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'( my'	shift, and go to state 405

	'%{'	reduce using rule 72 (OPTIONAL-29)
	'@{'	reduce using rule 72 (OPTIONAL-29)
	'for my integer'	reduce using rule 72 (OPTIONAL-29)
	'foreach my'	reduce using rule 72 (OPTIONAL-29)
	'if ('	reduce using rule 72 (OPTIONAL-29)
	'my'	reduce using rule 72 (OPTIONAL-29)
	'undef'	reduce using rule 72 (OPTIONAL-29)
	'while ('	reduce using rule 72 (OPTIONAL-29)
	LBRACE	reduce using rule 72 (OPTIONAL-29)
	LBRACKET	reduce using rule 72 (OPTIONAL-29)
	LITERAL_NUMBER	reduce using rule 72 (OPTIONAL-29)
	LITERAL_STRING	reduce using rule 72 (OPTIONAL-29)
	LPAREN	reduce using rule 72 (OPTIONAL-29)
	OP01_CLOSE	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID_SCOLON	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT	reduce using rule 72 (OPTIONAL-29)
	OP03_MATH_INC_DEC	reduce using rule 72 (OPTIONAL-29)
	OP05_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	OP05_MATH_NEG_LPAREN	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP10_STRINGIFY_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 72 (OPTIONAL-29)
	OP22_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	VARIABLE_SYMBOL	reduce using rule 72 (OPTIONAL-29)
	WORD	reduce using rule 72 (OPTIONAL-29)
	WORD_SCOPED	reduce using rule 72 (OPTIONAL-29)

	MethodArguments	go to state 403
	OPTIONAL-29	go to state 404

State 395:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-26 '}' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 396:

	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 397:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 199)

	OP04_MATH_POW	shift, and go to state 171
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 163
	OP08_MATH_ADD_SUB	shift, and go to state 155
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 156
	OP11_COMPARE_LT_GT	shift, and go to state 160
	OP12_COMPARE_EQ_NE	shift, and go to state 166
	OP13_BITWISE_AND	shift, and go to state 159
	OP14_BITWISE_OR_XOR	shift, and go to state 158
	OP15_LOGICAL_AND	shift, and go to state 162
	OP16_LOGICAL_OR	shift, and go to state 167
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 168
	OP23_LOGICAL_AND	shift, and go to state 169
	OP24_LOGICAL_OR_XOR	shift, and go to state 161

	'}'	reduce using rule 199 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 199 (HashEntryTyped)

State 398:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 399:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 164)

	$default	reduce using rule 164 (LoopFor)

State 400:

	PAREN-40 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 154)

	$default	reduce using rule 154 (PAREN-40)

State 401:

	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 67)

	$default	reduce using rule 67 (PAREN-27)

State 402:

	PropertiesClass -> 'our hash_ref $class_properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-28 '}' ';' .	(Rule 70)

	$default	reduce using rule 70 (PropertiesClass)

State 403:

	OPTIONAL-29 -> MethodArguments .	(Rule 71)

	$default	reduce using rule 71 (OPTIONAL-29)

State 404:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 . PLUS-30 '}' ';'	(Rule 75)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'if ('	shift, and go to state 101
	'my'	shift, and go to state 81
	'undef'	shift, and go to state 83
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 87
	OP01_NAMED_VOID	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 112
	OP01_OPEN	shift, and go to state 105
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-39)
	'foreach my'	reduce using rule 148 (OPTIONAL-39)
	'while ('	reduce using rule 148 (OPTIONAL-39)

	HashReference	go to state 108
	ArrayDereferenced	go to state 102
	LoopLabel	go to state 123
	WordScoped	go to state 103
	Statement	go to state 120
	HashDereferenced	go to state 98
	PAREN-38	go to state 97
	Literal	go to state 119
	Operator	go to state 91
	Expression	go to state 93
	Variable	go to state 95
	OperatorVoid	go to state 117
	SubExpression	go to state 89
	PLUS-30	go to state 407
	Operation	go to state 406
	ArrayReference	go to state 113
	VariableModification	go to state 111
	VariableDeclaration	go to state 82
	OPTIONAL-39	go to state 77
	Conditional	go to state 79

State 405:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	TYPE_CLASS_OR_SELF	shift, and go to state 408

State 406:

	PLUS-30 -> Operation .	(Rule 74)

	$default	reduce using rule 74 (PLUS-30)

State 407:

	PLUS-30 -> PLUS-30 . Operation	(Rule 73)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 . '}' ';'	(Rule 75)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 84
	'if ('	shift, and go to state 101
	'my'	shift, and go to state 81
	'undef'	shift, and go to state 83
	'}'	shift, and go to state 410
	LBRACE	shift, and go to state 88
	LBRACKET	shift, and go to state 115
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 121
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 109
	OP01_NAMED	shift, and go to state 87
	OP01_NAMED_VOID	shift, and go to state 96
	OP01_NAMED_VOID_SCOLON	shift, and go to state 112
	OP01_OPEN	shift, and go to state 105
	OP01_PRINT	shift, and go to state 107
	OP03_MATH_INC_DEC	shift, and go to state 90
	OP05_LOGICAL_NEG	shift, and go to state 92
	OP05_MATH_NEG_LPAREN	shift, and go to state 80
	OP10_NAMED_UNARY	shift, and go to state 116
	OP10_STRINGIFY_UNARY	shift, and go to state 118
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 104
	OP22_LOGICAL_NEG	shift, and go to state 122
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-39)
	'foreach my'	reduce using rule 148 (OPTIONAL-39)
	'while ('	reduce using rule 148 (OPTIONAL-39)

	VariableDeclaration	go to state 82
	VariableModification	go to state 111
	Conditional	go to state 79
	OPTIONAL-39	go to state 77
	SubExpression	go to state 89
	ArrayReference	go to state 113
	Operation	go to state 409
	PAREN-38	go to state 97
	Literal	go to state 119
	OperatorVoid	go to state 117
	Variable	go to state 95
	Operator	go to state 91
	Expression	go to state 93
	ArrayDereferenced	go to state 102
	WordScoped	go to state 103
	LoopLabel	go to state 123
	HashReference	go to state 108
	HashDereferenced	go to state 98
	Statement	go to state 120

State 408:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	$default	reduce using rule 78 (STAR-32)

	STAR-32	go to state 411

State 409:

	PLUS-30 -> PLUS-30 Operation .	(Rule 73)

	$default	reduce using rule 73 (PLUS-30)

State 410:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' . ';'	(Rule 75)

	';'	shift, and go to state 412

State 411:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 77)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	')'	shift, and go to state 415
	OP21_LIST_COMMA	shift, and go to state 413

	PAREN-31	go to state 414

State 412:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';' .	(Rule 75)

	$default	reduce using rule 75 (Method)

State 413:

	PAREN-31 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 76)

	'my'	shift, and go to state 416

State 414:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 77)

	$default	reduce using rule 77 (STAR-32)

State 415:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	OP19_VARIABLE_ASSIGN	shift, and go to state 417

State 416:

	PAREN-31 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 76)

	WORD	shift, and go to state 55

	Type	go to state 418

State 417:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 79)

	'@_;'	shift, and go to state 419

State 418:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 76)

	VARIABLE_SYMBOL	shift, and go to state 420

State 419:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 79)

	$default	reduce using rule 79 (MethodArguments)

State 420:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 76)

	$default	reduce using rule 76 (PAREN-31)


Summary:
--------
Number of rules         : 216
Number of terminals     : 90
Number of non-terminals : 101
Number of states        : 421
