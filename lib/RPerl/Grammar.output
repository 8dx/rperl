Conflicts:
----------
Conflict in state 149 between rule 86 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 149 between rule 86 and token OP04_MATH_POW resolved as shift.
Conflict in state 149 between rule 86 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 149 between rule 86 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 149 between rule 86 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 149 between rule 86 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 149 between rule 86 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 149 between rule 86 and token OP18_TERNARY resolved as reduce.
Conflict in state 149 between rule 86 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 149 between rule 86 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 149 between rule 86 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 149 between rule 86 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 149 between rule 86 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 149 between rule 86 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 149 between rule 86 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 149 between rule 86 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 149 between rule 86 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 175 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 175 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 175 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 175 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 175 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 175 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 175 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 175 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 175 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 175 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 175 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 175 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 175 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 175 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 175 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 175 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 175 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 191 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 191 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 191 between rule 94 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 191 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 191 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 191 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 191 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 191 between rule 94 and token OP08_STRING_CAT resolved as shift.
Conflict in state 191 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 191 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 191 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 191 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 191 between rule 94 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 191 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 191 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 209 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 209 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 209 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 209 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 209 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 209 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 105 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 209 between rule 105 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 209 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 209 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 209 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 209 between rule 105 and token OP18_TERNARY resolved as shift.
Conflict in state 209 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 209 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 209 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 209 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 209 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 224 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 224 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 224 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 224 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 224 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 224 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 224 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 224 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 224 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 224 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 224 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 224 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 260 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 260 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 260 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 260 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 260 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 260 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 260 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 260 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 260 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 260 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 260 between rule 89 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 260 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 260 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 260 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 261 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 99 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 261 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 261 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 261 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 261 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 261 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 261 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 261 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 261 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 261 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 261 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 261 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 261 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 261 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 261 between rule 99 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 262 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 262 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 262 between rule 101 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 262 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 262 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 262 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 262 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 262 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 262 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 262 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 262 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 262 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 262 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 262 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 262 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 263 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 97 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 263 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 263 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 263 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 263 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 263 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 263 between rule 97 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 263 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 263 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 263 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 263 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 263 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 263 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 263 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 263 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 264 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 264 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 264 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 264 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 264 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 264 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 264 between rule 98 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 264 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 264 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 264 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 264 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 264 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 264 between rule 98 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 264 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 264 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 264 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 264 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 265 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 265 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 265 between rule 107 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 265 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 265 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 265 between rule 107 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 265 between rule 107 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 265 between rule 107 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 265 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 265 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 265 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 265 between rule 107 and token OP18_TERNARY resolved as shift.
Conflict in state 265 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 265 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 265 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 265 between rule 107 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 265 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 266 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 266 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 266 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 266 between rule 90 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 266 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 266 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 266 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 266 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 266 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 266 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 266 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 266 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 266 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 266 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 266 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 266 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 266 between rule 90 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 267 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 267 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 267 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 267 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 267 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 267 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 267 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 267 between rule 106 and token OP18_TERNARY resolved as shift.
Conflict in state 267 between rule 106 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 267 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 267 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 267 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 267 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 267 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 267 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 267 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 267 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 268 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 268 between rule 103 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 268 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 268 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 268 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 268 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 268 between rule 103 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 268 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 268 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 268 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 268 between rule 103 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 268 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 268 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 268 between rule 103 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 268 between rule 103 and token OP17_LIST_RANGE resolved as error.
Conflict in state 268 between rule 103 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 268 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 269 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 269 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 269 between rule 93 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 269 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 269 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 269 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 269 between rule 93 and token OP08_STRING_CAT resolved as shift.
Conflict in state 269 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 269 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 269 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 269 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 269 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 269 between rule 93 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 269 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 269 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 269 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 269 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 270 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 270 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 270 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 270 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 270 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 270 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 270 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 270 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 270 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 270 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 270 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 270 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 270 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 270 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 270 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 270 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 271 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 271 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 271 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 271 between rule 91 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 271 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 271 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 271 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 271 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 271 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 271 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 271 between rule 91 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 271 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 271 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 271 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 271 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 271 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 271 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 272 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 272 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 272 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 272 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 272 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 272 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 272 between rule 100 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 272 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 272 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 272 between rule 100 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 272 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 272 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 272 between rule 100 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 272 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 272 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 272 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 272 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 276 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 276 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 276 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 276 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 276 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 276 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 276 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 276 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 276 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 276 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 276 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 276 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 276 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 276 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 276 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 276 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 276 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 277 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 277 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 277 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 277 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 277 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 277 between rule 92 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 277 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 277 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 277 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 277 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 277 between rule 92 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 277 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 277 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 277 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 277 between rule 92 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 277 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 277 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 374 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 374 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 374 between rule 103 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 374 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 374 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 374 between rule 103 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 374 between rule 103 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 374 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 374 between rule 103 and token OP17_LIST_RANGE resolved as error.
Conflict in state 374 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 374 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 374 between rule 103 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 374 between rule 103 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 374 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 374 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 374 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 374 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 388 between rule 81 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 388 between rule 81 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 388 between rule 81 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 388 between rule 81 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 388 between rule 81 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 388 between rule 81 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 388 between rule 81 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 388 between rule 81 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 388 between rule 81 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 388 between rule 81 and token OP18_TERNARY resolved as shift.
Conflict in state 388 between rule 81 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 388 between rule 81 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 388 between rule 81 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 388 between rule 81 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 388 between rule 81 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 388 between rule 81 and token OP08_STRING_CAT resolved as shift.
Conflict in state 388 between rule 81 and token OP04_MATH_POW resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' CONSTANT_SYMBOL OP20_HASH_FATARROW TypeInnerConstant Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 MethodOrSubroutine
58:	STAR-23 -> /* empty */
59:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'
60:	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped
61:	STAR-25 -> STAR-25 PAREN-24
62:	STAR-25 -> /* empty */
63:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'
64:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
65:	OPTIONAL-26 -> MethodArguments
66:	OPTIONAL-26 -> /* empty */
67:	PLUS-27 -> PLUS-27 Operation
68:	PLUS-27 -> Operation
69:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'
70:	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
71:	STAR-29 -> STAR-29 PAREN-28
72:	STAR-29 -> /* empty */
73:	MethodArguments -> '( my' TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'
74:	MethodOrSubroutine -> Method
75:	MethodOrSubroutine -> Subroutine
76:	Operation -> Expression ';'
77:	Operation -> Statement
78:	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
79:	Operator -> OP01_NAMED SubExpression
80:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
81:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
82:	Operator -> OP01_CLOSE FH_REF_SYMBOL
83:	Operator -> OP03_MATH_INC_DEC Variable
84:	Operator -> Variable OP03_MATH_INC_DEC
85:	Operator -> SubExpression OP04_MATH_POW SubExpression
86:	Operator -> OP05_LOGICAL_NEG SubExpression
87:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
88:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
89:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
90:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
91:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
92:	Operator -> SubExpression OP08_STRING_CAT SubExpression
93:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
94:	Operator -> OP10_NAMED_UNARY SubExpression
95:	Operator -> OP10_NAMED_UNARY
96:	Operator -> OP10_STRINGIFY_UNARY SubExpression ')'
97:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
98:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
99:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
100:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
101:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
102:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
103:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
104:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
105:	Operator -> OP22_LOGICAL_NEG SubExpression
106:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
107:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
108:	PAREN-30 -> STDOUT_STDERR
109:	OPTIONAL-31 -> PAREN-30
110:	OPTIONAL-31 -> /* empty */
111:	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';'
112:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
113:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
114:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
115:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
116:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
117:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
118:	OPTIONAL-32 -> ListElements
119:	OPTIONAL-32 -> /* empty */
120:	OPTIONAL-33 -> ListElements
121:	OPTIONAL-33 -> /* empty */
122:	Expression -> Operator
123:	Expression -> WordScoped LPAREN OPTIONAL-32 ')'
124:	Expression -> CONSTANT_SYMBOL LPAREN ')'
125:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'
126:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
127:	SubExpression -> Expression
128:	SubExpression -> 'undef'
129:	SubExpression -> Literal
130:	SubExpression -> Variable
131:	SubExpression -> ArrayReference
132:	SubExpression -> ArrayDereferenced
133:	SubExpression -> HashReference
134:	SubExpression -> HashDereferenced
135:	SubExpression -> LBRACE '}'
136:	SubExpression -> LPAREN SubExpression ')'
137:	SubExpressionOrStdin -> SubExpression
138:	SubExpressionOrStdin -> STDIN
139:	PAREN-34 -> LoopLabel COLON
140:	OPTIONAL-35 -> PAREN-34
141:	OPTIONAL-35 -> /* empty */
142:	Statement -> Conditional
143:	Statement -> OPTIONAL-35 Loop
144:	Statement -> OperatorVoid
145:	Statement -> VariableDeclaration
146:	Statement -> VariableModification
147:	PAREN-36 -> 'elsif (' SubExpression ')' CodeBlock
148:	STAR-37 -> STAR-37 PAREN-36
149:	STAR-37 -> /* empty */
150:	PAREN-38 -> 'else' CodeBlock
151:	OPTIONAL-39 -> PAREN-38
152:	OPTIONAL-39 -> /* empty */
153:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-37 OPTIONAL-39
154:	Loop -> LoopFor
155:	Loop -> LoopForEach
156:	Loop -> LoopWhile
157:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
158:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
159:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
160:	PLUS-40 -> PLUS-40 Operation
161:	PLUS-40 -> Operation
162:	CodeBlock -> LBRACE PLUS-40 '}'
163:	STAR-41 -> STAR-41 VariableRetrieval
164:	STAR-41 -> /* empty */
165:	Variable -> VARIABLE_SYMBOL STAR-41
166:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
167:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
168:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
169:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
170:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
171:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
172:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
173:	PAREN-42 -> OP21_LIST_COMMA ListElement
174:	STAR-43 -> STAR-43 PAREN-42
175:	STAR-43 -> /* empty */
176:	PLUS-44 -> PLUS-44 WORD
177:	PLUS-44 -> WORD
178:	ListElements -> ListElement STAR-43
179:	ListElements -> OP01_QW PLUS-44 ')'
180:	ListElement -> SubExpression
181:	ListElement -> TypeInner SubExpression
182:	ListElement -> KEYS_OR_VALUES HashDereferenced
183:	OPTIONAL-45 -> ListElements
184:	OPTIONAL-45 -> /* empty */
185:	ArrayReference -> LBRACKET OPTIONAL-45 ']'
186:	ArrayDereferenced -> '@{' Variable '}'
187:	ArrayDereferenced -> '@{' ArrayReference '}'
188:	OPTIONAL-46 -> TypeInner
189:	OPTIONAL-46 -> /* empty */
190:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 SubExpression
191:	HashEntry -> HashDereferenced
192:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
193:	HashEntryTyped -> HashDereferenced
194:	PAREN-47 -> OP21_LIST_COMMA HashEntry
195:	STAR-48 -> STAR-48 PAREN-47
196:	STAR-48 -> /* empty */
197:	HashReference -> LBRACE HashEntry STAR-48 '}'
198:	HashDereferenced -> '%{' Variable '}'
199:	HashDereferenced -> '%{' HashReference '}'
200:	WordScoped -> WORD
201:	WordScoped -> WORD_SCOPED
202:	LoopLabel -> WORD
203:	Type -> WORD
204:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
205:	TypeInnerConstant -> 'my' Type '$TYPED_' CONSTANT_SYMBOL OP19_VARIABLE_ASSIGN
206:	VariableOrLiteral -> Variable
207:	VariableOrLiteral -> Literal
208:	Literal -> LITERAL_STRING
209:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 9
	SHEBANG	shift, and go to state 6

	'package'	reduce using rule 20 (OPTIONAL-9)

	ModuleHeader	go to state 4
	Program	go to state 5
	PAREN-1	go to state 3
	OPTIONAL-9	go to state 8
	PLUS-2	go to state 7
	Critic	go to state 2
	CompileUnit	go to state 1

State 1:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 10

State 2:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 3:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 4:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 13

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Module	go to state 14
	Class	go to state 12
	Package	go to state 11
	STAR-10	go to state 15

State 5:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 6:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 9

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 16
	Critic	go to state 17

State 7:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 9

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 8
	Critic	go to state 2
	PAREN-1	go to state 18
	ModuleHeader	go to state 4

State 8:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 19

State 9:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 20

	PLUS-14	go to state 21

State 10:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 11:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 12:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 13:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 23

State 14:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 15:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 9

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 26
	STAR-11	go to state 25

State 16:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 27

	Header	go to state 28

State 17:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 18:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 19:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 29

State 20:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 21:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 31
	WORD	shift, and go to state 30

State 22:

	WordScoped -> WORD .	(Rule 200)

	$default	reduce using rule 200 (WordScoped)

State 23:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	')'	shift, and go to state 32

State 24:

	WordScoped -> WORD_SCOPED .	(Rule 201)

	$default	reduce using rule 201 (WordScoped)

State 25:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 34

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 35
	STAR-12	go to state 33

State 26:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 27:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 36

State 28:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 37

State 29:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 38

State 30:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 31:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 32:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	';'	shift, and go to state 39

State 33:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 41
	'use constant'	shift, and go to state 44

	Constant	go to state 40
	PLUS-13	go to state 43
	Subroutine	go to state 42

State 34:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 45

State 35:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 36:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 46

State 37:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 9

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	CONSTANT_SYMBOL	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_STRINGIFY_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 48
	STAR-5	go to state 47

State 38:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 27

	Header	go to state 49

State 39:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 34

	Include	go to state 50

State 40:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 41:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 51

	Type	go to state 52

State 42:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 43:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 41
	LITERAL_NUMBER	shift, and go to state 54

	Subroutine	go to state 53

State 44:

	Constant -> 'use constant' . CONSTANT_SYMBOL OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	CONSTANT_SYMBOL	shift, and go to state 55

State 45:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 56
	'qw('	shift, and go to state 57

State 46:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 58

State 47:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 34

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	CONSTANT_SYMBOL	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_STRINGIFY_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	STAR-6	go to state 59
	Include	go to state 60

State 48:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 49:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 50:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 61

State 51:

	Type -> WORD .	(Rule 203)

	$default	reduce using rule 203 (Type)

State 52:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 62

State 53:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 54:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 63

State 55:

	Constant -> 'use constant' CONSTANT_SYMBOL . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 64

State 56:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 57:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 65

	PLUS-15	go to state 66

State 58:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 67

State 59:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 44

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	CONSTANT_SYMBOL	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_STRINGIFY_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	STAR-7	go to state 68
	Constant	go to state 69

State 60:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 61:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'## no critic qw('	shift, and go to state 9

	'our hash_ref $properties'	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 71
	STAR-21	go to state 70

State 62:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 72

State 63:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 64:

	Constant -> 'use constant' CONSTANT_SYMBOL OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 41)

	'my'	shift, and go to state 74

	TypeInnerConstant	go to state 73

State 65:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 66:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 76
	WORD	shift, and go to state 75

State 67:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'if ('	shift, and go to state 99
	'my'	shift, and go to state 110
	'our'	shift, and go to state 41
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 107
	OP01_NAMED_VOID	shift, and go to state 100
	OP01_NAMED_VOID_SCOLON	shift, and go to state 85
	OP01_OPEN	shift, and go to state 89
	OP01_PRINT	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 101
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 141 (OPTIONAL-35)
	'foreach my'	reduce using rule 141 (OPTIONAL-35)
	'while ('	reduce using rule 141 (OPTIONAL-35)

	Subroutine	go to state 104
	VariableModification	go to state 80
	ArrayReference	go to state 106
	VariableDeclaration	go to state 83
	HashDereferenced	go to state 108
	Expression	go to state 96
	Operation	go to state 98
	WordScoped	go to state 78
	Literal	go to state 113
	OPTIONAL-35	go to state 88
	PAREN-34	go to state 117
	PLUS-8	go to state 118
	HashReference	go to state 116
	Statement	go to state 121
	LoopLabel	go to state 91
	Conditional	go to state 92
	Operator	go to state 120
	SubExpression	go to state 122
	OperatorVoid	go to state 123
	ArrayDereferenced	go to state 111
	Variable	go to state 109

State 69:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 70:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 34

	'our hash_ref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	STAR-22	go to state 126
	Include	go to state 125

State 71:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 72:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 128

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	CONSTANT_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_STRINGIFY_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 127
	OPTIONAL-16	go to state 129

State 73:

	Constant -> 'use constant' CONSTANT_SYMBOL OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77

	Literal	go to state 130

State 74:

	TypeInnerConstant -> 'my' . Type '$TYPED_' CONSTANT_SYMBOL OP19_VARIABLE_ASSIGN	(Rule 205)

	WORD	shift, and go to state 51

	Type	go to state 131

State 75:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 76:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 132

State 77:

	Literal -> LITERAL_STRING .	(Rule 208)

	$default	reduce using rule 208 (Literal)

State 78:

	Expression -> WordScoped . LPAREN OPTIONAL-32 ')'	(Rule 123)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 126)

	LPAREN	shift, and go to state 133
	OP02_METHOD_THINARROW_NEW	shift, and go to state 134

State 79:

	ArrayReference -> LBRACKET . OPTIONAL-45 ']'	(Rule 185)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	']'	reduce using rule 184 (OPTIONAL-45)

	ArrayDereferenced	go to state 111
	Variable	go to state 145
	ListElements	go to state 136
	Expression	go to state 140
	TypeInner	go to state 137
	WordScoped	go to state 78
	ArrayReference	go to state 106
	HashReference	go to state 116
	ListElement	go to state 138
	Literal	go to state 113
	HashDereferenced	go to state 108
	SubExpression	go to state 142
	OPTIONAL-45	go to state 135
	Operator	go to state 120

State 80:

	Statement -> VariableModification .	(Rule 146)

	$default	reduce using rule 146 (Statement)

State 81:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 186)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 187)

	LBRACKET	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 115

	Variable	go to state 146
	ArrayReference	go to state 147

State 82:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 82)

	FH_REF_SYMBOL	shift, and go to state 148

State 83:

	Statement -> VariableDeclaration .	(Rule 145)

	$default	reduce using rule 145 (Statement)

State 84:

	SubExpression -> 'undef' .	(Rule 128)

	$default	reduce using rule 128 (SubExpression)

State 85:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 113)

	$default	reduce using rule 113 (OperatorVoid)

State 86:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 86)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	HashDereferenced	go to state 108
	SubExpression	go to state 149
	Operator	go to state 120
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113

State 87:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 117)

	WORD	shift, and go to state 151

	LoopLabel	go to state 150

State 88:

	Statement -> OPTIONAL-35 . Loop	(Rule 143)

	'for my integer'	shift, and go to state 155
	'foreach my'	shift, and go to state 157
	'while ('	shift, and go to state 156

	LoopForEach	go to state 152
	LoopWhile	go to state 154
	Loop	go to state 153
	LoopFor	go to state 158

State 89:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	'my'	shift, and go to state 159

State 90:

	Literal -> LITERAL_NUMBER .	(Rule 209)

	$default	reduce using rule 209 (Literal)

State 91:

	PAREN-34 -> LoopLabel . COLON	(Rule 139)

	COLON	shift, and go to state 160

State 92:

	Statement -> Conditional .	(Rule 142)

	$default	reduce using rule 142 (Statement)

State 93:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 87)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	WordScoped	go to state 78
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	SubExpression	go to state 161
	HashDereferenced	go to state 108
	Operator	go to state 120

State 94:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 95:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 83)

	VARIABLE_SYMBOL	shift, and go to state 115

	Variable	go to state 162

State 96:

	Operation -> Expression . ';'	(Rule 76)
	SubExpression -> Expression .	(Rule 127)

	';'	shift, and go to state 163

	OP04_MATH_POW	reduce using rule 127 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 127 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 127 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 127 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 127 (SubExpression)
	OP08_STRING_CAT	reduce using rule 127 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 127 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 127 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 127 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 127 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 127 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 127 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 127 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 127 (SubExpression)
	OP18_TERNARY	reduce using rule 127 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 127 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 127 (SubExpression)

State 97:

	Operator -> LPAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 136)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 89
	OP01_PRINT	shift, and go to state 164
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Expression	go to state 140
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	WordScoped	go to state 78
	Literal	go to state 113
	HashReference	go to state 116
	ArrayReference	go to state 106
	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 166

State 98:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 99:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 153)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	Expression	go to state 140
	HashDereferenced	go to state 108
	SubExpression	go to state 167
	Operator	go to state 120
	ArrayReference	go to state 106
	HashReference	go to state 116
	Literal	go to state 113

State 100:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 114)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	TypeInner	go to state 137
	Expression	go to state 140
	ListElements	go to state 168
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 142
	Literal	go to state 113
	HashReference	go to state 116
	ListElement	go to state 138
	ArrayReference	go to state 106

State 101:

	WordScoped -> WORD .	(Rule 200)
	LoopLabel -> WORD .	(Rule 202)

	COLON	reduce using rule 202 (LoopLabel)
	LPAREN	reduce using rule 200 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 200 (WordScoped)

State 102:

	Expression -> CONSTANT_SYMBOL . LPAREN ')'	(Rule 124)

	LPAREN	shift, and go to state 169

State 103:

	OperatorVoid -> OP01_PRINT . OPTIONAL-31 ListElements ';'	(Rule 111)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 112)

	FH_REF_SYMBOL_BRACES	shift, and go to state 170
	STDOUT_STDERR	shift, and go to state 172

	'%{'	reduce using rule 110 (OPTIONAL-31)
	'@{'	reduce using rule 110 (OPTIONAL-31)
	'my'	reduce using rule 110 (OPTIONAL-31)
	'undef'	reduce using rule 110 (OPTIONAL-31)
	CONSTANT_SYMBOL	reduce using rule 110 (OPTIONAL-31)
	KEYS_OR_VALUES	reduce using rule 110 (OPTIONAL-31)
	LBRACE	reduce using rule 110 (OPTIONAL-31)
	LBRACKET	reduce using rule 110 (OPTIONAL-31)
	LITERAL_NUMBER	reduce using rule 110 (OPTIONAL-31)
	LITERAL_STRING	reduce using rule 110 (OPTIONAL-31)
	LPAREN	reduce using rule 110 (OPTIONAL-31)
	OP01_CLOSE	reduce using rule 110 (OPTIONAL-31)
	OP01_NAMED	reduce using rule 110 (OPTIONAL-31)
	OP01_OPEN	reduce using rule 110 (OPTIONAL-31)
	OP01_QW	reduce using rule 110 (OPTIONAL-31)
	OP03_MATH_INC_DEC	reduce using rule 110 (OPTIONAL-31)
	OP05_LOGICAL_NEG	reduce using rule 110 (OPTIONAL-31)
	OP05_MATH_NEG_LPAREN	reduce using rule 110 (OPTIONAL-31)
	OP10_NAMED_UNARY	reduce using rule 110 (OPTIONAL-31)
	OP10_STRINGIFY_UNARY	reduce using rule 110 (OPTIONAL-31)
	OP22_LOGICAL_NEG	reduce using rule 110 (OPTIONAL-31)
	VARIABLE_SYMBOL	reduce using rule 110 (OPTIONAL-31)
	WORD	reduce using rule 110 (OPTIONAL-31)
	WORD_SCOPED	reduce using rule 110 (OPTIONAL-31)

	OPTIONAL-31	go to state 173
	PAREN-30	go to state 171

State 104:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 105:

	Operator -> OP10_STRINGIFY_UNARY . SubExpression ')'	(Rule 96)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	HashDereferenced	go to state 108
	SubExpression	go to state 174
	Operator	go to state 120
	ArrayReference	go to state 106
	HashReference	go to state 116
	Literal	go to state 113
	WordScoped	go to state 78
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	Expression	go to state 140

State 106:

	SubExpression -> ArrayReference .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 107:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 115)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	ListElement	go to state 176
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	SubExpression	go to state 175
	HashDereferenced	go to state 108
	Operator	go to state 120
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	WordScoped	go to state 78
	TypeInner	go to state 137

State 108:

	SubExpression -> HashDereferenced .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 109:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 125)
	SubExpression -> Variable .	(Rule 130)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 171)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 172)

	OP02_METHOD_THINARROW	shift, and go to state 178
	OP03_MATH_INC_DEC	shift, and go to state 179
	OP19_VARIABLE_ASSIGN	shift, and go to state 177
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 180

	OP04_MATH_POW	reduce using rule 130 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 130 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 130 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 130 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 130 (SubExpression)
	OP08_STRING_CAT	reduce using rule 130 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 130 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 130 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 130 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 130 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 130 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 130 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 130 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 130 (SubExpression)
	OP18_TERNARY	reduce using rule 130 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 130 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 130 (SubExpression)

State 110:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 169)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 170)

	WORD	shift, and go to state 51

	Type	go to state 181

State 111:

	SubExpression -> ArrayDereferenced .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 112:

	SubExpression -> LBRACE . '}'	(Rule 135)
	HashReference -> LBRACE . HashEntry STAR-48 '}'	(Rule 197)

	'%{'	shift, and go to state 114
	'}'	shift, and go to state 184
	WORD	shift, and go to state 183

	HashDereferenced	go to state 182
	HashEntry	go to state 185

State 113:

	SubExpression -> Literal .	(Rule 129)

	$default	reduce using rule 129 (SubExpression)

State 114:

	HashDereferenced -> '%{' . Variable '}'	(Rule 198)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 199)

	LBRACE	shift, and go to state 188
	VARIABLE_SYMBOL	shift, and go to state 115

	Variable	go to state 187
	HashReference	go to state 186

State 115:

	Variable -> VARIABLE_SYMBOL . STAR-41	(Rule 165)

	$default	reduce using rule 164 (STAR-41)

	STAR-41	go to state 189

State 116:

	SubExpression -> HashReference .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 117:

	OPTIONAL-35 -> PAREN-34 .	(Rule 140)

	$default	reduce using rule 140 (OPTIONAL-35)

State 118:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'if ('	shift, and go to state 99
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 107
	OP01_NAMED_VOID	shift, and go to state 100
	OP01_NAMED_VOID_SCOLON	shift, and go to state 85
	OP01_OPEN	shift, and go to state 89
	OP01_PRINT	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 101
	WORD_SCOPED	shift, and go to state 24

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 141 (OPTIONAL-35)
	'foreach my'	reduce using rule 141 (OPTIONAL-35)
	'while ('	reduce using rule 141 (OPTIONAL-35)

	VariableDeclaration	go to state 83
	HashDereferenced	go to state 108
	VariableModification	go to state 80
	ArrayReference	go to state 106
	WordScoped	go to state 78
	Expression	go to state 96
	Operation	go to state 190
	Operator	go to state 120
	Statement	go to state 121
	Conditional	go to state 92
	LoopLabel	go to state 91
	OperatorVoid	go to state 123
	SubExpression	go to state 122
	OPTIONAL-35	go to state 88
	Literal	go to state 113
	HashReference	go to state 116
	PAREN-34	go to state 117
	Variable	go to state 109
	ArrayDereferenced	go to state 111

State 119:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 94)
	Operator -> OP10_NAMED_UNARY .	(Rule 95)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP04_MATH_POW	reduce using rule 95 (Operator)
	OP06_REGEX_MATCH	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP07_STRING_REPEAT	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

	SubExpression	go to state 191
	HashDereferenced	go to state 108
	Operator	go to state 120
	ArrayReference	go to state 106
	HashReference	go to state 116
	Literal	go to state 113
	WordScoped	go to state 78
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	Expression	go to state 140

State 120:

	Expression -> Operator .	(Rule 122)

	$default	reduce using rule 122 (Expression)

State 121:

	Operation -> Statement .	(Rule 77)

	$default	reduce using rule 77 (Operation)

State 122:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 123:

	Statement -> OperatorVoid .	(Rule 144)

	$default	reduce using rule 144 (Statement)

State 124:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 105)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	SubExpression	go to state 209
	HashDereferenced	go to state 108
	Operator	go to state 120
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113

State 125:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 126:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'our hash_ref $properties'	shift, and go to state 210
	'use constant'	shift, and go to state 44

	Constant	go to state 212
	Properties	go to state 211

State 127:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 128:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 51

	Type	go to state 213

State 129:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'if ('	shift, and go to state 99
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 107
	OP01_NAMED_VOID	shift, and go to state 100
	OP01_NAMED_VOID_SCOLON	shift, and go to state 85
	OP01_OPEN	shift, and go to state 89
	OP01_PRINT	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 101
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 141 (OPTIONAL-35)
	'foreach my'	reduce using rule 141 (OPTIONAL-35)
	'while ('	reduce using rule 141 (OPTIONAL-35)

	HashDereferenced	go to state 108
	VariableDeclaration	go to state 83
	ArrayReference	go to state 106
	VariableModification	go to state 80
	WordScoped	go to state 78
	PLUS-17	go to state 214
	Operation	go to state 215
	Expression	go to state 96
	OperatorVoid	go to state 123
	SubExpression	go to state 122
	Operator	go to state 120
	Statement	go to state 121
	LoopLabel	go to state 91
	Conditional	go to state 92
	HashReference	go to state 116
	PAREN-34	go to state 117
	Literal	go to state 113
	OPTIONAL-35	go to state 88
	Variable	go to state 109
	ArrayDereferenced	go to state 111

State 130:

	Constant -> 'use constant' CONSTANT_SYMBOL OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 41)

	';'	shift, and go to state 216

State 131:

	TypeInnerConstant -> 'my' Type . '$TYPED_' CONSTANT_SYMBOL OP19_VARIABLE_ASSIGN	(Rule 205)

	'$TYPED_'	shift, and go to state 217

State 132:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 133:

	Expression -> WordScoped LPAREN . OPTIONAL-32 ')'	(Rule 123)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 119 (OPTIONAL-32)

	Literal	go to state 113
	OPTIONAL-32	go to state 219
	HashReference	go to state 116
	ListElement	go to state 138
	ArrayReference	go to state 106
	Operator	go to state 120
	SubExpression	go to state 142
	HashDereferenced	go to state 108
	Expression	go to state 140
	ListElements	go to state 218
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	WordScoped	go to state 78
	TypeInner	go to state 137

State 134:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 126)

	')'	shift, and go to state 220

State 135:

	ArrayReference -> LBRACKET OPTIONAL-45 . ']'	(Rule 185)

	']'	shift, and go to state 221

State 136:

	OPTIONAL-45 -> ListElements .	(Rule 183)

	$default	reduce using rule 183 (OPTIONAL-45)

State 137:

	ListElement -> TypeInner . SubExpression	(Rule 181)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Operator	go to state 120
	SubExpression	go to state 222
	HashDereferenced	go to state 108
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	WordScoped	go to state 78
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145

State 138:

	ListElements -> ListElement . STAR-43	(Rule 178)

	$default	reduce using rule 175 (STAR-43)

	STAR-43	go to state 223

State 139:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	Expression	go to state 140
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Operator	go to state 120
	SubExpression	go to state 224
	HashDereferenced	go to state 108
	Literal	go to state 113
	HashReference	go to state 116
	ArrayReference	go to state 106

State 140:

	SubExpression -> Expression .	(Rule 127)

	$default	reduce using rule 127 (SubExpression)

State 141:

	ListElements -> OP01_QW . PLUS-44 ')'	(Rule 179)

	WORD	shift, and go to state 225

	PLUS-44	go to state 226

State 142:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	ListElement -> SubExpression .	(Rule 180)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

	')'	reduce using rule 180 (ListElement)
	';'	reduce using rule 180 (ListElement)
	']'	reduce using rule 180 (ListElement)
	OP21_LIST_COMMA	reduce using rule 180 (ListElement)

State 143:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 182)

	'%{'	shift, and go to state 114

	HashDereferenced	go to state 227

State 144:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 204)

	WORD	shift, and go to state 51

	Type	go to state 228

State 145:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 125)
	SubExpression -> Variable .	(Rule 130)

	OP02_METHOD_THINARROW	shift, and go to state 178
	OP03_MATH_INC_DEC	shift, and go to state 179

	')'	reduce using rule 130 (SubExpression)
	';'	reduce using rule 130 (SubExpression)
	']'	reduce using rule 130 (SubExpression)
	'}'	reduce using rule 130 (SubExpression)
	OP04_MATH_POW	reduce using rule 130 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 130 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 130 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 130 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 130 (SubExpression)
	OP08_STRING_CAT	reduce using rule 130 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 130 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 130 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 130 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 130 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 130 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 130 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 130 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 130 (SubExpression)
	OP18_TERNARY	reduce using rule 130 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 130 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 130 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 130 (SubExpression)

State 146:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 186)

	'}'	shift, and go to state 229

State 147:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 187)

	'}'	shift, and go to state 230

State 148:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 149:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 86)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206

	')'	reduce using rule 86 (Operator)
	';'	reduce using rule 86 (Operator)
	']'	reduce using rule 86 (Operator)
	'}'	reduce using rule 86 (Operator)
	OP06_REGEX_MATCH	reduce using rule 86 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 86 (Operator)
	OP07_STRING_REPEAT	reduce using rule 86 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 86 (Operator)
	OP08_STRING_CAT	reduce using rule 86 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 86 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 86 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 86 (Operator)
	OP13_BITWISE_AND	reduce using rule 86 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 86 (Operator)
	OP15_LOGICAL_AND	reduce using rule 86 (Operator)
	OP16_LOGICAL_OR	reduce using rule 86 (Operator)
	OP17_LIST_RANGE	reduce using rule 86 (Operator)
	OP18_TERNARY	reduce using rule 86 (Operator)
	OP21_LIST_COMMA	reduce using rule 86 (Operator)
	OP23_LOGICAL_AND	reduce using rule 86 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 86 (Operator)

State 150:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 117)

	';'	shift, and go to state 231

State 151:

	LoopLabel -> WORD .	(Rule 202)

	$default	reduce using rule 202 (LoopLabel)

State 152:

	Loop -> LoopForEach .	(Rule 155)

	$default	reduce using rule 155 (Loop)

State 153:

	Statement -> OPTIONAL-35 Loop .	(Rule 143)

	$default	reduce using rule 143 (Statement)

State 154:

	Loop -> LoopWhile .	(Rule 156)

	$default	reduce using rule 156 (Loop)

State 155:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 157)

	VARIABLE_SYMBOL	shift, and go to state 232

State 156:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 159)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	HashDereferenced	go to state 108
	SubExpression	go to state 233
	Operator	go to state 120
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	WordScoped	go to state 78
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140

State 157:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 158)

	WORD	shift, and go to state 51

	Type	go to state 234

State 158:

	Loop -> LoopFor .	(Rule 154)

	$default	reduce using rule 154 (Loop)

State 159:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	'filehandle_ref'	shift, and go to state 235

State 160:

	PAREN-34 -> LoopLabel COLON .	(Rule 139)

	$default	reduce using rule 139 (PAREN-34)

State 161:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	')'	shift, and go to state 236
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 162:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 83)

	$default	reduce using rule 83 (Operator)

State 163:

	Operation -> Expression ';' .	(Rule 76)

	$default	reduce using rule 76 (Operation)

State 164:

	Operator -> LPAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)

	FH_REF_SYMBOL_BRACES	shift, and go to state 237

State 165:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 106
	HashReference	go to state 116
	ListElement	go to state 238
	Literal	go to state 113
	HashDereferenced	go to state 108
	SubExpression	go to state 175
	Operator	go to state 120
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	Expression	go to state 140
	TypeInner	go to state 137
	WordScoped	go to state 78

State 166:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 136)

	')'	shift, and go to state 239
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 167:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 153)

	')'	shift, and go to state 240
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 168:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 114)

	';'	shift, and go to state 241

State 169:

	Expression -> CONSTANT_SYMBOL LPAREN . ')'	(Rule 124)

	')'	shift, and go to state 242

State 170:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 112)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 113
	HashReference	go to state 116
	ListElement	go to state 138
	ArrayReference	go to state 106
	Operator	go to state 120
	SubExpression	go to state 142
	HashDereferenced	go to state 108
	Expression	go to state 140
	ListElements	go to state 243
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	WordScoped	go to state 78
	TypeInner	go to state 137

State 171:

	OPTIONAL-31 -> PAREN-30 .	(Rule 109)

	$default	reduce using rule 109 (OPTIONAL-31)

State 172:

	PAREN-30 -> STDOUT_STDERR .	(Rule 108)

	$default	reduce using rule 108 (PAREN-30)

State 173:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 . ListElements ';'	(Rule 111)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	HashReference	go to state 116
	ListElement	go to state 138
	ArrayReference	go to state 106
	Literal	go to state 113
	SubExpression	go to state 142
	HashDereferenced	go to state 108
	Operator	go to state 120
	Variable	go to state 145
	ListElements	go to state 244
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	WordScoped	go to state 78
	TypeInner	go to state 137

State 174:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> OP10_STRINGIFY_UNARY SubExpression . ')'	(Rule 96)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	')'	shift, and go to state 245
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 175:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	ListElement -> SubExpression .	(Rule 180)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 180 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 176:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 115)

	OP21_LIST_COMMA	shift, and go to state 246

State 177:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 171)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	STDIN	shift, and go to state 249
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	HashDereferenced	go to state 108
	SubExpression	go to state 248
	Operator	go to state 120
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	SubExpressionOrStdin	go to state 247
	WordScoped	go to state 78
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140

State 178:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-33 ')'	(Rule 125)

	LPAREN	shift, and go to state 250

State 179:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 180:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 172)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Operator	go to state 120
	SubExpression	go to state 251
	HashDereferenced	go to state 108
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	WordScoped	go to state 78
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145

State 181:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 169)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 170)

	VARIABLE_SYMBOL	shift, and go to state 252

State 182:

	HashEntry -> HashDereferenced .	(Rule 191)

	$default	reduce using rule 191 (HashEntry)

State 183:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-46 SubExpression	(Rule 190)

	OP20_HASH_FATARROW	shift, and go to state 253

State 184:

	SubExpression -> LBRACE '}' .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 185:

	HashReference -> LBRACE HashEntry . STAR-48 '}'	(Rule 197)

	$default	reduce using rule 196 (STAR-48)

	STAR-48	go to state 254

State 186:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 199)

	'}'	shift, and go to state 255

State 187:

	HashDereferenced -> '%{' Variable . '}'	(Rule 198)

	'}'	shift, and go to state 256

State 188:

	HashReference -> LBRACE . HashEntry STAR-48 '}'	(Rule 197)

	'%{'	shift, and go to state 114
	WORD	shift, and go to state 183

	HashDereferenced	go to state 182
	HashEntry	go to state 185

State 189:

	STAR-41 -> STAR-41 . VariableRetrieval	(Rule 163)
	Variable -> VARIABLE_SYMBOL STAR-41 .	(Rule 165)

	OP02_ARRAY_THINARROW	shift, and go to state 259
	OP02_HASH_THINARROW	shift, and go to state 258

	')'	reduce using rule 165 (Variable)
	';'	reduce using rule 165 (Variable)
	']'	reduce using rule 165 (Variable)
	'}'	reduce using rule 165 (Variable)
	COLON	reduce using rule 165 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 165 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 165 (Variable)
	OP04_MATH_POW	reduce using rule 165 (Variable)
	OP06_REGEX_MATCH	reduce using rule 165 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 165 (Variable)
	OP07_STRING_REPEAT	reduce using rule 165 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 165 (Variable)
	OP08_STRING_CAT	reduce using rule 165 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 165 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 165 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 165 (Variable)
	OP13_BITWISE_AND	reduce using rule 165 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 165 (Variable)
	OP15_LOGICAL_AND	reduce using rule 165 (Variable)
	OP16_LOGICAL_OR	reduce using rule 165 (Variable)
	OP17_LIST_RANGE	reduce using rule 165 (Variable)
	OP18_TERNARY	reduce using rule 165 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 165 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 165 (Variable)
	OP21_LIST_COMMA	reduce using rule 165 (Variable)
	OP23_LOGICAL_AND	reduce using rule 165 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 165 (Variable)

	VariableRetrieval	go to state 257

State 190:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 191:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 94)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 192:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 89)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 106
	HashReference	go to state 116
	Literal	go to state 113
	HashDereferenced	go to state 108
	SubExpression	go to state 260
	Operator	go to state 120
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	Expression	go to state 140
	WordScoped	go to state 78

State 193:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 99)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	HashDereferenced	go to state 108
	SubExpression	go to state 261
	Operator	go to state 120
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113

State 194:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 101)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 262
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116

State 195:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	SubExpression	go to state 263
	HashDereferenced	go to state 108
	Operator	go to state 120
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113

State 196:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 98)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 113
	HashReference	go to state 116
	ArrayReference	go to state 106
	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 264
	Expression	go to state 140
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	WordScoped	go to state 78

State 197:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 107)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 113
	HashReference	go to state 116
	ArrayReference	go to state 106
	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 265
	Expression	go to state 140
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	WordScoped	go to state 78

State 198:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 90)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	WordScoped	go to state 78
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	Operator	go to state 120
	SubExpression	go to state 266
	HashDereferenced	go to state 108

State 199:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 106)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 267
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	WordScoped	go to state 78

State 200:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 103)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	WordScoped	go to state 78
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	Operator	go to state 120
	SubExpression	go to state 268
	HashDereferenced	go to state 108

State 201:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	HashDereferenced	go to state 108
	SubExpression	go to state 269
	Operator	go to state 120
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	WordScoped	go to state 78

State 202:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 102)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 113
	HashReference	go to state 116
	ArrayReference	go to state 106
	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 270
	Expression	go to state 140
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	WordScoped	go to state 78

State 203:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 91)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 111
	Variable	go to state 145
	Expression	go to state 140
	WordScoped	go to state 78
	ArrayReference	go to state 106
	HashReference	go to state 116
	Literal	go to state 113
	SubExpression	go to state 271
	HashDereferenced	go to state 108
	Operator	go to state 120

State 204:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 100)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Operator	go to state 120
	SubExpression	go to state 272
	HashDereferenced	go to state 108
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	WordScoped	go to state 78
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145

State 205:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 104)

	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	VARIABLE_SYMBOL	shift, and go to state 115

	Literal	go to state 274
	Variable	go to state 273
	VariableOrLiteral	go to state 275

State 206:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 85)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 276
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	WordScoped	go to state 78
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145

State 207:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 92)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	SubExpression	go to state 277
	HashDereferenced	go to state 108
	Operator	go to state 120
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	WordScoped	go to state 78

State 208:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 88)

	OP06_REGEX_PATTERN	shift, and go to state 278

State 209:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 105)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 210:

	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 64)

	OP19_VARIABLE_ASSIGN	shift, and go to state 279

State 211:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 280

State 212:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 213:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 281

State 214:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'if ('	shift, and go to state 99
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 84
	'}'	shift, and go to state 282
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 107
	OP01_NAMED_VOID	shift, and go to state 100
	OP01_NAMED_VOID_SCOLON	shift, and go to state 85
	OP01_OPEN	shift, and go to state 89
	OP01_PRINT	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 101
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 141 (OPTIONAL-35)
	'foreach my'	reduce using rule 141 (OPTIONAL-35)
	'while ('	reduce using rule 141 (OPTIONAL-35)

	WordScoped	go to state 78
	Operation	go to state 283
	Expression	go to state 96
	VariableDeclaration	go to state 83
	HashDereferenced	go to state 108
	VariableModification	go to state 80
	ArrayReference	go to state 106
	Variable	go to state 109
	ArrayDereferenced	go to state 111
	Operator	go to state 120
	Statement	go to state 121
	LoopLabel	go to state 91
	Conditional	go to state 92
	OperatorVoid	go to state 123
	SubExpression	go to state 122
	Literal	go to state 113
	OPTIONAL-35	go to state 88
	HashReference	go to state 116
	PAREN-34	go to state 117

State 215:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 216:

	Constant -> 'use constant' CONSTANT_SYMBOL OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 217:

	TypeInnerConstant -> 'my' Type '$TYPED_' . CONSTANT_SYMBOL OP19_VARIABLE_ASSIGN	(Rule 205)

	CONSTANT_SYMBOL	shift, and go to state 284

State 218:

	OPTIONAL-32 -> ListElements .	(Rule 118)

	$default	reduce using rule 118 (OPTIONAL-32)

State 219:

	Expression -> WordScoped LPAREN OPTIONAL-32 . ')'	(Rule 123)

	')'	shift, and go to state 285

State 220:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 126)

	$default	reduce using rule 126 (Expression)

State 221:

	ArrayReference -> LBRACKET OPTIONAL-45 ']' .	(Rule 185)

	$default	reduce using rule 185 (ArrayReference)

State 222:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	ListElement -> TypeInner SubExpression .	(Rule 181)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

	')'	reduce using rule 181 (ListElement)
	';'	reduce using rule 181 (ListElement)
	']'	reduce using rule 181 (ListElement)
	OP21_LIST_COMMA	reduce using rule 181 (ListElement)

State 223:

	STAR-43 -> STAR-43 . PAREN-42	(Rule 174)
	ListElements -> ListElement STAR-43 .	(Rule 178)

	OP21_LIST_COMMA	shift, and go to state 287

	')'	reduce using rule 178 (ListElements)
	';'	reduce using rule 178 (ListElements)
	']'	reduce using rule 178 (ListElements)

	PAREN-42	go to state 286

State 224:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	']'	reduce using rule 79 (Operator)
	'}'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 79 (Operator)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 225:

	PLUS-44 -> WORD .	(Rule 177)

	$default	reduce using rule 177 (PLUS-44)

State 226:

	PLUS-44 -> PLUS-44 . WORD	(Rule 176)
	ListElements -> OP01_QW PLUS-44 . ')'	(Rule 179)

	')'	shift, and go to state 289
	WORD	shift, and go to state 288

State 227:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 182)

	$default	reduce using rule 182 (ListElement)

State 228:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 204)

	'$TYPED_'	shift, and go to state 290

State 229:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 186)

	$default	reduce using rule 186 (ArrayDereferenced)

State 230:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 187)

	$default	reduce using rule 187 (ArrayDereferenced)

State 231:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 232:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 157)

	LPAREN	shift, and go to state 291

State 233:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 159)

	')'	shift, and go to state 292
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 234:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 158)

	VARIABLE_SYMBOL	shift, and go to state 293

State 235:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	FH_REF_SYMBOL	shift, and go to state 294

State 236:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 237:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 78)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	TypeInner	go to state 137
	WordScoped	go to state 78
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	ListElements	go to state 295
	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 142
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	ListElement	go to state 138

State 238:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 80)

	OP21_LIST_COMMA	shift, and go to state 296

State 239:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 240:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-37 OPTIONAL-39	(Rule 153)

	LBRACE	shift, and go to state 298

	CodeBlock	go to state 297

State 241:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 242:

	Expression -> CONSTANT_SYMBOL LPAREN ')' .	(Rule 124)

	$default	reduce using rule 124 (Expression)

State 243:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 112)

	';'	shift, and go to state 299

State 244:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements . ';'	(Rule 111)

	';'	shift, and go to state 300

State 245:

	Operator -> OP10_STRINGIFY_UNARY SubExpression ')' .	(Rule 96)

	$default	reduce using rule 96 (Operator)

State 246:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 115)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	TypeInner	go to state 137
	WordScoped	go to state 78
	ArrayDereferenced	go to state 111
	ListElements	go to state 301
	Variable	go to state 145
	Expression	go to state 140
	HashDereferenced	go to state 108
	SubExpression	go to state 142
	Operator	go to state 120
	ArrayReference	go to state 106
	HashReference	go to state 116
	ListElement	go to state 138
	Literal	go to state 113

State 247:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 171)

	';'	shift, and go to state 302

State 248:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	SubExpressionOrStdin -> SubExpression .	(Rule 137)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

	';'	reduce using rule 137 (SubExpressionOrStdin)

State 249:

	SubExpressionOrStdin -> STDIN .	(Rule 138)

	$default	reduce using rule 138 (SubExpressionOrStdin)

State 250:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-33 ')'	(Rule 125)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 121 (OPTIONAL-33)

	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	ListElements	go to state 304
	TypeInner	go to state 137
	WordScoped	go to state 78
	Literal	go to state 113
	ArrayReference	go to state 106
	ListElement	go to state 138
	HashReference	go to state 116
	OPTIONAL-33	go to state 303
	Operator	go to state 120
	SubExpression	go to state 142
	HashDereferenced	go to state 108

State 251:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 172)

	';'	shift, and go to state 305
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 252:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 169)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 170)

	';'	shift, and go to state 306
	OP19_VARIABLE_ASSIGN	shift, and go to state 307

State 253:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-46 SubExpression	(Rule 190)

	'my'	shift, and go to state 144

	'%{'	reduce using rule 189 (OPTIONAL-46)
	'@{'	reduce using rule 189 (OPTIONAL-46)
	'undef'	reduce using rule 189 (OPTIONAL-46)
	CONSTANT_SYMBOL	reduce using rule 189 (OPTIONAL-46)
	LBRACE	reduce using rule 189 (OPTIONAL-46)
	LBRACKET	reduce using rule 189 (OPTIONAL-46)
	LITERAL_NUMBER	reduce using rule 189 (OPTIONAL-46)
	LITERAL_STRING	reduce using rule 189 (OPTIONAL-46)
	LPAREN	reduce using rule 189 (OPTIONAL-46)
	OP01_CLOSE	reduce using rule 189 (OPTIONAL-46)
	OP01_NAMED	reduce using rule 189 (OPTIONAL-46)
	OP01_OPEN	reduce using rule 189 (OPTIONAL-46)
	OP03_MATH_INC_DEC	reduce using rule 189 (OPTIONAL-46)
	OP05_LOGICAL_NEG	reduce using rule 189 (OPTIONAL-46)
	OP05_MATH_NEG_LPAREN	reduce using rule 189 (OPTIONAL-46)
	OP10_NAMED_UNARY	reduce using rule 189 (OPTIONAL-46)
	OP10_STRINGIFY_UNARY	reduce using rule 189 (OPTIONAL-46)
	OP22_LOGICAL_NEG	reduce using rule 189 (OPTIONAL-46)
	VARIABLE_SYMBOL	reduce using rule 189 (OPTIONAL-46)
	WORD	reduce using rule 189 (OPTIONAL-46)
	WORD_SCOPED	reduce using rule 189 (OPTIONAL-46)

	OPTIONAL-46	go to state 309
	TypeInner	go to state 308

State 254:

	STAR-48 -> STAR-48 . PAREN-47	(Rule 195)
	HashReference -> LBRACE HashEntry STAR-48 . '}'	(Rule 197)

	'}'	shift, and go to state 311
	OP21_LIST_COMMA	shift, and go to state 310

	PAREN-47	go to state 312

State 255:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 199)

	$default	reduce using rule 199 (HashDereferenced)

State 256:

	HashDereferenced -> '%{' Variable '}' .	(Rule 198)

	$default	reduce using rule 198 (HashDereferenced)

State 257:

	STAR-41 -> STAR-41 VariableRetrieval .	(Rule 163)

	$default	reduce using rule 163 (STAR-41)

State 258:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 167)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 168)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 313
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 111
	Variable	go to state 145
	Expression	go to state 140
	WordScoped	go to state 78
	ArrayReference	go to state 106
	HashReference	go to state 116
	Literal	go to state 113
	HashDereferenced	go to state 108
	SubExpression	go to state 314
	Operator	go to state 120

State 259:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 166)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	SubExpression	go to state 315
	HashDereferenced	go to state 108
	Operator	go to state 120
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	WordScoped	go to state 78

State 260:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 261:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 262:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 263:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 264:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 265:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 266:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_STRING_REPEAT	shift, and go to state 192

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 267:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 268:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 269:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 270:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 271:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 272:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 273:

	VariableOrLiteral -> Variable .	(Rule 206)

	$default	reduce using rule 206 (VariableOrLiteral)

State 274:

	VariableOrLiteral -> Literal .	(Rule 207)

	$default	reduce using rule 207 (VariableOrLiteral)

State 275:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 104)

	COLON	shift, and go to state 316

State 276:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 277:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 278:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 279:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 64)

	LBRACE	shift, and go to state 317

State 280:

	STAR-23 -> STAR-23 . MethodOrSubroutine	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 . LITERAL_NUMBER ';'	(Rule 59)

	'our'	shift, and go to state 320
	LITERAL_NUMBER	shift, and go to state 318

	MethodOrSubroutine	go to state 321
	Method	go to state 322
	Subroutine	go to state 319

State 281:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 323

State 282:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 324

State 283:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 284:

	TypeInnerConstant -> 'my' Type '$TYPED_' CONSTANT_SYMBOL . OP19_VARIABLE_ASSIGN	(Rule 205)

	OP19_VARIABLE_ASSIGN	shift, and go to state 325

State 285:

	Expression -> WordScoped LPAREN OPTIONAL-32 ')' .	(Rule 123)

	$default	reduce using rule 123 (Expression)

State 286:

	STAR-43 -> STAR-43 PAREN-42 .	(Rule 174)

	$default	reduce using rule 174 (STAR-43)

State 287:

	PAREN-42 -> OP21_LIST_COMMA . ListElement	(Rule 173)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 106
	HashReference	go to state 116
	ListElement	go to state 326
	Literal	go to state 113
	SubExpression	go to state 142
	HashDereferenced	go to state 108
	Operator	go to state 120
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	Expression	go to state 140
	TypeInner	go to state 137
	WordScoped	go to state 78

State 288:

	PLUS-44 -> PLUS-44 WORD .	(Rule 176)

	$default	reduce using rule 176 (PLUS-44)

State 289:

	ListElements -> OP01_QW PLUS-44 ')' .	(Rule 179)

	$default	reduce using rule 179 (ListElements)

State 290:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 204)

	WORD	shift, and go to state 327

State 291:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 157)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	WordScoped	go to state 78
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	SubExpression	go to state 328
	HashDereferenced	go to state 108
	Operator	go to state 120

State 292:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 159)

	LBRACE	shift, and go to state 298

	CodeBlock	go to state 329

State 293:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 158)

	LPAREN	shift, and go to state 330

State 294:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 331

State 295:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 78)

	')'	shift, and go to state 332

State 296:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	TypeInner	go to state 137
	WordScoped	go to state 78
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	ListElements	go to state 333
	Operator	go to state 120
	SubExpression	go to state 142
	HashDereferenced	go to state 108
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	ListElement	go to state 138

State 297:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-37 OPTIONAL-39	(Rule 153)

	$default	reduce using rule 149 (STAR-37)

	STAR-37	go to state 334

State 298:

	CodeBlock -> LBRACE . PLUS-40 '}'	(Rule 162)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'if ('	shift, and go to state 99
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 107
	OP01_NAMED_VOID	shift, and go to state 100
	OP01_NAMED_VOID_SCOLON	shift, and go to state 85
	OP01_OPEN	shift, and go to state 89
	OP01_PRINT	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 101
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 141 (OPTIONAL-35)
	'foreach my'	reduce using rule 141 (OPTIONAL-35)
	'while ('	reduce using rule 141 (OPTIONAL-35)

	OPTIONAL-35	go to state 88
	Literal	go to state 113
	PAREN-34	go to state 117
	HashReference	go to state 116
	Statement	go to state 121
	Conditional	go to state 92
	LoopLabel	go to state 91
	Operator	go to state 120
	OperatorVoid	go to state 123
	SubExpression	go to state 122
	ArrayDereferenced	go to state 111
	Variable	go to state 109
	VariableModification	go to state 80
	ArrayReference	go to state 106
	VariableDeclaration	go to state 83
	HashDereferenced	go to state 108
	Expression	go to state 96
	Operation	go to state 336
	PLUS-40	go to state 335
	WordScoped	go to state 78

State 299:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 112)

	$default	reduce using rule 112 (OperatorVoid)

State 300:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';' .	(Rule 111)

	$default	reduce using rule 111 (OperatorVoid)

State 301:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 115)

	';'	shift, and go to state 337

State 302:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 171)

	$default	reduce using rule 171 (VariableModification)

State 303:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 . ')'	(Rule 125)

	')'	shift, and go to state 338

State 304:

	OPTIONAL-33 -> ListElements .	(Rule 120)

	$default	reduce using rule 120 (OPTIONAL-33)

State 305:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 172)

	$default	reduce using rule 172 (VariableModification)

State 306:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 169)

	$default	reduce using rule 169 (VariableDeclaration)

State 307:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 170)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	STDIN	shift, and go to state 249
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	HashDereferenced	go to state 108
	SubExpression	go to state 248
	Operator	go to state 120
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	SubExpressionOrStdin	go to state 339

State 308:

	OPTIONAL-46 -> TypeInner .	(Rule 188)

	$default	reduce using rule 188 (OPTIONAL-46)

State 309:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 . SubExpression	(Rule 190)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	WordScoped	go to state 78
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113
	HashDereferenced	go to state 108
	SubExpression	go to state 340
	Operator	go to state 120

State 310:

	PAREN-47 -> OP21_LIST_COMMA . HashEntry	(Rule 194)

	'%{'	shift, and go to state 114
	WORD	shift, and go to state 183

	HashEntry	go to state 341
	HashDereferenced	go to state 182

State 311:

	HashReference -> LBRACE HashEntry STAR-48 '}' .	(Rule 197)

	$default	reduce using rule 197 (HashReference)

State 312:

	STAR-48 -> STAR-48 PAREN-47 .	(Rule 195)

	$default	reduce using rule 195 (STAR-48)

State 313:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 168)
	WordScoped -> WORD .	(Rule 200)

	'}'	shift, and go to state 342

	LPAREN	reduce using rule 200 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 200 (WordScoped)

State 314:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 167)

	'}'	shift, and go to state 343
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 315:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 166)

	']'	shift, and go to state 344
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 316:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 104)

	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	VARIABLE_SYMBOL	shift, and go to state 115

	Variable	go to state 273
	Literal	go to state 274
	VariableOrLiteral	go to state 345

State 317:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 64)

	'%{'	shift, and go to state 114
	'}'	shift, and go to state 349
	WORD	shift, and go to state 347

	HashEntryTyped	go to state 346
	HashDereferenced	go to state 348

State 318:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER . ';'	(Rule 59)

	';'	shift, and go to state 350

State 319:

	MethodOrSubroutine -> Subroutine .	(Rule 75)

	$default	reduce using rule 75 (MethodOrSubroutine)

State 320:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	TYPE_METHOD	shift, and go to state 351
	WORD	shift, and go to state 51

	Type	go to state 52

State 321:

	STAR-23 -> STAR-23 MethodOrSubroutine .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 322:

	MethodOrSubroutine -> Method .	(Rule 74)

	$default	reduce using rule 74 (MethodOrSubroutine)

State 323:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 352
	OP21_LIST_COMMA	shift, and go to state 354

	PAREN-18	go to state 353

State 324:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 325:

	TypeInnerConstant -> 'my' Type '$TYPED_' CONSTANT_SYMBOL OP19_VARIABLE_ASSIGN .	(Rule 205)

	$default	reduce using rule 205 (TypeInnerConstant)

State 326:

	PAREN-42 -> OP21_LIST_COMMA ListElement .	(Rule 173)

	$default	reduce using rule 173 (PAREN-42)

State 327:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 204)

	OP19_VARIABLE_ASSIGN	shift, and go to state 355

State 328:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 157)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 356
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 329:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 159)

	$default	reduce using rule 159 (LoopWhile)

State 330:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 158)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'my'	shift, and go to state 144
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	KEYS_OR_VALUES	shift, and go to state 143
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	TypeInner	go to state 137
	ListElements	go to state 357
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	SubExpression	go to state 142
	HashDereferenced	go to state 108
	Operator	go to state 120
	HashReference	go to state 116
	ListElement	go to state 138
	ArrayReference	go to state 106
	Literal	go to state 113

State 331:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	LITERAL_STRING	shift, and go to state 358

State 332:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 78)

	$default	reduce using rule 78 (Operator)

State 333:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 80)

	')'	shift, and go to state 359

State 334:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 148)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-37 . OPTIONAL-39	(Rule 153)

	'else'	shift, and go to state 362
	'elsif ('	shift, and go to state 360

	$end	reduce using rule 152 (OPTIONAL-39)
	'%{'	reduce using rule 152 (OPTIONAL-39)
	'@{'	reduce using rule 152 (OPTIONAL-39)
	'for my integer'	reduce using rule 152 (OPTIONAL-39)
	'foreach my'	reduce using rule 152 (OPTIONAL-39)
	'if ('	reduce using rule 152 (OPTIONAL-39)
	'my'	reduce using rule 152 (OPTIONAL-39)
	'undef'	reduce using rule 152 (OPTIONAL-39)
	'while ('	reduce using rule 152 (OPTIONAL-39)
	'}'	reduce using rule 152 (OPTIONAL-39)
	CONSTANT_SYMBOL	reduce using rule 152 (OPTIONAL-39)
	LBRACE	reduce using rule 152 (OPTIONAL-39)
	LBRACKET	reduce using rule 152 (OPTIONAL-39)
	LITERAL_NUMBER	reduce using rule 152 (OPTIONAL-39)
	LITERAL_STRING	reduce using rule 152 (OPTIONAL-39)
	LPAREN	reduce using rule 152 (OPTIONAL-39)
	OP01_CLOSE	reduce using rule 152 (OPTIONAL-39)
	OP01_NAMED	reduce using rule 152 (OPTIONAL-39)
	OP01_NAMED_VOID	reduce using rule 152 (OPTIONAL-39)
	OP01_NAMED_VOID_SCOLON	reduce using rule 152 (OPTIONAL-39)
	OP01_OPEN	reduce using rule 152 (OPTIONAL-39)
	OP01_PRINT	reduce using rule 152 (OPTIONAL-39)
	OP03_MATH_INC_DEC	reduce using rule 152 (OPTIONAL-39)
	OP05_LOGICAL_NEG	reduce using rule 152 (OPTIONAL-39)
	OP05_MATH_NEG_LPAREN	reduce using rule 152 (OPTIONAL-39)
	OP10_NAMED_UNARY	reduce using rule 152 (OPTIONAL-39)
	OP10_STRINGIFY_UNARY	reduce using rule 152 (OPTIONAL-39)
	OP19_LOOP_CONTROL	reduce using rule 152 (OPTIONAL-39)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 152 (OPTIONAL-39)
	OP22_LOGICAL_NEG	reduce using rule 152 (OPTIONAL-39)
	VARIABLE_SYMBOL	reduce using rule 152 (OPTIONAL-39)
	WORD	reduce using rule 152 (OPTIONAL-39)
	WORD_SCOPED	reduce using rule 152 (OPTIONAL-39)

	PAREN-38	go to state 363
	PAREN-36	go to state 361
	OPTIONAL-39	go to state 364

State 335:

	PLUS-40 -> PLUS-40 . Operation	(Rule 160)
	CodeBlock -> LBRACE PLUS-40 . '}'	(Rule 162)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'if ('	shift, and go to state 99
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 84
	'}'	shift, and go to state 366
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 107
	OP01_NAMED_VOID	shift, and go to state 100
	OP01_NAMED_VOID_SCOLON	shift, and go to state 85
	OP01_OPEN	shift, and go to state 89
	OP01_PRINT	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 101
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 141 (OPTIONAL-35)
	'foreach my'	reduce using rule 141 (OPTIONAL-35)
	'while ('	reduce using rule 141 (OPTIONAL-35)

	Operation	go to state 365
	Expression	go to state 96
	WordScoped	go to state 78
	ArrayReference	go to state 106
	VariableModification	go to state 80
	HashDereferenced	go to state 108
	VariableDeclaration	go to state 83
	ArrayDereferenced	go to state 111
	Variable	go to state 109
	PAREN-34	go to state 117
	HashReference	go to state 116
	Literal	go to state 113
	OPTIONAL-35	go to state 88
	SubExpression	go to state 122
	OperatorVoid	go to state 123
	LoopLabel	go to state 91
	Statement	go to state 121
	Conditional	go to state 92
	Operator	go to state 120

State 336:

	PLUS-40 -> Operation .	(Rule 161)

	$default	reduce using rule 161 (PLUS-40)

State 337:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 338:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')' .	(Rule 125)

	$default	reduce using rule 125 (Expression)

State 339:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 170)

	';'	shift, and go to state 367

State 340:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 SubExpression .	(Rule 190)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

	'}'	reduce using rule 190 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 190 (HashEntry)

State 341:

	PAREN-47 -> OP21_LIST_COMMA HashEntry .	(Rule 194)

	$default	reduce using rule 194 (PAREN-47)

State 342:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 168)

	$default	reduce using rule 168 (VariableRetrieval)

State 343:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 167)

	$default	reduce using rule 167 (VariableRetrieval)

State 344:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 166)

	$default	reduce using rule 166 (VariableRetrieval)

State 345:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 346:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-25 '}' ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 368

State 347:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 192)

	OP20_HASH_FATARROW	shift, and go to state 369

State 348:

	HashEntryTyped -> HashDereferenced .	(Rule 193)

	$default	reduce using rule 193 (HashEntryTyped)

State 349:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 64)

	';'	shift, and go to state 370

State 350:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';' .	(Rule 59)

	$default	reduce using rule 59 (Class)

State 351:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	VARIABLE_SYMBOL	shift, and go to state 371

State 352:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 372

State 353:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 354:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 373

State 355:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 204)

	$default	reduce using rule 204 (TypeInner)

State 356:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 103)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 157)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 374
	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	WordScoped	go to state 78
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145

State 357:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 158)

	')'	shift, and go to state 375

State 358:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 376

State 359:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 80)

	$default	reduce using rule 80 (Operator)

State 360:

	PAREN-36 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 147)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	Expression	go to state 140
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Operator	go to state 120
	HashDereferenced	go to state 108
	SubExpression	go to state 377
	Literal	go to state 113
	HashReference	go to state 116
	ArrayReference	go to state 106

State 361:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 148)

	$default	reduce using rule 148 (STAR-37)

State 362:

	PAREN-38 -> 'else' . CodeBlock	(Rule 150)

	LBRACE	shift, and go to state 298

	CodeBlock	go to state 378

State 363:

	OPTIONAL-39 -> PAREN-38 .	(Rule 151)

	$default	reduce using rule 151 (OPTIONAL-39)

State 364:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-37 OPTIONAL-39 .	(Rule 153)

	$default	reduce using rule 153 (Conditional)

State 365:

	PLUS-40 -> PLUS-40 Operation .	(Rule 160)

	$default	reduce using rule 160 (PLUS-40)

State 366:

	CodeBlock -> LBRACE PLUS-40 '}' .	(Rule 162)

	$default	reduce using rule 162 (CodeBlock)

State 367:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 170)

	$default	reduce using rule 170 (VariableDeclaration)

State 368:

	STAR-25 -> STAR-25 . PAREN-24	(Rule 61)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 . '}' ';'	(Rule 63)

	'}'	shift, and go to state 379
	OP21_LIST_COMMA	shift, and go to state 380

	PAREN-24	go to state 381

State 369:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 192)

	'my'	shift, and go to state 144

	TypeInner	go to state 382

State 370:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 64)

	$default	reduce using rule 64 (Properties)

State 371:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	'= sub {'	shift, and go to state 383

State 372:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 384

State 373:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 51

	Type	go to state 385

State 374:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 157)

	')'	shift, and go to state 386
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 375:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 158)

	LBRACE	shift, and go to state 298

	CodeBlock	go to state 387

State 376:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 81)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 78
	Variable	go to state 145
	ArrayDereferenced	go to state 111
	Expression	go to state 140
	SubExpression	go to state 388
	HashDereferenced	go to state 108
	Operator	go to state 120
	HashReference	go to state 116
	ArrayReference	go to state 106
	Literal	go to state 113

State 377:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	PAREN-36 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 147)

	')'	shift, and go to state 389
	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

State 378:

	PAREN-38 -> 'else' CodeBlock .	(Rule 150)

	$default	reduce using rule 150 (PAREN-38)

State 379:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' . ';'	(Rule 63)

	';'	shift, and go to state 390

State 380:

	PAREN-24 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 60)

	'%{'	shift, and go to state 114
	WORD	shift, and go to state 347

	HashEntryTyped	go to state 391
	HashDereferenced	go to state 348

State 381:

	STAR-25 -> STAR-25 PAREN-24 .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 382:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 192)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 139
	OP01_OPEN	shift, and go to state 89
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 22
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 113
	ArrayReference	go to state 106
	HashReference	go to state 116
	Operator	go to state 120
	SubExpression	go to state 392
	HashDereferenced	go to state 108
	Expression	go to state 140
	ArrayDereferenced	go to state 111
	Variable	go to state 145
	WordScoped	go to state 78

State 383:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	'( my'	shift, and go to state 395

	'%{'	reduce using rule 66 (OPTIONAL-26)
	'@{'	reduce using rule 66 (OPTIONAL-26)
	'for my integer'	reduce using rule 66 (OPTIONAL-26)
	'foreach my'	reduce using rule 66 (OPTIONAL-26)
	'if ('	reduce using rule 66 (OPTIONAL-26)
	'my'	reduce using rule 66 (OPTIONAL-26)
	'undef'	reduce using rule 66 (OPTIONAL-26)
	'while ('	reduce using rule 66 (OPTIONAL-26)
	CONSTANT_SYMBOL	reduce using rule 66 (OPTIONAL-26)
	LBRACE	reduce using rule 66 (OPTIONAL-26)
	LBRACKET	reduce using rule 66 (OPTIONAL-26)
	LITERAL_NUMBER	reduce using rule 66 (OPTIONAL-26)
	LITERAL_STRING	reduce using rule 66 (OPTIONAL-26)
	LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP01_CLOSE	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP01_OPEN	reduce using rule 66 (OPTIONAL-26)
	OP01_PRINT	reduce using rule 66 (OPTIONAL-26)
	OP03_MATH_INC_DEC	reduce using rule 66 (OPTIONAL-26)
	OP05_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	OP05_MATH_NEG_LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP10_NAMED_UNARY	reduce using rule 66 (OPTIONAL-26)
	OP10_STRINGIFY_UNARY	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP22_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	VARIABLE_SYMBOL	reduce using rule 66 (OPTIONAL-26)
	WORD	reduce using rule 66 (OPTIONAL-26)
	WORD_SCOPED	reduce using rule 66 (OPTIONAL-26)

	MethodArguments	go to state 393
	OPTIONAL-26	go to state 394

State 384:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 385:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 396

State 386:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 157)

	LBRACE	shift, and go to state 298

	CodeBlock	go to state 397

State 387:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (LoopForEach)

State 388:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 81)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205

	')'	reduce using rule 81 (Operator)
	';'	reduce using rule 81 (Operator)
	']'	reduce using rule 81 (Operator)
	'}'	reduce using rule 81 (Operator)
	OP21_LIST_COMMA	reduce using rule 81 (Operator)
	OP23_LOGICAL_AND	reduce using rule 81 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 81 (Operator)

State 389:

	PAREN-36 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 147)

	LBRACE	shift, and go to state 298

	CodeBlock	go to state 398

State 390:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';' .	(Rule 63)

	$default	reduce using rule 63 (Properties)

State 391:

	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 60)

	$default	reduce using rule 60 (PAREN-24)

State 392:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 97)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 98)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 100)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 101)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 102)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 103)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 107)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 192)

	OP04_MATH_POW	shift, and go to state 206
	OP06_REGEX_MATCH	shift, and go to state 208
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 198
	OP07_STRING_REPEAT	shift, and go to state 192
	OP08_MATH_ADD_SUB	shift, and go to state 203
	OP08_STRING_CAT	shift, and go to state 207
	OP09_BITWISE_SHIFT	shift, and go to state 201
	OP11_COMPARE_LT_GT	shift, and go to state 195
	OP12_COMPARE_EQ_NE	shift, and go to state 196
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 204
	OP15_LOGICAL_AND	shift, and go to state 194
	OP16_LOGICAL_OR	shift, and go to state 202
	OP17_LIST_RANGE	shift, and go to state 200
	OP18_TERNARY	shift, and go to state 205
	OP23_LOGICAL_AND	shift, and go to state 199
	OP24_LOGICAL_OR_XOR	shift, and go to state 197

	'}'	reduce using rule 192 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 192 (HashEntryTyped)

State 393:

	OPTIONAL-26 -> MethodArguments .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-26)

State 394:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 . PLUS-27 '}' ';'	(Rule 69)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'if ('	shift, and go to state 99
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 84
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 107
	OP01_NAMED_VOID	shift, and go to state 100
	OP01_NAMED_VOID_SCOLON	shift, and go to state 85
	OP01_OPEN	shift, and go to state 89
	OP01_PRINT	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 101
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 141 (OPTIONAL-35)
	'foreach my'	reduce using rule 141 (OPTIONAL-35)
	'while ('	reduce using rule 141 (OPTIONAL-35)

	ArrayDereferenced	go to state 111
	Variable	go to state 109
	PLUS-27	go to state 400
	PAREN-34	go to state 117
	HashReference	go to state 116
	OPTIONAL-35	go to state 88
	Literal	go to state 113
	OperatorVoid	go to state 123
	SubExpression	go to state 122
	LoopLabel	go to state 91
	Statement	go to state 121
	Conditional	go to state 92
	Operator	go to state 120
	Expression	go to state 96
	Operation	go to state 399
	WordScoped	go to state 78
	ArrayReference	go to state 106
	VariableModification	go to state 80
	HashDereferenced	go to state 108
	VariableDeclaration	go to state 83

State 395:

	MethodArguments -> '( my' . TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	TYPE_SELF	shift, and go to state 401

State 396:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 397:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 157)

	$default	reduce using rule 157 (LoopFor)

State 398:

	PAREN-36 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 147)

	$default	reduce using rule 147 (PAREN-36)

State 399:

	PLUS-27 -> Operation .	(Rule 68)

	$default	reduce using rule 68 (PLUS-27)

State 400:

	PLUS-27 -> PLUS-27 . Operation	(Rule 67)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 . '}' ';'	(Rule 69)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 81
	'if ('	shift, and go to state 99
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 84
	'}'	shift, and go to state 402
	CONSTANT_SYMBOL	shift, and go to state 102
	LBRACE	shift, and go to state 112
	LBRACKET	shift, and go to state 79
	LITERAL_NUMBER	shift, and go to state 90
	LITERAL_STRING	shift, and go to state 77
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 82
	OP01_NAMED	shift, and go to state 107
	OP01_NAMED_VOID	shift, and go to state 100
	OP01_NAMED_VOID_SCOLON	shift, and go to state 85
	OP01_OPEN	shift, and go to state 89
	OP01_PRINT	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 86
	OP05_MATH_NEG_LPAREN	shift, and go to state 93
	OP10_NAMED_UNARY	shift, and go to state 119
	OP10_STRINGIFY_UNARY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 94
	OP22_LOGICAL_NEG	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 101
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 141 (OPTIONAL-35)
	'foreach my'	reduce using rule 141 (OPTIONAL-35)
	'while ('	reduce using rule 141 (OPTIONAL-35)

	HashReference	go to state 116
	PAREN-34	go to state 117
	Literal	go to state 113
	OPTIONAL-35	go to state 88
	OperatorVoid	go to state 123
	SubExpression	go to state 122
	Operator	go to state 120
	Statement	go to state 121
	LoopLabel	go to state 91
	Conditional	go to state 92
	Variable	go to state 109
	ArrayDereferenced	go to state 111
	ArrayReference	go to state 106
	VariableModification	go to state 80
	HashDereferenced	go to state 108
	VariableDeclaration	go to state 83
	Expression	go to state 96
	Operation	go to state 403
	WordScoped	go to state 78

State 401:

	MethodArguments -> '( my' TYPE_SELF . STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 404

State 402:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' . ';'	(Rule 69)

	';'	shift, and go to state 405

State 403:

	PLUS-27 -> PLUS-27 Operation .	(Rule 67)

	$default	reduce using rule 67 (PLUS-27)

State 404:

	STAR-29 -> STAR-29 . PAREN-28	(Rule 71)
	MethodArguments -> '( my' TYPE_SELF STAR-29 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	')'	shift, and go to state 408
	OP21_LIST_COMMA	shift, and go to state 407

	PAREN-28	go to state 406

State 405:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';' .	(Rule 69)

	$default	reduce using rule 69 (Method)

State 406:

	STAR-29 -> STAR-29 PAREN-28 .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 407:

	PAREN-28 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 70)

	'my'	shift, and go to state 409

State 408:

	MethodArguments -> '( my' TYPE_SELF STAR-29 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	OP19_VARIABLE_ASSIGN	shift, and go to state 410

State 409:

	PAREN-28 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 70)

	WORD	shift, and go to state 51

	Type	go to state 411

State 410:

	MethodArguments -> '( my' TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 73)

	'@_;'	shift, and go to state 412

State 411:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 70)

	VARIABLE_SYMBOL	shift, and go to state 413

State 412:

	MethodArguments -> '( my' TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 73)

	$default	reduce using rule 73 (MethodArguments)

State 413:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 70)

	$default	reduce using rule 70 (PAREN-28)


Summary:
--------
Number of rules         : 210
Number of terminals     : 91
Number of non-terminals : 97
Number of states        : 414
