Conflicts:
----------
Conflict in state 98 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 98 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 98 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 98 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 98 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 98 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 98 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 98 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 98 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 98 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 98 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 98 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 98 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 98 between rule 113 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 98 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 98 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 105 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 105 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 105 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 105 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 105 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 105 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 105 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 105 between rule 114 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 105 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 105 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 105 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 105 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 105 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 105 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 105 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 105 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 107 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 107 between rule 123 and token OP18_TERNARY resolved as shift.
Conflict in state 107 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 107 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 107 between rule 123 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 107 between rule 123 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 107 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 107 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 107 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 107 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 107 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 107 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 107 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 107 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 107 between rule 123 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 107 between rule 123 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 139 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 139 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 139 between rule 106 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 139 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 139 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 139 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 139 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 139 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 139 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 139 between rule 106 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 139 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 139 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 139 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 139 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 139 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 139 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 204 between rule 125 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 204 between rule 125 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 204 between rule 125 and token OP08_STRING_CAT resolved as shift.
Conflict in state 204 between rule 125 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 204 between rule 125 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 204 between rule 125 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 204 between rule 125 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 204 between rule 125 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 204 between rule 125 and token OP04_MATH_POW resolved as shift.
Conflict in state 204 between rule 125 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 204 between rule 125 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 204 between rule 125 and token OP18_TERNARY resolved as shift.
Conflict in state 204 between rule 125 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 204 between rule 125 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 204 between rule 125 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 204 between rule 125 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 206 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 206 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 206 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 206 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 206 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 206 between rule 115 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 206 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 206 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 206 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 206 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 206 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 206 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 206 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 206 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 207 between rule 116 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 207 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 207 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 207 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 207 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 207 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 207 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 207 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 207 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 207 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 207 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 207 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 207 between rule 116 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 207 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 208 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 208 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 208 between rule 121 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 208 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 208 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 208 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 208 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 208 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 208 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 208 between rule 121 and token OP18_TERNARY resolved as reduce.
Conflict in state 208 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 208 between rule 121 and token OP17_LIST_RANGE resolved as error.
Conflict in state 208 between rule 121 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 208 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 208 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 209 between rule 110 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 209 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 209 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 209 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 209 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 209 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 209 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 209 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 209 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 209 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 209 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 209 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 209 between rule 110 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 209 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 210 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 210 between rule 112 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 210 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 210 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 210 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 210 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 210 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 210 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 210 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 210 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 210 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 210 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 210 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 210 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 210 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 117 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 211 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 211 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 211 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 211 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 211 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 211 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 211 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 211 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 211 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 211 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 211 between rule 117 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 211 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 211 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 212 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 212 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 111 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 212 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 212 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 212 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 212 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 212 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 212 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 212 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 212 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 212 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 212 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 212 between rule 111 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 212 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 213 between rule 120 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 120 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 213 between rule 120 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 213 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 213 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 213 between rule 120 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 213 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 213 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 213 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 213 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 213 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 213 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 213 between rule 120 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 213 between rule 120 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 213 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 120 and token OP18_TERNARY resolved as reduce.
Conflict in state 214 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 214 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 214 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 214 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 214 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 109 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 214 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 214 between rule 109 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 214 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 214 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 214 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 214 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 214 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 214 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 214 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 215 between rule 124 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 215 between rule 124 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 215 between rule 124 and token OP08_STRING_CAT resolved as shift.
Conflict in state 215 between rule 124 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 215 between rule 124 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 124 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 215 between rule 124 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 215 between rule 124 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 215 between rule 124 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 215 between rule 124 and token OP04_MATH_POW resolved as shift.
Conflict in state 215 between rule 124 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 215 between rule 124 and token OP18_TERNARY resolved as shift.
Conflict in state 215 between rule 124 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 124 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 215 between rule 124 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 215 between rule 124 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 216 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 216 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 216 between rule 105 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 216 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 216 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 216 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 216 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 216 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 216 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 216 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 216 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 216 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 216 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 216 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 217 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 217 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 217 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 217 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 217 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 217 between rule 119 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 217 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 217 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 217 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 217 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 217 between rule 119 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 217 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 217 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 119 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 217 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 218 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 218 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 218 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 218 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 218 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 218 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 218 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 218 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 218 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 218 between rule 118 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 218 between rule 118 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 218 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 218 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 218 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Critic
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Include
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Constant
10:	STAR-4 -> /* empty */
11:	STAR-5 -> STAR-5 Subroutine
12:	STAR-5 -> /* empty */
13:	PLUS-6 -> PLUS-6 Operation
14:	PLUS-6 -> Operation
15:	Program -> '#!/usr/bin/perl' Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6
16:	Module -> Package
17:	Module -> Class
18:	STAR-7 -> STAR-7 Critic
19:	STAR-7 -> /* empty */
20:	STAR-8 -> STAR-8 Include
21:	STAR-8 -> /* empty */
22:	STAR-9 -> STAR-9 Constant
23:	STAR-9 -> /* empty */
24:	PLUS-10 -> PLUS-10 Subroutine
25:	PLUS-10 -> Subroutine
26:	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'
27:	Header -> USE_STRICT USE_WARNINGS USE_RPERL 'our' VERSION_NUMBER_ASSIGN
28:	PLUS-11 -> PLUS-11 WORD
29:	PLUS-11 -> WORD
30:	Critic -> '## no critic qw(' PLUS-11 ')'
31:	PLUS-12 -> PLUS-12 WORD
32:	PLUS-12 -> WORD
33:	Include -> 'fuse' WordScoped ';'
34:	Include -> 'fuse' WordScoped 'qw(' PLUS-12 ')' ';'
35:	Constant -> USE_CONSTANT WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
36:	OPTIONAL-13 -> TypeInner
37:	OPTIONAL-13 -> /* empty */
38:	OPTIONAL-14 -> TypeInner
39:	OPTIONAL-14 -> /* empty */
40:	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal
41:	STAR-16 -> STAR-16 PAREN-15
42:	STAR-16 -> /* empty */
43:	OPTIONAL-17 -> TypeInner
44:	OPTIONAL-17 -> /* empty */
45:	OPTIONAL-18 -> TypeInner
46:	OPTIONAL-18 -> /* empty */
47:	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal
48:	STAR-20 -> STAR-20 PAREN-19
49:	STAR-20 -> /* empty */
50:	ConstantValue -> Literal
51:	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']'
52:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'
53:	OPTIONAL-21 -> SubroutineArguments
54:	OPTIONAL-21 -> /* empty */
55:	PLUS-22 -> PLUS-22 Operation
56:	PLUS-22 -> Operation
57:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'
58:	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
59:	STAR-24 -> STAR-24 PAREN-23
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 ArgumentCheck
62:	STAR-25 -> /* empty */
63:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25
64:	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
65:	OPTIONAL-27 -> PAREN-26
66:	OPTIONAL-27 -> /* empty */
67:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';'
68:	STAR-28 -> STAR-28 Critic
69:	STAR-28 -> /* empty */
70:	STAR-29 -> STAR-29 Include
71:	STAR-29 -> /* empty */
72:	STAR-30 -> STAR-30 Constant
73:	STAR-30 -> /* empty */
74:	STAR-31 -> STAR-31 Method
75:	STAR-31 -> /* empty */
76:	PLUS-32 -> PLUS-32 Subroutine
77:	PLUS-32 -> Subroutine
78:	PAREN-33 -> PLUS-32 '1;' '1;'
79:	OPTIONAL-34 -> PAREN-33
80:	OPTIONAL-34 -> /* empty */
81:	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34
82:	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped
83:	STAR-36 -> STAR-36 PAREN-35
84:	STAR-36 -> /* empty */
85:	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';'
86:	Properties -> 'our %properties = (' ')' ';'
87:	OPTIONAL-37 -> MethodArguments
88:	OPTIONAL-37 -> /* empty */
89:	PLUS-38 -> PLUS-38 Operation
90:	PLUS-38 -> Operation
91:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'
92:	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
93:	STAR-40 -> STAR-40 PAREN-39
94:	STAR-40 -> /* empty */
95:	STAR-41 -> STAR-41 ArgumentCheck
96:	STAR-41 -> /* empty */
97:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41
98:	Operation -> Expression ';'
99:	Operation -> Statement
100:	OPTIONAL-42 -> ListElements
101:	OPTIONAL-42 -> /* empty */
102:	Operator -> OP01_NAMED '(' OPTIONAL-42 ')'
103:	Operator -> OP03_MATH_INC_DEC Variable
104:	Operator -> Variable OP03_MATH_INC_DEC
105:	Operator -> Expression OP04_MATH_POW Expression
106:	Operator -> OP05_LOGICAL_NEG Expression
107:	Operator -> OP05_MATH_NEG Expression ')'
108:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
109:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
110:	Operator -> Expression OP08_MATH_ADD_SUB Expression
111:	Operator -> Expression OP08_STRING_CAT Expression
112:	Operator -> Expression OP09_BITWISE_SHIFT Expression
113:	Operator -> OP10_NAMED_UNARY Expression
114:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
115:	Operator -> Expression OP11_COMPARE_LT_GT Expression
116:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
117:	Operator -> Expression OP13_BITWISE_AND Expression
118:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
119:	Operator -> Expression OP15_LOGICAL_AND Expression
120:	Operator -> Expression OP16_LOGICAL_OR Expression
121:	Operator -> Expression OP17_LIST_RANGE Expression
122:	Operator -> Expression OP18_TERNARY Variable COLON Variable
123:	Operator -> OP22_LOGICAL_NOT Expression
124:	Operator -> Expression OP23_LOGICAL_AND Expression
125:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
126:	OPTIONAL-43 -> ListElements
127:	OPTIONAL-43 -> /* empty */
128:	OPTIONAL-44 -> ListElements
129:	OPTIONAL-44 -> /* empty */
130:	OPTIONAL-45 -> ListElements
131:	OPTIONAL-45 -> /* empty */
132:	OPTIONAL-46 -> ListElements
133:	OPTIONAL-46 -> /* empty */
134:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';'
135:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';'
136:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';'
137:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';'
138:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
139:	OPTIONAL-47 -> ListElements
140:	OPTIONAL-47 -> /* empty */
141:	OPTIONAL-48 -> ListElements
142:	OPTIONAL-48 -> /* empty */
143:	Expression -> 'undef'
144:	Expression -> Literal
145:	Expression -> Variable
146:	Expression -> ArrayReference
147:	Expression -> ArrayDereferenced
148:	Expression -> HashReference
149:	Expression -> HashDereferenced
150:	Expression -> '{' '}'
151:	Expression -> Operator
152:	Expression -> WordScoped '(' OPTIONAL-47 ')'
153:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'
154:	Expression -> '(' Expression ')'
155:	ExpressionOrStdin -> Expression
156:	ExpressionOrStdin -> '<STDIN>'
157:	PAREN-49 -> LoopLabel COLON
158:	OPTIONAL-50 -> PAREN-49
159:	OPTIONAL-50 -> /* empty */
160:	Statement -> Conditional
161:	Statement -> OPTIONAL-50 Loop
162:	Statement -> OperatorVoid
163:	Statement -> VariableDeclaration
164:	Statement -> VariableModification
165:	PAREN-51 -> 'elsif (' Expression ')' CodeBlock
166:	STAR-52 -> STAR-52 PAREN-51
167:	STAR-52 -> /* empty */
168:	PAREN-53 -> 'else' CodeBlock
169:	OPTIONAL-54 -> PAREN-53
170:	OPTIONAL-54 -> /* empty */
171:	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54
172:	Loop -> LoopFor
173:	Loop -> LoopForEach
174:	Loop -> LoopWhile
175:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
176:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
177:	LoopWhile -> 'while (' Expression ')' CodeBlock
178:	PLUS-55 -> PLUS-55 Operation
179:	PLUS-55 -> Operation
180:	CodeBlock -> '{' PLUS-55 '}'
181:	STAR-56 -> STAR-56 VariableRetrieval
182:	STAR-56 -> /* empty */
183:	Variable -> VARIABLE_SYMBOL STAR-56
184:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
185:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
186:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
187:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
188:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
189:	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
190:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
191:	PAREN-57 -> OP21_LIST_COMMA ListElement
192:	STAR-58 -> STAR-58 PAREN-57
193:	STAR-58 -> /* empty */
194:	PLUS-59 -> PLUS-59 WORD
195:	PLUS-59 -> WORD
196:	ListElements -> ListElement STAR-58
197:	ListElements -> OP01_NAMED_QW '(' PLUS-59 ')'
198:	ListElement -> Expression
199:	ListElement -> TypeInner Expression
200:	ListElement -> KEYS_OR_VALUES HashDereferenced
201:	OPTIONAL-60 -> ListElements
202:	OPTIONAL-60 -> /* empty */
203:	ArrayReference -> '[' OPTIONAL-60 ']'
204:	ArrayDereferenced -> '@{' Variable '}'
205:	ArrayDereferenced -> '@{' ArrayReference '}'
206:	OPTIONAL-61 -> TypeInner
207:	OPTIONAL-61 -> /* empty */
208:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-61 Expression
209:	HashEntry -> HashDereferenced
210:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
211:	HashEntryTyped -> HashDereferenced
212:	PAREN-62 -> OP21_LIST_COMMA HashEntry
213:	STAR-63 -> STAR-63 PAREN-62
214:	STAR-63 -> /* empty */
215:	HashReference -> '{' HashEntry STAR-63 '}'
216:	HashDereferenced -> '%{' Variable '}'
217:	HashDereferenced -> '%{' HashReference '}'
218:	WordScoped -> WORD
219:	WordScoped -> WORD_SCOPED
220:	FileHandle -> '{*' WORD '}'
221:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
222:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
223:	Type -> WORD
224:	LoopLabel -> WORD
225:	Literal -> LITERAL_STRING
226:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'#!/usr/bin/perl'	shift, and go to state 6
	'package'	shift, and go to state 2

	CompileUnit	go to state 8
	Package	go to state 3
	PLUS-1	go to state 5
	Module	go to state 4
	Class	go to state 7
	Program	go to state 1

State 1:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 2:

	Package -> 'package' . WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' . WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 11

State 3:

	Module -> Package .	(Rule 16)

	$default	reduce using rule 16 (Module)

State 4:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 5:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 2

	$end	reduce using rule 4 (CompileUnit)

	Module	go to state 12
	Class	go to state 7
	Package	go to state 3

State 6:

	Program -> '#!/usr/bin/perl' . Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	USE_STRICT	shift, and go to state 13

	Header	go to state 14

State 7:

	Module -> Class .	(Rule 17)

	$default	reduce using rule 17 (Module)

State 8:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 15

State 9:

	WordScoped -> WORD_SCOPED .	(Rule 219)

	$default	reduce using rule 219 (WordScoped)

State 10:

	WordScoped -> WORD .	(Rule 218)

	$default	reduce using rule 218 (WordScoped)

State 11:

	Package -> 'package' WordScoped . ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped . ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 16

State 12:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 13:

	Header -> USE_STRICT . USE_WARNINGS USE_RPERL 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	USE_WARNINGS	shift, and go to state 17

State 14:

	Program -> '#!/usr/bin/perl' Header . STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 18

State 15:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 16:

	Package -> 'package' WordScoped ';' . Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' . Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	USE_STRICT	shift, and go to state 13

	Header	go to state 19

State 17:

	Header -> USE_STRICT USE_WARNINGS . USE_RPERL 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	USE_RPERL	shift, and go to state 20

State 18:

	STAR-2 -> STAR-2 . Critic	(Rule 5)
	Program -> '#!/usr/bin/perl' Header STAR-2 . STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'## no critic qw('	shift, and go to state 21

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'fuse'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL_NUMBER	reduce using rule 8 (STAR-3)
	LITERAL_STRING	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	USE_CONSTANT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)
	WORD_SCOPED	reduce using rule 8 (STAR-3)

	STAR-3	go to state 22
	Critic	go to state 23

State 19:

	Package -> 'package' WordScoped ';' Header . STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' Header . USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	USE_PARENT	shift, and go to state 25

	'## no critic qw('	reduce using rule 19 (STAR-7)
	'fuse'	reduce using rule 19 (STAR-7)
	'our'	reduce using rule 19 (STAR-7)
	USE_CONSTANT	reduce using rule 19 (STAR-7)

	STAR-7	go to state 24

State 20:

	Header -> USE_STRICT USE_WARNINGS USE_RPERL . 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'our'	shift, and go to state 26

State 21:

	Critic -> '## no critic qw(' . PLUS-11 ')'	(Rule 30)

	WORD	shift, and go to state 27

	PLUS-11	go to state 28

State 22:

	STAR-3 -> STAR-3 . Include	(Rule 7)
	Program -> '#!/usr/bin/perl' Header STAR-2 STAR-3 . STAR-4 STAR-5 PLUS-6	(Rule 15)

	'fuse'	shift, and go to state 29

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL_NUMBER	reduce using rule 10 (STAR-4)
	LITERAL_STRING	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	USE_CONSTANT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)
	WORD_SCOPED	reduce using rule 10 (STAR-4)

	Include	go to state 31
	STAR-4	go to state 30

State 23:

	STAR-2 -> STAR-2 Critic .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 24:

	STAR-7 -> STAR-7 . Critic	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-7 . STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'## no critic qw('	shift, and go to state 21

	'fuse'	reduce using rule 21 (STAR-8)
	'our'	reduce using rule 21 (STAR-8)
	USE_CONSTANT	reduce using rule 21 (STAR-8)

	Critic	go to state 33
	STAR-8	go to state 32

State 25:

	Class -> 'package' WordScoped ';' Header USE_PARENT . 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'qw('	shift, and go to state 34

State 26:

	Header -> USE_STRICT USE_WARNINGS USE_RPERL 'our' . VERSION_NUMBER_ASSIGN	(Rule 27)

	VERSION_NUMBER_ASSIGN	shift, and go to state 35

State 27:

	PLUS-11 -> WORD .	(Rule 29)

	$default	reduce using rule 29 (PLUS-11)

State 28:

	PLUS-11 -> PLUS-11 . WORD	(Rule 28)
	Critic -> '## no critic qw(' PLUS-11 . ')'	(Rule 30)

	')'	shift, and go to state 37
	WORD	shift, and go to state 36

State 29:

	Include -> 'fuse' . WordScoped ';'	(Rule 33)
	Include -> 'fuse' . WordScoped 'qw(' PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 38

State 30:

	STAR-4 -> STAR-4 . Constant	(Rule 9)
	Program -> '#!/usr/bin/perl' Header STAR-2 STAR-3 STAR-4 . STAR-5 PLUS-6	(Rule 15)

	USE_CONSTANT	shift, and go to state 41

	'%{'	reduce using rule 12 (STAR-5)
	'('	reduce using rule 12 (STAR-5)
	'@{'	reduce using rule 12 (STAR-5)
	'['	reduce using rule 12 (STAR-5)
	'for my integer'	reduce using rule 12 (STAR-5)
	'foreach my'	reduce using rule 12 (STAR-5)
	'if ('	reduce using rule 12 (STAR-5)
	'my'	reduce using rule 12 (STAR-5)
	'our'	reduce using rule 12 (STAR-5)
	'undef'	reduce using rule 12 (STAR-5)
	'while ('	reduce using rule 12 (STAR-5)
	'{'	reduce using rule 12 (STAR-5)
	LITERAL_NUMBER	reduce using rule 12 (STAR-5)
	LITERAL_STRING	reduce using rule 12 (STAR-5)
	OP01_NAMED	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 12 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 12 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 12 (STAR-5)
	OP05_MATH_NEG	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 12 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 12 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 12 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 12 (STAR-5)
	WORD	reduce using rule 12 (STAR-5)
	WORD_SCOPED	reduce using rule 12 (STAR-5)

	STAR-5	go to state 39
	Constant	go to state 40

State 31:

	STAR-3 -> STAR-3 Include .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 32:

	STAR-8 -> STAR-8 . Include	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 . STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'fuse'	shift, and go to state 29

	'our'	reduce using rule 23 (STAR-9)
	USE_CONSTANT	reduce using rule 23 (STAR-9)

	Include	go to state 42
	STAR-9	go to state 43

State 33:

	STAR-7 -> STAR-7 Critic .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 34:

	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' . WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 44

State 35:

	Header -> USE_STRICT USE_WARNINGS USE_RPERL 'our' VERSION_NUMBER_ASSIGN .	(Rule 27)

	$default	reduce using rule 27 (Header)

State 36:

	PLUS-11 -> PLUS-11 WORD .	(Rule 28)

	$default	reduce using rule 28 (PLUS-11)

State 37:

	Critic -> '## no critic qw(' PLUS-11 ')' .	(Rule 30)

	$default	reduce using rule 30 (Critic)

State 38:

	Include -> 'fuse' WordScoped . ';'	(Rule 33)
	Include -> 'fuse' WordScoped . 'qw(' PLUS-12 ')' ';'	(Rule 34)

	';'	shift, and go to state 46
	'qw('	shift, and go to state 45

State 39:

	STAR-5 -> STAR-5 . Subroutine	(Rule 11)
	Program -> '#!/usr/bin/perl' Header STAR-2 STAR-3 STAR-4 STAR-5 . PLUS-6	(Rule 15)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'if ('	shift, and go to state 52
	'my'	shift, and go to state 63
	'our'	shift, and go to state 88
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_VOID	shift, and go to state 87
	OP01_NAMED_VOID_PAREN	shift, and go to state 71
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP19_LOOP_CONTROL	shift, and go to state 84
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 9

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	HashDereferenced	go to state 69
	Literal	go to state 68
	WordScoped	go to state 50
	OperatorVoid	go to state 51
	Conditional	go to state 54
	HashReference	go to state 56
	Statement	go to state 72
	Operator	go to state 76
	VariableModification	go to state 61
	OPTIONAL-50	go to state 75
	ArrayDereferenced	go to state 74
	PAREN-49	go to state 62
	Expression	go to state 79
	Variable	go to state 81
	VariableDeclaration	go to state 82
	LoopLabel	go to state 64
	ArrayReference	go to state 83
	PLUS-6	go to state 85
	Operation	go to state 89
	Subroutine	go to state 67

State 40:

	STAR-4 -> STAR-4 Constant .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 41:

	Constant -> USE_CONSTANT . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	WORD	shift, and go to state 90

State 42:

	STAR-8 -> STAR-8 Include .	(Rule 20)

	$default	reduce using rule 20 (STAR-8)

State 43:

	STAR-9 -> STAR-9 . Constant	(Rule 22)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 . PLUS-10 '1;' '1;'	(Rule 26)

	'our'	shift, and go to state 88
	USE_CONSTANT	shift, and go to state 41

	PLUS-10	go to state 92
	Subroutine	go to state 93
	Constant	go to state 91

State 44:

	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped . ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	')'	shift, and go to state 94

State 45:

	Include -> 'fuse' WordScoped 'qw(' . PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 96

	PLUS-12	go to state 95

State 46:

	Include -> 'fuse' WordScoped ';' .	(Rule 33)

	$default	reduce using rule 33 (Include)

State 47:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 113)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	HashDereferenced	go to state 69
	Operator	go to state 76
	WordScoped	go to state 50
	Expression	go to state 98

State 48:

	Expression -> 'undef' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 49:

	Literal -> LITERAL_STRING .	(Rule 225)

	$default	reduce using rule 225 (Literal)

State 50:

	Expression -> WordScoped . '(' OPTIONAL-47 ')'	(Rule 152)

	'('	shift, and go to state 99

State 51:

	Statement -> OperatorVoid .	(Rule 162)

	$default	reduce using rule 162 (Statement)

State 52:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 171)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56
	Operator	go to state 76
	HashDereferenced	go to state 69
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	WordScoped	go to state 50
	Expression	go to state 100

State 53:

	Expression -> '{' . '}'	(Rule 150)
	HashReference -> '{' . HashEntry STAR-63 '}'	(Rule 215)

	'%{'	shift, and go to state 73
	'}'	shift, and go to state 101
	WORD	shift, and go to state 104

	HashEntry	go to state 102
	HashDereferenced	go to state 103

State 54:

	Statement -> Conditional .	(Rule 160)

	$default	reduce using rule 160 (Statement)

State 55:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 114)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	HashDereferenced	go to state 69
	Operator	go to state 76
	WordScoped	go to state 50
	Expression	go to state 105

State 56:

	Expression -> HashReference .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 57:

	Expression -> '(' . Expression ')'	(Rule 154)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 50
	Expression	go to state 106
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	HashDereferenced	go to state 69
	Operator	go to state 76
	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83

State 58:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 123)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 50
	Expression	go to state 107
	HashDereferenced	go to state 69
	Operator	go to state 76
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83

State 59:

	ArrayReference -> '[' . OPTIONAL-60 ']'	(Rule 203)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_QW	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	']'	reduce using rule 202 (OPTIONAL-60)

	Literal	go to state 68
	ListElement	go to state 115
	ArrayDereferenced	go to state 74
	Operator	go to state 76
	HashDereferenced	go to state 69
	Expression	go to state 114
	WordScoped	go to state 50
	OPTIONAL-60	go to state 109
	ArrayReference	go to state 83
	Variable	go to state 97
	ListElements	go to state 111
	HashReference	go to state 56
	TypeInner	go to state 108

State 60:

	Variable -> VARIABLE_SYMBOL . STAR-56	(Rule 183)

	$default	reduce using rule 182 (STAR-56)

	STAR-56	go to state 116

State 61:

	Statement -> VariableModification .	(Rule 164)

	$default	reduce using rule 164 (Statement)

State 62:

	OPTIONAL-50 -> PAREN-49 .	(Rule 158)

	$default	reduce using rule 158 (OPTIONAL-50)

State 63:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 187)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 188)

	WORD	shift, and go to state 118

	Type	go to state 117

State 64:

	PAREN-49 -> LoopLabel . COLON	(Rule 157)

	COLON	shift, and go to state 119

State 65:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 204)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 205)

	'['	shift, and go to state 59
	VARIABLE_SYMBOL	shift, and go to state 60

	Variable	go to state 120
	ArrayReference	go to state 121

State 66:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 107)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83
	WordScoped	go to state 50
	Expression	go to state 122
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	HashDereferenced	go to state 69
	Operator	go to state 76

State 67:

	STAR-5 -> STAR-5 Subroutine .	(Rule 11)

	$default	reduce using rule 11 (STAR-5)

State 68:

	Expression -> Literal .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 69:

	Expression -> HashDereferenced .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 70:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 103)

	VARIABLE_SYMBOL	shift, and go to state 60

	Variable	go to state 123

State 71:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-43 ')' ';'	(Rule 134)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 126
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	'{*'	shift, and go to state 124
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_QW	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	')'	reduce using rule 127 (OPTIONAL-43)

	Operator	go to state 76
	HashDereferenced	go to state 69
	ListElement	go to state 115
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	WordScoped	go to state 50
	Expression	go to state 114
	FileHandle	go to state 125
	Variable	go to state 97
	OPTIONAL-43	go to state 127
	ArrayReference	go to state 83
	ListElements	go to state 128
	TypeInner	go to state 108
	HashReference	go to state 56

State 72:

	Operation -> Statement .	(Rule 99)

	$default	reduce using rule 99 (Operation)

State 73:

	HashDereferenced -> '%{' . Variable '}'	(Rule 216)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 217)

	'{'	shift, and go to state 130
	VARIABLE_SYMBOL	shift, and go to state 60

	HashReference	go to state 129
	Variable	go to state 131

State 74:

	Expression -> ArrayDereferenced .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 75:

	Statement -> OPTIONAL-50 . Loop	(Rule 161)

	'for my integer'	shift, and go to state 138
	'foreach my'	shift, and go to state 134
	'while ('	shift, and go to state 133

	LoopFor	go to state 135
	LoopForEach	go to state 136
	LoopWhile	go to state 137
	Loop	go to state 132

State 76:

	Expression -> Operator .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 77:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 106)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Operator	go to state 76
	HashDereferenced	go to state 69
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	WordScoped	go to state 50
	Expression	go to state 139
	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56

State 78:

	WordScoped -> WORD .	(Rule 218)
	LoopLabel -> WORD .	(Rule 224)

	'('	reduce using rule 218 (WordScoped)
	COLON	reduce using rule 224 (LoopLabel)

State 79:

	Operation -> Expression . ';'	(Rule 98)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	';'	shift, and go to state 155
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 80:

	Operator -> OP01_NAMED . '(' OPTIONAL-42 ')'	(Rule 102)

	'('	shift, and go to state 157

State 81:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 189)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 190)

	OP02_METHOD_THINARROW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 159
	OP19_VARIABLE_ASSIGN	shift, and go to state 161
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 160

	';'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 82:

	Statement -> VariableDeclaration .	(Rule 163)

	$default	reduce using rule 163 (Statement)

State 83:

	Expression -> ArrayReference .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 84:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 138)

	WORD	shift, and go to state 162

	LoopLabel	go to state 163

State 85:

	PLUS-6 -> PLUS-6 . Operation	(Rule 13)
	Program -> '#!/usr/bin/perl' Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6 .	(Rule 15)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'if ('	shift, and go to state 52
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_VOID	shift, and go to state 87
	OP01_NAMED_VOID_PAREN	shift, and go to state 71
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP19_LOOP_CONTROL	shift, and go to state 84
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 9

	$end	reduce using rule 15 (Program)
	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	Conditional	go to state 54
	HashReference	go to state 56
	HashDereferenced	go to state 69
	Literal	go to state 68
	WordScoped	go to state 50
	OperatorVoid	go to state 51
	Variable	go to state 81
	VariableDeclaration	go to state 82
	LoopLabel	go to state 64
	ArrayReference	go to state 83
	Operation	go to state 164
	Statement	go to state 72
	VariableModification	go to state 61
	Operator	go to state 76
	OPTIONAL-50	go to state 75
	ArrayDereferenced	go to state 74
	PAREN-49	go to state 62
	Expression	go to state 79

State 86:

	Literal -> LITERAL_NUMBER .	(Rule 226)

	$default	reduce using rule 226 (Literal)

State 87:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-45 ';'	(Rule 136)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 126
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	'{*'	shift, and go to state 124
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_QW	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	';'	reduce using rule 131 (OPTIONAL-45)

	FileHandle	go to state 166
	Variable	go to state 97
	ArrayReference	go to state 83
	OPTIONAL-45	go to state 167
	ListElements	go to state 165
	HashReference	go to state 56
	TypeInner	go to state 108
	HashDereferenced	go to state 69
	Operator	go to state 76
	ListElement	go to state 115
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	WordScoped	go to state 50
	Expression	go to state 114

State 88:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	WORD	shift, and go to state 118

	Type	go to state 168

State 89:

	PLUS-6 -> Operation .	(Rule 14)

	$default	reduce using rule 14 (PLUS-6)

State 90:

	Constant -> USE_CONSTANT WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	OP20_HASH_FATARROW	shift, and go to state 169

State 91:

	STAR-9 -> STAR-9 Constant .	(Rule 22)

	$default	reduce using rule 22 (STAR-9)

State 92:

	PLUS-10 -> PLUS-10 . Subroutine	(Rule 24)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 . '1;' '1;'	(Rule 26)

	'1;'	shift, and go to state 170
	'our'	shift, and go to state 88

	Subroutine	go to state 171

State 93:

	PLUS-10 -> Subroutine .	(Rule 25)

	$default	reduce using rule 25 (PLUS-10)

State 94:

	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' . ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 172

State 95:

	PLUS-12 -> PLUS-12 . WORD	(Rule 31)
	Include -> 'fuse' WordScoped 'qw(' PLUS-12 . ')' ';'	(Rule 34)

	')'	shift, and go to state 173
	WORD	shift, and go to state 174

State 96:

	PLUS-12 -> WORD .	(Rule 32)

	$default	reduce using rule 32 (PLUS-12)

State 97:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)

	OP02_METHOD_THINARROW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 159

	')'	reduce using rule 145 (Expression)
	'..'	reduce using rule 145 (Expression)
	';'	reduce using rule 145 (Expression)
	']'	reduce using rule 145 (Expression)
	'}'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP21_LIST_COMMA	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 98:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 99:

	Expression -> WordScoped '(' . OPTIONAL-47 ')'	(Rule 152)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_QW	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	')'	reduce using rule 140 (OPTIONAL-47)

	WordScoped	go to state 50
	Expression	go to state 114
	ArrayDereferenced	go to state 74
	ListElement	go to state 115
	Literal	go to state 68
	Operator	go to state 76
	HashDereferenced	go to state 69
	TypeInner	go to state 108
	ListElements	go to state 175
	HashReference	go to state 56
	OPTIONAL-47	go to state 176
	Variable	go to state 97
	ArrayReference	go to state 83

State 100:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 171)

	')'	shift, and go to state 177
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 101:

	Expression -> '{' '}' .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 102:

	HashReference -> '{' HashEntry . STAR-63 '}'	(Rule 215)

	$default	reduce using rule 214 (STAR-63)

	STAR-63	go to state 178

State 103:

	HashEntry -> HashDereferenced .	(Rule 209)

	$default	reduce using rule 209 (HashEntry)

State 104:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-61 Expression	(Rule 208)

	OP20_HASH_FATARROW	shift, and go to state 179

State 105:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 114)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 114 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 106:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Expression -> '(' Expression . ')'	(Rule 154)

	')'	shift, and go to state 180
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 107:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141

	')'	reduce using rule 123 (Operator)
	'..'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP23_LOGICAL_AND	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 108:

	ListElement -> TypeInner . Expression	(Rule 199)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 50
	Expression	go to state 181
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	Operator	go to state 76
	HashDereferenced	go to state 69
	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83

State 109:

	ArrayReference -> '[' OPTIONAL-60 . ']'	(Rule 203)

	']'	shift, and go to state 182

State 110:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 222)

	WORD	shift, and go to state 118

	Type	go to state 183

State 111:

	OPTIONAL-60 -> ListElements .	(Rule 201)

	$default	reduce using rule 201 (OPTIONAL-60)

State 112:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 200)

	'%{'	shift, and go to state 73

	HashDereferenced	go to state 184

State 113:

	ListElements -> OP01_NAMED_QW . '(' PLUS-59 ')'	(Rule 197)

	'('	shift, and go to state 185

State 114:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> Expression .	(Rule 198)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	')'	reduce using rule 198 (ListElement)
	';'	reduce using rule 198 (ListElement)
	']'	reduce using rule 198 (ListElement)
	OP21_LIST_COMMA	reduce using rule 198 (ListElement)

State 115:

	ListElements -> ListElement . STAR-58	(Rule 196)

	$default	reduce using rule 193 (STAR-58)

	STAR-58	go to state 186

State 116:

	STAR-56 -> STAR-56 . VariableRetrieval	(Rule 181)
	Variable -> VARIABLE_SYMBOL STAR-56 .	(Rule 183)

	OP02_ARRAY_THINARROW	shift, and go to state 189
	OP02_HASH_THINARROW	shift, and go to state 187

	')'	reduce using rule 183 (Variable)
	'..'	reduce using rule 183 (Variable)
	';'	reduce using rule 183 (Variable)
	']'	reduce using rule 183 (Variable)
	'}'	reduce using rule 183 (Variable)
	COLON	reduce using rule 183 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 183 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 183 (Variable)
	OP04_MATH_POW	reduce using rule 183 (Variable)
	OP06_REGEX_MATCH	reduce using rule 183 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 183 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 183 (Variable)
	OP08_STRING_CAT	reduce using rule 183 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 183 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 183 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 183 (Variable)
	OP13_BITWISE_AND	reduce using rule 183 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 183 (Variable)
	OP15_LOGICAL_AND	reduce using rule 183 (Variable)
	OP16_LOGICAL_OR	reduce using rule 183 (Variable)
	OP17_LIST_RANGE	reduce using rule 183 (Variable)
	OP18_TERNARY	reduce using rule 183 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 183 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 183 (Variable)
	OP21_LIST_COMMA	reduce using rule 183 (Variable)
	OP23_LOGICAL_AND	reduce using rule 183 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 183 (Variable)

	VariableRetrieval	go to state 188

State 117:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 187)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 188)

	VARIABLE_SYMBOL	shift, and go to state 190

State 118:

	Type -> WORD .	(Rule 223)

	$default	reduce using rule 223 (Type)

State 119:

	PAREN-49 -> LoopLabel COLON .	(Rule 157)

	$default	reduce using rule 157 (PAREN-49)

State 120:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 204)

	'}'	shift, and go to state 191

State 121:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 205)

	'}'	shift, and go to state 192

State 122:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 107)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	')'	shift, and go to state 193
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 123:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 124:

	FileHandle -> '{*' . WORD '}'	(Rule 220)

	WORD	shift, and go to state 194

State 125:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_QW	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	')'	reduce using rule 129 (OPTIONAL-44)

	Operator	go to state 76
	HashDereferenced	go to state 69
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	ListElement	go to state 115
	Expression	go to state 114
	WordScoped	go to state 50
	ArrayReference	go to state 83
	Variable	go to state 97
	ListElements	go to state 195
	HashReference	go to state 56
	TypeInner	go to state 108
	OPTIONAL-44	go to state 196

State 126:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 221)
	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 222)

	'filehandle_ref'	shift, and go to state 197
	WORD	shift, and go to state 118

	Type	go to state 183

State 127:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 . ')' ';'	(Rule 134)

	')'	shift, and go to state 198

State 128:

	OPTIONAL-43 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-43)

State 129:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 217)

	'}'	shift, and go to state 199

State 130:

	HashReference -> '{' . HashEntry STAR-63 '}'	(Rule 215)

	'%{'	shift, and go to state 73
	WORD	shift, and go to state 104

	HashEntry	go to state 102
	HashDereferenced	go to state 103

State 131:

	HashDereferenced -> '%{' Variable . '}'	(Rule 216)

	'}'	shift, and go to state 200

State 132:

	Statement -> OPTIONAL-50 Loop .	(Rule 161)

	$default	reduce using rule 161 (Statement)

State 133:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 177)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	Operator	go to state 76
	HashDereferenced	go to state 69
	WordScoped	go to state 50
	Expression	go to state 201

State 134:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 176)

	WORD	shift, and go to state 118

	Type	go to state 202

State 135:

	Loop -> LoopFor .	(Rule 172)

	$default	reduce using rule 172 (Loop)

State 136:

	Loop -> LoopForEach .	(Rule 173)

	$default	reduce using rule 173 (Loop)

State 137:

	Loop -> LoopWhile .	(Rule 174)

	$default	reduce using rule 174 (Loop)

State 138:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 175)

	VARIABLE_SYMBOL	shift, and go to state 203

State 139:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP06_REGEX_MATCH	reduce using rule 106 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 106 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 140:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 125)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	HashDereferenced	go to state 69
	Operator	go to state 76
	WordScoped	go to state 50
	Expression	go to state 204

State 141:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 60

	Variable	go to state 205

State 142:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 115)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	ArrayReference	go to state 83
	Variable	go to state 97
	HashReference	go to state 56
	HashDereferenced	go to state 69
	Operator	go to state 76
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	Expression	go to state 206
	WordScoped	go to state 50

State 143:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 116)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashDereferenced	go to state 69
	Operator	go to state 76
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	Expression	go to state 207
	WordScoped	go to state 50
	ArrayReference	go to state 83
	Variable	go to state 97
	HashReference	go to state 56

State 144:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 121)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	ArrayDereferenced	go to state 74
	Literal	go to state 68
	Operator	go to state 76
	HashDereferenced	go to state 69
	WordScoped	go to state 50
	Expression	go to state 208
	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56

State 145:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 110)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	ArrayReference	go to state 83
	Variable	go to state 97
	HashReference	go to state 56
	HashDereferenced	go to state 69
	Operator	go to state 76
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	Expression	go to state 209
	WordScoped	go to state 50

State 146:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 112)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83
	WordScoped	go to state 50
	Expression	go to state 210
	HashDereferenced	go to state 69
	Operator	go to state 76
	Literal	go to state 68
	ArrayDereferenced	go to state 74

State 147:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 117)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Operator	go to state 76
	HashDereferenced	go to state 69
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	Expression	go to state 211
	WordScoped	go to state 50
	ArrayReference	go to state 83
	Variable	go to state 97
	HashReference	go to state 56

State 148:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 111)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Operator	go to state 76
	HashDereferenced	go to state 69
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	Expression	go to state 212
	WordScoped	go to state 50
	ArrayReference	go to state 83
	Variable	go to state 97
	HashReference	go to state 56

State 149:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 120)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Literal	go to state 68
	ArrayDereferenced	go to state 74
	Operator	go to state 76
	HashDereferenced	go to state 69
	Expression	go to state 213
	WordScoped	go to state 50
	ArrayReference	go to state 83
	Variable	go to state 97
	HashReference	go to state 56

State 150:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 109)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 50
	Expression	go to state 214
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	Operator	go to state 76
	HashDereferenced	go to state 69
	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83

State 151:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 124)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 50
	Expression	go to state 215
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	HashDereferenced	go to state 69
	Operator	go to state 76
	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83

State 152:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 105)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Expression	go to state 216
	WordScoped	go to state 50
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	Operator	go to state 76
	HashDereferenced	go to state 69
	HashReference	go to state 56
	ArrayReference	go to state 83
	Variable	go to state 97

State 153:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 119)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashReference	go to state 56
	ArrayReference	go to state 83
	Variable	go to state 97
	Expression	go to state 217
	WordScoped	go to state 50
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	Operator	go to state 76
	HashDereferenced	go to state 69

State 154:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 118)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 50
	Expression	go to state 218
	Operator	go to state 76
	HashDereferenced	go to state 69
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83

State 155:

	Operation -> Expression ';' .	(Rule 98)

	$default	reduce using rule 98 (Operation)

State 156:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 108)

	'/'	shift, and go to state 219

State 157:

	Operator -> OP01_NAMED '(' . OPTIONAL-42 ')'	(Rule 102)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_QW	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	')'	reduce using rule 101 (OPTIONAL-42)

	WordScoped	go to state 50
	Expression	go to state 114
	ListElement	go to state 115
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	HashDereferenced	go to state 69
	Operator	go to state 76
	HashReference	go to state 56
	ListElements	go to state 221
	TypeInner	go to state 108
	Variable	go to state 97
	OPTIONAL-42	go to state 220
	ArrayReference	go to state 83

State 158:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-48 ')'	(Rule 153)

	WORD	shift, and go to state 222

State 159:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 160:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 190)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashDereferenced	go to state 69
	Operator	go to state 76
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	WordScoped	go to state 50
	Expression	go to state 223
	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56

State 161:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 189)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'<STDIN>'	shift, and go to state 224
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashDereferenced	go to state 69
	Operator	go to state 76
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	ExpressionOrStdin	go to state 226
	WordScoped	go to state 50
	Expression	go to state 225
	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56

State 162:

	LoopLabel -> WORD .	(Rule 224)

	$default	reduce using rule 224 (LoopLabel)

State 163:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 138)

	';'	shift, and go to state 227

State 164:

	PLUS-6 -> PLUS-6 Operation .	(Rule 13)

	$default	reduce using rule 13 (PLUS-6)

State 165:

	OPTIONAL-45 -> ListElements .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-45)

State 166:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_QW	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	';'	reduce using rule 133 (OPTIONAL-46)

	ListElement	go to state 115
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	HashDereferenced	go to state 69
	Operator	go to state 76
	WordScoped	go to state 50
	OPTIONAL-46	go to state 228
	Expression	go to state 114
	Variable	go to state 97
	ArrayReference	go to state 83
	ListElements	go to state 229
	HashReference	go to state 56
	TypeInner	go to state 108

State 167:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 . ';'	(Rule 136)

	';'	shift, and go to state 230

State 168:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	VARIABLE_SYMBOL	shift, and go to state 231

State 169:

	Constant -> USE_CONSTANT WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 35)

	'my'	shift, and go to state 110

	TypeInner	go to state 232

State 170:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' . '1;'	(Rule 26)

	'1;'	shift, and go to state 233

State 171:

	PLUS-10 -> PLUS-10 Subroutine .	(Rule 24)

	$default	reduce using rule 24 (PLUS-10)

State 172:

	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' . Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'fuse'	shift, and go to state 29

	Include	go to state 234

State 173:

	Include -> 'fuse' WordScoped 'qw(' PLUS-12 ')' . ';'	(Rule 34)

	';'	shift, and go to state 235

State 174:

	PLUS-12 -> PLUS-12 WORD .	(Rule 31)

	$default	reduce using rule 31 (PLUS-12)

State 175:

	OPTIONAL-47 -> ListElements .	(Rule 139)

	$default	reduce using rule 139 (OPTIONAL-47)

State 176:

	Expression -> WordScoped '(' OPTIONAL-47 . ')'	(Rule 152)

	')'	shift, and go to state 236

State 177:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-52 OPTIONAL-54	(Rule 171)

	'{'	shift, and go to state 238

	CodeBlock	go to state 237

State 178:

	STAR-63 -> STAR-63 . PAREN-62	(Rule 213)
	HashReference -> '{' HashEntry STAR-63 . '}'	(Rule 215)

	'}'	shift, and go to state 241
	OP21_LIST_COMMA	shift, and go to state 239

	PAREN-62	go to state 240

State 179:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-61 Expression	(Rule 208)

	'my'	shift, and go to state 110

	'%{'	reduce using rule 207 (OPTIONAL-61)
	'('	reduce using rule 207 (OPTIONAL-61)
	'@{'	reduce using rule 207 (OPTIONAL-61)
	'['	reduce using rule 207 (OPTIONAL-61)
	'undef'	reduce using rule 207 (OPTIONAL-61)
	'{'	reduce using rule 207 (OPTIONAL-61)
	LITERAL_NUMBER	reduce using rule 207 (OPTIONAL-61)
	LITERAL_STRING	reduce using rule 207 (OPTIONAL-61)
	OP01_NAMED	reduce using rule 207 (OPTIONAL-61)
	OP03_MATH_INC_DEC	reduce using rule 207 (OPTIONAL-61)
	OP05_LOGICAL_NEG	reduce using rule 207 (OPTIONAL-61)
	OP05_MATH_NEG	reduce using rule 207 (OPTIONAL-61)
	OP10_NAMED_UNARY	reduce using rule 207 (OPTIONAL-61)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 207 (OPTIONAL-61)
	OP22_LOGICAL_NOT	reduce using rule 207 (OPTIONAL-61)
	VARIABLE_SYMBOL	reduce using rule 207 (OPTIONAL-61)
	WORD	reduce using rule 207 (OPTIONAL-61)
	WORD_SCOPED	reduce using rule 207 (OPTIONAL-61)

	TypeInner	go to state 242
	OPTIONAL-61	go to state 243

State 180:

	Expression -> '(' Expression ')' .	(Rule 154)

	$default	reduce using rule 154 (Expression)

State 181:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> TypeInner Expression .	(Rule 199)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	')'	reduce using rule 199 (ListElement)
	';'	reduce using rule 199 (ListElement)
	']'	reduce using rule 199 (ListElement)
	OP21_LIST_COMMA	reduce using rule 199 (ListElement)

State 182:

	ArrayReference -> '[' OPTIONAL-60 ']' .	(Rule 203)

	$default	reduce using rule 203 (ArrayReference)

State 183:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 222)

	'$TYPED_'	shift, and go to state 244

State 184:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 200)

	$default	reduce using rule 200 (ListElement)

State 185:

	ListElements -> OP01_NAMED_QW '(' . PLUS-59 ')'	(Rule 197)

	WORD	shift, and go to state 245

	PLUS-59	go to state 246

State 186:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 192)
	ListElements -> ListElement STAR-58 .	(Rule 196)

	OP21_LIST_COMMA	shift, and go to state 248

	')'	reduce using rule 196 (ListElements)
	';'	reduce using rule 196 (ListElements)
	']'	reduce using rule 196 (ListElements)

	PAREN-57	go to state 247

State 187:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 185)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 186)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 250
	WORD_SCOPED	shift, and go to state 9

	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83
	WordScoped	go to state 50
	Expression	go to state 249
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	HashDereferenced	go to state 69
	Operator	go to state 76

State 188:

	STAR-56 -> STAR-56 VariableRetrieval .	(Rule 181)

	$default	reduce using rule 181 (STAR-56)

State 189:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 184)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Expression	go to state 251
	WordScoped	go to state 50
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	Operator	go to state 76
	HashDereferenced	go to state 69
	HashReference	go to state 56
	ArrayReference	go to state 83
	Variable	go to state 97

State 190:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 187)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 188)

	';'	shift, and go to state 252
	OP19_VARIABLE_ASSIGN	shift, and go to state 253

State 191:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 204)

	$default	reduce using rule 204 (ArrayDereferenced)

State 192:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 205)

	$default	reduce using rule 205 (ArrayDereferenced)

State 193:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 194:

	FileHandle -> '{*' WORD . '}'	(Rule 220)

	'}'	shift, and go to state 254

State 195:

	OPTIONAL-44 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-44)

State 196:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 . ')' ';'	(Rule 135)

	')'	shift, and go to state 255

State 197:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 221)

	VARIABLE_SYMBOL	shift, and go to state 256

State 198:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' . ';'	(Rule 134)

	';'	shift, and go to state 257

State 199:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 217)

	$default	reduce using rule 217 (HashDereferenced)

State 200:

	HashDereferenced -> '%{' Variable '}' .	(Rule 216)

	$default	reduce using rule 216 (HashDereferenced)

State 201:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 177)

	')'	shift, and go to state 258
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 202:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 176)

	VARIABLE_SYMBOL	shift, and go to state 259

State 203:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 175)

	'('	shift, and go to state 260

State 204:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151

	')'	reduce using rule 125 (Operator)
	'..'	reduce using rule 125 (Operator)
	';'	reduce using rule 125 (Operator)
	']'	reduce using rule 125 (Operator)
	'}'	reduce using rule 125 (Operator)
	OP21_LIST_COMMA	reduce using rule 125 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (Operator)

State 205:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 122)

	COLON	shift, and go to state 261

State 206:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 207:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP13_BITWISE_AND	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 208:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 121 (Operator)
	'..'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP18_TERNARY	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 209:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 110 (Operator)
	OP08_STRING_CAT	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 210:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 211:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP13_BITWISE_AND	reduce using rule 117 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 212:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 213:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153

	')'	reduce using rule 120 (Operator)
	'..'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP16_LOGICAL_OR	reduce using rule 120 (Operator)
	OP17_LIST_RANGE	reduce using rule 120 (Operator)
	OP18_TERNARY	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP23_LOGICAL_AND	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 214:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 109 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 109 (Operator)
	OP08_STRING_CAT	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 215:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141

	')'	reduce using rule 124 (Operator)
	'..'	reduce using rule 124 (Operator)
	';'	reduce using rule 124 (Operator)
	']'	reduce using rule 124 (Operator)
	'}'	reduce using rule 124 (Operator)
	OP21_LIST_COMMA	reduce using rule 124 (Operator)
	OP23_LOGICAL_AND	reduce using rule 124 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 124 (Operator)

State 216:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP06_REGEX_MATCH	reduce using rule 105 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 217:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP15_LOGICAL_AND	reduce using rule 119 (Operator)
	OP16_LOGICAL_OR	reduce using rule 119 (Operator)
	OP17_LIST_RANGE	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 218:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 118 (Operator)
	OP15_LOGICAL_AND	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 219:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 108)

	OP06_REGEX_PATTERN	shift, and go to state 262

State 220:

	Operator -> OP01_NAMED '(' OPTIONAL-42 . ')'	(Rule 102)

	')'	shift, and go to state 263

State 221:

	OPTIONAL-42 -> ListElements .	(Rule 100)

	$default	reduce using rule 100 (OPTIONAL-42)

State 222:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-48 ')'	(Rule 153)

	'('	shift, and go to state 264

State 223:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 190)

	';'	shift, and go to state 265
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 224:

	ExpressionOrStdin -> '<STDIN>' .	(Rule 156)

	$default	reduce using rule 156 (ExpressionOrStdin)

State 225:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ExpressionOrStdin -> Expression .	(Rule 155)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	';'	reduce using rule 155 (ExpressionOrStdin)

State 226:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 189)

	';'	shift, and go to state 266

State 227:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 138)

	$default	reduce using rule 138 (OperatorVoid)

State 228:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 . ';'	(Rule 137)

	';'	shift, and go to state 267

State 229:

	OPTIONAL-46 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-46)

State 230:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 231:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'= sub {'	shift, and go to state 268

State 232:

	Constant -> USE_CONSTANT WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 35)

	'['	shift, and go to state 270
	'{'	shift, and go to state 272
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49

	ConstantValue	go to state 271
	Literal	go to state 269

State 233:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;' .	(Rule 26)

	$default	reduce using rule 26 (Package)

State 234:

	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include . STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 273

State 235:

	Include -> 'fuse' WordScoped 'qw(' PLUS-12 ')' ';' .	(Rule 34)

	$default	reduce using rule 34 (Include)

State 236:

	Expression -> WordScoped '(' OPTIONAL-47 ')' .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 237:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-52 OPTIONAL-54	(Rule 171)

	$default	reduce using rule 167 (STAR-52)

	STAR-52	go to state 274

State 238:

	CodeBlock -> '{' . PLUS-55 '}'	(Rule 180)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'if ('	shift, and go to state 52
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_VOID	shift, and go to state 87
	OP01_NAMED_VOID_PAREN	shift, and go to state 71
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP19_LOOP_CONTROL	shift, and go to state 84
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 9

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	WordScoped	go to state 50
	OperatorVoid	go to state 51
	Literal	go to state 68
	HashDereferenced	go to state 69
	Conditional	go to state 54
	HashReference	go to state 56
	PAREN-49	go to state 62
	PLUS-55	go to state 275
	Expression	go to state 79
	Statement	go to state 72
	OPTIONAL-50	go to state 75
	ArrayDereferenced	go to state 74
	Operator	go to state 76
	VariableModification	go to state 61
	Operation	go to state 276
	LoopLabel	go to state 64
	Variable	go to state 81
	VariableDeclaration	go to state 82
	ArrayReference	go to state 83

State 239:

	PAREN-62 -> OP21_LIST_COMMA . HashEntry	(Rule 212)

	'%{'	shift, and go to state 73
	WORD	shift, and go to state 104

	HashDereferenced	go to state 103
	HashEntry	go to state 277

State 240:

	STAR-63 -> STAR-63 PAREN-62 .	(Rule 213)

	$default	reduce using rule 213 (STAR-63)

State 241:

	HashReference -> '{' HashEntry STAR-63 '}' .	(Rule 215)

	$default	reduce using rule 215 (HashReference)

State 242:

	OPTIONAL-61 -> TypeInner .	(Rule 206)

	$default	reduce using rule 206 (OPTIONAL-61)

State 243:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-61 . Expression	(Rule 208)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashReference	go to state 56
	ArrayReference	go to state 83
	Variable	go to state 97
	Expression	go to state 278
	WordScoped	go to state 50
	HashDereferenced	go to state 69
	Operator	go to state 76
	Literal	go to state 68
	ArrayDereferenced	go to state 74

State 244:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 222)

	WORD	shift, and go to state 279

State 245:

	PLUS-59 -> WORD .	(Rule 195)

	$default	reduce using rule 195 (PLUS-59)

State 246:

	PLUS-59 -> PLUS-59 . WORD	(Rule 194)
	ListElements -> OP01_NAMED_QW '(' PLUS-59 . ')'	(Rule 197)

	')'	shift, and go to state 281
	WORD	shift, and go to state 280

State 247:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 192)

	$default	reduce using rule 192 (STAR-58)

State 248:

	PAREN-57 -> OP21_LIST_COMMA . ListElement	(Rule 191)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56
	TypeInner	go to state 108
	ArrayDereferenced	go to state 74
	ListElement	go to state 282
	Literal	go to state 68
	HashDereferenced	go to state 69
	Operator	go to state 76
	WordScoped	go to state 50
	Expression	go to state 114

State 249:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 185)

	'}'	shift, and go to state 283
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 250:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 186)
	WordScoped -> WORD .	(Rule 218)

	'}'	shift, and go to state 284

	'('	reduce using rule 218 (WordScoped)

State 251:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 184)

	']'	shift, and go to state 285
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 252:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 187)

	$default	reduce using rule 187 (VariableDeclaration)

State 253:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 188)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'<STDIN>'	shift, and go to state 224
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Expression	go to state 225
	ExpressionOrStdin	go to state 286
	WordScoped	go to state 50
	Operator	go to state 76
	HashDereferenced	go to state 69
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	HashReference	go to state 56
	ArrayReference	go to state 83
	Variable	go to state 97

State 254:

	FileHandle -> '{*' WORD '}' .	(Rule 220)

	$default	reduce using rule 220 (FileHandle)

State 255:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' . ';'	(Rule 135)

	';'	shift, and go to state 287

State 256:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 221)

	$default	reduce using rule 221 (FileHandle)

State 257:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 258:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 177)

	'{'	shift, and go to state 238

	CodeBlock	go to state 288

State 259:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 176)

	'('	shift, and go to state 289

State 260:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	WordScoped	go to state 50
	Expression	go to state 290
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	HashDereferenced	go to state 69
	Operator	go to state 76
	HashReference	go to state 56
	Variable	go to state 97
	ArrayReference	go to state 83

State 261:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 60

	Variable	go to state 291

State 262:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 108)

	'/'	shift, and go to state 292

State 263:

	Operator -> OP01_NAMED '(' OPTIONAL-42 ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 264:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-48 ')'	(Rule 153)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_QW	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	')'	reduce using rule 142 (OPTIONAL-48)

	Variable	go to state 97
	ArrayReference	go to state 83
	OPTIONAL-48	go to state 294
	HashReference	go to state 56
	ListElements	go to state 293
	TypeInner	go to state 108
	Operator	go to state 76
	HashDereferenced	go to state 69
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	ListElement	go to state 115
	WordScoped	go to state 50
	Expression	go to state 114

State 265:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 190)

	$default	reduce using rule 190 (VariableModification)

State 266:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 189)

	$default	reduce using rule 189 (VariableModification)

State 267:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';' .	(Rule 137)

	$default	reduce using rule 137 (OperatorVoid)

State 268:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'( my'	shift, and go to state 296

	'%{'	reduce using rule 54 (OPTIONAL-21)
	'('	reduce using rule 54 (OPTIONAL-21)
	'@{'	reduce using rule 54 (OPTIONAL-21)
	'['	reduce using rule 54 (OPTIONAL-21)
	'for my integer'	reduce using rule 54 (OPTIONAL-21)
	'foreach my'	reduce using rule 54 (OPTIONAL-21)
	'if ('	reduce using rule 54 (OPTIONAL-21)
	'my'	reduce using rule 54 (OPTIONAL-21)
	'undef'	reduce using rule 54 (OPTIONAL-21)
	'while ('	reduce using rule 54 (OPTIONAL-21)
	'{'	reduce using rule 54 (OPTIONAL-21)
	LITERAL_NUMBER	reduce using rule 54 (OPTIONAL-21)
	LITERAL_STRING	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID_PAREN	reduce using rule 54 (OPTIONAL-21)
	OP03_MATH_INC_DEC	reduce using rule 54 (OPTIONAL-21)
	OP05_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-21)
	OP05_MATH_NEG	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 54 (OPTIONAL-21)
	OP19_LOOP_CONTROL	reduce using rule 54 (OPTIONAL-21)
	OP22_LOGICAL_NOT	reduce using rule 54 (OPTIONAL-21)
	VARIABLE_SYMBOL	reduce using rule 54 (OPTIONAL-21)
	WORD	reduce using rule 54 (OPTIONAL-21)
	WORD_SCOPED	reduce using rule 54 (OPTIONAL-21)

	OPTIONAL-21	go to state 295
	SubroutineArguments	go to state 297

State 269:

	ConstantValue -> Literal .	(Rule 50)

	$default	reduce using rule 50 (ConstantValue)

State 270:

	ConstantValue -> '[' . OPTIONAL-13 Literal STAR-16 ']'	(Rule 51)

	'my'	shift, and go to state 110

	LITERAL_NUMBER	reduce using rule 37 (OPTIONAL-13)
	LITERAL_STRING	reduce using rule 37 (OPTIONAL-13)

	OPTIONAL-13	go to state 298
	TypeInner	go to state 299

State 271:

	Constant -> USE_CONSTANT WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 35)

	';'	shift, and go to state 300

State 272:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	WORD	shift, and go to state 301

State 273:

	STAR-28 -> STAR-28 . Critic	(Rule 68)
	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 . STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'## no critic qw('	shift, and go to state 21

	'fuse'	reduce using rule 71 (STAR-29)
	'our %properties = ('	reduce using rule 71 (STAR-29)
	USE_CONSTANT	reduce using rule 71 (STAR-29)

	STAR-29	go to state 303
	Critic	go to state 302

State 274:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 166)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 . OPTIONAL-54	(Rule 171)

	'else'	shift, and go to state 305
	'elsif ('	shift, and go to state 304

	$end	reduce using rule 170 (OPTIONAL-54)
	'%{'	reduce using rule 170 (OPTIONAL-54)
	'('	reduce using rule 170 (OPTIONAL-54)
	'@{'	reduce using rule 170 (OPTIONAL-54)
	'['	reduce using rule 170 (OPTIONAL-54)
	'for my integer'	reduce using rule 170 (OPTIONAL-54)
	'foreach my'	reduce using rule 170 (OPTIONAL-54)
	'if ('	reduce using rule 170 (OPTIONAL-54)
	'my'	reduce using rule 170 (OPTIONAL-54)
	'undef'	reduce using rule 170 (OPTIONAL-54)
	'while ('	reduce using rule 170 (OPTIONAL-54)
	'{'	reduce using rule 170 (OPTIONAL-54)
	'}'	reduce using rule 170 (OPTIONAL-54)
	LITERAL_NUMBER	reduce using rule 170 (OPTIONAL-54)
	LITERAL_STRING	reduce using rule 170 (OPTIONAL-54)
	OP01_NAMED	reduce using rule 170 (OPTIONAL-54)
	OP01_NAMED_VOID	reduce using rule 170 (OPTIONAL-54)
	OP01_NAMED_VOID_PAREN	reduce using rule 170 (OPTIONAL-54)
	OP03_MATH_INC_DEC	reduce using rule 170 (OPTIONAL-54)
	OP05_LOGICAL_NEG	reduce using rule 170 (OPTIONAL-54)
	OP05_MATH_NEG	reduce using rule 170 (OPTIONAL-54)
	OP10_NAMED_UNARY	reduce using rule 170 (OPTIONAL-54)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 170 (OPTIONAL-54)
	OP19_LOOP_CONTROL	reduce using rule 170 (OPTIONAL-54)
	OP22_LOGICAL_NOT	reduce using rule 170 (OPTIONAL-54)
	VARIABLE_SYMBOL	reduce using rule 170 (OPTIONAL-54)
	WORD	reduce using rule 170 (OPTIONAL-54)
	WORD_SCOPED	reduce using rule 170 (OPTIONAL-54)

	PAREN-51	go to state 307
	OPTIONAL-54	go to state 306
	PAREN-53	go to state 308

State 275:

	PLUS-55 -> PLUS-55 . Operation	(Rule 178)
	CodeBlock -> '{' PLUS-55 . '}'	(Rule 180)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'if ('	shift, and go to state 52
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	'}'	shift, and go to state 309
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_VOID	shift, and go to state 87
	OP01_NAMED_VOID_PAREN	shift, and go to state 71
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP19_LOOP_CONTROL	shift, and go to state 84
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 9

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	Expression	go to state 79
	PAREN-49	go to state 62
	VariableModification	go to state 61
	Operator	go to state 76
	ArrayDereferenced	go to state 74
	OPTIONAL-50	go to state 75
	Statement	go to state 72
	Operation	go to state 310
	ArrayReference	go to state 83
	Variable	go to state 81
	VariableDeclaration	go to state 82
	LoopLabel	go to state 64
	OperatorVoid	go to state 51
	WordScoped	go to state 50
	HashDereferenced	go to state 69
	Literal	go to state 68
	HashReference	go to state 56
	Conditional	go to state 54

State 276:

	PLUS-55 -> Operation .	(Rule 179)

	$default	reduce using rule 179 (PLUS-55)

State 277:

	PAREN-62 -> OP21_LIST_COMMA HashEntry .	(Rule 212)

	$default	reduce using rule 212 (PAREN-62)

State 278:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-61 Expression .	(Rule 208)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	'}'	reduce using rule 208 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 208 (HashEntry)

State 279:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 222)

	OP19_VARIABLE_ASSIGN	shift, and go to state 311

State 280:

	PLUS-59 -> PLUS-59 WORD .	(Rule 194)

	$default	reduce using rule 194 (PLUS-59)

State 281:

	ListElements -> OP01_NAMED_QW '(' PLUS-59 ')' .	(Rule 197)

	$default	reduce using rule 197 (ListElements)

State 282:

	PAREN-57 -> OP21_LIST_COMMA ListElement .	(Rule 191)

	$default	reduce using rule 191 (PAREN-57)

State 283:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 185)

	$default	reduce using rule 185 (VariableRetrieval)

State 284:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 186)

	$default	reduce using rule 186 (VariableRetrieval)

State 285:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 184)

	$default	reduce using rule 184 (VariableRetrieval)

State 286:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 188)

	';'	shift, and go to state 312

State 287:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 288:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 177)

	$default	reduce using rule 177 (LoopWhile)

State 289:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 176)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'my'	shift, and go to state 110
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	KEYS_OR_VALUES	shift, and go to state 112
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_QW	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashDereferenced	go to state 69
	Operator	go to state 76
	ArrayDereferenced	go to state 74
	ListElement	go to state 115
	Literal	go to state 68
	Expression	go to state 114
	WordScoped	go to state 50
	ArrayReference	go to state 83
	Variable	go to state 97
	HashReference	go to state 56
	ListElements	go to state 313
	TypeInner	go to state 108

State 290:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 175)

	'..'	shift, and go to state 314
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 291:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 122)

	$default	reduce using rule 122 (Operator)

State 292:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 293:

	OPTIONAL-48 -> ListElements .	(Rule 141)

	$default	reduce using rule 141 (OPTIONAL-48)

State 294:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 . ')'	(Rule 153)

	')'	shift, and go to state 315

State 295:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 . PLUS-22 '}' ';'	(Rule 57)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'if ('	shift, and go to state 52
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_VOID	shift, and go to state 87
	OP01_NAMED_VOID_PAREN	shift, and go to state 71
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP19_LOOP_CONTROL	shift, and go to state 84
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 9

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	Operation	go to state 316
	LoopLabel	go to state 64
	Variable	go to state 81
	VariableDeclaration	go to state 82
	ArrayReference	go to state 83
	PAREN-49	go to state 62
	Expression	go to state 79
	Statement	go to state 72
	OPTIONAL-50	go to state 75
	ArrayDereferenced	go to state 74
	Operator	go to state 76
	VariableModification	go to state 61
	Conditional	go to state 54
	HashReference	go to state 56
	PLUS-22	go to state 317
	WordScoped	go to state 50
	OperatorVoid	go to state 51
	Literal	go to state 68
	HashDereferenced	go to state 69

State 296:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	WORD	shift, and go to state 118

	Type	go to state 318

State 297:

	OPTIONAL-21 -> SubroutineArguments .	(Rule 53)

	$default	reduce using rule 53 (OPTIONAL-21)

State 298:

	ConstantValue -> '[' OPTIONAL-13 . Literal STAR-16 ']'	(Rule 51)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49

	Literal	go to state 319

State 299:

	OPTIONAL-13 -> TypeInner .	(Rule 36)

	$default	reduce using rule 36 (OPTIONAL-13)

State 300:

	Constant -> USE_CONSTANT WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 35)

	$default	reduce using rule 35 (Constant)

State 301:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	OP20_HASH_FATARROW	shift, and go to state 320

State 302:

	STAR-28 -> STAR-28 Critic .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 303:

	STAR-29 -> STAR-29 . Include	(Rule 70)
	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 . STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'fuse'	shift, and go to state 29

	'our %properties = ('	reduce using rule 73 (STAR-30)
	USE_CONSTANT	reduce using rule 73 (STAR-30)

	Include	go to state 321
	STAR-30	go to state 322

State 304:

	PAREN-51 -> 'elsif (' . Expression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	Operator	go to state 76
	HashDereferenced	go to state 69
	WordScoped	go to state 50
	Expression	go to state 323

State 305:

	PAREN-53 -> 'else' . CodeBlock	(Rule 168)

	'{'	shift, and go to state 238

	CodeBlock	go to state 324

State 306:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54 .	(Rule 171)

	$default	reduce using rule 171 (Conditional)

State 307:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 166)

	$default	reduce using rule 166 (STAR-52)

State 308:

	OPTIONAL-54 -> PAREN-53 .	(Rule 169)

	$default	reduce using rule 169 (OPTIONAL-54)

State 309:

	CodeBlock -> '{' PLUS-55 '}' .	(Rule 180)

	$default	reduce using rule 180 (CodeBlock)

State 310:

	PLUS-55 -> PLUS-55 Operation .	(Rule 178)

	$default	reduce using rule 178 (PLUS-55)

State 311:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 222)

	$default	reduce using rule 222 (TypeInner)

State 312:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 188)

	$default	reduce using rule 188 (VariableDeclaration)

State 313:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 176)

	')'	shift, and go to state 325

State 314:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Expression	go to state 326
	WordScoped	go to state 50
	Literal	go to state 68
	ArrayDereferenced	go to state 74
	HashDereferenced	go to state 69
	Operator	go to state 76
	HashReference	go to state 56
	ArrayReference	go to state 83
	Variable	go to state 97

State 315:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')' .	(Rule 153)

	$default	reduce using rule 153 (Expression)

State 316:

	PLUS-22 -> Operation .	(Rule 56)

	$default	reduce using rule 56 (PLUS-22)

State 317:

	PLUS-22 -> PLUS-22 . Operation	(Rule 55)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 . '}' ';'	(Rule 57)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'if ('	shift, and go to state 52
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	'}'	shift, and go to state 327
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_VOID	shift, and go to state 87
	OP01_NAMED_VOID_PAREN	shift, and go to state 71
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP19_LOOP_CONTROL	shift, and go to state 84
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 9

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	Operation	go to state 328
	ArrayReference	go to state 83
	VariableDeclaration	go to state 82
	Variable	go to state 81
	LoopLabel	go to state 64
	Expression	go to state 79
	PAREN-49	go to state 62
	Operator	go to state 76
	VariableModification	go to state 61
	ArrayDereferenced	go to state 74
	OPTIONAL-50	go to state 75
	Statement	go to state 72
	HashReference	go to state 56
	Conditional	go to state 54
	OperatorVoid	go to state 51
	WordScoped	go to state 50
	HashDereferenced	go to state 69
	Literal	go to state 68

State 318:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	VARIABLE_SYMBOL	shift, and go to state 329

State 319:

	ConstantValue -> '[' OPTIONAL-13 Literal . STAR-16 ']'	(Rule 51)

	$default	reduce using rule 42 (STAR-16)

	STAR-16	go to state 330

State 320:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	'my'	shift, and go to state 110

	LITERAL_NUMBER	reduce using rule 44 (OPTIONAL-17)
	LITERAL_STRING	reduce using rule 44 (OPTIONAL-17)

	OPTIONAL-17	go to state 332
	TypeInner	go to state 331

State 321:

	STAR-29 -> STAR-29 Include .	(Rule 70)

	$default	reduce using rule 70 (STAR-29)

State 322:

	STAR-30 -> STAR-30 . Constant	(Rule 72)
	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 . Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'our %properties = ('	shift, and go to state 334
	USE_CONSTANT	shift, and go to state 41

	Properties	go to state 335
	Constant	go to state 333

State 323:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	PAREN-51 -> 'elsif (' Expression . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 336
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 324:

	PAREN-53 -> 'else' CodeBlock .	(Rule 168)

	$default	reduce using rule 168 (PAREN-53)

State 325:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 176)

	'{'	shift, and go to state 238

	CodeBlock	go to state 337

State 326:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 175)

	')'	shift, and go to state 338
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 327:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' . ';'	(Rule 57)

	';'	shift, and go to state 339

State 328:

	PLUS-22 -> PLUS-22 Operation .	(Rule 55)

	$default	reduce using rule 55 (PLUS-22)

State 329:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 340

State 330:

	STAR-16 -> STAR-16 . PAREN-15	(Rule 41)
	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 . ']'	(Rule 51)

	']'	shift, and go to state 342
	OP21_LIST_COMMA	shift, and go to state 343

	PAREN-15	go to state 341

State 331:

	OPTIONAL-17 -> TypeInner .	(Rule 43)

	$default	reduce using rule 43 (OPTIONAL-17)

State 332:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 . Literal STAR-20 '}'	(Rule 52)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49

	Literal	go to state 344

State 333:

	STAR-30 -> STAR-30 Constant .	(Rule 72)

	$default	reduce using rule 72 (STAR-30)

State 334:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-36 ')' ';'	(Rule 85)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 86)

	'%{'	shift, and go to state 73
	')'	shift, and go to state 348
	WORD	shift, and go to state 345

	HashEntryTyped	go to state 346
	HashDereferenced	go to state 347

State 335:

	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties . STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 75 (STAR-31)

	STAR-31	go to state 349

State 336:

	PAREN-51 -> 'elsif (' Expression ')' . CodeBlock	(Rule 165)

	'{'	shift, and go to state 238

	CodeBlock	go to state 350

State 337:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 176)

	$default	reduce using rule 176 (LoopForEach)

State 338:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 175)

	'{'	shift, and go to state 238

	CodeBlock	go to state 351

State 339:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';' .	(Rule 57)

	$default	reduce using rule 57 (Subroutine)

State 340:

	STAR-24 -> STAR-24 . PAREN-23	(Rule 59)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	')'	shift, and go to state 352
	OP21_LIST_COMMA	shift, and go to state 353

	PAREN-23	go to state 354

State 341:

	STAR-16 -> STAR-16 PAREN-15 .	(Rule 41)

	$default	reduce using rule 41 (STAR-16)

State 342:

	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']' .	(Rule 51)

	$default	reduce using rule 51 (ConstantValue)

State 343:

	PAREN-15 -> OP21_LIST_COMMA . OPTIONAL-14 Literal	(Rule 40)

	'my'	shift, and go to state 110

	LITERAL_NUMBER	reduce using rule 39 (OPTIONAL-14)
	LITERAL_STRING	reduce using rule 39 (OPTIONAL-14)

	TypeInner	go to state 356
	OPTIONAL-14	go to state 355

State 344:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal . STAR-20 '}'	(Rule 52)

	$default	reduce using rule 49 (STAR-20)

	STAR-20	go to state 357

State 345:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 210)

	OP20_HASH_FATARROW	shift, and go to state 358

State 346:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-36 ')' ';'	(Rule 85)

	$default	reduce using rule 84 (STAR-36)

	STAR-36	go to state 359

State 347:

	HashEntryTyped -> HashDereferenced .	(Rule 211)

	$default	reduce using rule 211 (HashEntryTyped)

State 348:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 86)

	';'	shift, and go to state 360

State 349:

	STAR-31 -> STAR-31 . Method	(Rule 74)
	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 . '1;' '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 361
	'our'	shift, and go to state 363

	Method	go to state 362

State 350:

	PAREN-51 -> 'elsif (' Expression ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (PAREN-51)

State 351:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 175)

	$default	reduce using rule 175 (LoopFor)

State 352:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	OP19_VARIABLE_ASSIGN	shift, and go to state 364

State 353:

	PAREN-23 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 58)

	'my'	shift, and go to state 365

State 354:

	STAR-24 -> STAR-24 PAREN-23 .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 355:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 . Literal	(Rule 40)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49

	Literal	go to state 366

State 356:

	OPTIONAL-14 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-14)

State 357:

	STAR-20 -> STAR-20 . PAREN-19	(Rule 48)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 . '}'	(Rule 52)

	'}'	shift, and go to state 367
	OP21_LIST_COMMA	shift, and go to state 369

	PAREN-19	go to state 368

State 358:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 210)

	'my'	shift, and go to state 110

	TypeInner	go to state 370

State 359:

	STAR-36 -> STAR-36 . PAREN-35	(Rule 83)
	Properties -> 'our %properties = (' HashEntryTyped STAR-36 . ')' ';'	(Rule 85)

	')'	shift, and go to state 371
	OP21_LIST_COMMA	shift, and go to state 372

	PAREN-35	go to state 373

State 360:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 86)

	$default	reduce using rule 86 (Properties)

State 361:

	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' . '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 374

State 362:

	STAR-31 -> STAR-31 Method .	(Rule 74)

	$default	reduce using rule 74 (STAR-31)

State 363:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	WORD	shift, and go to state 118

	Type	go to state 375

State 364:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-25	(Rule 63)

	'@_;'	shift, and go to state 376

State 365:

	PAREN-23 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 58)

	WORD	shift, and go to state 118

	Type	go to state 377

State 366:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal .	(Rule 40)

	$default	reduce using rule 40 (PAREN-15)

State 367:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}' .	(Rule 52)

	$default	reduce using rule 52 (ConstantValue)

State 368:

	STAR-20 -> STAR-20 PAREN-19 .	(Rule 48)

	$default	reduce using rule 48 (STAR-20)

State 369:

	PAREN-19 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	WORD	shift, and go to state 378

State 370:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 210)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashReference	go to state 56
	ArrayReference	go to state 83
	Variable	go to state 97
	Expression	go to state 379
	WordScoped	go to state 50
	HashDereferenced	go to state 69
	Operator	go to state 76
	ArrayDereferenced	go to state 74
	Literal	go to state 68

State 371:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' . ';'	(Rule 85)

	';'	shift, and go to state 380

State 372:

	PAREN-35 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 82)

	'%{'	shift, and go to state 73
	WORD	shift, and go to state 345

	HashEntryTyped	go to state 381
	HashDereferenced	go to state 347

State 373:

	STAR-36 -> STAR-36 PAREN-35 .	(Rule 83)

	$default	reduce using rule 83 (STAR-36)

State 374:

	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' . OPTIONAL-34	(Rule 81)

	'our'	shift, and go to state 88

	$end	reduce using rule 80 (OPTIONAL-34)
	'package'	reduce using rule 80 (OPTIONAL-34)

	OPTIONAL-34	go to state 383
	PLUS-32	go to state 384
	PAREN-33	go to state 385
	Subroutine	go to state 382

State 375:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	VARIABLE_SYMBOL	shift, and go to state 386

State 376:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-25	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 387

State 377:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 388

State 378:

	PAREN-19 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	OP20_HASH_FATARROW	shift, and go to state 389

State 379:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 210)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	')'	reduce using rule 210 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 210 (HashEntryTyped)

State 380:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';' .	(Rule 85)

	$default	reduce using rule 85 (Properties)

State 381:

	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 82)

	$default	reduce using rule 82 (PAREN-35)

State 382:

	PLUS-32 -> Subroutine .	(Rule 77)

	$default	reduce using rule 77 (PLUS-32)

State 383:

	Class -> 'package' WordScoped ';' Header USE_PARENT 'qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34 .	(Rule 81)

	$default	reduce using rule 81 (Class)

State 384:

	PLUS-32 -> PLUS-32 . Subroutine	(Rule 76)
	PAREN-33 -> PLUS-32 . '1;' '1;'	(Rule 78)

	'1;'	shift, and go to state 391
	'our'	shift, and go to state 88

	Subroutine	go to state 390

State 385:

	OPTIONAL-34 -> PAREN-33 .	(Rule 79)

	$default	reduce using rule 79 (OPTIONAL-34)

State 386:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'= sub {'	shift, and go to state 392

State 387:

	STAR-25 -> STAR-25 . ArgumentCheck	(Rule 61)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25 .	(Rule 63)

	CHECK_OR_CHECKTRACE	shift, and go to state 394

	'%{'	reduce using rule 63 (SubroutineArguments)
	'('	reduce using rule 63 (SubroutineArguments)
	'@{'	reduce using rule 63 (SubroutineArguments)
	'['	reduce using rule 63 (SubroutineArguments)
	'for my integer'	reduce using rule 63 (SubroutineArguments)
	'foreach my'	reduce using rule 63 (SubroutineArguments)
	'if ('	reduce using rule 63 (SubroutineArguments)
	'my'	reduce using rule 63 (SubroutineArguments)
	'undef'	reduce using rule 63 (SubroutineArguments)
	'while ('	reduce using rule 63 (SubroutineArguments)
	'{'	reduce using rule 63 (SubroutineArguments)
	LITERAL_NUMBER	reduce using rule 63 (SubroutineArguments)
	LITERAL_STRING	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 63 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 63 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 63 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 63 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 63 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 63 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 63 (SubroutineArguments)
	WORD	reduce using rule 63 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 63 (SubroutineArguments)

	ArgumentCheck	go to state 393

State 388:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 58)

	$default	reduce using rule 58 (PAREN-23)

State 389:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-18 Literal	(Rule 47)

	'my'	shift, and go to state 110

	LITERAL_NUMBER	reduce using rule 46 (OPTIONAL-18)
	LITERAL_STRING	reduce using rule 46 (OPTIONAL-18)

	OPTIONAL-18	go to state 395
	TypeInner	go to state 396

State 390:

	PLUS-32 -> PLUS-32 Subroutine .	(Rule 76)

	$default	reduce using rule 76 (PLUS-32)

State 391:

	PAREN-33 -> PLUS-32 '1;' . '1;'	(Rule 78)

	'1;'	shift, and go to state 397

State 392:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'( my'	shift, and go to state 399

	'%{'	reduce using rule 88 (OPTIONAL-37)
	'('	reduce using rule 88 (OPTIONAL-37)
	'@{'	reduce using rule 88 (OPTIONAL-37)
	'['	reduce using rule 88 (OPTIONAL-37)
	'for my integer'	reduce using rule 88 (OPTIONAL-37)
	'foreach my'	reduce using rule 88 (OPTIONAL-37)
	'if ('	reduce using rule 88 (OPTIONAL-37)
	'my'	reduce using rule 88 (OPTIONAL-37)
	'undef'	reduce using rule 88 (OPTIONAL-37)
	'while ('	reduce using rule 88 (OPTIONAL-37)
	'{'	reduce using rule 88 (OPTIONAL-37)
	LITERAL_NUMBER	reduce using rule 88 (OPTIONAL-37)
	LITERAL_STRING	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID_PAREN	reduce using rule 88 (OPTIONAL-37)
	OP03_MATH_INC_DEC	reduce using rule 88 (OPTIONAL-37)
	OP05_LOGICAL_NEG	reduce using rule 88 (OPTIONAL-37)
	OP05_MATH_NEG	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 88 (OPTIONAL-37)
	OP19_LOOP_CONTROL	reduce using rule 88 (OPTIONAL-37)
	OP22_LOGICAL_NOT	reduce using rule 88 (OPTIONAL-37)
	VARIABLE_SYMBOL	reduce using rule 88 (OPTIONAL-37)
	WORD	reduce using rule 88 (OPTIONAL-37)
	WORD_SCOPED	reduce using rule 88 (OPTIONAL-37)

	OPTIONAL-37	go to state 400
	MethodArguments	go to state 398

State 393:

	STAR-25 -> STAR-25 ArgumentCheck .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 394:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'('	shift, and go to state 401

State 395:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 . Literal	(Rule 47)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49

	Literal	go to state 402

State 396:

	OPTIONAL-18 -> TypeInner .	(Rule 45)

	$default	reduce using rule 45 (OPTIONAL-18)

State 397:

	PAREN-33 -> PLUS-32 '1;' '1;' .	(Rule 78)

	$default	reduce using rule 78 (PAREN-33)

State 398:

	OPTIONAL-37 -> MethodArguments .	(Rule 87)

	$default	reduce using rule 87 (OPTIONAL-37)

State 399:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	TYPE_CLASS_OR_SELF	shift, and go to state 403

State 400:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 . PLUS-38 '}' ';'	(Rule 91)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'if ('	shift, and go to state 52
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_VOID	shift, and go to state 87
	OP01_NAMED_VOID_PAREN	shift, and go to state 71
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP19_LOOP_CONTROL	shift, and go to state 84
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 9

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	Literal	go to state 68
	HashDereferenced	go to state 69
	OperatorVoid	go to state 51
	WordScoped	go to state 50
	HashReference	go to state 56
	Conditional	go to state 54
	ArrayDereferenced	go to state 74
	OPTIONAL-50	go to state 75
	VariableModification	go to state 61
	Operator	go to state 76
	Statement	go to state 72
	Expression	go to state 79
	PLUS-38	go to state 405
	PAREN-49	go to state 62
	ArrayReference	go to state 83
	LoopLabel	go to state 64
	VariableDeclaration	go to state 82
	Variable	go to state 81
	Operation	go to state 404

State 401:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56
	ArrayDereferenced	go to state 74
	Literal	go to state 68
	HashDereferenced	go to state 69
	Operator	go to state 76
	WordScoped	go to state 50
	Expression	go to state 406

State 402:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal .	(Rule 47)

	$default	reduce using rule 47 (PAREN-19)

State 403:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	$default	reduce using rule 94 (STAR-40)

	STAR-40	go to state 407

State 404:

	PLUS-38 -> Operation .	(Rule 90)

	$default	reduce using rule 90 (PLUS-38)

State 405:

	PLUS-38 -> PLUS-38 . Operation	(Rule 89)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 . '}' ';'	(Rule 91)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'if ('	shift, and go to state 52
	'my'	shift, and go to state 63
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	'}'	shift, and go to state 408
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP01_NAMED_VOID	shift, and go to state 87
	OP01_NAMED_VOID_PAREN	shift, and go to state 71
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP19_LOOP_CONTROL	shift, and go to state 84
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 78
	WORD_SCOPED	shift, and go to state 9

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	PAREN-49	go to state 62
	Expression	go to state 79
	Statement	go to state 72
	ArrayDereferenced	go to state 74
	OPTIONAL-50	go to state 75
	VariableModification	go to state 61
	Operator	go to state 76
	Operation	go to state 409
	LoopLabel	go to state 64
	Variable	go to state 81
	VariableDeclaration	go to state 82
	ArrayReference	go to state 83
	WordScoped	go to state 50
	OperatorVoid	go to state 51
	Literal	go to state 68
	HashDereferenced	go to state 69
	Conditional	go to state 54
	HashReference	go to state 56

State 406:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-27 ')' ';'	(Rule 67)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP21_LIST_COMMA	shift, and go to state 411
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	')'	reduce using rule 66 (OPTIONAL-27)

	PAREN-26	go to state 410
	OPTIONAL-27	go to state 412

State 407:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 93)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	')'	shift, and go to state 415
	OP21_LIST_COMMA	shift, and go to state 413

	PAREN-39	go to state 414

State 408:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' . ';'	(Rule 91)

	';'	shift, and go to state 416

State 409:

	PLUS-38 -> PLUS-38 Operation .	(Rule 89)

	$default	reduce using rule 89 (PLUS-38)

State 410:

	OPTIONAL-27 -> PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-27)

State 411:

	PAREN-26 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 64)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	HashReference	go to state 56
	ArrayReference	go to state 83
	Variable	go to state 97
	Expression	go to state 417
	WordScoped	go to state 50
	HashDereferenced	go to state 69
	Operator	go to state 76
	ArrayDereferenced	go to state 74
	Literal	go to state 68

State 412:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 . ')' ';'	(Rule 67)

	')'	shift, and go to state 418

State 413:

	PAREN-39 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 92)

	'my'	shift, and go to state 419

State 414:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 93)

	$default	reduce using rule 93 (STAR-40)

State 415:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	OP19_VARIABLE_ASSIGN	shift, and go to state 420

State 416:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';' .	(Rule 91)

	$default	reduce using rule 91 (Method)

State 417:

	PAREN-26 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP21_LIST_COMMA	shift, and go to state 421
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

State 418:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' . ';'	(Rule 67)

	';'	shift, and go to state 422

State 419:

	PAREN-39 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 92)

	WORD	shift, and go to state 118

	Type	go to state 423

State 420:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-41	(Rule 97)

	'@_;'	shift, and go to state 424

State 421:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 64)

	'%{'	shift, and go to state 73
	'('	shift, and go to state 57
	'@{'	shift, and go to state 65
	'['	shift, and go to state 59
	'undef'	shift, and go to state 48
	'{'	shift, and go to state 53
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 49
	OP01_NAMED	shift, and go to state 80
	OP03_MATH_INC_DEC	shift, and go to state 70
	OP05_LOGICAL_NEG	shift, and go to state 77
	OP05_MATH_NEG	shift, and go to state 66
	OP10_NAMED_UNARY	shift, and go to state 47
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 55
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 60
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 9

	ArrayDereferenced	go to state 74
	Literal	go to state 68
	Operator	go to state 76
	HashDereferenced	go to state 69
	WordScoped	go to state 50
	Expression	go to state 425
	Variable	go to state 97
	ArrayReference	go to state 83
	HashReference	go to state 56

State 422:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';' .	(Rule 67)

	$default	reduce using rule 67 (ArgumentCheck)

State 423:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 92)

	VARIABLE_SYMBOL	shift, and go to state 426

State 424:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-41	(Rule 97)

	$default	reduce using rule 96 (STAR-41)

	STAR-41	go to state 427

State 425:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 156
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 150
	OP08_MATH_ADD_SUB	shift, and go to state 145
	OP08_STRING_CAT	shift, and go to state 148
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 147
	OP14_BITWISE_OR_XOR	shift, and go to state 154
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 144
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 140

	')'	reduce using rule 64 (PAREN-26)

State 426:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 92)

	$default	reduce using rule 92 (PAREN-39)

State 427:

	STAR-41 -> STAR-41 . ArgumentCheck	(Rule 95)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41 .	(Rule 97)

	CHECK_OR_CHECKTRACE	shift, and go to state 394

	'%{'	reduce using rule 97 (MethodArguments)
	'('	reduce using rule 97 (MethodArguments)
	'@{'	reduce using rule 97 (MethodArguments)
	'['	reduce using rule 97 (MethodArguments)
	'for my integer'	reduce using rule 97 (MethodArguments)
	'foreach my'	reduce using rule 97 (MethodArguments)
	'if ('	reduce using rule 97 (MethodArguments)
	'my'	reduce using rule 97 (MethodArguments)
	'undef'	reduce using rule 97 (MethodArguments)
	'while ('	reduce using rule 97 (MethodArguments)
	'{'	reduce using rule 97 (MethodArguments)
	LITERAL_NUMBER	reduce using rule 97 (MethodArguments)
	LITERAL_STRING	reduce using rule 97 (MethodArguments)
	OP01_NAMED	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 97 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 97 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 97 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 97 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 97 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 97 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 97 (MethodArguments)
	WORD	reduce using rule 97 (MethodArguments)
	WORD_SCOPED	reduce using rule 97 (MethodArguments)

	ArgumentCheck	go to state 428

State 428:

	STAR-41 -> STAR-41 ArgumentCheck .	(Rule 95)

	$default	reduce using rule 95 (STAR-41)


Summary:
--------
Number of rules         : 227
Number of terminals     : 85
Number of non-terminals : 110
Number of states        : 429
