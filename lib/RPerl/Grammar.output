Conflicts:
----------
Conflict in state 112 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 112 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 112 between rule 114 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 112 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 112 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 112 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 112 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 112 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 112 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 112 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 112 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 112 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 112 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 112 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 112 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 112 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 122 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 122 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 122 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 122 between rule 106 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 122 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 122 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 122 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 122 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 122 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 122 between rule 106 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 122 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 122 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 122 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 122 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 122 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 122 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 126 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 126 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 126 between rule 113 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 126 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 126 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 126 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 126 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 126 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 126 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 126 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 126 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 126 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 126 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 126 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 126 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 126 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 127 between rule 123 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 127 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 127 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 127 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 127 between rule 123 and token OP18_TERNARY resolved as shift.
Conflict in state 127 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 127 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 127 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 127 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 127 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 127 between rule 123 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 127 between rule 123 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 127 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 127 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 127 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 127 between rule 123 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 206 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 206 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 206 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 206 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 206 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 206 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 206 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 206 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 206 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 206 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 206 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 206 between rule 110 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 206 between rule 110 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 206 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 206 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 116 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 207 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 207 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 207 between rule 116 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 207 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 207 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 207 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 207 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 207 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 207 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 207 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 207 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 207 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 207 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 208 between rule 111 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 208 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 208 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 208 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 208 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 208 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 208 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 208 between rule 111 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 208 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 208 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 208 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 208 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 208 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 208 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 209 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 209 between rule 121 and token OP17_LIST_RANGE resolved as error.
Conflict in state 209 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 209 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 209 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 209 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 209 between rule 121 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 209 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 209 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 209 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 209 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 209 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 209 between rule 121 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 209 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 209 between rule 121 and token OP18_TERNARY resolved as reduce.
Conflict in state 211 between rule 109 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 211 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 211 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 109 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 211 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 211 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 211 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 211 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 211 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 211 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 211 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 211 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 211 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 211 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 211 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 212 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 212 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 212 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 212 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 212 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 212 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 212 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 212 between rule 117 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 212 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 212 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 212 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 212 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 212 between rule 117 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 212 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 125 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 213 between rule 125 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 213 between rule 125 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 213 between rule 125 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 213 between rule 125 and token OP08_STRING_CAT resolved as shift.
Conflict in state 213 between rule 125 and token OP04_MATH_POW resolved as shift.
Conflict in state 213 between rule 125 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 213 between rule 125 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 213 between rule 125 and token OP18_TERNARY resolved as shift.
Conflict in state 213 between rule 125 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 213 between rule 125 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 213 between rule 125 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 213 between rule 125 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 213 between rule 125 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 213 between rule 125 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 213 between rule 125 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 214 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 214 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 214 between rule 119 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 214 between rule 119 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 214 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 214 between rule 119 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 214 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 214 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 214 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 214 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 214 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 214 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 214 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 214 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 215 between rule 124 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 215 between rule 124 and token OP04_MATH_POW resolved as shift.
Conflict in state 215 between rule 124 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 215 between rule 124 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 215 between rule 124 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 215 between rule 124 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 215 between rule 124 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 124 and token OP08_STRING_CAT resolved as shift.
Conflict in state 215 between rule 124 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 215 between rule 124 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 124 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 215 between rule 124 and token OP18_TERNARY resolved as shift.
Conflict in state 215 between rule 124 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 215 between rule 124 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 215 between rule 124 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 215 between rule 124 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 216 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 216 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 216 between rule 105 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 216 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 216 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 216 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 216 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 216 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 216 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 216 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 216 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 216 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 216 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 216 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 217 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 217 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 217 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 217 between rule 120 and token OP18_TERNARY resolved as reduce.
Conflict in state 217 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 217 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 217 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 217 between rule 120 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 217 between rule 120 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 217 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 217 between rule 120 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 217 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 217 between rule 120 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 120 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 217 between rule 120 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 217 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 218 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 218 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 118 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 218 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 218 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 218 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 218 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 218 between rule 118 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 218 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 218 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 218 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 218 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 218 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 218 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 218 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 219 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 219 between rule 112 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 219 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 219 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 219 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 219 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 219 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 219 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 219 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 219 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 219 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 219 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 219 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 219 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 220 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 220 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 220 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 220 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 220 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 220 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 220 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 220 between rule 115 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 220 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 220 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 220 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 220 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 220 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Critic
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Include
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Constant
10:	STAR-4 -> /* empty */
11:	STAR-5 -> STAR-5 Subroutine
12:	STAR-5 -> /* empty */
13:	PLUS-6 -> PLUS-6 Operation
14:	PLUS-6 -> Operation
15:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6
16:	Module -> Package
17:	Module -> Class
18:	STAR-7 -> STAR-7 Critic
19:	STAR-7 -> /* empty */
20:	STAR-8 -> STAR-8 Include
21:	STAR-8 -> /* empty */
22:	STAR-9 -> STAR-9 Constant
23:	STAR-9 -> /* empty */
24:	PLUS-10 -> PLUS-10 Subroutine
25:	PLUS-10 -> Subroutine
26:	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'
27:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
28:	PLUS-11 -> PLUS-11 WORD
29:	PLUS-11 -> WORD
30:	Critic -> '## no critic qw(' PLUS-11 ')'
31:	PLUS-12 -> PLUS-12 WORD
32:	PLUS-12 -> WORD
33:	Include -> 'use' WordScoped ';'
34:	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';'
35:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
36:	OPTIONAL-13 -> TypeInner
37:	OPTIONAL-13 -> /* empty */
38:	OPTIONAL-14 -> TypeInner
39:	OPTIONAL-14 -> /* empty */
40:	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal
41:	STAR-16 -> STAR-16 PAREN-15
42:	STAR-16 -> /* empty */
43:	OPTIONAL-17 -> TypeInner
44:	OPTIONAL-17 -> /* empty */
45:	OPTIONAL-18 -> TypeInner
46:	OPTIONAL-18 -> /* empty */
47:	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal
48:	STAR-20 -> STAR-20 PAREN-19
49:	STAR-20 -> /* empty */
50:	ConstantValue -> Literal
51:	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']'
52:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'
53:	OPTIONAL-21 -> SubroutineArguments
54:	OPTIONAL-21 -> /* empty */
55:	PLUS-22 -> PLUS-22 Operation
56:	PLUS-22 -> Operation
57:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'
58:	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
59:	STAR-24 -> STAR-24 PAREN-23
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 ArgumentCheck
62:	STAR-25 -> /* empty */
63:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25
64:	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
65:	OPTIONAL-27 -> PAREN-26
66:	OPTIONAL-27 -> /* empty */
67:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';'
68:	STAR-28 -> STAR-28 Critic
69:	STAR-28 -> /* empty */
70:	STAR-29 -> STAR-29 Include
71:	STAR-29 -> /* empty */
72:	STAR-30 -> STAR-30 Constant
73:	STAR-30 -> /* empty */
74:	STAR-31 -> STAR-31 Method
75:	STAR-31 -> /* empty */
76:	PLUS-32 -> PLUS-32 Subroutine
77:	PLUS-32 -> Subroutine
78:	PAREN-33 -> PLUS-32 '1;' '1;'
79:	OPTIONAL-34 -> PAREN-33
80:	OPTIONAL-34 -> /* empty */
81:	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34
82:	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped
83:	STAR-36 -> STAR-36 PAREN-35
84:	STAR-36 -> /* empty */
85:	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';'
86:	Properties -> 'our %properties = (' ')' ';'
87:	OPTIONAL-37 -> MethodArguments
88:	OPTIONAL-37 -> /* empty */
89:	PLUS-38 -> PLUS-38 Operation
90:	PLUS-38 -> Operation
91:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'
92:	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
93:	STAR-40 -> STAR-40 PAREN-39
94:	STAR-40 -> /* empty */
95:	STAR-41 -> STAR-41 ArgumentCheck
96:	STAR-41 -> /* empty */
97:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41
98:	Operation -> Expression ';'
99:	Operation -> Statement
100:	OPTIONAL-42 -> ListElements
101:	OPTIONAL-42 -> /* empty */
102:	Operator -> OP01_NAMED '(' OPTIONAL-42 ')'
103:	Operator -> OP03_MATH_INC_DEC Variable
104:	Operator -> Variable OP03_MATH_INC_DEC
105:	Operator -> Expression OP04_MATH_POW Expression
106:	Operator -> OP05_LOGICAL_NEG Expression
107:	Operator -> OP05_MATH_NEG Expression ')'
108:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
109:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
110:	Operator -> Expression OP08_MATH_ADD_SUB Expression
111:	Operator -> Expression OP08_STRING_CAT Expression
112:	Operator -> Expression OP09_BITWISE_SHIFT Expression
113:	Operator -> OP10_NAMED_UNARY Expression
114:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
115:	Operator -> Expression OP11_COMPARE_LT_GT Expression
116:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
117:	Operator -> Expression OP13_BITWISE_AND Expression
118:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
119:	Operator -> Expression OP15_LOGICAL_AND Expression
120:	Operator -> Expression OP16_LOGICAL_OR Expression
121:	Operator -> Expression OP17_LIST_RANGE Expression
122:	Operator -> Expression OP18_TERNARY Variable COLON Variable
123:	Operator -> OP22_LOGICAL_NOT Expression
124:	Operator -> Expression OP23_LOGICAL_AND Expression
125:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
126:	OPTIONAL-43 -> ListElements
127:	OPTIONAL-43 -> /* empty */
128:	OPTIONAL-44 -> ListElements
129:	OPTIONAL-44 -> /* empty */
130:	OPTIONAL-45 -> ListElements
131:	OPTIONAL-45 -> /* empty */
132:	OPTIONAL-46 -> ListElements
133:	OPTIONAL-46 -> /* empty */
134:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';'
135:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';'
136:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';'
137:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';'
138:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
139:	OPTIONAL-47 -> ListElements
140:	OPTIONAL-47 -> /* empty */
141:	OPTIONAL-48 -> ListElements
142:	OPTIONAL-48 -> /* empty */
143:	Expression -> 'undef'
144:	Expression -> Literal
145:	Expression -> Variable
146:	Expression -> ArrayReference
147:	Expression -> ArrayDereferenced
148:	Expression -> HashReference
149:	Expression -> HashDereferenced
150:	Expression -> '{' '}'
151:	Expression -> Operator
152:	Expression -> WordScoped '(' OPTIONAL-47 ')'
153:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'
154:	Expression -> '(' Expression ')'
155:	ExpressionOrStdin -> Expression
156:	ExpressionOrStdin -> '<STDIN>'
157:	PAREN-49 -> LoopLabel COLON
158:	OPTIONAL-50 -> PAREN-49
159:	OPTIONAL-50 -> /* empty */
160:	Statement -> Conditional
161:	Statement -> OPTIONAL-50 Loop
162:	Statement -> OperatorVoid
163:	Statement -> VariableDeclaration
164:	Statement -> VariableModification
165:	PAREN-51 -> 'elsif (' Expression ')' CodeBlock
166:	STAR-52 -> STAR-52 PAREN-51
167:	STAR-52 -> /* empty */
168:	PAREN-53 -> 'else' CodeBlock
169:	OPTIONAL-54 -> PAREN-53
170:	OPTIONAL-54 -> /* empty */
171:	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54
172:	Loop -> LoopFor
173:	Loop -> LoopForEach
174:	Loop -> LoopWhile
175:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
176:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
177:	LoopWhile -> 'while (' Expression ')' CodeBlock
178:	PLUS-55 -> PLUS-55 Operation
179:	PLUS-55 -> Operation
180:	CodeBlock -> '{' PLUS-55 '}'
181:	STAR-56 -> STAR-56 VariableRetrieval
182:	STAR-56 -> /* empty */
183:	Variable -> VARIABLE_SYMBOL STAR-56
184:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
185:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
186:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
187:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
188:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
189:	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
190:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
191:	PAREN-57 -> OP21_LIST_COMMA ListElement
192:	STAR-58 -> STAR-58 PAREN-57
193:	STAR-58 -> /* empty */
194:	ListElements -> ListElement STAR-58
195:	ListElement -> Expression
196:	ListElement -> TypeInner Expression
197:	ListElement -> KEYS_OR_VALUES HashDereferenced
198:	OPTIONAL-59 -> ListElements
199:	OPTIONAL-59 -> /* empty */
200:	ArrayReference -> '[' OPTIONAL-59 ']'
201:	ArrayDereferenced -> '@{' Variable '}'
202:	ArrayDereferenced -> '@{' ArrayReference '}'
203:	OPTIONAL-60 -> TypeInner
204:	OPTIONAL-60 -> /* empty */
205:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 Expression
206:	HashEntry -> HashDereferenced
207:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
208:	HashEntryTyped -> HashDereferenced
209:	PAREN-61 -> OP21_LIST_COMMA HashEntry
210:	STAR-62 -> STAR-62 PAREN-61
211:	STAR-62 -> /* empty */
212:	HashReference -> '{' HashEntry STAR-62 '}'
213:	HashDereferenced -> '%{' Variable '}'
214:	HashDereferenced -> '%{' HashReference '}'
215:	WordScoped -> WORD
216:	WordScoped -> WORD_SCOPED
217:	FileHandle -> '{*' WORD '}'
218:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
219:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
220:	Type -> WORD
221:	LoopLabel -> WORD
222:	Literal -> LITERAL_STRING
223:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 6
	SHEBANG	shift, and go to state 4

	Module	go to state 1
	Class	go to state 5
	PLUS-1	go to state 8
	Program	go to state 7
	Package	go to state 2
	CompileUnit	go to state 3

State 1:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 2:

	Module -> Package .	(Rule 16)

	$default	reduce using rule 16 (Module)

State 3:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 9

State 4:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use strict;'	shift, and go to state 10

	Header	go to state 11

State 5:

	Module -> Class .	(Rule 17)

	$default	reduce using rule 17 (Module)

State 6:

	Package -> 'package' . WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 13

State 7:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 8:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 6

	$end	reduce using rule 4 (CompileUnit)

	Module	go to state 15
	Class	go to state 5
	Package	go to state 2

State 9:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 10:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'use warnings;'	shift, and go to state 16

State 11:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 17

State 12:

	WordScoped -> WORD .	(Rule 215)

	$default	reduce using rule 215 (WordScoped)

State 13:

	Package -> 'package' WordScoped . ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 18

State 14:

	WordScoped -> WORD_SCOPED .	(Rule 216)

	$default	reduce using rule 216 (WordScoped)

State 15:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 16:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'use RPerl;'	shift, and go to state 19

State 17:

	STAR-2 -> STAR-2 . Critic	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'## no critic qw('	shift, and go to state 20

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'use'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL_NUMBER	reduce using rule 8 (STAR-3)
	LITERAL_STRING	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)
	WORD_SCOPED	reduce using rule 8 (STAR-3)

	STAR-3	go to state 21
	Critic	go to state 22

State 18:

	Package -> 'package' WordScoped ';' . Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use strict;'	shift, and go to state 10

	Header	go to state 23

State 19:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'our'	shift, and go to state 24

State 20:

	Critic -> '## no critic qw(' . PLUS-11 ')'	(Rule 30)

	WORD	shift, and go to state 25

	PLUS-11	go to state 26

State 21:

	STAR-3 -> STAR-3 . Include	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use'	shift, and go to state 29

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'use constant'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL_NUMBER	reduce using rule 10 (STAR-4)
	LITERAL_STRING	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)
	WORD_SCOPED	reduce using rule 10 (STAR-4)

	Include	go to state 28
	STAR-4	go to state 27

State 22:

	STAR-2 -> STAR-2 Critic .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 23:

	Package -> 'package' WordScoped ';' Header . STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use parent qw('	shift, and go to state 30

	'## no critic qw('	reduce using rule 19 (STAR-7)
	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)
	'use'	reduce using rule 19 (STAR-7)

	STAR-7	go to state 31

State 24:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 27)

	VERSION_NUMBER_ASSIGN	shift, and go to state 32

State 25:

	PLUS-11 -> WORD .	(Rule 29)

	$default	reduce using rule 29 (PLUS-11)

State 26:

	PLUS-11 -> PLUS-11 . WORD	(Rule 28)
	Critic -> '## no critic qw(' PLUS-11 . ')'	(Rule 30)

	')'	shift, and go to state 33
	WORD	shift, and go to state 34

State 27:

	STAR-4 -> STAR-4 . Constant	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . STAR-5 PLUS-6	(Rule 15)

	'use constant'	shift, and go to state 35

	'%{'	reduce using rule 12 (STAR-5)
	'('	reduce using rule 12 (STAR-5)
	'@{'	reduce using rule 12 (STAR-5)
	'['	reduce using rule 12 (STAR-5)
	'for my integer'	reduce using rule 12 (STAR-5)
	'foreach my'	reduce using rule 12 (STAR-5)
	'if ('	reduce using rule 12 (STAR-5)
	'my'	reduce using rule 12 (STAR-5)
	'our'	reduce using rule 12 (STAR-5)
	'undef'	reduce using rule 12 (STAR-5)
	'while ('	reduce using rule 12 (STAR-5)
	'{'	reduce using rule 12 (STAR-5)
	LITERAL_NUMBER	reduce using rule 12 (STAR-5)
	LITERAL_STRING	reduce using rule 12 (STAR-5)
	OP01_NAMED	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 12 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 12 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 12 (STAR-5)
	OP05_MATH_NEG	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 12 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 12 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 12 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 12 (STAR-5)
	WORD	reduce using rule 12 (STAR-5)
	WORD_SCOPED	reduce using rule 12 (STAR-5)

	STAR-5	go to state 36
	Constant	go to state 37

State 28:

	STAR-3 -> STAR-3 Include .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 29:

	Include -> 'use' . WordScoped ';'	(Rule 33)
	Include -> 'use' . WordScoped 'qw(' PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 38

State 30:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 39

State 31:

	STAR-7 -> STAR-7 . Critic	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-7 . STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'## no critic qw('	shift, and go to state 20

	'our'	reduce using rule 21 (STAR-8)
	'use constant'	reduce using rule 21 (STAR-8)
	'use'	reduce using rule 21 (STAR-8)

	Critic	go to state 40
	STAR-8	go to state 41

State 32:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 27)

	$default	reduce using rule 27 (Header)

State 33:

	Critic -> '## no critic qw(' PLUS-11 ')' .	(Rule 30)

	$default	reduce using rule 30 (Critic)

State 34:

	PLUS-11 -> PLUS-11 WORD .	(Rule 28)

	$default	reduce using rule 28 (PLUS-11)

State 35:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	WORD	shift, and go to state 42

State 36:

	STAR-5 -> STAR-5 . Subroutine	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 . PLUS-6	(Rule 15)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 51
	'our'	shift, and go to state 78
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP01_NAMED_VOID	shift, and go to state 43
	OP01_NAMED_VOID_PAREN	shift, and go to state 62
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP19_LOOP_CONTROL	shift, and go to state 47
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	PAREN-49	go to state 79
	ArrayDereferenced	go to state 80
	OperatorVoid	go to state 81
	Conditional	go to state 59
	Expression	go to state 77
	Subroutine	go to state 61
	PLUS-6	go to state 83
	OPTIONAL-50	go to state 85
	HashReference	go to state 82
	VariableDeclaration	go to state 70
	ArrayReference	go to state 71
	Literal	go to state 55
	VariableModification	go to state 54
	Operation	go to state 45
	Operator	go to state 46
	HashDereferenced	go to state 48
	WordScoped	go to state 76
	LoopLabel	go to state 75
	Variable	go to state 56
	Statement	go to state 57

State 37:

	STAR-4 -> STAR-4 Constant .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 38:

	Include -> 'use' WordScoped . ';'	(Rule 33)
	Include -> 'use' WordScoped . 'qw(' PLUS-12 ')' ';'	(Rule 34)

	';'	shift, and go to state 86
	'qw('	shift, and go to state 87

State 39:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped . ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	')'	shift, and go to state 88

State 40:

	STAR-7 -> STAR-7 Critic .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 41:

	STAR-8 -> STAR-8 . Include	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 . STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'use'	shift, and go to state 29

	'our'	reduce using rule 23 (STAR-9)
	'use constant'	reduce using rule 23 (STAR-9)

	Include	go to state 90
	STAR-9	go to state 89

State 42:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	OP20_HASH_FATARROW	shift, and go to state 91

State 43:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-45 ';'	(Rule 136)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 98
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	'{*'	shift, and go to state 96
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	';'	reduce using rule 131 (OPTIONAL-45)

	TypeInner	go to state 92
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	ListElements	go to state 93
	Literal	go to state 55
	Operator	go to state 46
	Expression	go to state 95
	HashDereferenced	go to state 48
	WordScoped	go to state 76
	FileHandle	go to state 101
	Variable	go to state 99
	ListElement	go to state 97
	OPTIONAL-45	go to state 100
	HashReference	go to state 82

State 44:

	Expression -> '{' . '}'	(Rule 150)
	HashReference -> '{' . HashEntry STAR-62 '}'	(Rule 212)

	'%{'	shift, and go to state 72
	'}'	shift, and go to state 103
	WORD	shift, and go to state 104

	HashEntry	go to state 105
	HashDereferenced	go to state 102

State 45:

	PLUS-6 -> Operation .	(Rule 14)

	$default	reduce using rule 14 (PLUS-6)

State 46:

	Expression -> Operator .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 47:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 138)

	WORD	shift, and go to state 106

	LoopLabel	go to state 107

State 48:

	Expression -> HashDereferenced .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 49:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 103)

	VARIABLE_SYMBOL	shift, and go to state 53

	Variable	go to state 108

State 50:

	Expression -> '(' . Expression ')'	(Rule 154)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76
	Operator	go to state 46
	HashDereferenced	go to state 48
	Expression	go to state 109
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55

State 51:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 187)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 188)

	WORD	shift, and go to state 110

	Type	go to state 111

State 52:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 114)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76
	Operator	go to state 46
	HashDereferenced	go to state 48
	Expression	go to state 112
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	Literal	go to state 55

State 53:

	Variable -> VARIABLE_SYMBOL . STAR-56	(Rule 183)

	$default	reduce using rule 182 (STAR-56)

	STAR-56	go to state 113

State 54:

	Statement -> VariableModification .	(Rule 164)

	$default	reduce using rule 164 (Statement)

State 55:

	Expression -> Literal .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 56:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 189)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 190)

	OP02_METHOD_THINARROW	shift, and go to state 117
	OP03_MATH_INC_DEC	shift, and go to state 114
	OP19_VARIABLE_ASSIGN	shift, and go to state 116
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 115

	';'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 57:

	Operation -> Statement .	(Rule 99)

	$default	reduce using rule 99 (Operation)

State 58:

	WordScoped -> WORD .	(Rule 215)
	LoopLabel -> WORD .	(Rule 221)

	'('	reduce using rule 215 (WordScoped)
	COLON	reduce using rule 221 (LoopLabel)

State 59:

	Statement -> Conditional .	(Rule 160)

	$default	reduce using rule 160 (Statement)

State 60:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 107)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 76
	Variable	go to state 99
	HashReference	go to state 82
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	Literal	go to state 55
	Operator	go to state 46
	Expression	go to state 118
	HashDereferenced	go to state 48

State 61:

	STAR-5 -> STAR-5 Subroutine .	(Rule 11)

	$default	reduce using rule 11 (STAR-5)

State 62:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-43 ')' ';'	(Rule 134)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 98
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	'{*'	shift, and go to state 96
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 127 (OPTIONAL-43)

	Expression	go to state 95
	HashDereferenced	go to state 48
	OPTIONAL-43	go to state 119
	Operator	go to state 46
	ListElements	go to state 121
	Literal	go to state 55
	TypeInner	go to state 92
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	HashReference	go to state 82
	Variable	go to state 99
	ListElement	go to state 97
	FileHandle	go to state 120
	WordScoped	go to state 76

State 63:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 106)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 76
	Variable	go to state 99
	HashReference	go to state 82
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55
	Operator	go to state 46
	Expression	go to state 122
	HashDereferenced	go to state 48

State 64:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 171)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76
	Operator	go to state 46
	Expression	go to state 123
	HashDereferenced	go to state 48
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55

State 65:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 201)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 202)

	'['	shift, and go to state 68
	VARIABLE_SYMBOL	shift, and go to state 53

	ArrayReference	go to state 124
	Variable	go to state 125

State 66:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 113)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 76
	HashReference	go to state 82
	Variable	go to state 99
	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Expression	go to state 126
	HashDereferenced	go to state 48
	Operator	go to state 46

State 67:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 123)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76
	Operator	go to state 46
	HashDereferenced	go to state 48
	Expression	go to state 127
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55

State 68:

	ArrayReference -> '[' . OPTIONAL-59 ']'	(Rule 200)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 130
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	']'	reduce using rule 199 (OPTIONAL-59)

	HashDereferenced	go to state 48
	Expression	go to state 95
	Operator	go to state 46
	OPTIONAL-59	go to state 128
	Literal	go to state 55
	ListElements	go to state 129
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	TypeInner	go to state 92
	HashReference	go to state 82
	ListElement	go to state 97
	Variable	go to state 99
	WordScoped	go to state 76

State 69:

	Operator -> OP01_NAMED . '(' OPTIONAL-42 ')'	(Rule 102)

	'('	shift, and go to state 131

State 70:

	Statement -> VariableDeclaration .	(Rule 163)

	$default	reduce using rule 163 (Statement)

State 71:

	Expression -> ArrayReference .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 72:

	HashDereferenced -> '%{' . Variable '}'	(Rule 213)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 214)

	'{'	shift, and go to state 134
	VARIABLE_SYMBOL	shift, and go to state 53

	HashReference	go to state 132
	Variable	go to state 133

State 73:

	Literal -> LITERAL_NUMBER .	(Rule 223)

	$default	reduce using rule 223 (Literal)

State 74:

	Expression -> 'undef' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 75:

	PAREN-49 -> LoopLabel . COLON	(Rule 157)

	COLON	shift, and go to state 135

State 76:

	Expression -> WordScoped . '(' OPTIONAL-47 ')'	(Rule 152)

	'('	shift, and go to state 136

State 77:

	Operation -> Expression . ';'	(Rule 98)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	';'	shift, and go to state 137
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 78:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	WORD	shift, and go to state 110

	Type	go to state 154

State 79:

	OPTIONAL-50 -> PAREN-49 .	(Rule 158)

	$default	reduce using rule 158 (OPTIONAL-50)

State 80:

	Expression -> ArrayDereferenced .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 81:

	Statement -> OperatorVoid .	(Rule 162)

	$default	reduce using rule 162 (Statement)

State 82:

	Expression -> HashReference .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 83:

	PLUS-6 -> PLUS-6 . Operation	(Rule 13)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6 .	(Rule 15)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 51
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP01_NAMED_VOID	shift, and go to state 43
	OP01_NAMED_VOID_PAREN	shift, and go to state 62
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP19_LOOP_CONTROL	shift, and go to state 47
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 14

	$end	reduce using rule 15 (Program)
	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	OPTIONAL-50	go to state 85
	HashReference	go to state 82
	PAREN-49	go to state 79
	ArrayDereferenced	go to state 80
	OperatorVoid	go to state 81
	Conditional	go to state 59
	Expression	go to state 77
	WordScoped	go to state 76
	Variable	go to state 56
	LoopLabel	go to state 75
	Statement	go to state 57
	VariableDeclaration	go to state 70
	ArrayReference	go to state 71
	VariableModification	go to state 54
	Literal	go to state 55
	Operation	go to state 155
	Operator	go to state 46
	HashDereferenced	go to state 48

State 84:

	Literal -> LITERAL_STRING .	(Rule 222)

	$default	reduce using rule 222 (Literal)

State 85:

	Statement -> OPTIONAL-50 . Loop	(Rule 161)

	'for my integer'	shift, and go to state 157
	'foreach my'	shift, and go to state 162
	'while ('	shift, and go to state 159

	LoopWhile	go to state 158
	LoopFor	go to state 160
	Loop	go to state 156
	LoopForEach	go to state 161

State 86:

	Include -> 'use' WordScoped ';' .	(Rule 33)

	$default	reduce using rule 33 (Include)

State 87:

	Include -> 'use' WordScoped 'qw(' . PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 163

	PLUS-12	go to state 164

State 88:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' . ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 165

State 89:

	STAR-9 -> STAR-9 . Constant	(Rule 22)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 . PLUS-10 '1;' '1;'	(Rule 26)

	'our'	shift, and go to state 78
	'use constant'	shift, and go to state 35

	PLUS-10	go to state 167
	Constant	go to state 166
	Subroutine	go to state 168

State 90:

	STAR-8 -> STAR-8 Include .	(Rule 20)

	$default	reduce using rule 20 (STAR-8)

State 91:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 35)

	'my'	shift, and go to state 130

	TypeInner	go to state 169

State 92:

	ListElement -> TypeInner . Expression	(Rule 196)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Expression	go to state 170
	HashDereferenced	go to state 48
	Operator	go to state 46
	WordScoped	go to state 76
	HashReference	go to state 82
	Variable	go to state 99

State 93:

	OPTIONAL-45 -> ListElements .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-45)

State 94:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 197)

	'%{'	shift, and go to state 72

	HashDereferenced	go to state 171

State 95:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> Expression .	(Rule 195)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

	')'	reduce using rule 195 (ListElement)
	';'	reduce using rule 195 (ListElement)
	']'	reduce using rule 195 (ListElement)
	OP21_LIST_COMMA	reduce using rule 195 (ListElement)

State 96:

	FileHandle -> '{*' . WORD '}'	(Rule 217)

	WORD	shift, and go to state 172

State 97:

	ListElements -> ListElement . STAR-58	(Rule 194)

	$default	reduce using rule 193 (STAR-58)

	STAR-58	go to state 173

State 98:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 218)
	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 219)

	'filehandle_ref'	shift, and go to state 174
	WORD	shift, and go to state 110

	Type	go to state 175

State 99:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)

	OP02_METHOD_THINARROW	shift, and go to state 117
	OP03_MATH_INC_DEC	shift, and go to state 114

	')'	reduce using rule 145 (Expression)
	'..'	reduce using rule 145 (Expression)
	';'	reduce using rule 145 (Expression)
	']'	reduce using rule 145 (Expression)
	'}'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP21_LIST_COMMA	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 100:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 . ';'	(Rule 136)

	';'	shift, and go to state 176

State 101:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 130
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	';'	reduce using rule 133 (OPTIONAL-46)

	HashReference	go to state 82
	Variable	go to state 99
	ListElement	go to state 97
	WordScoped	go to state 76
	Expression	go to state 95
	HashDereferenced	go to state 48
	OPTIONAL-46	go to state 177
	Operator	go to state 46
	Literal	go to state 55
	ListElements	go to state 178
	TypeInner	go to state 92
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80

State 102:

	HashEntry -> HashDereferenced .	(Rule 206)

	$default	reduce using rule 206 (HashEntry)

State 103:

	Expression -> '{' '}' .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 104:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-60 Expression	(Rule 205)

	OP20_HASH_FATARROW	shift, and go to state 179

State 105:

	HashReference -> '{' HashEntry . STAR-62 '}'	(Rule 212)

	$default	reduce using rule 211 (STAR-62)

	STAR-62	go to state 180

State 106:

	LoopLabel -> WORD .	(Rule 221)

	$default	reduce using rule 221 (LoopLabel)

State 107:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 138)

	';'	shift, and go to state 181

State 108:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 109:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Expression -> '(' Expression . ')'	(Rule 154)

	')'	shift, and go to state 182
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 110:

	Type -> WORD .	(Rule 220)

	$default	reduce using rule 220 (Type)

State 111:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 187)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 188)

	VARIABLE_SYMBOL	shift, and go to state 183

State 112:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 114)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 114 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 113:

	STAR-56 -> STAR-56 . VariableRetrieval	(Rule 181)
	Variable -> VARIABLE_SYMBOL STAR-56 .	(Rule 183)

	OP02_ARRAY_THINARROW	shift, and go to state 185
	OP02_HASH_THINARROW	shift, and go to state 186

	')'	reduce using rule 183 (Variable)
	'..'	reduce using rule 183 (Variable)
	';'	reduce using rule 183 (Variable)
	']'	reduce using rule 183 (Variable)
	'}'	reduce using rule 183 (Variable)
	COLON	reduce using rule 183 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 183 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 183 (Variable)
	OP04_MATH_POW	reduce using rule 183 (Variable)
	OP06_REGEX_MATCH	reduce using rule 183 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 183 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 183 (Variable)
	OP08_STRING_CAT	reduce using rule 183 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 183 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 183 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 183 (Variable)
	OP13_BITWISE_AND	reduce using rule 183 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 183 (Variable)
	OP15_LOGICAL_AND	reduce using rule 183 (Variable)
	OP16_LOGICAL_OR	reduce using rule 183 (Variable)
	OP17_LIST_RANGE	reduce using rule 183 (Variable)
	OP18_TERNARY	reduce using rule 183 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 183 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 183 (Variable)
	OP21_LIST_COMMA	reduce using rule 183 (Variable)
	OP23_LOGICAL_AND	reduce using rule 183 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 183 (Variable)

	VariableRetrieval	go to state 184

State 114:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 115:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 190)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	Literal	go to state 55
	Operator	go to state 46
	Expression	go to state 187
	HashDereferenced	go to state 48
	WordScoped	go to state 76
	Variable	go to state 99
	HashReference	go to state 82

State 116:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 189)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'<STDIN>'	shift, and go to state 190
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	ExpressionOrStdin	go to state 189
	Expression	go to state 188
	HashDereferenced	go to state 48
	Operator	go to state 46
	Literal	go to state 55
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76

State 117:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-48 ')'	(Rule 153)

	WORD	shift, and go to state 191

State 118:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 107)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	')'	shift, and go to state 192
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 119:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 . ')' ';'	(Rule 134)

	')'	shift, and go to state 193

State 120:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 130
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 129 (OPTIONAL-44)

	Variable	go to state 99
	ListElement	go to state 97
	HashReference	go to state 82
	WordScoped	go to state 76
	Operator	go to state 46
	Expression	go to state 95
	OPTIONAL-44	go to state 195
	HashDereferenced	go to state 48
	TypeInner	go to state 92
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55
	ListElements	go to state 194

State 121:

	OPTIONAL-43 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-43)

State 122:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP06_REGEX_MATCH	reduce using rule 106 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 106 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 123:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 171)

	')'	shift, and go to state 196
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 124:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 202)

	'}'	shift, and go to state 197

State 125:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 201)

	'}'	shift, and go to state 198

State 126:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 127:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142

	')'	reduce using rule 123 (Operator)
	'..'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP23_LOGICAL_AND	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 128:

	ArrayReference -> '[' OPTIONAL-59 . ']'	(Rule 200)

	']'	shift, and go to state 199

State 129:

	OPTIONAL-59 -> ListElements .	(Rule 198)

	$default	reduce using rule 198 (OPTIONAL-59)

State 130:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 219)

	WORD	shift, and go to state 110

	Type	go to state 175

State 131:

	Operator -> OP01_NAMED '(' . OPTIONAL-42 ')'	(Rule 102)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 130
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 101 (OPTIONAL-42)

	Operator	go to state 46
	HashDereferenced	go to state 48
	Expression	go to state 95
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	TypeInner	go to state 92
	OPTIONAL-42	go to state 200
	Literal	go to state 55
	ListElements	go to state 201
	ListElement	go to state 97
	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76

State 132:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 214)

	'}'	shift, and go to state 202

State 133:

	HashDereferenced -> '%{' Variable . '}'	(Rule 213)

	'}'	shift, and go to state 203

State 134:

	HashReference -> '{' . HashEntry STAR-62 '}'	(Rule 212)

	'%{'	shift, and go to state 72
	WORD	shift, and go to state 104

	HashEntry	go to state 105
	HashDereferenced	go to state 102

State 135:

	PAREN-49 -> LoopLabel COLON .	(Rule 157)

	$default	reduce using rule 157 (PAREN-49)

State 136:

	Expression -> WordScoped '(' . OPTIONAL-47 ')'	(Rule 152)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 130
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 140 (OPTIONAL-47)

	OPTIONAL-47	go to state 204
	WordScoped	go to state 76
	HashReference	go to state 82
	ListElement	go to state 97
	Variable	go to state 99
	ListElements	go to state 205
	Literal	go to state 55
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	TypeInner	go to state 92
	HashDereferenced	go to state 48
	Expression	go to state 95
	Operator	go to state 46

State 137:

	Operation -> Expression ';' .	(Rule 98)

	$default	reduce using rule 98 (Operation)

State 138:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 110)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	Literal	go to state 55
	Operator	go to state 46
	Expression	go to state 206
	HashDereferenced	go to state 48
	WordScoped	go to state 76
	Variable	go to state 99
	HashReference	go to state 82

State 139:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 116)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76
	Operator	go to state 46
	HashDereferenced	go to state 48
	Expression	go to state 207
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55

State 140:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 111)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76
	Expression	go to state 208
	HashDereferenced	go to state 48
	Operator	go to state 46
	Literal	go to state 55
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71

State 141:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 121)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	HashDereferenced	go to state 48
	Expression	go to state 209
	Operator	go to state 46
	WordScoped	go to state 76
	HashReference	go to state 82
	Variable	go to state 99

State 142:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 53

	Variable	go to state 210

State 143:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 109)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Literal	go to state 55
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	Expression	go to state 211
	HashDereferenced	go to state 48
	Operator	go to state 46
	WordScoped	go to state 76
	HashReference	go to state 82
	Variable	go to state 99

State 144:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 117)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Literal	go to state 55
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	Expression	go to state 212
	HashDereferenced	go to state 48
	Operator	go to state 46
	WordScoped	go to state 76
	HashReference	go to state 82
	Variable	go to state 99

State 145:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 125)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76
	Expression	go to state 213
	HashDereferenced	go to state 48
	Operator	go to state 46
	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80

State 146:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 119)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76
	Operator	go to state 46
	Expression	go to state 214
	HashDereferenced	go to state 48
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55

State 147:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 124)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 76
	Variable	go to state 99
	HashReference	go to state 82
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	Literal	go to state 55
	Operator	go to state 46
	Expression	go to state 215
	HashDereferenced	go to state 48

State 148:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 105)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 216
	HashDereferenced	go to state 48
	Operator	go to state 46
	Literal	go to state 55
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76

State 149:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 120)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76
	HashDereferenced	go to state 48
	Expression	go to state 217
	Operator	go to state 46
	Literal	go to state 55
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71

State 150:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 118)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76
	Operator	go to state 46
	Expression	go to state 218
	HashDereferenced	go to state 48
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55

State 151:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 112)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 76
	HashReference	go to state 82
	Variable	go to state 99
	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	HashDereferenced	go to state 48
	Expression	go to state 219
	Operator	go to state 46

State 152:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 115)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 76
	HashReference	go to state 82
	Variable	go to state 99
	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	HashDereferenced	go to state 48
	Expression	go to state 220
	Operator	go to state 46

State 153:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 108)

	'/'	shift, and go to state 221

State 154:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	VARIABLE_SYMBOL	shift, and go to state 222

State 155:

	PLUS-6 -> PLUS-6 Operation .	(Rule 13)

	$default	reduce using rule 13 (PLUS-6)

State 156:

	Statement -> OPTIONAL-50 Loop .	(Rule 161)

	$default	reduce using rule 161 (Statement)

State 157:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 175)

	VARIABLE_SYMBOL	shift, and go to state 223

State 158:

	Loop -> LoopWhile .	(Rule 174)

	$default	reduce using rule 174 (Loop)

State 159:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 177)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 76
	Variable	go to state 99
	HashReference	go to state 82
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55
	Operator	go to state 46
	Expression	go to state 224
	HashDereferenced	go to state 48

State 160:

	Loop -> LoopFor .	(Rule 172)

	$default	reduce using rule 172 (Loop)

State 161:

	Loop -> LoopForEach .	(Rule 173)

	$default	reduce using rule 173 (Loop)

State 162:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 176)

	WORD	shift, and go to state 110

	Type	go to state 225

State 163:

	PLUS-12 -> WORD .	(Rule 32)

	$default	reduce using rule 32 (PLUS-12)

State 164:

	PLUS-12 -> PLUS-12 . WORD	(Rule 31)
	Include -> 'use' WordScoped 'qw(' PLUS-12 . ')' ';'	(Rule 34)

	')'	shift, and go to state 226
	WORD	shift, and go to state 227

State 165:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' . Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 29

	Include	go to state 228

State 166:

	STAR-9 -> STAR-9 Constant .	(Rule 22)

	$default	reduce using rule 22 (STAR-9)

State 167:

	PLUS-10 -> PLUS-10 . Subroutine	(Rule 24)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 . '1;' '1;'	(Rule 26)

	'1;'	shift, and go to state 229
	'our'	shift, and go to state 78

	Subroutine	go to state 230

State 168:

	PLUS-10 -> Subroutine .	(Rule 25)

	$default	reduce using rule 25 (PLUS-10)

State 169:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 35)

	'['	shift, and go to state 231
	'{'	shift, and go to state 232
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84

	ConstantValue	go to state 233
	Literal	go to state 234

State 170:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> TypeInner Expression .	(Rule 196)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

	')'	reduce using rule 196 (ListElement)
	';'	reduce using rule 196 (ListElement)
	']'	reduce using rule 196 (ListElement)
	OP21_LIST_COMMA	reduce using rule 196 (ListElement)

State 171:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 197)

	$default	reduce using rule 197 (ListElement)

State 172:

	FileHandle -> '{*' WORD . '}'	(Rule 217)

	'}'	shift, and go to state 235

State 173:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 192)
	ListElements -> ListElement STAR-58 .	(Rule 194)

	OP21_LIST_COMMA	shift, and go to state 237

	')'	reduce using rule 194 (ListElements)
	';'	reduce using rule 194 (ListElements)
	']'	reduce using rule 194 (ListElements)

	PAREN-57	go to state 236

State 174:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 218)

	VARIABLE_SYMBOL	shift, and go to state 238

State 175:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 219)

	'$TYPED_'	shift, and go to state 239

State 176:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 177:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 . ';'	(Rule 137)

	';'	shift, and go to state 240

State 178:

	OPTIONAL-46 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-46)

State 179:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-60 Expression	(Rule 205)

	'my'	shift, and go to state 130

	'%{'	reduce using rule 204 (OPTIONAL-60)
	'('	reduce using rule 204 (OPTIONAL-60)
	'@{'	reduce using rule 204 (OPTIONAL-60)
	'['	reduce using rule 204 (OPTIONAL-60)
	'undef'	reduce using rule 204 (OPTIONAL-60)
	'{'	reduce using rule 204 (OPTIONAL-60)
	LITERAL_NUMBER	reduce using rule 204 (OPTIONAL-60)
	LITERAL_STRING	reduce using rule 204 (OPTIONAL-60)
	OP01_NAMED	reduce using rule 204 (OPTIONAL-60)
	OP03_MATH_INC_DEC	reduce using rule 204 (OPTIONAL-60)
	OP05_LOGICAL_NEG	reduce using rule 204 (OPTIONAL-60)
	OP05_MATH_NEG	reduce using rule 204 (OPTIONAL-60)
	OP10_NAMED_UNARY	reduce using rule 204 (OPTIONAL-60)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 204 (OPTIONAL-60)
	OP22_LOGICAL_NOT	reduce using rule 204 (OPTIONAL-60)
	VARIABLE_SYMBOL	reduce using rule 204 (OPTIONAL-60)
	WORD	reduce using rule 204 (OPTIONAL-60)
	WORD_SCOPED	reduce using rule 204 (OPTIONAL-60)

	TypeInner	go to state 241
	OPTIONAL-60	go to state 242

State 180:

	STAR-62 -> STAR-62 . PAREN-61	(Rule 210)
	HashReference -> '{' HashEntry STAR-62 . '}'	(Rule 212)

	'}'	shift, and go to state 245
	OP21_LIST_COMMA	shift, and go to state 243

	PAREN-61	go to state 244

State 181:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 138)

	$default	reduce using rule 138 (OperatorVoid)

State 182:

	Expression -> '(' Expression ')' .	(Rule 154)

	$default	reduce using rule 154 (Expression)

State 183:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 187)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 188)

	';'	shift, and go to state 246
	OP19_VARIABLE_ASSIGN	shift, and go to state 247

State 184:

	STAR-56 -> STAR-56 VariableRetrieval .	(Rule 181)

	$default	reduce using rule 181 (STAR-56)

State 185:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 184)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76
	HashDereferenced	go to state 48
	Expression	go to state 248
	Operator	go to state 46
	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80

State 186:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 185)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 186)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 250
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 46
	HashDereferenced	go to state 48
	Expression	go to state 249
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55
	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76

State 187:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 190)

	';'	shift, and go to state 251
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 188:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ExpressionOrStdin -> Expression .	(Rule 155)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

	';'	reduce using rule 155 (ExpressionOrStdin)

State 189:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 189)

	';'	shift, and go to state 252

State 190:

	ExpressionOrStdin -> '<STDIN>' .	(Rule 156)

	$default	reduce using rule 156 (ExpressionOrStdin)

State 191:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-48 ')'	(Rule 153)

	'('	shift, and go to state 253

State 192:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 193:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' . ';'	(Rule 134)

	';'	shift, and go to state 254

State 194:

	OPTIONAL-44 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-44)

State 195:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 . ')' ';'	(Rule 135)

	')'	shift, and go to state 255

State 196:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-52 OPTIONAL-54	(Rule 171)

	'{'	shift, and go to state 256

	CodeBlock	go to state 257

State 197:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 202)

	$default	reduce using rule 202 (ArrayDereferenced)

State 198:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 201)

	$default	reduce using rule 201 (ArrayDereferenced)

State 199:

	ArrayReference -> '[' OPTIONAL-59 ']' .	(Rule 200)

	$default	reduce using rule 200 (ArrayReference)

State 200:

	Operator -> OP01_NAMED '(' OPTIONAL-42 . ')'	(Rule 102)

	')'	shift, and go to state 258

State 201:

	OPTIONAL-42 -> ListElements .	(Rule 100)

	$default	reduce using rule 100 (OPTIONAL-42)

State 202:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 214)

	$default	reduce using rule 214 (HashDereferenced)

State 203:

	HashDereferenced -> '%{' Variable '}' .	(Rule 213)

	$default	reduce using rule 213 (HashDereferenced)

State 204:

	Expression -> WordScoped '(' OPTIONAL-47 . ')'	(Rule 152)

	')'	shift, and go to state 259

State 205:

	OPTIONAL-47 -> ListElements .	(Rule 139)

	$default	reduce using rule 139 (OPTIONAL-47)

State 206:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 110 (Operator)
	OP08_STRING_CAT	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 207:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP13_BITWISE_AND	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 208:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 209:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 121 (Operator)
	'..'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP18_TERNARY	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 210:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 122)

	COLON	shift, and go to state 260

State 211:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 109 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 109 (Operator)
	OP08_STRING_CAT	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 212:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP13_BITWISE_AND	reduce using rule 117 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 213:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147

	')'	reduce using rule 125 (Operator)
	'..'	reduce using rule 125 (Operator)
	';'	reduce using rule 125 (Operator)
	']'	reduce using rule 125 (Operator)
	'}'	reduce using rule 125 (Operator)
	OP21_LIST_COMMA	reduce using rule 125 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (Operator)

State 214:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP15_LOGICAL_AND	reduce using rule 119 (Operator)
	OP16_LOGICAL_OR	reduce using rule 119 (Operator)
	OP17_LIST_RANGE	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 215:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142

	')'	reduce using rule 124 (Operator)
	'..'	reduce using rule 124 (Operator)
	';'	reduce using rule 124 (Operator)
	']'	reduce using rule 124 (Operator)
	'}'	reduce using rule 124 (Operator)
	OP21_LIST_COMMA	reduce using rule 124 (Operator)
	OP23_LOGICAL_AND	reduce using rule 124 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 124 (Operator)

State 216:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP06_REGEX_MATCH	reduce using rule 105 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 217:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146

	')'	reduce using rule 120 (Operator)
	'..'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP16_LOGICAL_OR	reduce using rule 120 (Operator)
	OP17_LIST_RANGE	reduce using rule 120 (Operator)
	OP18_TERNARY	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP23_LOGICAL_AND	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 218:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 118 (Operator)
	OP15_LOGICAL_AND	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 219:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 220:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 221:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 108)

	OP06_REGEX_PATTERN	shift, and go to state 261

State 222:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'= sub {'	shift, and go to state 262

State 223:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 175)

	'('	shift, and go to state 263

State 224:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 177)

	')'	shift, and go to state 264
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 225:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 176)

	VARIABLE_SYMBOL	shift, and go to state 265

State 226:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' . ';'	(Rule 34)

	';'	shift, and go to state 266

State 227:

	PLUS-12 -> PLUS-12 WORD .	(Rule 31)

	$default	reduce using rule 31 (PLUS-12)

State 228:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include . STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 267

State 229:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' . '1;'	(Rule 26)

	'1;'	shift, and go to state 268

State 230:

	PLUS-10 -> PLUS-10 Subroutine .	(Rule 24)

	$default	reduce using rule 24 (PLUS-10)

State 231:

	ConstantValue -> '[' . OPTIONAL-13 Literal STAR-16 ']'	(Rule 51)

	'my'	shift, and go to state 130

	LITERAL_NUMBER	reduce using rule 37 (OPTIONAL-13)
	LITERAL_STRING	reduce using rule 37 (OPTIONAL-13)

	OPTIONAL-13	go to state 269
	TypeInner	go to state 270

State 232:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	WORD	shift, and go to state 271

State 233:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 35)

	';'	shift, and go to state 272

State 234:

	ConstantValue -> Literal .	(Rule 50)

	$default	reduce using rule 50 (ConstantValue)

State 235:

	FileHandle -> '{*' WORD '}' .	(Rule 217)

	$default	reduce using rule 217 (FileHandle)

State 236:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 192)

	$default	reduce using rule 192 (STAR-58)

State 237:

	PAREN-57 -> OP21_LIST_COMMA . ListElement	(Rule 191)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 130
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	TypeInner	go to state 92
	HashDereferenced	go to state 48
	Expression	go to state 95
	Operator	go to state 46
	WordScoped	go to state 76
	HashReference	go to state 82
	ListElement	go to state 273
	Variable	go to state 99

State 238:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 218)

	$default	reduce using rule 218 (FileHandle)

State 239:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 219)

	WORD	shift, and go to state 274

State 240:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';' .	(Rule 137)

	$default	reduce using rule 137 (OperatorVoid)

State 241:

	OPTIONAL-60 -> TypeInner .	(Rule 203)

	$default	reduce using rule 203 (OPTIONAL-60)

State 242:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 . Expression	(Rule 205)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 46
	Expression	go to state 275
	HashDereferenced	go to state 48
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55
	Variable	go to state 99
	HashReference	go to state 82
	WordScoped	go to state 76

State 243:

	PAREN-61 -> OP21_LIST_COMMA . HashEntry	(Rule 209)

	'%{'	shift, and go to state 72
	WORD	shift, and go to state 104

	HashDereferenced	go to state 102
	HashEntry	go to state 276

State 244:

	STAR-62 -> STAR-62 PAREN-61 .	(Rule 210)

	$default	reduce using rule 210 (STAR-62)

State 245:

	HashReference -> '{' HashEntry STAR-62 '}' .	(Rule 212)

	$default	reduce using rule 212 (HashReference)

State 246:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 187)

	$default	reduce using rule 187 (VariableDeclaration)

State 247:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 188)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'<STDIN>'	shift, and go to state 190
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 76
	Variable	go to state 99
	HashReference	go to state 82
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55
	Operator	go to state 46
	Expression	go to state 188
	ExpressionOrStdin	go to state 277
	HashDereferenced	go to state 48

State 248:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 184)

	']'	shift, and go to state 278
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 249:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 185)

	'}'	shift, and go to state 279
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 250:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 186)
	WordScoped -> WORD .	(Rule 215)

	'}'	shift, and go to state 280

	'('	reduce using rule 215 (WordScoped)

State 251:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 190)

	$default	reduce using rule 190 (VariableModification)

State 252:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 189)

	$default	reduce using rule 189 (VariableModification)

State 253:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-48 ')'	(Rule 153)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 130
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 142 (OPTIONAL-48)

	Operator	go to state 46
	Expression	go to state 95
	HashDereferenced	go to state 48
	TypeInner	go to state 92
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55
	ListElements	go to state 282
	Variable	go to state 99
	ListElement	go to state 97
	OPTIONAL-48	go to state 281
	HashReference	go to state 82
	WordScoped	go to state 76

State 254:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 255:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' . ';'	(Rule 135)

	';'	shift, and go to state 283

State 256:

	CodeBlock -> '{' . PLUS-55 '}'	(Rule 180)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 51
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP01_NAMED_VOID	shift, and go to state 43
	OP01_NAMED_VOID_PAREN	shift, and go to state 62
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP19_LOOP_CONTROL	shift, and go to state 47
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	Expression	go to state 77
	PLUS-55	go to state 285
	Conditional	go to state 59
	OperatorVoid	go to state 81
	ArrayDereferenced	go to state 80
	PAREN-49	go to state 79
	HashReference	go to state 82
	OPTIONAL-50	go to state 85
	HashDereferenced	go to state 48
	Operator	go to state 46
	Operation	go to state 284
	Literal	go to state 55
	VariableModification	go to state 54
	ArrayReference	go to state 71
	VariableDeclaration	go to state 70
	Statement	go to state 57
	Variable	go to state 56
	LoopLabel	go to state 75
	WordScoped	go to state 76

State 257:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-52 OPTIONAL-54	(Rule 171)

	$default	reduce using rule 167 (STAR-52)

	STAR-52	go to state 286

State 258:

	Operator -> OP01_NAMED '(' OPTIONAL-42 ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 259:

	Expression -> WordScoped '(' OPTIONAL-47 ')' .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 260:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 53

	Variable	go to state 287

State 261:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 108)

	'/'	shift, and go to state 288

State 262:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'( my'	shift, and go to state 291

	'%{'	reduce using rule 54 (OPTIONAL-21)
	'('	reduce using rule 54 (OPTIONAL-21)
	'@{'	reduce using rule 54 (OPTIONAL-21)
	'['	reduce using rule 54 (OPTIONAL-21)
	'for my integer'	reduce using rule 54 (OPTIONAL-21)
	'foreach my'	reduce using rule 54 (OPTIONAL-21)
	'if ('	reduce using rule 54 (OPTIONAL-21)
	'my'	reduce using rule 54 (OPTIONAL-21)
	'undef'	reduce using rule 54 (OPTIONAL-21)
	'while ('	reduce using rule 54 (OPTIONAL-21)
	'{'	reduce using rule 54 (OPTIONAL-21)
	LITERAL_NUMBER	reduce using rule 54 (OPTIONAL-21)
	LITERAL_STRING	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID_PAREN	reduce using rule 54 (OPTIONAL-21)
	OP03_MATH_INC_DEC	reduce using rule 54 (OPTIONAL-21)
	OP05_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-21)
	OP05_MATH_NEG	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 54 (OPTIONAL-21)
	OP19_LOOP_CONTROL	reduce using rule 54 (OPTIONAL-21)
	OP22_LOGICAL_NOT	reduce using rule 54 (OPTIONAL-21)
	VARIABLE_SYMBOL	reduce using rule 54 (OPTIONAL-21)
	WORD	reduce using rule 54 (OPTIONAL-21)
	WORD_SCOPED	reduce using rule 54 (OPTIONAL-21)

	OPTIONAL-21	go to state 289
	SubroutineArguments	go to state 290

State 263:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 292
	HashDereferenced	go to state 48
	Operator	go to state 46
	Literal	go to state 55
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76

State 264:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 177)

	'{'	shift, and go to state 256

	CodeBlock	go to state 293

State 265:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 176)

	'('	shift, and go to state 294

State 266:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';' .	(Rule 34)

	$default	reduce using rule 34 (Include)

State 267:

	STAR-28 -> STAR-28 . Critic	(Rule 68)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 . STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'## no critic qw('	shift, and go to state 20

	'our %properties = ('	reduce using rule 71 (STAR-29)
	'use constant'	reduce using rule 71 (STAR-29)
	'use'	reduce using rule 71 (STAR-29)

	STAR-29	go to state 295
	Critic	go to state 296

State 268:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;' .	(Rule 26)

	$default	reduce using rule 26 (Package)

State 269:

	ConstantValue -> '[' OPTIONAL-13 . Literal STAR-16 ']'	(Rule 51)

	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84

	Literal	go to state 297

State 270:

	OPTIONAL-13 -> TypeInner .	(Rule 36)

	$default	reduce using rule 36 (OPTIONAL-13)

State 271:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	OP20_HASH_FATARROW	shift, and go to state 298

State 272:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 35)

	$default	reduce using rule 35 (Constant)

State 273:

	PAREN-57 -> OP21_LIST_COMMA ListElement .	(Rule 191)

	$default	reduce using rule 191 (PAREN-57)

State 274:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 219)

	OP19_VARIABLE_ASSIGN	shift, and go to state 299

State 275:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 Expression .	(Rule 205)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

	'}'	reduce using rule 205 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 205 (HashEntry)

State 276:

	PAREN-61 -> OP21_LIST_COMMA HashEntry .	(Rule 209)

	$default	reduce using rule 209 (PAREN-61)

State 277:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 188)

	';'	shift, and go to state 300

State 278:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 184)

	$default	reduce using rule 184 (VariableRetrieval)

State 279:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 185)

	$default	reduce using rule 185 (VariableRetrieval)

State 280:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 186)

	$default	reduce using rule 186 (VariableRetrieval)

State 281:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 . ')'	(Rule 153)

	')'	shift, and go to state 301

State 282:

	OPTIONAL-48 -> ListElements .	(Rule 141)

	$default	reduce using rule 141 (OPTIONAL-48)

State 283:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 284:

	PLUS-55 -> Operation .	(Rule 179)

	$default	reduce using rule 179 (PLUS-55)

State 285:

	PLUS-55 -> PLUS-55 . Operation	(Rule 178)
	CodeBlock -> '{' PLUS-55 . '}'	(Rule 180)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 51
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	'}'	shift, and go to state 303
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP01_NAMED_VOID	shift, and go to state 43
	OP01_NAMED_VOID_PAREN	shift, and go to state 62
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP19_LOOP_CONTROL	shift, and go to state 47
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	WordScoped	go to state 76
	LoopLabel	go to state 75
	Variable	go to state 56
	Statement	go to state 57
	VariableDeclaration	go to state 70
	ArrayReference	go to state 71
	Literal	go to state 55
	VariableModification	go to state 54
	Operation	go to state 302
	Operator	go to state 46
	HashDereferenced	go to state 48
	OPTIONAL-50	go to state 85
	HashReference	go to state 82
	PAREN-49	go to state 79
	ArrayDereferenced	go to state 80
	OperatorVoid	go to state 81
	Conditional	go to state 59
	Expression	go to state 77

State 286:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 166)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 . OPTIONAL-54	(Rule 171)

	'else'	shift, and go to state 306
	'elsif ('	shift, and go to state 304

	$end	reduce using rule 170 (OPTIONAL-54)
	'%{'	reduce using rule 170 (OPTIONAL-54)
	'('	reduce using rule 170 (OPTIONAL-54)
	'@{'	reduce using rule 170 (OPTIONAL-54)
	'['	reduce using rule 170 (OPTIONAL-54)
	'for my integer'	reduce using rule 170 (OPTIONAL-54)
	'foreach my'	reduce using rule 170 (OPTIONAL-54)
	'if ('	reduce using rule 170 (OPTIONAL-54)
	'my'	reduce using rule 170 (OPTIONAL-54)
	'undef'	reduce using rule 170 (OPTIONAL-54)
	'while ('	reduce using rule 170 (OPTIONAL-54)
	'{'	reduce using rule 170 (OPTIONAL-54)
	'}'	reduce using rule 170 (OPTIONAL-54)
	LITERAL_NUMBER	reduce using rule 170 (OPTIONAL-54)
	LITERAL_STRING	reduce using rule 170 (OPTIONAL-54)
	OP01_NAMED	reduce using rule 170 (OPTIONAL-54)
	OP01_NAMED_VOID	reduce using rule 170 (OPTIONAL-54)
	OP01_NAMED_VOID_PAREN	reduce using rule 170 (OPTIONAL-54)
	OP03_MATH_INC_DEC	reduce using rule 170 (OPTIONAL-54)
	OP05_LOGICAL_NEG	reduce using rule 170 (OPTIONAL-54)
	OP05_MATH_NEG	reduce using rule 170 (OPTIONAL-54)
	OP10_NAMED_UNARY	reduce using rule 170 (OPTIONAL-54)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 170 (OPTIONAL-54)
	OP19_LOOP_CONTROL	reduce using rule 170 (OPTIONAL-54)
	OP22_LOGICAL_NOT	reduce using rule 170 (OPTIONAL-54)
	VARIABLE_SYMBOL	reduce using rule 170 (OPTIONAL-54)
	WORD	reduce using rule 170 (OPTIONAL-54)
	WORD_SCOPED	reduce using rule 170 (OPTIONAL-54)

	PAREN-53	go to state 305
	PAREN-51	go to state 308
	OPTIONAL-54	go to state 307

State 287:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 122)

	$default	reduce using rule 122 (Operator)

State 288:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 289:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 . PLUS-22 '}' ';'	(Rule 57)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 51
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP01_NAMED_VOID	shift, and go to state 43
	OP01_NAMED_VOID_PAREN	shift, and go to state 62
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP19_LOOP_CONTROL	shift, and go to state 47
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	OperatorVoid	go to state 81
	PAREN-49	go to state 79
	ArrayDereferenced	go to state 80
	Expression	go to state 77
	Conditional	go to state 59
	OPTIONAL-50	go to state 85
	HashReference	go to state 82
	Literal	go to state 55
	VariableModification	go to state 54
	VariableDeclaration	go to state 70
	ArrayReference	go to state 71
	PLUS-22	go to state 310
	HashDereferenced	go to state 48
	Operation	go to state 309
	Operator	go to state 46
	WordScoped	go to state 76
	Statement	go to state 57
	LoopLabel	go to state 75
	Variable	go to state 56

State 290:

	OPTIONAL-21 -> SubroutineArguments .	(Rule 53)

	$default	reduce using rule 53 (OPTIONAL-21)

State 291:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	WORD	shift, and go to state 110

	Type	go to state 311

State 292:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 175)

	'..'	shift, and go to state 312
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 293:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 177)

	$default	reduce using rule 177 (LoopWhile)

State 294:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 176)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'my'	shift, and go to state 130
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	KEYS_OR_VALUES	shift, and go to state 94
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 82
	Variable	go to state 99
	ListElement	go to state 97
	WordScoped	go to state 76
	Expression	go to state 95
	HashDereferenced	go to state 48
	Operator	go to state 46
	Literal	go to state 55
	ListElements	go to state 313
	TypeInner	go to state 92
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80

State 295:

	STAR-29 -> STAR-29 . Include	(Rule 70)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 . STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 29

	'our %properties = ('	reduce using rule 73 (STAR-30)
	'use constant'	reduce using rule 73 (STAR-30)

	Include	go to state 314
	STAR-30	go to state 315

State 296:

	STAR-28 -> STAR-28 Critic .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 297:

	ConstantValue -> '[' OPTIONAL-13 Literal . STAR-16 ']'	(Rule 51)

	$default	reduce using rule 42 (STAR-16)

	STAR-16	go to state 316

State 298:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	'my'	shift, and go to state 130

	LITERAL_NUMBER	reduce using rule 44 (OPTIONAL-17)
	LITERAL_STRING	reduce using rule 44 (OPTIONAL-17)

	OPTIONAL-17	go to state 318
	TypeInner	go to state 317

State 299:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 219)

	$default	reduce using rule 219 (TypeInner)

State 300:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 188)

	$default	reduce using rule 188 (VariableDeclaration)

State 301:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')' .	(Rule 153)

	$default	reduce using rule 153 (Expression)

State 302:

	PLUS-55 -> PLUS-55 Operation .	(Rule 178)

	$default	reduce using rule 178 (PLUS-55)

State 303:

	CodeBlock -> '{' PLUS-55 '}' .	(Rule 180)

	$default	reduce using rule 180 (CodeBlock)

State 304:

	PAREN-51 -> 'elsif (' . Expression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	HashDereferenced	go to state 48
	Expression	go to state 319
	Operator	go to state 46
	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76

State 305:

	OPTIONAL-54 -> PAREN-53 .	(Rule 169)

	$default	reduce using rule 169 (OPTIONAL-54)

State 306:

	PAREN-53 -> 'else' . CodeBlock	(Rule 168)

	'{'	shift, and go to state 256

	CodeBlock	go to state 320

State 307:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54 .	(Rule 171)

	$default	reduce using rule 171 (Conditional)

State 308:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 166)

	$default	reduce using rule 166 (STAR-52)

State 309:

	PLUS-22 -> Operation .	(Rule 56)

	$default	reduce using rule 56 (PLUS-22)

State 310:

	PLUS-22 -> PLUS-22 . Operation	(Rule 55)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 . '}' ';'	(Rule 57)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 51
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	'}'	shift, and go to state 321
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP01_NAMED_VOID	shift, and go to state 43
	OP01_NAMED_VOID_PAREN	shift, and go to state 62
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP19_LOOP_CONTROL	shift, and go to state 47
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	WordScoped	go to state 76
	Statement	go to state 57
	Variable	go to state 56
	LoopLabel	go to state 75
	VariableModification	go to state 54
	Literal	go to state 55
	VariableDeclaration	go to state 70
	ArrayReference	go to state 71
	HashDereferenced	go to state 48
	Operation	go to state 322
	Operator	go to state 46
	OPTIONAL-50	go to state 85
	HashReference	go to state 82
	OperatorVoid	go to state 81
	PAREN-49	go to state 79
	ArrayDereferenced	go to state 80
	Expression	go to state 77
	Conditional	go to state 59

State 311:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	VARIABLE_SYMBOL	shift, and go to state 323

State 312:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	HashDereferenced	go to state 48
	Expression	go to state 324
	Operator	go to state 46
	WordScoped	go to state 76
	HashReference	go to state 82
	Variable	go to state 99

State 313:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 176)

	')'	shift, and go to state 325

State 314:

	STAR-29 -> STAR-29 Include .	(Rule 70)

	$default	reduce using rule 70 (STAR-29)

State 315:

	STAR-30 -> STAR-30 . Constant	(Rule 72)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 . Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'our %properties = ('	shift, and go to state 328
	'use constant'	shift, and go to state 35

	Properties	go to state 326
	Constant	go to state 327

State 316:

	STAR-16 -> STAR-16 . PAREN-15	(Rule 41)
	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 . ']'	(Rule 51)

	']'	shift, and go to state 329
	OP21_LIST_COMMA	shift, and go to state 331

	PAREN-15	go to state 330

State 317:

	OPTIONAL-17 -> TypeInner .	(Rule 43)

	$default	reduce using rule 43 (OPTIONAL-17)

State 318:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 . Literal STAR-20 '}'	(Rule 52)

	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84

	Literal	go to state 332

State 319:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	PAREN-51 -> 'elsif (' Expression . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 333
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 320:

	PAREN-53 -> 'else' CodeBlock .	(Rule 168)

	$default	reduce using rule 168 (PAREN-53)

State 321:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' . ';'	(Rule 57)

	';'	shift, and go to state 334

State 322:

	PLUS-22 -> PLUS-22 Operation .	(Rule 55)

	$default	reduce using rule 55 (PLUS-22)

State 323:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 335

State 324:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 175)

	')'	shift, and go to state 336
	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 325:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 176)

	'{'	shift, and go to state 256

	CodeBlock	go to state 337

State 326:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties . STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 75 (STAR-31)

	STAR-31	go to state 338

State 327:

	STAR-30 -> STAR-30 Constant .	(Rule 72)

	$default	reduce using rule 72 (STAR-30)

State 328:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-36 ')' ';'	(Rule 85)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 86)

	'%{'	shift, and go to state 72
	')'	shift, and go to state 339
	WORD	shift, and go to state 340

	HashEntryTyped	go to state 342
	HashDereferenced	go to state 341

State 329:

	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']' .	(Rule 51)

	$default	reduce using rule 51 (ConstantValue)

State 330:

	STAR-16 -> STAR-16 PAREN-15 .	(Rule 41)

	$default	reduce using rule 41 (STAR-16)

State 331:

	PAREN-15 -> OP21_LIST_COMMA . OPTIONAL-14 Literal	(Rule 40)

	'my'	shift, and go to state 130

	LITERAL_NUMBER	reduce using rule 39 (OPTIONAL-14)
	LITERAL_STRING	reduce using rule 39 (OPTIONAL-14)

	TypeInner	go to state 344
	OPTIONAL-14	go to state 343

State 332:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal . STAR-20 '}'	(Rule 52)

	$default	reduce using rule 49 (STAR-20)

	STAR-20	go to state 345

State 333:

	PAREN-51 -> 'elsif (' Expression ')' . CodeBlock	(Rule 165)

	'{'	shift, and go to state 256

	CodeBlock	go to state 346

State 334:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';' .	(Rule 57)

	$default	reduce using rule 57 (Subroutine)

State 335:

	STAR-24 -> STAR-24 . PAREN-23	(Rule 59)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	')'	shift, and go to state 347
	OP21_LIST_COMMA	shift, and go to state 349

	PAREN-23	go to state 348

State 336:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 175)

	'{'	shift, and go to state 256

	CodeBlock	go to state 350

State 337:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 176)

	$default	reduce using rule 176 (LoopForEach)

State 338:

	STAR-31 -> STAR-31 . Method	(Rule 74)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 . '1;' '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 351
	'our'	shift, and go to state 352

	Method	go to state 353

State 339:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 86)

	';'	shift, and go to state 354

State 340:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 207)

	OP20_HASH_FATARROW	shift, and go to state 355

State 341:

	HashEntryTyped -> HashDereferenced .	(Rule 208)

	$default	reduce using rule 208 (HashEntryTyped)

State 342:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-36 ')' ';'	(Rule 85)

	$default	reduce using rule 84 (STAR-36)

	STAR-36	go to state 356

State 343:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 . Literal	(Rule 40)

	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84

	Literal	go to state 357

State 344:

	OPTIONAL-14 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-14)

State 345:

	STAR-20 -> STAR-20 . PAREN-19	(Rule 48)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 . '}'	(Rule 52)

	'}'	shift, and go to state 359
	OP21_LIST_COMMA	shift, and go to state 360

	PAREN-19	go to state 358

State 346:

	PAREN-51 -> 'elsif (' Expression ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (PAREN-51)

State 347:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	OP19_VARIABLE_ASSIGN	shift, and go to state 361

State 348:

	STAR-24 -> STAR-24 PAREN-23 .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 349:

	PAREN-23 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 58)

	'my'	shift, and go to state 362

State 350:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 175)

	$default	reduce using rule 175 (LoopFor)

State 351:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' . '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 363

State 352:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	WORD	shift, and go to state 110

	Type	go to state 364

State 353:

	STAR-31 -> STAR-31 Method .	(Rule 74)

	$default	reduce using rule 74 (STAR-31)

State 354:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 86)

	$default	reduce using rule 86 (Properties)

State 355:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 207)

	'my'	shift, and go to state 130

	TypeInner	go to state 365

State 356:

	STAR-36 -> STAR-36 . PAREN-35	(Rule 83)
	Properties -> 'our %properties = (' HashEntryTyped STAR-36 . ')' ';'	(Rule 85)

	')'	shift, and go to state 367
	OP21_LIST_COMMA	shift, and go to state 368

	PAREN-35	go to state 366

State 357:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal .	(Rule 40)

	$default	reduce using rule 40 (PAREN-15)

State 358:

	STAR-20 -> STAR-20 PAREN-19 .	(Rule 48)

	$default	reduce using rule 48 (STAR-20)

State 359:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}' .	(Rule 52)

	$default	reduce using rule 52 (ConstantValue)

State 360:

	PAREN-19 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	WORD	shift, and go to state 369

State 361:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-25	(Rule 63)

	'@_;'	shift, and go to state 370

State 362:

	PAREN-23 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 58)

	WORD	shift, and go to state 110

	Type	go to state 371

State 363:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' . OPTIONAL-34	(Rule 81)

	'our'	shift, and go to state 78

	$end	reduce using rule 80 (OPTIONAL-34)
	'package'	reduce using rule 80 (OPTIONAL-34)

	PAREN-33	go to state 375
	Subroutine	go to state 373
	OPTIONAL-34	go to state 372
	PLUS-32	go to state 374

State 364:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	VARIABLE_SYMBOL	shift, and go to state 376

State 365:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 207)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 377
	HashDereferenced	go to state 48
	Operator	go to state 46
	Literal	go to state 55
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 71
	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76

State 366:

	STAR-36 -> STAR-36 PAREN-35 .	(Rule 83)

	$default	reduce using rule 83 (STAR-36)

State 367:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' . ';'	(Rule 85)

	';'	shift, and go to state 378

State 368:

	PAREN-35 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 82)

	'%{'	shift, and go to state 72
	WORD	shift, and go to state 340

	HashDereferenced	go to state 341
	HashEntryTyped	go to state 379

State 369:

	PAREN-19 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	OP20_HASH_FATARROW	shift, and go to state 380

State 370:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-25	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 381

State 371:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 382

State 372:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34 .	(Rule 81)

	$default	reduce using rule 81 (Class)

State 373:

	PLUS-32 -> Subroutine .	(Rule 77)

	$default	reduce using rule 77 (PLUS-32)

State 374:

	PLUS-32 -> PLUS-32 . Subroutine	(Rule 76)
	PAREN-33 -> PLUS-32 . '1;' '1;'	(Rule 78)

	'1;'	shift, and go to state 383
	'our'	shift, and go to state 78

	Subroutine	go to state 384

State 375:

	OPTIONAL-34 -> PAREN-33 .	(Rule 79)

	$default	reduce using rule 79 (OPTIONAL-34)

State 376:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'= sub {'	shift, and go to state 385

State 377:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 207)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

	')'	reduce using rule 207 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 207 (HashEntryTyped)

State 378:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';' .	(Rule 85)

	$default	reduce using rule 85 (Properties)

State 379:

	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 82)

	$default	reduce using rule 82 (PAREN-35)

State 380:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-18 Literal	(Rule 47)

	'my'	shift, and go to state 130

	LITERAL_NUMBER	reduce using rule 46 (OPTIONAL-18)
	LITERAL_STRING	reduce using rule 46 (OPTIONAL-18)

	TypeInner	go to state 386
	OPTIONAL-18	go to state 387

State 381:

	STAR-25 -> STAR-25 . ArgumentCheck	(Rule 61)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25 .	(Rule 63)

	CHECK_OR_CHECKTRACE	shift, and go to state 388

	'%{'	reduce using rule 63 (SubroutineArguments)
	'('	reduce using rule 63 (SubroutineArguments)
	'@{'	reduce using rule 63 (SubroutineArguments)
	'['	reduce using rule 63 (SubroutineArguments)
	'for my integer'	reduce using rule 63 (SubroutineArguments)
	'foreach my'	reduce using rule 63 (SubroutineArguments)
	'if ('	reduce using rule 63 (SubroutineArguments)
	'my'	reduce using rule 63 (SubroutineArguments)
	'undef'	reduce using rule 63 (SubroutineArguments)
	'while ('	reduce using rule 63 (SubroutineArguments)
	'{'	reduce using rule 63 (SubroutineArguments)
	LITERAL_NUMBER	reduce using rule 63 (SubroutineArguments)
	LITERAL_STRING	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 63 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 63 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 63 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 63 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 63 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 63 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 63 (SubroutineArguments)
	WORD	reduce using rule 63 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 63 (SubroutineArguments)

	ArgumentCheck	go to state 389

State 382:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 58)

	$default	reduce using rule 58 (PAREN-23)

State 383:

	PAREN-33 -> PLUS-32 '1;' . '1;'	(Rule 78)

	'1;'	shift, and go to state 390

State 384:

	PLUS-32 -> PLUS-32 Subroutine .	(Rule 76)

	$default	reduce using rule 76 (PLUS-32)

State 385:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'( my'	shift, and go to state 391

	'%{'	reduce using rule 88 (OPTIONAL-37)
	'('	reduce using rule 88 (OPTIONAL-37)
	'@{'	reduce using rule 88 (OPTIONAL-37)
	'['	reduce using rule 88 (OPTIONAL-37)
	'for my integer'	reduce using rule 88 (OPTIONAL-37)
	'foreach my'	reduce using rule 88 (OPTIONAL-37)
	'if ('	reduce using rule 88 (OPTIONAL-37)
	'my'	reduce using rule 88 (OPTIONAL-37)
	'undef'	reduce using rule 88 (OPTIONAL-37)
	'while ('	reduce using rule 88 (OPTIONAL-37)
	'{'	reduce using rule 88 (OPTIONAL-37)
	LITERAL_NUMBER	reduce using rule 88 (OPTIONAL-37)
	LITERAL_STRING	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID_PAREN	reduce using rule 88 (OPTIONAL-37)
	OP03_MATH_INC_DEC	reduce using rule 88 (OPTIONAL-37)
	OP05_LOGICAL_NEG	reduce using rule 88 (OPTIONAL-37)
	OP05_MATH_NEG	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 88 (OPTIONAL-37)
	OP19_LOOP_CONTROL	reduce using rule 88 (OPTIONAL-37)
	OP22_LOGICAL_NOT	reduce using rule 88 (OPTIONAL-37)
	VARIABLE_SYMBOL	reduce using rule 88 (OPTIONAL-37)
	WORD	reduce using rule 88 (OPTIONAL-37)
	WORD_SCOPED	reduce using rule 88 (OPTIONAL-37)

	OPTIONAL-37	go to state 393
	MethodArguments	go to state 392

State 386:

	OPTIONAL-18 -> TypeInner .	(Rule 45)

	$default	reduce using rule 45 (OPTIONAL-18)

State 387:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 . Literal	(Rule 47)

	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84

	Literal	go to state 394

State 388:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'('	shift, and go to state 395

State 389:

	STAR-25 -> STAR-25 ArgumentCheck .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 390:

	PAREN-33 -> PLUS-32 '1;' '1;' .	(Rule 78)

	$default	reduce using rule 78 (PAREN-33)

State 391:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	TYPE_CLASS_OR_SELF	shift, and go to state 396

State 392:

	OPTIONAL-37 -> MethodArguments .	(Rule 87)

	$default	reduce using rule 87 (OPTIONAL-37)

State 393:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 . PLUS-38 '}' ';'	(Rule 91)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 51
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP01_NAMED_VOID	shift, and go to state 43
	OP01_NAMED_VOID_PAREN	shift, and go to state 62
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP19_LOOP_CONTROL	shift, and go to state 47
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	WordScoped	go to state 76
	Statement	go to state 57
	Variable	go to state 56
	LoopLabel	go to state 75
	Literal	go to state 55
	VariableModification	go to state 54
	ArrayReference	go to state 71
	VariableDeclaration	go to state 70
	HashDereferenced	go to state 48
	PLUS-38	go to state 397
	Operator	go to state 46
	Operation	go to state 398
	OPTIONAL-50	go to state 85
	HashReference	go to state 82
	OperatorVoid	go to state 81
	ArrayDereferenced	go to state 80
	PAREN-49	go to state 79
	Expression	go to state 77
	Conditional	go to state 59

State 394:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal .	(Rule 47)

	$default	reduce using rule 47 (PAREN-19)

State 395:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Expression	go to state 399
	HashDereferenced	go to state 48
	Operator	go to state 46
	WordScoped	go to state 76
	HashReference	go to state 82
	Variable	go to state 99

State 396:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	$default	reduce using rule 94 (STAR-40)

	STAR-40	go to state 400

State 397:

	PLUS-38 -> PLUS-38 . Operation	(Rule 89)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 . '}' ';'	(Rule 91)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 51
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	'}'	shift, and go to state 401
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP01_NAMED_VOID	shift, and go to state 43
	OP01_NAMED_VOID_PAREN	shift, and go to state 62
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP19_LOOP_CONTROL	shift, and go to state 47
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	HashReference	go to state 82
	OPTIONAL-50	go to state 85
	Expression	go to state 77
	Conditional	go to state 59
	OperatorVoid	go to state 81
	ArrayDereferenced	go to state 80
	PAREN-49	go to state 79
	Statement	go to state 57
	LoopLabel	go to state 75
	Variable	go to state 56
	WordScoped	go to state 76
	HashDereferenced	go to state 48
	Operator	go to state 46
	Operation	go to state 402
	VariableModification	go to state 54
	Literal	go to state 55
	ArrayReference	go to state 71
	VariableDeclaration	go to state 70

State 398:

	PLUS-38 -> Operation .	(Rule 90)

	$default	reduce using rule 90 (PLUS-38)

State 399:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-27 ')' ';'	(Rule 67)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP21_LIST_COMMA	shift, and go to state 403
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

	')'	reduce using rule 66 (OPTIONAL-27)

	OPTIONAL-27	go to state 404
	PAREN-26	go to state 405

State 400:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 93)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	')'	shift, and go to state 406
	OP21_LIST_COMMA	shift, and go to state 408

	PAREN-39	go to state 407

State 401:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' . ';'	(Rule 91)

	';'	shift, and go to state 409

State 402:

	PLUS-38 -> PLUS-38 Operation .	(Rule 89)

	$default	reduce using rule 89 (PLUS-38)

State 403:

	PAREN-26 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 64)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 82
	Variable	go to state 99
	WordScoped	go to state 76
	HashDereferenced	go to state 48
	Expression	go to state 410
	Operator	go to state 46
	Literal	go to state 55
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80

State 404:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 . ')' ';'	(Rule 67)

	')'	shift, and go to state 411

State 405:

	OPTIONAL-27 -> PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-27)

State 406:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	OP19_VARIABLE_ASSIGN	shift, and go to state 412

State 407:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 93)

	$default	reduce using rule 93 (STAR-40)

State 408:

	PAREN-39 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 92)

	'my'	shift, and go to state 413

State 409:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';' .	(Rule 91)

	$default	reduce using rule 91 (Method)

State 410:

	PAREN-26 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP21_LIST_COMMA	shift, and go to state 414
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

State 411:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' . ';'	(Rule 67)

	';'	shift, and go to state 415

State 412:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-41	(Rule 97)

	'@_;'	shift, and go to state 416

State 413:

	PAREN-39 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 92)

	WORD	shift, and go to state 110

	Type	go to state 417

State 414:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 64)

	'%{'	shift, and go to state 72
	'('	shift, and go to state 50
	'@{'	shift, and go to state 65
	'['	shift, and go to state 68
	'undef'	shift, and go to state 74
	'{'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 73
	LITERAL_STRING	shift, and go to state 84
	OP01_NAMED	shift, and go to state 69
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 63
	OP05_MATH_NEG	shift, and go to state 60
	OP10_NAMED_UNARY	shift, and go to state 66
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 52
	OP22_LOGICAL_NOT	shift, and go to state 67
	VARIABLE_SYMBOL	shift, and go to state 53
	WORD	shift, and go to state 12
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 76
	Variable	go to state 99
	HashReference	go to state 82
	ArrayReference	go to state 71
	ArrayDereferenced	go to state 80
	Literal	go to state 55
	Operator	go to state 46
	HashDereferenced	go to state 48
	Expression	go to state 418

State 415:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';' .	(Rule 67)

	$default	reduce using rule 67 (ArgumentCheck)

State 416:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-41	(Rule 97)

	$default	reduce using rule 96 (STAR-41)

	STAR-41	go to state 419

State 417:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 92)

	VARIABLE_SYMBOL	shift, and go to state 420

State 418:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 148
	OP06_REGEX_MATCH	shift, and go to state 153
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 143
	OP08_MATH_ADD_SUB	shift, and go to state 138
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 151
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NEQ	shift, and go to state 139
	OP13_BITWISE_AND	shift, and go to state 144
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 149
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 142
	OP23_LOGICAL_AND	shift, and go to state 147
	OP24_LOGICAL_OR_XOR	shift, and go to state 145

	')'	reduce using rule 64 (PAREN-26)

State 419:

	STAR-41 -> STAR-41 . ArgumentCheck	(Rule 95)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41 .	(Rule 97)

	CHECK_OR_CHECKTRACE	shift, and go to state 388

	'%{'	reduce using rule 97 (MethodArguments)
	'('	reduce using rule 97 (MethodArguments)
	'@{'	reduce using rule 97 (MethodArguments)
	'['	reduce using rule 97 (MethodArguments)
	'for my integer'	reduce using rule 97 (MethodArguments)
	'foreach my'	reduce using rule 97 (MethodArguments)
	'if ('	reduce using rule 97 (MethodArguments)
	'my'	reduce using rule 97 (MethodArguments)
	'undef'	reduce using rule 97 (MethodArguments)
	'while ('	reduce using rule 97 (MethodArguments)
	'{'	reduce using rule 97 (MethodArguments)
	LITERAL_NUMBER	reduce using rule 97 (MethodArguments)
	LITERAL_STRING	reduce using rule 97 (MethodArguments)
	OP01_NAMED	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 97 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 97 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 97 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 97 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 97 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 97 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 97 (MethodArguments)
	WORD	reduce using rule 97 (MethodArguments)
	WORD_SCOPED	reduce using rule 97 (MethodArguments)

	ArgumentCheck	go to state 421

State 420:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 92)

	$default	reduce using rule 92 (PAREN-39)

State 421:

	STAR-41 -> STAR-41 ArgumentCheck .	(Rule 95)

	$default	reduce using rule 95 (STAR-41)


Summary:
--------
Number of rules         : 224
Number of terminals     : 84
Number of non-terminals : 109
Number of states        : 422
