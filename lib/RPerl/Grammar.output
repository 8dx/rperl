Conflicts:
----------
Conflict in state 156 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 156 between rule 114 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 156 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 156 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 156 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 156 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 156 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 156 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 156 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 156 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 156 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 156 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 156 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 156 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 156 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 156 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 182 between rule 124 and token OP18_TERNARY resolved as shift.
Conflict in state 182 between rule 124 and token OP08_STRING_CAT resolved as shift.
Conflict in state 182 between rule 124 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 182 between rule 124 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 182 between rule 124 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 182 between rule 124 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 182 between rule 124 and token OP04_MATH_POW resolved as shift.
Conflict in state 182 between rule 124 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 182 between rule 124 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 182 between rule 124 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 182 between rule 124 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 182 between rule 124 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 182 between rule 124 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 182 between rule 124 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 182 between rule 124 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 182 between rule 124 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 107 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 191 between rule 107 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 191 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 191 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 191 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 191 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 191 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 191 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 191 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 191 between rule 107 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 191 between rule 107 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 191 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 191 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 191 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 107 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 191 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 193 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 193 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 193 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 115 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 193 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 193 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 193 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 193 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 193 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 193 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 193 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 193 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 193 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 230 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 230 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 230 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 230 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 230 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 112 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 230 between rule 112 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 230 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 230 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 230 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 230 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 230 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 230 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 230 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 230 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 232 between rule 122 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 232 between rule 122 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 232 between rule 122 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 232 between rule 122 and token OP04_MATH_POW resolved as shift.
Conflict in state 232 between rule 122 and token OP17_LIST_RANGE resolved as error.
Conflict in state 232 between rule 122 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 232 between rule 122 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 232 between rule 122 and token OP08_STRING_CAT resolved as shift.
Conflict in state 232 between rule 122 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 232 between rule 122 and token OP18_TERNARY resolved as reduce.
Conflict in state 232 between rule 122 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 122 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 232 between rule 122 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 232 between rule 122 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 232 between rule 122 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 232 between rule 122 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 233 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 233 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 233 between rule 106 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 233 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 233 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 233 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 233 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 233 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 233 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 233 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 233 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 233 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 233 between rule 106 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 233 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 233 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 233 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 234 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 234 between rule 118 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 234 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 234 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 234 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 234 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 234 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 234 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 234 between rule 118 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 234 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 234 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 234 between rule 118 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 234 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 234 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 235 between rule 121 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 121 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 235 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 235 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 235 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 235 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 235 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 235 between rule 121 and token OP18_TERNARY resolved as reduce.
Conflict in state 235 between rule 121 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 235 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 235 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 235 between rule 121 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 235 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 235 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 236 between rule 116 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 236 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 236 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 236 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 236 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 236 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 236 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 236 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 236 between rule 116 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 236 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 236 between rule 116 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 236 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 236 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 236 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 237 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 237 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 237 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 237 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 237 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 237 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 237 between rule 113 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 237 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 237 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 237 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 237 between rule 113 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 237 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 237 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 126 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 238 between rule 126 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 238 between rule 126 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 238 between rule 126 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 238 between rule 126 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 238 between rule 126 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 238 between rule 126 and token OP18_TERNARY resolved as shift.
Conflict in state 238 between rule 126 and token OP08_STRING_CAT resolved as shift.
Conflict in state 238 between rule 126 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 238 between rule 126 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 238 between rule 126 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 238 between rule 126 and token OP04_MATH_POW resolved as shift.
Conflict in state 238 between rule 126 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 238 between rule 126 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 238 between rule 126 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 238 between rule 126 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 239 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 239 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 239 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 239 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 239 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 239 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 239 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 239 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 239 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 239 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 239 between rule 117 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 239 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 239 between rule 117 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 239 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 239 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 239 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 240 between rule 119 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 240 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 240 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 240 between rule 119 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 240 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 240 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 240 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 240 between rule 119 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 240 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 240 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 240 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 240 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 240 between rule 119 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 240 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 241 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 241 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 241 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 241 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 241 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 241 between rule 111 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 241 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 241 between rule 111 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 241 between rule 111 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 241 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 241 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 241 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 241 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 241 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 241 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 241 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 120 and token OP18_TERNARY resolved as reduce.
Conflict in state 243 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 243 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 243 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 243 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 243 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 243 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 243 between rule 120 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 243 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 243 between rule 120 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 243 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 243 between rule 120 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 243 between rule 120 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 243 between rule 120 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 243 between rule 120 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 244 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 244 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 244 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 244 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 244 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 244 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 244 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 244 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 244 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 244 between rule 110 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 244 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 244 between rule 110 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 244 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 245 between rule 125 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 245 between rule 125 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 245 between rule 125 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 245 between rule 125 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 245 between rule 125 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 245 between rule 125 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 245 between rule 125 and token OP04_MATH_POW resolved as shift.
Conflict in state 245 between rule 125 and token OP18_TERNARY resolved as shift.
Conflict in state 245 between rule 125 and token OP08_STRING_CAT resolved as shift.
Conflict in state 245 between rule 125 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 245 between rule 125 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 245 between rule 125 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 245 between rule 125 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 245 between rule 125 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 245 between rule 125 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 245 between rule 125 and token OP16_LOGICAL_OR resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 '1;' '1;'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	STAR-20 -> STAR-20 ArgumentCheck
51:	STAR-20 -> /* empty */
52:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20
53:	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
54:	OPTIONAL-22 -> PAREN-21
55:	OPTIONAL-22 -> /* empty */
56:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' ';'
57:	STAR-23 -> STAR-23 Critic
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 Include
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 Constant
62:	STAR-25 -> /* empty */
63:	OPTIONAL-26 -> PropertiesClass
64:	OPTIONAL-26 -> /* empty */
65:	STAR-27 -> STAR-27 Method
66:	STAR-27 -> /* empty */
67:	PLUS-28 -> PLUS-28 Subroutine
68:	PLUS-28 -> Subroutine
69:	PAREN-29 -> PLUS-28 '1;' '1;'
70:	OPTIONAL-30 -> PAREN-29
71:	OPTIONAL-30 -> /* empty */
72:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30
73:	PAREN-31 -> OP21_LIST_COMMA HashEntryTyped
74:	STAR-32 -> STAR-32 PAREN-31
75:	STAR-32 -> /* empty */
76:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-32 ')' ';'
77:	Properties -> 'our %properties = (' ')' ';' Critic
78:	PAREN-33 -> OP21_LIST_COMMA HashEntryTyped
79:	STAR-34 -> STAR-34 PAREN-33
80:	STAR-34 -> /* empty */
81:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-34 ')' ';'
82:	OPTIONAL-35 -> MethodArguments
83:	OPTIONAL-35 -> /* empty */
84:	PLUS-36 -> PLUS-36 Operation
85:	PLUS-36 -> Operation
86:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-35 PLUS-36 '}' ';'
87:	PAREN-37 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
88:	STAR-38 -> STAR-38 PAREN-37
89:	STAR-38 -> /* empty */
90:	STAR-39 -> STAR-39 ArgumentCheck
91:	STAR-39 -> /* empty */
92:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-38 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-39
93:	Operation -> Expression ';'
94:	Operation -> Statement
95:	OPTIONAL-40 -> ListElements
96:	OPTIONAL-40 -> /* empty */
97:	OPTIONAL-41 -> ListElements
98:	OPTIONAL-41 -> /* empty */
99:	OPTIONAL-42 -> ListElements
100:	OPTIONAL-42 -> /* empty */
101:	Operator -> OP01_NAMED '(' OPTIONAL-40 ')'
102:	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-41 ')' ';'
103:	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-42 ';'
104:	Operator -> OP03_MATH_INC_DEC Variable
105:	Operator -> Variable OP03_MATH_INC_DEC
106:	Operator -> Expression OP04_MATH_POW Expression
107:	Operator -> OP05_LOGICAL_NEG Expression
108:	Operator -> OP05_MATH_NEG Expression ')'
109:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
110:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
111:	Operator -> Expression OP08_MATH_ADD_SUB Expression
112:	Operator -> Expression OP08_STRING_CAT Expression
113:	Operator -> Expression OP09_BITWISE_SHIFT Expression
114:	Operator -> OP10_NAMED_UNARY Expression
115:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
116:	Operator -> Expression OP11_COMPARE_LT_GT Expression
117:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
118:	Operator -> Expression OP13_BITWISE_AND Expression
119:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
120:	Operator -> Expression OP15_LOGICAL_AND Expression
121:	Operator -> Expression OP16_LOGICAL_OR Expression
122:	Operator -> Expression OP17_LIST_RANGE Expression
123:	Operator -> Expression OP18_TERNARY Variable COLON Variable
124:	Operator -> OP22_LOGICAL_NOT Expression
125:	Operator -> Expression OP23_LOGICAL_AND Expression
126:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
127:	OPTIONAL-43 -> ListElements
128:	OPTIONAL-43 -> /* empty */
129:	OPTIONAL-44 -> ListElements
130:	OPTIONAL-44 -> /* empty */
131:	OPTIONAL-45 -> ListElements
132:	OPTIONAL-45 -> /* empty */
133:	OPTIONAL-46 -> ListElements
134:	OPTIONAL-46 -> /* empty */
135:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';'
136:	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-44 ')' ';'
137:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';'
138:	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-46 ';'
139:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
140:	OPTIONAL-47 -> ListElements
141:	OPTIONAL-47 -> /* empty */
142:	OPTIONAL-48 -> ListElements
143:	OPTIONAL-48 -> /* empty */
144:	Expression -> 'undef'
145:	Expression -> Literal
146:	Expression -> Variable
147:	Expression -> ArrayReference
148:	Expression -> ArrayDereferenced
149:	Expression -> HashReference
150:	Expression -> HashDereferenced
151:	Expression -> '{' '}'
152:	Expression -> Operator
153:	Expression -> WordScoped '(' OPTIONAL-47 ')'
154:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'
155:	Expression -> '(' Expression ')'
156:	ExpressionOrStdin -> Expression
157:	ExpressionOrStdin -> '<STDIN>'
158:	PAREN-49 -> LoopLabel COLON
159:	OPTIONAL-50 -> PAREN-49
160:	OPTIONAL-50 -> /* empty */
161:	Statement -> Conditional
162:	Statement -> OPTIONAL-50 Loop
163:	Statement -> OperatorVoid
164:	Statement -> VariableDeclaration
165:	Statement -> VariableModification
166:	PAREN-51 -> 'elsif (' Expression ')' CodeBlock
167:	STAR-52 -> STAR-52 PAREN-51
168:	STAR-52 -> /* empty */
169:	PAREN-53 -> 'else' CodeBlock
170:	OPTIONAL-54 -> PAREN-53
171:	OPTIONAL-54 -> /* empty */
172:	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54
173:	Loop -> LoopFor
174:	Loop -> LoopForEach
175:	Loop -> LoopWhile
176:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
177:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
178:	LoopWhile -> 'while (' Expression ')' CodeBlock
179:	PLUS-55 -> PLUS-55 Operation
180:	PLUS-55 -> Operation
181:	CodeBlock -> '{' PLUS-55 '}'
182:	STAR-56 -> STAR-56 VariableRetrieval
183:	STAR-56 -> /* empty */
184:	Variable -> VARIABLE_SYMBOL STAR-56
185:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
186:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
187:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
188:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
189:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
190:	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
191:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
192:	PAREN-57 -> OP21_LIST_COMMA ListElement
193:	STAR-58 -> STAR-58 PAREN-57
194:	STAR-58 -> /* empty */
195:	PLUS-59 -> PLUS-59 WORD
196:	PLUS-59 -> WORD
197:	ListElements -> ListElement STAR-58
198:	ListElements -> OP01_QW '(' PLUS-59 ')'
199:	ListElement -> Expression
200:	ListElement -> TypeInner Expression
201:	ListElement -> KEYS_OR_VALUES HashDereferenced
202:	OPTIONAL-60 -> ListElements
203:	OPTIONAL-60 -> /* empty */
204:	ArrayReference -> '[' OPTIONAL-60 ']'
205:	ArrayDereferenced -> '@{' Variable '}'
206:	ArrayDereferenced -> '@{' ArrayReference '}'
207:	OPTIONAL-61 -> TypeInner
208:	OPTIONAL-61 -> /* empty */
209:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-61 Expression
210:	HashEntry -> HashDereferenced
211:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
212:	HashEntryTyped -> HashDereferenced
213:	PAREN-62 -> OP21_LIST_COMMA HashEntry
214:	STAR-63 -> STAR-63 PAREN-62
215:	STAR-63 -> /* empty */
216:	HashReference -> '{' HashEntry STAR-63 '}'
217:	HashDereferenced -> '%{' Variable '}'
218:	HashDereferenced -> '%{' HashReference '}'
219:	WordScoped -> WORD
220:	WordScoped -> WORD_SCOPED
221:	FileHandle -> '{*' WORD '}'
222:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
223:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
224:	Type -> WORD
225:	LoopLabel -> WORD
226:	Literal -> LITERAL_STRING
227:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 9
	SHEBANG	shift, and go to state 5

	'package'	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 6
	PAREN-1	go to state 7
	ModuleHeader	go to state 2
	Critic	go to state 8
	Program	go to state 3
	PLUS-2	go to state 1
	CompileUnit	go to state 4

State 1:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 9

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 8
	PAREN-1	go to state 10
	ModuleHeader	go to state 2
	OPTIONAL-9	go to state 6

State 2:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 12

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Class	go to state 14
	STAR-10	go to state 15
	Package	go to state 13
	Module	go to state 11

State 3:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 4:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 16

State 5:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 9

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 18
	OPTIONAL-3	go to state 17

State 6:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 19

State 7:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 8:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 9:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 21

	PLUS-14	go to state 20

State 10:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 11:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 12:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 23

State 13:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 14:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 15:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 '1;' '1;'	(Rule 32)

	'## no critic qw('	shift, and go to state 9

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 26
	STAR-11	go to state 25

State 16:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 17:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 27

	Header	go to state 28

State 18:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 19:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 29

State 20:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 31
	WORD	shift, and go to state 30

State 21:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 22:

	WordScoped -> WORD_SCOPED .	(Rule 220)

	$default	reduce using rule 220 (WordScoped)

State 23:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	')'	shift, and go to state 32

State 24:

	WordScoped -> WORD .	(Rule 219)

	$default	reduce using rule 219 (WordScoped)

State 25:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 '1;' '1;'	(Rule 32)

	'use'	shift, and go to state 34

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 33
	Include	go to state 35

State 26:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 27:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 36

State 28:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 37

State 29:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 38

State 30:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 31:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 32:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	';'	shift, and go to state 39

State 33:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 '1;' '1;'	(Rule 32)

	'our'	shift, and go to state 43
	'use constant'	shift, and go to state 42

	Subroutine	go to state 40
	Constant	go to state 41
	PLUS-13	go to state 44

State 34:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 45

State 35:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 36:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 46

State 37:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 9

	'%{'	reduce using rule 11 (STAR-5)
	'('	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'['	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	'{'	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 11 (STAR-5)
	OP01_OPEN_CLOSE	reduce using rule 11 (STAR-5)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID_PAREN	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 47
	STAR-5	go to state 48

State 38:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 27

	Header	go to state 49

State 39:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	'use'	shift, and go to state 34

	Include	go to state 50

State 40:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 41:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 42:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 51

State 43:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 52

	Type	go to state 53

State 44:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . '1;' '1;'	(Rule 32)

	'1;'	shift, and go to state 55
	'our'	shift, and go to state 43

	Subroutine	go to state 54

State 45:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 56
	'qw('	shift, and go to state 57

State 46:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 58

State 47:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 48:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 34

	'%{'	reduce using rule 13 (STAR-6)
	'('	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'['	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	'{'	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_PAREN	reduce using rule 13 (STAR-6)
	OP01_OPEN_CLOSE	reduce using rule 13 (STAR-6)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID_PAREN	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	STAR-6	go to state 60
	Include	go to state 59

State 49:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 50:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 61

State 51:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 62

State 52:

	Type -> WORD .	(Rule 224)

	$default	reduce using rule 224 (Type)

State 53:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 63

State 54:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 55:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 '1;' . '1;'	(Rule 32)

	'1;'	shift, and go to state 64

State 56:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 57:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 65

	PLUS-15	go to state 66

State 58:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 67

State 59:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 60:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 42

	'%{'	reduce using rule 15 (STAR-7)
	'('	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'['	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	'{'	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_PAREN	reduce using rule 15 (STAR-7)
	OP01_OPEN_CLOSE	reduce using rule 15 (STAR-7)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID_PAREN	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 69
	STAR-7	go to state 68

State 61:

	STAR-23 -> STAR-23 . Critic	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 . STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	'## no critic qw('	shift, and go to state 9

	'our %properties = ('	reduce using rule 60 (STAR-24)
	'use constant'	reduce using rule 60 (STAR-24)
	'use'	reduce using rule 60 (STAR-24)

	Critic	go to state 70
	STAR-24	go to state 71

State 62:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 73

	TypeInner	go to state 72

State 63:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 74

State 64:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 '1;' '1;' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 65:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 66:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 75
	WORD	shift, and go to state 76

State 67:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'if ('	shift, and go to state 93
	'my'	shift, and go to state 116
	'our'	shift, and go to state 43
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 111
	OP01_NAMED_VOID_PAREN	shift, and go to state 77
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP19_LOOP_CONTROL	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 90
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 160 (OPTIONAL-50)
	'foreach my'	reduce using rule 160 (OPTIONAL-50)
	'while ('	reduce using rule 160 (OPTIONAL-50)

	Operator	go to state 106
	Variable	go to state 81
	Operation	go to state 79
	Subroutine	go to state 108
	PLUS-8	go to state 82
	HashDereferenced	go to state 86
	OperatorVoid	go to state 84
	LoopLabel	go to state 83
	VariableDeclaration	go to state 113
	HashReference	go to state 89
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	Statement	go to state 117
	PAREN-49	go to state 96
	ArrayReference	go to state 118
	Conditional	go to state 122
	OPTIONAL-50	go to state 121
	VariableModification	go to state 98
	Expression	go to state 97

State 69:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 70:

	STAR-23 -> STAR-23 Critic .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 71:

	STAR-24 -> STAR-24 . Include	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 . STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	'use'	shift, and go to state 34

	'our %properties = ('	reduce using rule 62 (STAR-25)
	'use constant'	reduce using rule 62 (STAR-25)

	STAR-25	go to state 123
	Include	go to state 124

State 72:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91

	Literal	go to state 125

State 73:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 223)

	WORD	shift, and go to state 52

	Type	go to state 126

State 74:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 129

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'('	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'['	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	'{'	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	OPTIONAL-16	go to state 127
	SubroutineArguments	go to state 128

State 75:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 130

State 76:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 77:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-43 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 128 (OPTIONAL-43)

	OPTIONAL-43	go to state 138
	ArrayReference	go to state 118
	ListElement	go to state 136
	TypeInner	go to state 131
	HashDereferenced	go to state 86
	Expression	go to state 132
	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	Operator	go to state 106
	Variable	go to state 134
	ListElements	go to state 137

State 78:

	Expression -> '{' . '}'	(Rule 151)
	HashReference -> '{' . HashEntry STAR-63 '}'	(Rule 216)

	'%{'	shift, and go to state 92
	'}'	shift, and go to state 141
	WORD	shift, and go to state 142

	HashEntry	go to state 139
	HashDereferenced	go to state 140

State 79:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 80:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 139)

	WORD	shift, and go to state 143

	LoopLabel	go to state 144

State 81:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 105)
	Expression -> Variable .	(Rule 146)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 154)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 190)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 191)

	OP02_METHOD_THINARROW	shift, and go to state 145
	OP03_MATH_INC_DEC	shift, and go to state 147
	OP19_VARIABLE_ASSIGN	shift, and go to state 146
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 148

	';'	reduce using rule 146 (Expression)
	OP04_MATH_POW	reduce using rule 146 (Expression)
	OP06_REGEX_MATCH	reduce using rule 146 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 146 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 146 (Expression)
	OP08_STRING_CAT	reduce using rule 146 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 146 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 146 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 146 (Expression)
	OP13_BITWISE_AND	reduce using rule 146 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 146 (Expression)
	OP15_LOGICAL_AND	reduce using rule 146 (Expression)
	OP16_LOGICAL_OR	reduce using rule 146 (Expression)
	OP17_LIST_RANGE	reduce using rule 146 (Expression)
	OP18_TERNARY	reduce using rule 146 (Expression)
	OP23_LOGICAL_AND	reduce using rule 146 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 146 (Expression)

State 82:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'if ('	shift, and go to state 93
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 111
	OP01_NAMED_VOID_PAREN	shift, and go to state 77
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP19_LOOP_CONTROL	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 90
	WORD_SCOPED	shift, and go to state 22

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 160 (OPTIONAL-50)
	'foreach my'	reduce using rule 160 (OPTIONAL-50)
	'while ('	reduce using rule 160 (OPTIONAL-50)

	LoopLabel	go to state 83
	OperatorVoid	go to state 84
	HashDereferenced	go to state 86
	Operation	go to state 149
	Operator	go to state 106
	Variable	go to state 81
	ArrayReference	go to state 118
	PAREN-49	go to state 96
	Expression	go to state 97
	VariableModification	go to state 98
	Conditional	go to state 122
	OPTIONAL-50	go to state 121
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	HashReference	go to state 89
	VariableDeclaration	go to state 113
	Statement	go to state 117

State 83:

	PAREN-49 -> LoopLabel . COLON	(Rule 158)

	COLON	shift, and go to state 150

State 84:

	Statement -> OperatorVoid .	(Rule 163)

	$default	reduce using rule 163 (Statement)

State 85:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 104)

	VARIABLE_SYMBOL	shift, and go to state 105

	Variable	go to state 151

State 86:

	Expression -> HashDereferenced .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 87:

	Expression -> ArrayDereferenced .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 88:

	Expression -> Literal .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 89:

	Expression -> HashReference .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 90:

	WordScoped -> WORD .	(Rule 219)
	LoopLabel -> WORD .	(Rule 225)

	'('	reduce using rule 219 (WordScoped)
	COLON	reduce using rule 225 (LoopLabel)

State 91:

	Literal -> LITERAL_STRING .	(Rule 226)

	$default	reduce using rule 226 (Literal)

State 92:

	HashDereferenced -> '%{' . Variable '}'	(Rule 217)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 218)

	'{'	shift, and go to state 153
	VARIABLE_SYMBOL	shift, and go to state 105

	Variable	go to state 154
	HashReference	go to state 152

State 93:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 172)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 118
	Expression	go to state 155
	HashDereferenced	go to state 86
	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	Operator	go to state 106
	Variable	go to state 134

State 94:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 114)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	Operator	go to state 106
	Variable	go to state 134
	ArrayReference	go to state 118
	HashDereferenced	go to state 86
	Expression	go to state 156

State 95:

	Operator -> OP01_OPEN_CLOSE_PAREN . FileHandle OPTIONAL-41 ')' ';'	(Rule 102)

	'my'	shift, and go to state 159
	'{*'	shift, and go to state 158

	FileHandle	go to state 157

State 96:

	OPTIONAL-50 -> PAREN-49 .	(Rule 159)

	$default	reduce using rule 159 (OPTIONAL-50)

State 97:

	Operation -> Expression . ';'	(Rule 93)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	';'	shift, and go to state 170
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 98:

	Statement -> VariableModification .	(Rule 165)

	$default	reduce using rule 165 (Statement)

State 99:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 205)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 206)

	'['	shift, and go to state 107
	VARIABLE_SYMBOL	shift, and go to state 105

	ArrayReference	go to state 177
	Variable	go to state 178

State 100:

	Literal -> LITERAL_NUMBER .	(Rule 227)

	$default	reduce using rule 227 (Literal)

State 101:

	Operator -> OP01_NAMED . '(' OPTIONAL-40 ')'	(Rule 101)

	'('	shift, and go to state 179

State 102:

	OperatorVoid -> OP01_PRINT_VOID . FileHandle OPTIONAL-46 ';'	(Rule 138)

	'my'	shift, and go to state 159
	'{*'	shift, and go to state 158

	FileHandle	go to state 180

State 103:

	Operator -> OP01_OPEN_CLOSE . FileHandle OPTIONAL-42 ';'	(Rule 103)

	'my'	shift, and go to state 159
	'{*'	shift, and go to state 158

	FileHandle	go to state 181

State 104:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 124)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 106
	Variable	go to state 134
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	HashReference	go to state 89
	Expression	go to state 182
	HashDereferenced	go to state 86
	ArrayReference	go to state 118

State 105:

	Variable -> VARIABLE_SYMBOL . STAR-56	(Rule 184)

	$default	reduce using rule 183 (STAR-56)

	STAR-56	go to state 183

State 106:

	Expression -> Operator .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 107:

	ArrayReference -> '[' . OPTIONAL-60 ']'	(Rule 204)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	']'	reduce using rule 203 (OPTIONAL-60)

	Variable	go to state 134
	OPTIONAL-60	go to state 184
	Operator	go to state 106
	ListElements	go to state 185
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	HashReference	go to state 89
	TypeInner	go to state 131
	HashDereferenced	go to state 86
	Expression	go to state 132
	ArrayReference	go to state 118
	ListElement	go to state 136

State 108:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 109:

	Expression -> 'undef' .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 110:

	Expression -> WordScoped . '(' OPTIONAL-47 ')'	(Rule 153)

	'('	shift, and go to state 186

State 111:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-45 ';'	(Rule 137)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	';'	reduce using rule 132 (OPTIONAL-45)

	HashDereferenced	go to state 86
	TypeInner	go to state 131
	Expression	go to state 132
	OPTIONAL-45	go to state 187
	ArrayReference	go to state 118
	ListElement	go to state 136
	Variable	go to state 134
	Operator	go to state 106
	ListElements	go to state 188
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	HashReference	go to state 89

State 112:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 108)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 118
	HashDereferenced	go to state 86
	Expression	go to state 189
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	HashReference	go to state 89
	Operator	go to state 106
	Variable	go to state 134

State 113:

	Statement -> VariableDeclaration .	(Rule 164)

	$default	reduce using rule 164 (Statement)

State 114:

	Expression -> '(' . Expression ')'	(Rule 155)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 89
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	Variable	go to state 134
	Operator	go to state 106
	ArrayReference	go to state 118
	Expression	go to state 190
	HashDereferenced	go to state 86

State 115:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 107)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 118
	HashDereferenced	go to state 86
	Expression	go to state 191
	HashReference	go to state 89
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Variable	go to state 134
	Operator	go to state 106

State 116:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 188)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 189)

	WORD	shift, and go to state 52

	Type	go to state 192

State 117:

	Operation -> Statement .	(Rule 94)

	$default	reduce using rule 94 (Operation)

State 118:

	Expression -> ArrayReference .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 119:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 115)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 106
	Variable	go to state 134
	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	Expression	go to state 193
	HashDereferenced	go to state 86
	ArrayReference	go to state 118

State 120:

	OperatorVoid -> OP01_PRINT_VOID_PAREN . FileHandle OPTIONAL-44 ')' ';'	(Rule 136)

	'my'	shift, and go to state 159
	'{*'	shift, and go to state 158

	FileHandle	go to state 194

State 121:

	Statement -> OPTIONAL-50 . Loop	(Rule 162)

	'for my integer'	shift, and go to state 200
	'foreach my'	shift, and go to state 197
	'while ('	shift, and go to state 201

	LoopWhile	go to state 196
	LoopForEach	go to state 199
	LoopFor	go to state 198
	Loop	go to state 195

State 122:

	Statement -> Conditional .	(Rule 161)

	$default	reduce using rule 161 (Statement)

State 123:

	STAR-25 -> STAR-25 . Constant	(Rule 61)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 . Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	'our %properties = ('	shift, and go to state 203
	'use constant'	shift, and go to state 42

	Properties	go to state 202
	Constant	go to state 204

State 124:

	STAR-24 -> STAR-24 Include .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 125:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 205

State 126:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 223)

	'$TYPED_'	shift, and go to state 206

State 127:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'if ('	shift, and go to state 93
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 111
	OP01_NAMED_VOID_PAREN	shift, and go to state 77
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP19_LOOP_CONTROL	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 90
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 160 (OPTIONAL-50)
	'foreach my'	reduce using rule 160 (OPTIONAL-50)
	'while ('	reduce using rule 160 (OPTIONAL-50)

	PLUS-17	go to state 207
	Statement	go to state 117
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	HashReference	go to state 89
	VariableDeclaration	go to state 113
	Expression	go to state 97
	VariableModification	go to state 98
	Conditional	go to state 122
	OPTIONAL-50	go to state 121
	ArrayReference	go to state 118
	PAREN-49	go to state 96
	Operation	go to state 208
	Operator	go to state 106
	Variable	go to state 81
	LoopLabel	go to state 83
	OperatorVoid	go to state 84
	HashDereferenced	go to state 86

State 128:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 129:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	WORD	shift, and go to state 52

	Type	go to state 209

State 130:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 131:

	ListElement -> TypeInner . Expression	(Rule 200)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 86
	Expression	go to state 210
	ArrayReference	go to state 118
	Operator	go to state 106
	Variable	go to state 134
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	HashReference	go to state 89

State 132:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	ListElement -> Expression .	(Rule 199)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

	')'	reduce using rule 199 (ListElement)
	';'	reduce using rule 199 (ListElement)
	']'	reduce using rule 199 (ListElement)
	OP21_LIST_COMMA	reduce using rule 199 (ListElement)

State 133:

	ListElements -> OP01_QW . '(' PLUS-59 ')'	(Rule 198)

	'('	shift, and go to state 211

State 134:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 105)
	Expression -> Variable .	(Rule 146)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 154)

	OP02_METHOD_THINARROW	shift, and go to state 145
	OP03_MATH_INC_DEC	shift, and go to state 147

	')'	reduce using rule 146 (Expression)
	'..'	reduce using rule 146 (Expression)
	';'	reduce using rule 146 (Expression)
	']'	reduce using rule 146 (Expression)
	'}'	reduce using rule 146 (Expression)
	OP04_MATH_POW	reduce using rule 146 (Expression)
	OP06_REGEX_MATCH	reduce using rule 146 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 146 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 146 (Expression)
	OP08_STRING_CAT	reduce using rule 146 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 146 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 146 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 146 (Expression)
	OP13_BITWISE_AND	reduce using rule 146 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 146 (Expression)
	OP15_LOGICAL_AND	reduce using rule 146 (Expression)
	OP16_LOGICAL_OR	reduce using rule 146 (Expression)
	OP17_LIST_RANGE	reduce using rule 146 (Expression)
	OP18_TERNARY	reduce using rule 146 (Expression)
	OP21_LIST_COMMA	reduce using rule 146 (Expression)
	OP23_LOGICAL_AND	reduce using rule 146 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 146 (Expression)

State 135:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 201)

	'%{'	shift, and go to state 92

	HashDereferenced	go to state 212

State 136:

	ListElements -> ListElement . STAR-58	(Rule 197)

	$default	reduce using rule 194 (STAR-58)

	STAR-58	go to state 213

State 137:

	OPTIONAL-43 -> ListElements .	(Rule 127)

	$default	reduce using rule 127 (OPTIONAL-43)

State 138:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 . ')' ';'	(Rule 135)

	')'	shift, and go to state 214

State 139:

	HashReference -> '{' HashEntry . STAR-63 '}'	(Rule 216)

	$default	reduce using rule 215 (STAR-63)

	STAR-63	go to state 215

State 140:

	HashEntry -> HashDereferenced .	(Rule 210)

	$default	reduce using rule 210 (HashEntry)

State 141:

	Expression -> '{' '}' .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 142:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-61 Expression	(Rule 209)

	OP20_HASH_FATARROW	shift, and go to state 216

State 143:

	LoopLabel -> WORD .	(Rule 225)

	$default	reduce using rule 225 (LoopLabel)

State 144:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 139)

	';'	shift, and go to state 217

State 145:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-48 ')'	(Rule 154)

	WORD	shift, and go to state 218

State 146:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 190)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'<STDIN>'	shift, and go to state 220
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 118
	Expression	go to state 221
	HashDereferenced	go to state 86
	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	ExpressionOrStdin	go to state 219
	Variable	go to state 134
	Operator	go to state 106

State 147:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 105)

	$default	reduce using rule 105 (Operator)

State 148:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 191)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 106
	Variable	go to state 134
	HashReference	go to state 89
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Expression	go to state 222
	HashDereferenced	go to state 86
	ArrayReference	go to state 118

State 149:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 150:

	PAREN-49 -> LoopLabel COLON .	(Rule 158)

	$default	reduce using rule 158 (PAREN-49)

State 151:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 152:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 218)

	'}'	shift, and go to state 223

State 153:

	HashReference -> '{' . HashEntry STAR-63 '}'	(Rule 216)

	'%{'	shift, and go to state 92
	WORD	shift, and go to state 142

	HashEntry	go to state 139
	HashDereferenced	go to state 140

State 154:

	HashDereferenced -> '%{' Variable . '}'	(Rule 217)

	'}'	shift, and go to state 224

State 155:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 172)

	')'	shift, and go to state 225
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 156:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 114)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 114 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 157:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle . OPTIONAL-41 ')' ';'	(Rule 102)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 98 (OPTIONAL-41)

	Expression	go to state 132
	HashDereferenced	go to state 86
	TypeInner	go to state 131
	ListElement	go to state 136
	ArrayReference	go to state 118
	OPTIONAL-41	go to state 226
	ListElements	go to state 227
	Operator	go to state 106
	Variable	go to state 134
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	HashReference	go to state 89

State 158:

	FileHandle -> '{*' . WORD '}'	(Rule 221)

	WORD	shift, and go to state 228

State 159:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 222)

	'filehandle_ref'	shift, and go to state 229

State 160:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 112)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	HashReference	go to state 89
	Operator	go to state 106
	Variable	go to state 134
	ArrayReference	go to state 118
	HashDereferenced	go to state 86
	Expression	go to state 230

State 161:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 123)

	VARIABLE_SYMBOL	shift, and go to state 105

	Variable	go to state 231

State 162:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 122)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 118
	HashDereferenced	go to state 86
	Expression	go to state 232
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	HashReference	go to state 89
	Variable	go to state 134
	Operator	go to state 106

State 163:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 106)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 233
	HashDereferenced	go to state 86
	ArrayReference	go to state 118
	Variable	go to state 134
	Operator	go to state 106
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	HashReference	go to state 89

State 164:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 118)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 134
	Operator	go to state 106
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	HashReference	go to state 89
	Expression	go to state 234
	HashDereferenced	go to state 86
	ArrayReference	go to state 118

State 165:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 121)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 106
	Variable	go to state 134
	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	Expression	go to state 235
	HashDereferenced	go to state 86
	ArrayReference	go to state 118

State 166:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 116)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 236
	HashDereferenced	go to state 86
	ArrayReference	go to state 118
	Variable	go to state 134
	Operator	go to state 106
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	HashReference	go to state 89

State 167:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 113)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 134
	Operator	go to state 106
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	HashReference	go to state 89
	HashDereferenced	go to state 86
	Expression	go to state 237
	ArrayReference	go to state 118

State 168:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 126)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 89
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	Variable	go to state 134
	Operator	go to state 106
	ArrayReference	go to state 118
	Expression	go to state 238
	HashDereferenced	go to state 86

State 169:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 117)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 134
	Operator	go to state 106
	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	Expression	go to state 239
	HashDereferenced	go to state 86
	ArrayReference	go to state 118

State 170:

	Operation -> Expression ';' .	(Rule 93)

	$default	reduce using rule 93 (Operation)

State 171:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 119)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 106
	Variable	go to state 134
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	HashReference	go to state 89
	Expression	go to state 240
	HashDereferenced	go to state 86
	ArrayReference	go to state 118

State 172:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 111)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	HashReference	go to state 89
	Operator	go to state 106
	Variable	go to state 134
	ArrayReference	go to state 118
	HashDereferenced	go to state 86
	Expression	go to state 241

State 173:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 109)

	'/'	shift, and go to state 242

State 174:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 120)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 243
	HashDereferenced	go to state 86
	ArrayReference	go to state 118
	Operator	go to state 106
	Variable	go to state 134
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	HashReference	go to state 89

State 175:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 110)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	HashReference	go to state 89
	Operator	go to state 106
	Variable	go to state 134
	ArrayReference	go to state 118
	HashDereferenced	go to state 86
	Expression	go to state 244

State 176:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 125)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 88
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	HashReference	go to state 89
	Operator	go to state 106
	Variable	go to state 134
	ArrayReference	go to state 118
	Expression	go to state 245
	HashDereferenced	go to state 86

State 177:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 206)

	'}'	shift, and go to state 246

State 178:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 205)

	'}'	shift, and go to state 247

State 179:

	Operator -> OP01_NAMED '(' . OPTIONAL-40 ')'	(Rule 101)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 96 (OPTIONAL-40)

	ListElement	go to state 136
	ArrayReference	go to state 118
	Expression	go to state 132
	TypeInner	go to state 131
	HashDereferenced	go to state 86
	OPTIONAL-40	go to state 249
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	HashReference	go to state 89
	ListElements	go to state 248
	Variable	go to state 134
	Operator	go to state 106

State 180:

	OperatorVoid -> OP01_PRINT_VOID FileHandle . OPTIONAL-46 ';'	(Rule 138)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	';'	reduce using rule 134 (OPTIONAL-46)

	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	Operator	go to state 106
	Variable	go to state 134
	ListElements	go to state 251
	ArrayReference	go to state 118
	OPTIONAL-46	go to state 250
	ListElement	go to state 136
	TypeInner	go to state 131
	HashDereferenced	go to state 86
	Expression	go to state 132

State 181:

	Operator -> OP01_OPEN_CLOSE FileHandle . OPTIONAL-42 ';'	(Rule 103)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	';'	reduce using rule 100 (OPTIONAL-42)

	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	Variable	go to state 134
	Operator	go to state 106
	ListElements	go to state 253
	ArrayReference	go to state 118
	ListElement	go to state 136
	OPTIONAL-42	go to state 252
	HashDereferenced	go to state 86
	TypeInner	go to state 131
	Expression	go to state 132

State 182:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 124)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161

	')'	reduce using rule 124 (Operator)
	'..'	reduce using rule 124 (Operator)
	';'	reduce using rule 124 (Operator)
	']'	reduce using rule 124 (Operator)
	'}'	reduce using rule 124 (Operator)
	OP21_LIST_COMMA	reduce using rule 124 (Operator)
	OP23_LOGICAL_AND	reduce using rule 124 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 124 (Operator)

State 183:

	STAR-56 -> STAR-56 . VariableRetrieval	(Rule 182)
	Variable -> VARIABLE_SYMBOL STAR-56 .	(Rule 184)

	OP02_ARRAY_THINARROW	shift, and go to state 255
	OP02_HASH_THINARROW	shift, and go to state 256

	')'	reduce using rule 184 (Variable)
	'..'	reduce using rule 184 (Variable)
	';'	reduce using rule 184 (Variable)
	']'	reduce using rule 184 (Variable)
	'}'	reduce using rule 184 (Variable)
	COLON	reduce using rule 184 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 184 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 184 (Variable)
	OP04_MATH_POW	reduce using rule 184 (Variable)
	OP06_REGEX_MATCH	reduce using rule 184 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 184 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 184 (Variable)
	OP08_STRING_CAT	reduce using rule 184 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 184 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 184 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 184 (Variable)
	OP13_BITWISE_AND	reduce using rule 184 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 184 (Variable)
	OP15_LOGICAL_AND	reduce using rule 184 (Variable)
	OP16_LOGICAL_OR	reduce using rule 184 (Variable)
	OP17_LIST_RANGE	reduce using rule 184 (Variable)
	OP18_TERNARY	reduce using rule 184 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 184 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 184 (Variable)
	OP21_LIST_COMMA	reduce using rule 184 (Variable)
	OP23_LOGICAL_AND	reduce using rule 184 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 184 (Variable)

	VariableRetrieval	go to state 254

State 184:

	ArrayReference -> '[' OPTIONAL-60 . ']'	(Rule 204)

	']'	shift, and go to state 257

State 185:

	OPTIONAL-60 -> ListElements .	(Rule 202)

	$default	reduce using rule 202 (OPTIONAL-60)

State 186:

	Expression -> WordScoped '(' . OPTIONAL-47 ')'	(Rule 153)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 141 (OPTIONAL-47)

	HashReference	go to state 89
	OPTIONAL-47	go to state 259
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	ListElements	go to state 258
	Variable	go to state 134
	Operator	go to state 106
	ListElement	go to state 136
	ArrayReference	go to state 118
	Expression	go to state 132
	HashDereferenced	go to state 86
	TypeInner	go to state 131

State 187:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 . ';'	(Rule 137)

	';'	shift, and go to state 260

State 188:

	OPTIONAL-45 -> ListElements .	(Rule 131)

	$default	reduce using rule 131 (OPTIONAL-45)

State 189:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 108)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	')'	shift, and go to state 261
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 190:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	Expression -> '(' Expression . ')'	(Rule 155)

	')'	shift, and go to state 262
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 191:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 107)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP06_REGEX_MATCH	reduce using rule 107 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 107 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 107 (Operator)
	OP08_STRING_CAT	reduce using rule 107 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 107 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 192:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 188)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 189)

	VARIABLE_SYMBOL	shift, and go to state 263

State 193:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 115)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 115 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 194:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle . OPTIONAL-44 ')' ';'	(Rule 136)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 130 (OPTIONAL-44)

	ArrayReference	go to state 118
	ListElement	go to state 136
	TypeInner	go to state 131
	HashDereferenced	go to state 86
	Expression	go to state 132
	OPTIONAL-44	go to state 264
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	HashReference	go to state 89
	Operator	go to state 106
	Variable	go to state 134
	ListElements	go to state 265

State 195:

	Statement -> OPTIONAL-50 Loop .	(Rule 162)

	$default	reduce using rule 162 (Statement)

State 196:

	Loop -> LoopWhile .	(Rule 175)

	$default	reduce using rule 175 (Loop)

State 197:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 177)

	WORD	shift, and go to state 52

	Type	go to state 266

State 198:

	Loop -> LoopFor .	(Rule 173)

	$default	reduce using rule 173 (Loop)

State 199:

	Loop -> LoopForEach .	(Rule 174)

	$default	reduce using rule 174 (Loop)

State 200:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 176)

	VARIABLE_SYMBOL	shift, and go to state 267

State 201:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 178)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 86
	Expression	go to state 268
	ArrayReference	go to state 118
	Operator	go to state 106
	Variable	go to state 134
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	HashReference	go to state 89

State 202:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties . OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	'our %properties_class = ('	shift, and go to state 271

	'1;'	reduce using rule 64 (OPTIONAL-26)
	'our'	reduce using rule 64 (OPTIONAL-26)

	PropertiesClass	go to state 270
	OPTIONAL-26	go to state 269

State 203:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-32 ')' ';'	(Rule 76)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 77)

	'## no critic qw('	shift, and go to state 9
	')'	shift, and go to state 273

	Critic	go to state 272

State 204:

	STAR-25 -> STAR-25 Constant .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 205:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 206:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 223)

	WORD	shift, and go to state 274

State 207:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'if ('	shift, and go to state 93
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	'}'	shift, and go to state 275
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 111
	OP01_NAMED_VOID_PAREN	shift, and go to state 77
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP19_LOOP_CONTROL	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 90
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 160 (OPTIONAL-50)
	'foreach my'	reduce using rule 160 (OPTIONAL-50)
	'while ('	reduce using rule 160 (OPTIONAL-50)

	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	HashReference	go to state 89
	VariableDeclaration	go to state 113
	Statement	go to state 117
	ArrayReference	go to state 118
	PAREN-49	go to state 96
	Expression	go to state 97
	VariableModification	go to state 98
	OPTIONAL-50	go to state 121
	Conditional	go to state 122
	Operation	go to state 276
	Variable	go to state 81
	Operator	go to state 106
	LoopLabel	go to state 83
	HashDereferenced	go to state 86
	OperatorVoid	go to state 84

State 208:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 209:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	VARIABLE_SYMBOL	shift, and go to state 277

State 210:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	ListElement -> TypeInner Expression .	(Rule 200)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

	')'	reduce using rule 200 (ListElement)
	';'	reduce using rule 200 (ListElement)
	']'	reduce using rule 200 (ListElement)
	OP21_LIST_COMMA	reduce using rule 200 (ListElement)

State 211:

	ListElements -> OP01_QW '(' . PLUS-59 ')'	(Rule 198)

	WORD	shift, and go to state 278

	PLUS-59	go to state 279

State 212:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 201)

	$default	reduce using rule 201 (ListElement)

State 213:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 193)
	ListElements -> ListElement STAR-58 .	(Rule 197)

	OP21_LIST_COMMA	shift, and go to state 280

	')'	reduce using rule 197 (ListElements)
	';'	reduce using rule 197 (ListElements)
	']'	reduce using rule 197 (ListElements)

	PAREN-57	go to state 281

State 214:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' . ';'	(Rule 135)

	';'	shift, and go to state 282

State 215:

	STAR-63 -> STAR-63 . PAREN-62	(Rule 214)
	HashReference -> '{' HashEntry STAR-63 . '}'	(Rule 216)

	'}'	shift, and go to state 284
	OP21_LIST_COMMA	shift, and go to state 283

	PAREN-62	go to state 285

State 216:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-61 Expression	(Rule 209)

	'my'	shift, and go to state 73

	'%{'	reduce using rule 208 (OPTIONAL-61)
	'('	reduce using rule 208 (OPTIONAL-61)
	'@{'	reduce using rule 208 (OPTIONAL-61)
	'['	reduce using rule 208 (OPTIONAL-61)
	'undef'	reduce using rule 208 (OPTIONAL-61)
	'{'	reduce using rule 208 (OPTIONAL-61)
	LITERAL_NUMBER	reduce using rule 208 (OPTIONAL-61)
	LITERAL_STRING	reduce using rule 208 (OPTIONAL-61)
	OP01_NAMED	reduce using rule 208 (OPTIONAL-61)
	OP01_OPEN_CLOSE	reduce using rule 208 (OPTIONAL-61)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 208 (OPTIONAL-61)
	OP03_MATH_INC_DEC	reduce using rule 208 (OPTIONAL-61)
	OP05_LOGICAL_NEG	reduce using rule 208 (OPTIONAL-61)
	OP05_MATH_NEG	reduce using rule 208 (OPTIONAL-61)
	OP10_NAMED_UNARY	reduce using rule 208 (OPTIONAL-61)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 208 (OPTIONAL-61)
	OP22_LOGICAL_NOT	reduce using rule 208 (OPTIONAL-61)
	VARIABLE_SYMBOL	reduce using rule 208 (OPTIONAL-61)
	WORD	reduce using rule 208 (OPTIONAL-61)
	WORD_SCOPED	reduce using rule 208 (OPTIONAL-61)

	TypeInner	go to state 287
	OPTIONAL-61	go to state 286

State 217:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 139)

	$default	reduce using rule 139 (OperatorVoid)

State 218:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-48 ')'	(Rule 154)

	'('	shift, and go to state 288

State 219:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 190)

	';'	shift, and go to state 289

State 220:

	ExpressionOrStdin -> '<STDIN>' .	(Rule 157)

	$default	reduce using rule 157 (ExpressionOrStdin)

State 221:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	ExpressionOrStdin -> Expression .	(Rule 156)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

	';'	reduce using rule 156 (ExpressionOrStdin)

State 222:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 191)

	';'	shift, and go to state 290
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 223:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 218)

	$default	reduce using rule 218 (HashDereferenced)

State 224:

	HashDereferenced -> '%{' Variable '}' .	(Rule 217)

	$default	reduce using rule 217 (HashDereferenced)

State 225:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-52 OPTIONAL-54	(Rule 172)

	'{'	shift, and go to state 292

	CodeBlock	go to state 291

State 226:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-41 . ')' ';'	(Rule 102)

	')'	shift, and go to state 293

State 227:

	OPTIONAL-41 -> ListElements .	(Rule 97)

	$default	reduce using rule 97 (OPTIONAL-41)

State 228:

	FileHandle -> '{*' WORD . '}'	(Rule 221)

	'}'	shift, and go to state 294

State 229:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 222)

	VARIABLE_SYMBOL	shift, and go to state 295

State 230:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP08_STRING_CAT	reduce using rule 112 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 231:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 123)

	COLON	shift, and go to state 296

State 232:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 122 (Operator)
	'..'	reduce using rule 122 (Operator)
	';'	reduce using rule 122 (Operator)
	']'	reduce using rule 122 (Operator)
	'}'	reduce using rule 122 (Operator)
	OP18_TERNARY	reduce using rule 122 (Operator)
	OP21_LIST_COMMA	reduce using rule 122 (Operator)
	OP23_LOGICAL_AND	reduce using rule 122 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 122 (Operator)

State 233:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP06_REGEX_MATCH	reduce using rule 106 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 106 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 234:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP13_BITWISE_AND	reduce using rule 118 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 118 (Operator)
	OP15_LOGICAL_AND	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 235:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174

	')'	reduce using rule 121 (Operator)
	'..'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP16_LOGICAL_OR	reduce using rule 121 (Operator)
	OP17_LIST_RANGE	reduce using rule 121 (Operator)
	OP18_TERNARY	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 236:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 116 (Operator)
	OP13_BITWISE_AND	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 237:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 113 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 238:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176

	')'	reduce using rule 126 (Operator)
	'..'	reduce using rule 126 (Operator)
	';'	reduce using rule 126 (Operator)
	']'	reduce using rule 126 (Operator)
	'}'	reduce using rule 126 (Operator)
	OP21_LIST_COMMA	reduce using rule 126 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 126 (Operator)

State 239:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP13_BITWISE_AND	reduce using rule 117 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 240:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 119 (Operator)
	OP15_LOGICAL_AND	reduce using rule 119 (Operator)
	OP16_LOGICAL_OR	reduce using rule 119 (Operator)
	OP17_LIST_RANGE	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 241:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 242:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 109)

	OP06_REGEX_PATTERN	shift, and go to state 297

State 243:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171

	')'	reduce using rule 120 (Operator)
	'..'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP15_LOGICAL_AND	reduce using rule 120 (Operator)
	OP16_LOGICAL_OR	reduce using rule 120 (Operator)
	OP17_LIST_RANGE	reduce using rule 120 (Operator)
	OP18_TERNARY	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP23_LOGICAL_AND	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 244:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 110 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 110 (Operator)
	OP08_STRING_CAT	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 245:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161

	')'	reduce using rule 125 (Operator)
	'..'	reduce using rule 125 (Operator)
	';'	reduce using rule 125 (Operator)
	']'	reduce using rule 125 (Operator)
	'}'	reduce using rule 125 (Operator)
	OP21_LIST_COMMA	reduce using rule 125 (Operator)
	OP23_LOGICAL_AND	reduce using rule 125 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (Operator)

State 246:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 206)

	$default	reduce using rule 206 (ArrayDereferenced)

State 247:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 205)

	$default	reduce using rule 205 (ArrayDereferenced)

State 248:

	OPTIONAL-40 -> ListElements .	(Rule 95)

	$default	reduce using rule 95 (OPTIONAL-40)

State 249:

	Operator -> OP01_NAMED '(' OPTIONAL-40 . ')'	(Rule 101)

	')'	shift, and go to state 298

State 250:

	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-46 . ';'	(Rule 138)

	';'	shift, and go to state 299

State 251:

	OPTIONAL-46 -> ListElements .	(Rule 133)

	$default	reduce using rule 133 (OPTIONAL-46)

State 252:

	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-42 . ';'	(Rule 103)

	';'	shift, and go to state 300

State 253:

	OPTIONAL-42 -> ListElements .	(Rule 99)

	$default	reduce using rule 99 (OPTIONAL-42)

State 254:

	STAR-56 -> STAR-56 VariableRetrieval .	(Rule 182)

	$default	reduce using rule 182 (STAR-56)

State 255:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 185)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 106
	Variable	go to state 134
	HashReference	go to state 89
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	HashDereferenced	go to state 86
	Expression	go to state 301
	ArrayReference	go to state 118

State 256:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 186)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 187)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 303
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 89
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Variable	go to state 134
	Operator	go to state 106
	ArrayReference	go to state 118
	Expression	go to state 302
	HashDereferenced	go to state 86

State 257:

	ArrayReference -> '[' OPTIONAL-60 ']' .	(Rule 204)

	$default	reduce using rule 204 (ArrayReference)

State 258:

	OPTIONAL-47 -> ListElements .	(Rule 140)

	$default	reduce using rule 140 (OPTIONAL-47)

State 259:

	Expression -> WordScoped '(' OPTIONAL-47 . ')'	(Rule 153)

	')'	shift, and go to state 304

State 260:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';' .	(Rule 137)

	$default	reduce using rule 137 (OperatorVoid)

State 261:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 262:

	Expression -> '(' Expression ')' .	(Rule 155)

	$default	reduce using rule 155 (Expression)

State 263:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 188)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 189)

	';'	shift, and go to state 305
	OP19_VARIABLE_ASSIGN	shift, and go to state 306

State 264:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-44 . ')' ';'	(Rule 136)

	')'	shift, and go to state 307

State 265:

	OPTIONAL-44 -> ListElements .	(Rule 129)

	$default	reduce using rule 129 (OPTIONAL-44)

State 266:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 177)

	VARIABLE_SYMBOL	shift, and go to state 308

State 267:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 176)

	'('	shift, and go to state 309

State 268:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 178)

	')'	shift, and go to state 310
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 269:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 . STAR-27 '1;' '1;' OPTIONAL-30	(Rule 72)

	$default	reduce using rule 66 (STAR-27)

	STAR-27	go to state 311

State 270:

	OPTIONAL-26 -> PropertiesClass .	(Rule 63)

	$default	reduce using rule 63 (OPTIONAL-26)

State 271:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-34 ')' ';'	(Rule 81)

	'## no critic qw('	shift, and go to state 9

	Critic	go to state 312

State 272:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-32 ')' ';'	(Rule 76)

	'%{'	shift, and go to state 92
	WORD	shift, and go to state 313

	HashEntryTyped	go to state 314
	HashDereferenced	go to state 315

State 273:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 77)

	';'	shift, and go to state 316

State 274:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 223)

	OP19_VARIABLE_ASSIGN	shift, and go to state 317

State 275:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 318

State 276:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 277:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 319

State 278:

	PLUS-59 -> WORD .	(Rule 196)

	$default	reduce using rule 196 (PLUS-59)

State 279:

	PLUS-59 -> PLUS-59 . WORD	(Rule 195)
	ListElements -> OP01_QW '(' PLUS-59 . ')'	(Rule 198)

	')'	shift, and go to state 320
	WORD	shift, and go to state 321

State 280:

	PAREN-57 -> OP21_LIST_COMMA . ListElement	(Rule 192)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 118
	ListElement	go to state 322
	HashDereferenced	go to state 86
	TypeInner	go to state 131
	Expression	go to state 132
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	HashReference	go to state 89
	Variable	go to state 134
	Operator	go to state 106

State 281:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 193)

	$default	reduce using rule 193 (STAR-58)

State 282:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 283:

	PAREN-62 -> OP21_LIST_COMMA . HashEntry	(Rule 213)

	'%{'	shift, and go to state 92
	WORD	shift, and go to state 142

	HashEntry	go to state 323
	HashDereferenced	go to state 140

State 284:

	HashReference -> '{' HashEntry STAR-63 '}' .	(Rule 216)

	$default	reduce using rule 216 (HashReference)

State 285:

	STAR-63 -> STAR-63 PAREN-62 .	(Rule 214)

	$default	reduce using rule 214 (STAR-63)

State 286:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-61 . Expression	(Rule 209)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 89
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Literal	go to state 88
	Variable	go to state 134
	Operator	go to state 106
	ArrayReference	go to state 118
	Expression	go to state 324
	HashDereferenced	go to state 86

State 287:

	OPTIONAL-61 -> TypeInner .	(Rule 207)

	$default	reduce using rule 207 (OPTIONAL-61)

State 288:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-48 ')'	(Rule 154)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 143 (OPTIONAL-48)

	HashReference	go to state 89
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	Variable	go to state 134
	Operator	go to state 106
	ListElements	go to state 325
	OPTIONAL-48	go to state 326
	ArrayReference	go to state 118
	ListElement	go to state 136
	TypeInner	go to state 131
	HashDereferenced	go to state 86
	Expression	go to state 132

State 289:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 190)

	$default	reduce using rule 190 (VariableModification)

State 290:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 191)

	$default	reduce using rule 191 (VariableModification)

State 291:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-52 OPTIONAL-54	(Rule 172)

	$default	reduce using rule 168 (STAR-52)

	STAR-52	go to state 327

State 292:

	CodeBlock -> '{' . PLUS-55 '}'	(Rule 181)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'if ('	shift, and go to state 93
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 111
	OP01_NAMED_VOID_PAREN	shift, and go to state 77
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP19_LOOP_CONTROL	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 90
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 160 (OPTIONAL-50)
	'foreach my'	reduce using rule 160 (OPTIONAL-50)
	'while ('	reduce using rule 160 (OPTIONAL-50)

	PAREN-49	go to state 96
	PLUS-55	go to state 328
	ArrayReference	go to state 118
	VariableModification	go to state 98
	Conditional	go to state 122
	OPTIONAL-50	go to state 121
	Expression	go to state 97
	HashReference	go to state 89
	VariableDeclaration	go to state 113
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	Statement	go to state 117
	LoopLabel	go to state 83
	HashDereferenced	go to state 86
	OperatorVoid	go to state 84
	Operator	go to state 106
	Variable	go to state 81
	Operation	go to state 329

State 293:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-41 ')' . ';'	(Rule 102)

	';'	shift, and go to state 330

State 294:

	FileHandle -> '{*' WORD '}' .	(Rule 221)

	$default	reduce using rule 221 (FileHandle)

State 295:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 222)

	$default	reduce using rule 222 (FileHandle)

State 296:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 123)

	VARIABLE_SYMBOL	shift, and go to state 105

	Variable	go to state 331

State 297:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 109)

	'/'	shift, and go to state 332

State 298:

	Operator -> OP01_NAMED '(' OPTIONAL-40 ')' .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 299:

	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-46 ';' .	(Rule 138)

	$default	reduce using rule 138 (OperatorVoid)

State 300:

	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-42 ';' .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 301:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 185)

	']'	shift, and go to state 333
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 302:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 186)

	'}'	shift, and go to state 334
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 303:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 187)
	WordScoped -> WORD .	(Rule 219)

	'}'	shift, and go to state 335

	'('	reduce using rule 219 (WordScoped)

State 304:

	Expression -> WordScoped '(' OPTIONAL-47 ')' .	(Rule 153)

	$default	reduce using rule 153 (Expression)

State 305:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 188)

	$default	reduce using rule 188 (VariableDeclaration)

State 306:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 189)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'<STDIN>'	shift, and go to state 220
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	HashReference	go to state 89
	ExpressionOrStdin	go to state 336
	Variable	go to state 134
	Operator	go to state 106
	ArrayReference	go to state 118
	Expression	go to state 221
	HashDereferenced	go to state 86

State 307:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-44 ')' . ';'	(Rule 136)

	';'	shift, and go to state 337

State 308:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 177)

	'('	shift, and go to state 338

State 309:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 176)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 118
	Expression	go to state 339
	HashDereferenced	go to state 86
	Literal	go to state 88
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	HashReference	go to state 89
	Variable	go to state 134
	Operator	go to state 106

State 310:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 178)

	'{'	shift, and go to state 292

	CodeBlock	go to state 340

State 311:

	STAR-27 -> STAR-27 . Method	(Rule 65)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 . '1;' '1;' OPTIONAL-30	(Rule 72)

	'1;'	shift, and go to state 342
	'our'	shift, and go to state 343

	Method	go to state 341

State 312:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-34 ')' ';'	(Rule 81)

	'%{'	shift, and go to state 92
	WORD	shift, and go to state 313

	HashEntryTyped	go to state 344
	HashDereferenced	go to state 315

State 313:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 211)

	OP20_HASH_FATARROW	shift, and go to state 345

State 314:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-32 ')' ';'	(Rule 76)

	$default	reduce using rule 75 (STAR-32)

	STAR-32	go to state 346

State 315:

	HashEntryTyped -> HashDereferenced .	(Rule 212)

	$default	reduce using rule 212 (HashEntryTyped)

State 316:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 77)

	'## no critic qw('	shift, and go to state 9

	Critic	go to state 347

State 317:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 223)

	$default	reduce using rule 223 (TypeInner)

State 318:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 319:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	')'	shift, and go to state 348
	OP21_LIST_COMMA	shift, and go to state 350

	PAREN-18	go to state 349

State 320:

	ListElements -> OP01_QW '(' PLUS-59 ')' .	(Rule 198)

	$default	reduce using rule 198 (ListElements)

State 321:

	PLUS-59 -> PLUS-59 WORD .	(Rule 195)

	$default	reduce using rule 195 (PLUS-59)

State 322:

	PAREN-57 -> OP21_LIST_COMMA ListElement .	(Rule 192)

	$default	reduce using rule 192 (PAREN-57)

State 323:

	PAREN-62 -> OP21_LIST_COMMA HashEntry .	(Rule 213)

	$default	reduce using rule 213 (PAREN-62)

State 324:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-61 Expression .	(Rule 209)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

	'}'	reduce using rule 209 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 209 (HashEntry)

State 325:

	OPTIONAL-48 -> ListElements .	(Rule 142)

	$default	reduce using rule 142 (OPTIONAL-48)

State 326:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 . ')'	(Rule 154)

	')'	shift, and go to state 351

State 327:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 167)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 . OPTIONAL-54	(Rule 172)

	'else'	shift, and go to state 352
	'elsif ('	shift, and go to state 354

	$end	reduce using rule 171 (OPTIONAL-54)
	'%{'	reduce using rule 171 (OPTIONAL-54)
	'('	reduce using rule 171 (OPTIONAL-54)
	'@{'	reduce using rule 171 (OPTIONAL-54)
	'['	reduce using rule 171 (OPTIONAL-54)
	'for my integer'	reduce using rule 171 (OPTIONAL-54)
	'foreach my'	reduce using rule 171 (OPTIONAL-54)
	'if ('	reduce using rule 171 (OPTIONAL-54)
	'my'	reduce using rule 171 (OPTIONAL-54)
	'undef'	reduce using rule 171 (OPTIONAL-54)
	'while ('	reduce using rule 171 (OPTIONAL-54)
	'{'	reduce using rule 171 (OPTIONAL-54)
	'}'	reduce using rule 171 (OPTIONAL-54)
	LITERAL_NUMBER	reduce using rule 171 (OPTIONAL-54)
	LITERAL_STRING	reduce using rule 171 (OPTIONAL-54)
	OP01_NAMED	reduce using rule 171 (OPTIONAL-54)
	OP01_NAMED_VOID	reduce using rule 171 (OPTIONAL-54)
	OP01_NAMED_VOID_PAREN	reduce using rule 171 (OPTIONAL-54)
	OP01_OPEN_CLOSE	reduce using rule 171 (OPTIONAL-54)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 171 (OPTIONAL-54)
	OP01_PRINT_VOID	reduce using rule 171 (OPTIONAL-54)
	OP01_PRINT_VOID_PAREN	reduce using rule 171 (OPTIONAL-54)
	OP03_MATH_INC_DEC	reduce using rule 171 (OPTIONAL-54)
	OP05_LOGICAL_NEG	reduce using rule 171 (OPTIONAL-54)
	OP05_MATH_NEG	reduce using rule 171 (OPTIONAL-54)
	OP10_NAMED_UNARY	reduce using rule 171 (OPTIONAL-54)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 171 (OPTIONAL-54)
	OP19_LOOP_CONTROL	reduce using rule 171 (OPTIONAL-54)
	OP22_LOGICAL_NOT	reduce using rule 171 (OPTIONAL-54)
	VARIABLE_SYMBOL	reduce using rule 171 (OPTIONAL-54)
	WORD	reduce using rule 171 (OPTIONAL-54)
	WORD_SCOPED	reduce using rule 171 (OPTIONAL-54)

	PAREN-51	go to state 353
	OPTIONAL-54	go to state 355
	PAREN-53	go to state 356

State 328:

	PLUS-55 -> PLUS-55 . Operation	(Rule 179)
	CodeBlock -> '{' PLUS-55 . '}'	(Rule 181)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'if ('	shift, and go to state 93
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	'}'	shift, and go to state 357
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 111
	OP01_NAMED_VOID_PAREN	shift, and go to state 77
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP19_LOOP_CONTROL	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 90
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 160 (OPTIONAL-50)
	'foreach my'	reduce using rule 160 (OPTIONAL-50)
	'while ('	reduce using rule 160 (OPTIONAL-50)

	Statement	go to state 117
	VariableDeclaration	go to state 113
	HashReference	go to state 89
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	Conditional	go to state 122
	OPTIONAL-50	go to state 121
	VariableModification	go to state 98
	Expression	go to state 97
	PAREN-49	go to state 96
	ArrayReference	go to state 118
	Operator	go to state 106
	Variable	go to state 81
	Operation	go to state 358
	OperatorVoid	go to state 84
	HashDereferenced	go to state 86
	LoopLabel	go to state 83

State 329:

	PLUS-55 -> Operation .	(Rule 180)

	$default	reduce using rule 180 (PLUS-55)

State 330:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-41 ')' ';' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 331:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 123)

	$default	reduce using rule 123 (Operator)

State 332:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 109)

	$default	reduce using rule 109 (Operator)

State 333:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 185)

	$default	reduce using rule 185 (VariableRetrieval)

State 334:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 186)

	$default	reduce using rule 186 (VariableRetrieval)

State 335:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 187)

	$default	reduce using rule 187 (VariableRetrieval)

State 336:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 189)

	';'	shift, and go to state 359

State 337:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-44 ')' ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 338:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 177)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 135
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_QW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	HashReference	go to state 89
	Operator	go to state 106
	Variable	go to state 134
	ListElements	go to state 360
	ArrayReference	go to state 118
	ListElement	go to state 136
	HashDereferenced	go to state 86
	TypeInner	go to state 131
	Expression	go to state 132

State 339:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 176)

	'..'	shift, and go to state 361
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 340:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 178)

	$default	reduce using rule 178 (LoopWhile)

State 341:

	STAR-27 -> STAR-27 Method .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 342:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' . '1;' OPTIONAL-30	(Rule 72)

	'1;'	shift, and go to state 362

State 343:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-35 PLUS-36 '}' ';'	(Rule 86)

	WORD	shift, and go to state 52

	Type	go to state 363

State 344:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-34 ')' ';'	(Rule 81)

	$default	reduce using rule 80 (STAR-34)

	STAR-34	go to state 364

State 345:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 211)

	'my'	shift, and go to state 73

	TypeInner	go to state 365

State 346:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 74)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-32 . ')' ';'	(Rule 76)

	')'	shift, and go to state 368
	OP21_LIST_COMMA	shift, and go to state 367

	PAREN-31	go to state 366

State 347:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 77)

	$default	reduce using rule 77 (Properties)

State 348:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	OP19_VARIABLE_ASSIGN	shift, and go to state 369

State 349:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 350:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 370

State 351:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')' .	(Rule 154)

	$default	reduce using rule 154 (Expression)

State 352:

	PAREN-53 -> 'else' . CodeBlock	(Rule 169)

	'{'	shift, and go to state 292

	CodeBlock	go to state 371

State 353:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 167)

	$default	reduce using rule 167 (STAR-52)

State 354:

	PAREN-51 -> 'elsif (' . Expression ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 89
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	Variable	go to state 134
	Operator	go to state 106
	ArrayReference	go to state 118
	HashDereferenced	go to state 86
	Expression	go to state 372

State 355:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54 .	(Rule 172)

	$default	reduce using rule 172 (Conditional)

State 356:

	OPTIONAL-54 -> PAREN-53 .	(Rule 170)

	$default	reduce using rule 170 (OPTIONAL-54)

State 357:

	CodeBlock -> '{' PLUS-55 '}' .	(Rule 181)

	$default	reduce using rule 181 (CodeBlock)

State 358:

	PLUS-55 -> PLUS-55 Operation .	(Rule 179)

	$default	reduce using rule 179 (PLUS-55)

State 359:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 189)

	$default	reduce using rule 189 (VariableDeclaration)

State 360:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 177)

	')'	shift, and go to state 373

State 361:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 176)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 134
	Operator	go to state 106
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	HashReference	go to state 89
	HashDereferenced	go to state 86
	Expression	go to state 374
	ArrayReference	go to state 118

State 362:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' . OPTIONAL-30	(Rule 72)

	'our'	shift, and go to state 43

	$end	reduce using rule 71 (OPTIONAL-30)
	'## no critic qw('	reduce using rule 71 (OPTIONAL-30)
	'package'	reduce using rule 71 (OPTIONAL-30)

	Subroutine	go to state 375
	PAREN-29	go to state 376
	OPTIONAL-30	go to state 377
	PLUS-28	go to state 378

State 363:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-35 PLUS-36 '}' ';'	(Rule 86)

	VARIABLE_SYMBOL	shift, and go to state 379

State 364:

	STAR-34 -> STAR-34 . PAREN-33	(Rule 79)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-34 . ')' ';'	(Rule 81)

	')'	shift, and go to state 380
	OP21_LIST_COMMA	shift, and go to state 381

	PAREN-33	go to state 382

State 365:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 211)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 383
	HashDereferenced	go to state 86
	ArrayReference	go to state 118
	Variable	go to state 134
	Operator	go to state 106
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	HashReference	go to state 89

State 366:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 74)

	$default	reduce using rule 74 (STAR-32)

State 367:

	PAREN-31 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 73)

	'%{'	shift, and go to state 92
	WORD	shift, and go to state 313

	HashDereferenced	go to state 315
	HashEntryTyped	go to state 384

State 368:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-32 ')' . ';'	(Rule 76)

	';'	shift, and go to state 385

State 369:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-20	(Rule 52)

	'@_;'	shift, and go to state 386

State 370:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 52

	Type	go to state 387

State 371:

	PAREN-53 -> 'else' CodeBlock .	(Rule 169)

	$default	reduce using rule 169 (PAREN-53)

State 372:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	PAREN-51 -> 'elsif (' Expression . ')' CodeBlock	(Rule 166)

	')'	shift, and go to state 388
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 373:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 177)

	'{'	shift, and go to state 292

	CodeBlock	go to state 389

State 374:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 176)

	')'	shift, and go to state 390
	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 375:

	PLUS-28 -> Subroutine .	(Rule 68)

	$default	reduce using rule 68 (PLUS-28)

State 376:

	OPTIONAL-30 -> PAREN-29 .	(Rule 70)

	$default	reduce using rule 70 (OPTIONAL-30)

State 377:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 '1;' '1;' OPTIONAL-30 .	(Rule 72)

	$default	reduce using rule 72 (Class)

State 378:

	PLUS-28 -> PLUS-28 . Subroutine	(Rule 67)
	PAREN-29 -> PLUS-28 . '1;' '1;'	(Rule 69)

	'1;'	shift, and go to state 391
	'our'	shift, and go to state 43

	Subroutine	go to state 392

State 379:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-35 PLUS-36 '}' ';'	(Rule 86)

	'= sub {'	shift, and go to state 393

State 380:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-34 ')' . ';'	(Rule 81)

	';'	shift, and go to state 394

State 381:

	PAREN-33 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 78)

	'%{'	shift, and go to state 92
	WORD	shift, and go to state 313

	HashDereferenced	go to state 315
	HashEntryTyped	go to state 395

State 382:

	STAR-34 -> STAR-34 PAREN-33 .	(Rule 79)

	$default	reduce using rule 79 (STAR-34)

State 383:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 211)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

	')'	reduce using rule 211 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 211 (HashEntryTyped)

State 384:

	PAREN-31 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 73)

	$default	reduce using rule 73 (PAREN-31)

State 385:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-32 ')' ';' .	(Rule 76)

	$default	reduce using rule 76 (Properties)

State 386:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-20	(Rule 52)

	$default	reduce using rule 51 (STAR-20)

	STAR-20	go to state 396

State 387:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 397

State 388:

	PAREN-51 -> 'elsif (' Expression ')' . CodeBlock	(Rule 166)

	'{'	shift, and go to state 292

	CodeBlock	go to state 398

State 389:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 177)

	$default	reduce using rule 177 (LoopForEach)

State 390:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 176)

	'{'	shift, and go to state 292

	CodeBlock	go to state 399

State 391:

	PAREN-29 -> PLUS-28 '1;' . '1;'	(Rule 69)

	'1;'	shift, and go to state 400

State 392:

	PLUS-28 -> PLUS-28 Subroutine .	(Rule 67)

	$default	reduce using rule 67 (PLUS-28)

State 393:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-35 PLUS-36 '}' ';'	(Rule 86)

	'( my'	shift, and go to state 403

	'%{'	reduce using rule 83 (OPTIONAL-35)
	'('	reduce using rule 83 (OPTIONAL-35)
	'@{'	reduce using rule 83 (OPTIONAL-35)
	'['	reduce using rule 83 (OPTIONAL-35)
	'for my integer'	reduce using rule 83 (OPTIONAL-35)
	'foreach my'	reduce using rule 83 (OPTIONAL-35)
	'if ('	reduce using rule 83 (OPTIONAL-35)
	'my'	reduce using rule 83 (OPTIONAL-35)
	'undef'	reduce using rule 83 (OPTIONAL-35)
	'while ('	reduce using rule 83 (OPTIONAL-35)
	'{'	reduce using rule 83 (OPTIONAL-35)
	LITERAL_NUMBER	reduce using rule 83 (OPTIONAL-35)
	LITERAL_STRING	reduce using rule 83 (OPTIONAL-35)
	OP01_NAMED	reduce using rule 83 (OPTIONAL-35)
	OP01_NAMED_VOID	reduce using rule 83 (OPTIONAL-35)
	OP01_NAMED_VOID_PAREN	reduce using rule 83 (OPTIONAL-35)
	OP01_OPEN_CLOSE	reduce using rule 83 (OPTIONAL-35)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 83 (OPTIONAL-35)
	OP01_PRINT_VOID	reduce using rule 83 (OPTIONAL-35)
	OP01_PRINT_VOID_PAREN	reduce using rule 83 (OPTIONAL-35)
	OP03_MATH_INC_DEC	reduce using rule 83 (OPTIONAL-35)
	OP05_LOGICAL_NEG	reduce using rule 83 (OPTIONAL-35)
	OP05_MATH_NEG	reduce using rule 83 (OPTIONAL-35)
	OP10_NAMED_UNARY	reduce using rule 83 (OPTIONAL-35)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 83 (OPTIONAL-35)
	OP19_LOOP_CONTROL	reduce using rule 83 (OPTIONAL-35)
	OP22_LOGICAL_NOT	reduce using rule 83 (OPTIONAL-35)
	VARIABLE_SYMBOL	reduce using rule 83 (OPTIONAL-35)
	WORD	reduce using rule 83 (OPTIONAL-35)
	WORD_SCOPED	reduce using rule 83 (OPTIONAL-35)

	MethodArguments	go to state 402
	OPTIONAL-35	go to state 401

State 394:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-34 ')' ';' .	(Rule 81)

	$default	reduce using rule 81 (PropertiesClass)

State 395:

	PAREN-33 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 78)

	$default	reduce using rule 78 (PAREN-33)

State 396:

	STAR-20 -> STAR-20 . ArgumentCheck	(Rule 50)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20 .	(Rule 52)

	CHECK_OR_CHECKTRACE	shift, and go to state 404

	'%{'	reduce using rule 52 (SubroutineArguments)
	'('	reduce using rule 52 (SubroutineArguments)
	'@{'	reduce using rule 52 (SubroutineArguments)
	'['	reduce using rule 52 (SubroutineArguments)
	'for my integer'	reduce using rule 52 (SubroutineArguments)
	'foreach my'	reduce using rule 52 (SubroutineArguments)
	'if ('	reduce using rule 52 (SubroutineArguments)
	'my'	reduce using rule 52 (SubroutineArguments)
	'undef'	reduce using rule 52 (SubroutineArguments)
	'while ('	reduce using rule 52 (SubroutineArguments)
	'{'	reduce using rule 52 (SubroutineArguments)
	LITERAL_NUMBER	reduce using rule 52 (SubroutineArguments)
	LITERAL_STRING	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 52 (SubroutineArguments)
	OP01_OPEN_CLOSE	reduce using rule 52 (SubroutineArguments)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 52 (SubroutineArguments)
	OP01_PRINT_VOID	reduce using rule 52 (SubroutineArguments)
	OP01_PRINT_VOID_PAREN	reduce using rule 52 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 52 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 52 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 52 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 52 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 52 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 52 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 52 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 52 (SubroutineArguments)
	WORD	reduce using rule 52 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 52 (SubroutineArguments)

	ArgumentCheck	go to state 405

State 397:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 398:

	PAREN-51 -> 'elsif (' Expression ')' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (PAREN-51)

State 399:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 176)

	$default	reduce using rule 176 (LoopFor)

State 400:

	PAREN-29 -> PLUS-28 '1;' '1;' .	(Rule 69)

	$default	reduce using rule 69 (PAREN-29)

State 401:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-35 . PLUS-36 '}' ';'	(Rule 86)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'if ('	shift, and go to state 93
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 111
	OP01_NAMED_VOID_PAREN	shift, and go to state 77
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP19_LOOP_CONTROL	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 90
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 160 (OPTIONAL-50)
	'foreach my'	reduce using rule 160 (OPTIONAL-50)
	'while ('	reduce using rule 160 (OPTIONAL-50)

	Statement	go to state 117
	VariableDeclaration	go to state 113
	HashReference	go to state 89
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	OPTIONAL-50	go to state 121
	Conditional	go to state 122
	VariableModification	go to state 98
	Expression	go to state 97
	PAREN-49	go to state 96
	ArrayReference	go to state 118
	Variable	go to state 81
	Operator	go to state 106
	Operation	go to state 406
	HashDereferenced	go to state 86
	PLUS-36	go to state 407
	OperatorVoid	go to state 84
	LoopLabel	go to state 83

State 402:

	OPTIONAL-35 -> MethodArguments .	(Rule 82)

	$default	reduce using rule 82 (OPTIONAL-35)

State 403:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-38 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-39	(Rule 92)

	TYPE_CLASS_OR_SELF	shift, and go to state 408

State 404:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-22 ')' ';'	(Rule 56)

	'('	shift, and go to state 409

State 405:

	STAR-20 -> STAR-20 ArgumentCheck .	(Rule 50)

	$default	reduce using rule 50 (STAR-20)

State 406:

	PLUS-36 -> Operation .	(Rule 85)

	$default	reduce using rule 85 (PLUS-36)

State 407:

	PLUS-36 -> PLUS-36 . Operation	(Rule 84)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-35 PLUS-36 . '}' ';'	(Rule 86)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'if ('	shift, and go to state 93
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	'}'	shift, and go to state 411
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_NAMED_VOID	shift, and go to state 111
	OP01_NAMED_VOID_PAREN	shift, and go to state 77
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP19_LOOP_CONTROL	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 90
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 160 (OPTIONAL-50)
	'foreach my'	reduce using rule 160 (OPTIONAL-50)
	'while ('	reduce using rule 160 (OPTIONAL-50)

	HashReference	go to state 89
	VariableDeclaration	go to state 113
	WordScoped	go to state 110
	Literal	go to state 88
	ArrayDereferenced	go to state 87
	Statement	go to state 117
	PAREN-49	go to state 96
	ArrayReference	go to state 118
	VariableModification	go to state 98
	OPTIONAL-50	go to state 121
	Conditional	go to state 122
	Expression	go to state 97
	Variable	go to state 81
	Operator	go to state 106
	Operation	go to state 410
	LoopLabel	go to state 83
	HashDereferenced	go to state 86
	OperatorVoid	go to state 84

State 408:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-38 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-39	(Rule 92)

	$default	reduce using rule 89 (STAR-38)

	STAR-38	go to state 412

State 409:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-22 ')' ';'	(Rule 56)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 89
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	Operator	go to state 106
	Variable	go to state 134
	ArrayReference	go to state 118
	Expression	go to state 413
	HashDereferenced	go to state 86

State 410:

	PLUS-36 -> PLUS-36 Operation .	(Rule 84)

	$default	reduce using rule 84 (PLUS-36)

State 411:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-35 PLUS-36 '}' . ';'	(Rule 86)

	';'	shift, and go to state 414

State 412:

	STAR-38 -> STAR-38 . PAREN-37	(Rule 88)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-38 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-39	(Rule 92)

	')'	shift, and go to state 415
	OP21_LIST_COMMA	shift, and go to state 417

	PAREN-37	go to state 416

State 413:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-22 ')' ';'	(Rule 56)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP21_LIST_COMMA	shift, and go to state 419
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

	')'	reduce using rule 55 (OPTIONAL-22)

	OPTIONAL-22	go to state 418
	PAREN-21	go to state 420

State 414:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-35 PLUS-36 '}' ';' .	(Rule 86)

	$default	reduce using rule 86 (Method)

State 415:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-38 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-39	(Rule 92)

	OP19_VARIABLE_ASSIGN	shift, and go to state 421

State 416:

	STAR-38 -> STAR-38 PAREN-37 .	(Rule 88)

	$default	reduce using rule 88 (STAR-38)

State 417:

	PAREN-37 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 87)

	'my'	shift, and go to state 422

State 418:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 . ')' ';'	(Rule 56)

	')'	shift, and go to state 423

State 419:

	PAREN-21 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 53)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 86
	Expression	go to state 424
	ArrayReference	go to state 118
	Variable	go to state 134
	Operator	go to state 106
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	HashReference	go to state 89

State 420:

	OPTIONAL-22 -> PAREN-21 .	(Rule 54)

	$default	reduce using rule 54 (OPTIONAL-22)

State 421:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-38 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-39	(Rule 92)

	'@_;'	shift, and go to state 425

State 422:

	PAREN-37 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 87)

	WORD	shift, and go to state 52

	Type	go to state 426

State 423:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' . ';'	(Rule 56)

	';'	shift, and go to state 427

State 424:

	PAREN-21 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 53)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP21_LIST_COMMA	shift, and go to state 428
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

State 425:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-38 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-39	(Rule 92)

	$default	reduce using rule 91 (STAR-39)

	STAR-39	go to state 429

State 426:

	PAREN-37 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 87)

	VARIABLE_SYMBOL	shift, and go to state 430

State 427:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' ';' .	(Rule 56)

	$default	reduce using rule 56 (ArgumentCheck)

State 428:

	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 53)

	'%{'	shift, and go to state 92
	'('	shift, and go to state 114
	'@{'	shift, and go to state 99
	'['	shift, and go to state 107
	'undef'	shift, and go to state 109
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 100
	LITERAL_STRING	shift, and go to state 91
	OP01_NAMED	shift, and go to state 101
	OP01_OPEN_CLOSE	shift, and go to state 103
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 115
	OP05_MATH_NEG	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 94
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 119
	OP22_LOGICAL_NOT	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 134
	Operator	go to state 106
	ArrayDereferenced	go to state 87
	Literal	go to state 88
	WordScoped	go to state 110
	HashReference	go to state 89
	Expression	go to state 431
	HashDereferenced	go to state 86
	ArrayReference	go to state 118

State 429:

	STAR-39 -> STAR-39 . ArgumentCheck	(Rule 90)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-38 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-39 .	(Rule 92)

	CHECK_OR_CHECKTRACE	shift, and go to state 404

	'%{'	reduce using rule 92 (MethodArguments)
	'('	reduce using rule 92 (MethodArguments)
	'@{'	reduce using rule 92 (MethodArguments)
	'['	reduce using rule 92 (MethodArguments)
	'for my integer'	reduce using rule 92 (MethodArguments)
	'foreach my'	reduce using rule 92 (MethodArguments)
	'if ('	reduce using rule 92 (MethodArguments)
	'my'	reduce using rule 92 (MethodArguments)
	'undef'	reduce using rule 92 (MethodArguments)
	'while ('	reduce using rule 92 (MethodArguments)
	'{'	reduce using rule 92 (MethodArguments)
	LITERAL_NUMBER	reduce using rule 92 (MethodArguments)
	LITERAL_STRING	reduce using rule 92 (MethodArguments)
	OP01_NAMED	reduce using rule 92 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 92 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 92 (MethodArguments)
	OP01_OPEN_CLOSE	reduce using rule 92 (MethodArguments)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 92 (MethodArguments)
	OP01_PRINT_VOID	reduce using rule 92 (MethodArguments)
	OP01_PRINT_VOID_PAREN	reduce using rule 92 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 92 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 92 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 92 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 92 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 92 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 92 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 92 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 92 (MethodArguments)
	WORD	reduce using rule 92 (MethodArguments)
	WORD_SCOPED	reduce using rule 92 (MethodArguments)

	ArgumentCheck	go to state 432

State 430:

	PAREN-37 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 87)

	$default	reduce using rule 87 (PAREN-37)

State 431:

	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 53)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 109)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 110)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 111)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 112)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 116)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 117)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 118)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 119)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 120)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 121)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 122)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 125)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 126)

	OP04_MATH_POW	shift, and go to state 163
	OP06_REGEX_MATCH	shift, and go to state 173
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 175
	OP08_MATH_ADD_SUB	shift, and go to state 172
	OP08_STRING_CAT	shift, and go to state 160
	OP09_BITWISE_SHIFT	shift, and go to state 167
	OP11_COMPARE_LT_GT	shift, and go to state 166
	OP12_COMPARE_EQ_NEQ	shift, and go to state 169
	OP13_BITWISE_AND	shift, and go to state 164
	OP14_BITWISE_OR_XOR	shift, and go to state 171
	OP15_LOGICAL_AND	shift, and go to state 174
	OP16_LOGICAL_OR	shift, and go to state 165
	OP17_LIST_RANGE	shift, and go to state 162
	OP18_TERNARY	shift, and go to state 161
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 168

	')'	reduce using rule 53 (PAREN-21)

State 432:

	STAR-39 -> STAR-39 ArgumentCheck .	(Rule 90)

	$default	reduce using rule 90 (STAR-39)


Summary:
--------
Number of rules         : 228
Number of terminals     : 90
Number of non-terminals : 111
Number of states        : 433
