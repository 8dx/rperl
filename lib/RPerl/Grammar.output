Conflicts:
----------
Conflict in state 108 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 108 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 108 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 108 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 108 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 108 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 108 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 108 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 108 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 108 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 108 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 108 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 108 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 108 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 108 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 108 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 133 between rule 115 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 133 between rule 115 and token OP18_TERNARY resolved as shift.
Conflict in state 133 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 133 between rule 115 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 133 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 133 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 133 between rule 115 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 133 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 133 between rule 115 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 133 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 133 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 133 between rule 115 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 133 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 133 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 133 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 133 between rule 115 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 135 between rule 99 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 135 between rule 99 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 135 between rule 99 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 135 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 135 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 135 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 135 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 135 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 135 between rule 99 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 135 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 135 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 135 between rule 99 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 135 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 135 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 135 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 135 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 159 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 159 between rule 102 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 159 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 159 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 159 between rule 102 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 159 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 159 between rule 102 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 159 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 159 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 159 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 159 between rule 102 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 159 between rule 102 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 159 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 159 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 159 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 159 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 160 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 160 between rule 117 and token OP18_TERNARY resolved as shift.
Conflict in state 160 between rule 117 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 160 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 160 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 160 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 160 between rule 117 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 160 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 160 between rule 117 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 160 between rule 117 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 160 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 160 between rule 117 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 160 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 160 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 160 between rule 117 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 160 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 162 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 162 between rule 113 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 162 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 162 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 162 between rule 113 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 162 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 162 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 162 between rule 113 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 162 between rule 113 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 162 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 162 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 162 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 162 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 162 between rule 113 and token OP17_LIST_RANGE resolved as error.
Conflict in state 162 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 162 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 163 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 163 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 163 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 163 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 163 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 163 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 163 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 163 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 163 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 163 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 163 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 163 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 163 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 163 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 163 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 163 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 164 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 164 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 164 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 164 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 164 between rule 116 and token OP18_TERNARY resolved as shift.
Conflict in state 164 between rule 116 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 164 between rule 116 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 164 between rule 116 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 164 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 164 between rule 116 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 164 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 164 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 164 between rule 116 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 164 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 164 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 164 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 165 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 165 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 165 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 165 between rule 104 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 165 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 165 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 165 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 165 between rule 104 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 165 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 165 between rule 104 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 165 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 165 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 165 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 165 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 165 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 165 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 166 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 166 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 166 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 166 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 166 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 166 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 166 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 166 between rule 108 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 166 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 166 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 166 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 166 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 166 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 166 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 166 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 166 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 167 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 167 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 167 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 167 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 167 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 167 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 167 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 167 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 167 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 167 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 167 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 167 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 167 between rule 107 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 167 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 167 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 167 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 168 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 168 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 168 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 168 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 168 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 168 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 168 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 168 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 168 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 168 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 168 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 168 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 168 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 168 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 168 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 168 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 169 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 169 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 169 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 169 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 169 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 169 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 169 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 169 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 169 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 169 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 169 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 169 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 169 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 169 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 169 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 169 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 170 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 170 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 170 between rule 103 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 170 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 170 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 170 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 170 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 170 between rule 103 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 170 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 170 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 170 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 170 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 170 between rule 103 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 170 between rule 103 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 170 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 170 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 171 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 171 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 171 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 171 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 171 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 171 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 171 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 171 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 171 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 171 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 171 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 171 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 171 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 171 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 171 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 171 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 172 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 172 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 172 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 172 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 172 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 172 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 172 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 172 between rule 98 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 172 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 172 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 172 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 172 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 172 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 172 between rule 98 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 172 between rule 98 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 172 between rule 98 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 173 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 173 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 173 between rule 112 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 173 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 173 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 173 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 173 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 173 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 173 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 173 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 173 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 173 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 173 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 173 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 173 between rule 112 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 173 between rule 112 and token OP13_BITWISE_AND resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Include
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Constant
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Subroutine
10:	STAR-4 -> /* empty */
11:	PLUS-5 -> PLUS-5 Operation
12:	PLUS-5 -> Operation
13:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5
14:	Module -> Package
15:	Module -> Class
16:	STAR-6 -> STAR-6 Include
17:	STAR-6 -> /* empty */
18:	STAR-7 -> STAR-7 Constant
19:	STAR-7 -> /* empty */
20:	PLUS-8 -> PLUS-8 Subroutine
21:	PLUS-8 -> Subroutine
22:	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;'
23:	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'
24:	PLUS-9 -> PLUS-9 WORD
25:	PLUS-9 -> WORD
26:	Include -> 'use' WordScoped ';'
27:	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';'
28:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
29:	OPTIONAL-10 -> TypeInner
30:	OPTIONAL-10 -> /* empty */
31:	OPTIONAL-11 -> TypeInner
32:	OPTIONAL-11 -> /* empty */
33:	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL
34:	STAR-13 -> STAR-13 PAREN-12
35:	STAR-13 -> /* empty */
36:	OPTIONAL-14 -> TypeInner
37:	OPTIONAL-14 -> /* empty */
38:	OPTIONAL-15 -> TypeInner
39:	OPTIONAL-15 -> /* empty */
40:	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL
41:	STAR-17 -> STAR-17 PAREN-16
42:	STAR-17 -> /* empty */
43:	ConstantValue -> LITERAL
44:	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']'
45:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'
46:	OPTIONAL-18 -> SubroutineArguments
47:	OPTIONAL-18 -> /* empty */
48:	PLUS-19 -> PLUS-19 Operation
49:	PLUS-19 -> Operation
50:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '};'
51:	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
52:	STAR-21 -> STAR-21 PAREN-20
53:	STAR-21 -> /* empty */
54:	STAR-22 -> STAR-22 ArgumentCheck
55:	STAR-22 -> /* empty */
56:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22
57:	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
58:	OPTIONAL-24 -> PAREN-23
59:	OPTIONAL-24 -> /* empty */
60:	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';'
61:	PLUS-25 -> PLUS-25 WordScoped
62:	PLUS-25 -> WordScoped
63:	STAR-26 -> STAR-26 Include
64:	STAR-26 -> /* empty */
65:	STAR-27 -> STAR-27 Constant
66:	STAR-27 -> /* empty */
67:	STAR-28 -> STAR-28 Method
68:	STAR-28 -> /* empty */
69:	PLUS-29 -> PLUS-29 Subroutine
70:	PLUS-29 -> Subroutine
71:	PAREN-30 -> PLUS-29 '1;'
72:	OPTIONAL-31 -> PAREN-30
73:	OPTIONAL-31 -> /* empty */
74:	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31
75:	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped
76:	STAR-33 -> STAR-33 PAREN-32
77:	STAR-33 -> /* empty */
78:	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';'
79:	Properties -> 'our %properties = (' ')' ';'
80:	OPTIONAL-34 -> MethodArguments
81:	OPTIONAL-34 -> /* empty */
82:	PLUS-35 -> PLUS-35 Operation
83:	PLUS-35 -> Operation
84:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '};'
85:	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
86:	STAR-37 -> STAR-37 PAREN-36
87:	STAR-37 -> /* empty */
88:	STAR-38 -> STAR-38 ArgumentCheck
89:	STAR-38 -> /* empty */
90:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38
91:	Operation -> Expression ';'
92:	Operation -> Statement
93:	OPTIONAL-39 -> ListElements
94:	OPTIONAL-39 -> /* empty */
95:	Operator -> OP01_NAMED '(' OPTIONAL-39 ')'
96:	Operator -> OP03_MATH_INC_DEC Variable
97:	Operator -> Variable OP03_MATH_INC_DEC
98:	Operator -> Expression OP04_MATH_POW Expression
99:	Operator -> OP05_LOGICAL_NEG Expression
100:	Operator -> OP05_MATH_NEG Expression ')'
101:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
102:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
103:	Operator -> Expression OP08_MATH_ADD_SUB Expression
104:	Operator -> Expression OP08_STRING_CAT Expression
105:	Operator -> Expression OP09_BITWISE_SHIFT Expression
106:	Operator -> OP10_NAMED_UNARY Expression
107:	Operator -> Expression OP11_COMPARE_LT_GT Expression
108:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
109:	Operator -> Expression OP13_BITWISE_AND Expression
110:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
111:	Operator -> Expression OP15_LOGICAL_AND Expression
112:	Operator -> Expression OP16_LOGICAL_OR Expression
113:	Operator -> Expression OP17_LIST_RANGE Expression
114:	Operator -> Expression OP18_TERNARY Variable ':' Variable
115:	Operator -> OP22_LOGICAL_NOT Expression
116:	Operator -> Expression OP23_LOGICAL_AND Expression
117:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
118:	OPTIONAL-40 -> ListElements
119:	OPTIONAL-40 -> /* empty */
120:	OPTIONAL-41 -> ListElements
121:	OPTIONAL-41 -> /* empty */
122:	OPTIONAL-42 -> ListElements
123:	OPTIONAL-42 -> /* empty */
124:	OPTIONAL-43 -> ListElements
125:	OPTIONAL-43 -> /* empty */
126:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';'
127:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';'
128:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';'
129:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';'
130:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
131:	OPTIONAL-44 -> ListElements
132:	OPTIONAL-44 -> /* empty */
133:	PAREN-45 -> OP21_LIST_COMMA HashEntry
134:	STAR-46 -> STAR-46 PAREN-45
135:	STAR-46 -> /* empty */
136:	OPTIONAL-47 -> ListElements
137:	OPTIONAL-47 -> /* empty */
138:	OPTIONAL-48 -> ListElements
139:	OPTIONAL-48 -> /* empty */
140:	Expression -> 'undef'
141:	Expression -> LITERAL
142:	Expression -> Variable
143:	Expression -> '[' OPTIONAL-44 ']'
144:	Expression -> '{' HashEntry STAR-46 '}'
145:	Expression -> '{' '}'
146:	Expression -> Operator
147:	Expression -> WordScoped '(' OPTIONAL-47 ')'
148:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'
149:	Expression -> '(' Expression ')'
150:	PAREN-49 -> LoopLabel ':'
151:	OPTIONAL-50 -> PAREN-49
152:	OPTIONAL-50 -> /* empty */
153:	Statement -> Conditional
154:	Statement -> OPTIONAL-50 Loop
155:	Statement -> OperatorVoid
156:	Statement -> VariableDeclaration
157:	Statement -> VariableModification
158:	PAREN-51 -> 'elsif (' Expression ')' CodeBlock
159:	STAR-52 -> STAR-52 PAREN-51
160:	STAR-52 -> /* empty */
161:	PAREN-53 -> 'else' CodeBlock
162:	OPTIONAL-54 -> PAREN-53
163:	OPTIONAL-54 -> /* empty */
164:	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54
165:	Loop -> LoopFor
166:	Loop -> LoopForEach
167:	Loop -> LoopWhile
168:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
169:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
170:	LoopWhile -> 'while (' Expression ')' CodeBlock
171:	PLUS-55 -> PLUS-55 Operation
172:	PLUS-55 -> Operation
173:	CodeBlock -> '{' PLUS-55 '}'
174:	STAR-56 -> STAR-56 VariableRetrieval
175:	STAR-56 -> /* empty */
176:	Variable -> VARIABLE_SYMBOL STAR-56
177:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
178:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
179:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
180:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
181:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'
182:	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';'
183:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
184:	PAREN-57 -> OP21_LIST_COMMA ListElement
185:	STAR-58 -> STAR-58 PAREN-57
186:	STAR-58 -> /* empty */
187:	ListElements -> ListElement STAR-58
188:	ListElement -> Expression
189:	ListElement -> TypeInner Expression
190:	ListElement -> '@{' Variable '}'
191:	ListElement -> KEYS_OR_VALUES '%{' Variable '}'
192:	OPTIONAL-59 -> TypeInner
193:	OPTIONAL-59 -> /* empty */
194:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-59 Expression
195:	HashEntry -> '%{' Variable '}'
196:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
197:	HashEntryTyped -> '%{' Variable '}'
198:	PAREN-60 -> '::' WORD
199:	STAR-61 -> STAR-61 PAREN-60
200:	STAR-61 -> /* empty */
201:	WordScoped -> WORD STAR-61
202:	FileHandle -> '{*' WORD '}'
203:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
204:	Type -> WORD
205:	LoopLabel -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 8
	SHEBANG	shift, and go to state 6

	Module	go to state 1
	PLUS-1	go to state 5
	Class	go to state 4
	Package	go to state 3
	Program	go to state 7
	CompileUnit	go to state 2

State 1:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 2:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 9

State 3:

	Module -> Package .	(Rule 14)

	$default	reduce using rule 14 (Module)

State 4:

	Module -> Class .	(Rule 15)

	$default	reduce using rule 15 (Module)

State 5:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 8

	$end	reduce using rule 4 (CompileUnit)

	Package	go to state 3
	Class	go to state 4
	Module	go to state 10

State 6:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use strict;'	shift, and go to state 12

	Header	go to state 11

State 7:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 8:

	Package -> 'package' . WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;'	(Rule 22)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	WORD	shift, and go to state 13

	WordScoped	go to state 14

State 9:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 10:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 11:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 15

State 12:

	Header -> 'use strict;' . 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	'use warnings;'	shift, and go to state 16

State 13:

	WordScoped -> WORD . STAR-61	(Rule 201)

	$default	reduce using rule 200 (STAR-61)

	STAR-61	go to state 17

State 14:

	Package -> 'package' WordScoped . ';' Header STAR-6 STAR-7 PLUS-8 '1;'	(Rule 22)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	';'	shift, and go to state 18

State 15:

	STAR-2 -> STAR-2 . Include	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use'	shift, and go to state 21

	'('	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)

	Include	go to state 20
	STAR-3	go to state 19

State 16:

	Header -> 'use strict;' 'use warnings;' . 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	'our $VERSION ='	shift, and go to state 22

State 17:

	STAR-61 -> STAR-61 . PAREN-60	(Rule 199)
	WordScoped -> WORD STAR-61 .	(Rule 201)

	'::'	shift, and go to state 24

	'('	reduce using rule 201 (WordScoped)
	')'	reduce using rule 201 (WordScoped)
	';'	reduce using rule 201 (WordScoped)
	'qw('	reduce using rule 201 (WordScoped)
	WORD	reduce using rule 201 (WordScoped)

	PAREN-60	go to state 23

State 18:

	Package -> 'package' WordScoped ';' . Header STAR-6 STAR-7 PLUS-8 '1;'	(Rule 22)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	'use strict;'	shift, and go to state 12

	Header	go to state 25

State 19:

	STAR-3 -> STAR-3 . Constant	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 PLUS-5	(Rule 13)

	'use constant'	shift, and go to state 27

	'('	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)

	Constant	go to state 28
	STAR-4	go to state 26

State 20:

	STAR-2 -> STAR-2 Include .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 21:

	Include -> 'use' . WordScoped ';'	(Rule 26)
	Include -> 'use' . WordScoped 'qw(' PLUS-9 ')' ';'	(Rule 27)

	WORD	shift, and go to state 13

	WordScoped	go to state 29

State 22:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' . VERSION_NUMBER ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	VERSION_NUMBER	shift, and go to state 30

State 23:

	STAR-61 -> STAR-61 PAREN-60 .	(Rule 199)

	$default	reduce using rule 199 (STAR-61)

State 24:

	PAREN-60 -> '::' . WORD	(Rule 198)

	WORD	shift, and go to state 31

State 25:

	Package -> 'package' WordScoped ';' Header . STAR-6 STAR-7 PLUS-8 '1;'	(Rule 22)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	'use parent qw('	shift, and go to state 33

	'our'	reduce using rule 17 (STAR-6)
	'use constant'	reduce using rule 17 (STAR-6)
	'use'	reduce using rule 17 (STAR-6)

	STAR-6	go to state 32

State 26:

	STAR-4 -> STAR-4 . Subroutine	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . PLUS-5	(Rule 13)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 44
	'our'	shift, and go to state 54
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP01_NAMED_VOID	shift, and go to state 48
	OP01_NAMED_VOID_PAREN	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP19_LOOP_CONTROL	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 56

	'for my integer'	reduce using rule 152 (OPTIONAL-50)
	'foreach my'	reduce using rule 152 (OPTIONAL-50)
	'while ('	reduce using rule 152 (OPTIONAL-50)

	PLUS-5	go to state 63
	Statement	go to state 52
	Subroutine	go to state 43
	OPTIONAL-50	go to state 42
	VariableModification	go to state 67
	Operator	go to state 38
	Variable	go to state 66
	Expression	go to state 37
	LoopLabel	go to state 65
	VariableDeclaration	go to state 57
	WordScoped	go to state 47
	PAREN-49	go to state 55
	Operation	go to state 46
	OperatorVoid	go to state 35
	Conditional	go to state 45

State 27:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 28)

	WORD	shift, and go to state 68

State 28:

	STAR-3 -> STAR-3 Constant .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 29:

	Include -> 'use' WordScoped . ';'	(Rule 26)
	Include -> 'use' WordScoped . 'qw(' PLUS-9 ')' ';'	(Rule 27)

	';'	shift, and go to state 69
	'qw('	shift, and go to state 70

State 30:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER . ';' 'use Carp;' 'use RPerl;'	(Rule 23)

	';'	shift, and go to state 71

State 31:

	PAREN-60 -> '::' WORD .	(Rule 198)

	$default	reduce using rule 198 (PAREN-60)

State 32:

	STAR-6 -> STAR-6 . Include	(Rule 16)
	Package -> 'package' WordScoped ';' Header STAR-6 . STAR-7 PLUS-8 '1;'	(Rule 22)

	'use'	shift, and go to state 21

	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)

	Include	go to state 72
	STAR-7	go to state 73

State 33:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	WORD	shift, and go to state 13

	WordScoped	go to state 75
	PLUS-25	go to state 74

State 34:

	Expression -> '{' . HashEntry STAR-46 '}'	(Rule 144)
	Expression -> '{' . '}'	(Rule 145)

	'%{'	shift, and go to state 77
	'}'	shift, and go to state 76
	WORD	shift, and go to state 78

	HashEntry	go to state 79

State 35:

	Statement -> OperatorVoid .	(Rule 155)

	$default	reduce using rule 155 (Statement)

State 36:

	Expression -> '[' . OPTIONAL-44 ']'	(Rule 143)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	']'	reduce using rule 132 (OPTIONAL-44)

	ListElements	go to state 82
	WordScoped	go to state 47
	OPTIONAL-44	go to state 87
	TypeInner	go to state 83
	ListElement	go to state 84
	Expression	go to state 85
	Variable	go to state 81
	Operator	go to state 38

State 37:

	Operation -> Expression . ';'	(Rule 91)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	';'	shift, and go to state 97
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 38:

	Expression -> Operator .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 39:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 96)

	VARIABLE_SYMBOL	shift, and go to state 51

	Variable	go to state 106

State 40:

	Expression -> '(' . Expression ')'	(Rule 149)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 107

State 41:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 106)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 108
	Operator	go to state 38
	Variable	go to state 81

State 42:

	Statement -> OPTIONAL-50 . Loop	(Rule 154)

	'for my integer'	shift, and go to state 110
	'foreach my'	shift, and go to state 111
	'while ('	shift, and go to state 114

	LoopForEach	go to state 115
	LoopWhile	go to state 113
	Loop	go to state 109
	LoopFor	go to state 112

State 43:

	STAR-4 -> STAR-4 Subroutine .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 44:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 180)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 181)

	WORD	shift, and go to state 116

	Type	go to state 117

State 45:

	Statement -> Conditional .	(Rule 153)

	$default	reduce using rule 153 (Statement)

State 46:

	PLUS-5 -> Operation .	(Rule 12)

	$default	reduce using rule 12 (PLUS-5)

State 47:

	Expression -> WordScoped . '(' OPTIONAL-47 ')'	(Rule 147)

	'('	shift, and go to state 118

State 48:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-42 ';'	(Rule 128)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-43 ';'	(Rule 129)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	'{*'	shift, and go to state 121
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	';'	reduce using rule 123 (OPTIONAL-42)

	TypeInner	go to state 83
	ListElement	go to state 84
	Expression	go to state 85
	Operator	go to state 38
	Variable	go to state 81
	OPTIONAL-42	go to state 120
	ListElements	go to state 119
	WordScoped	go to state 47
	FileHandle	go to state 122

State 49:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 100)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 123
	WordScoped	go to state 47

State 50:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 130)

	WORD	shift, and go to state 124

	LoopLabel	go to state 125

State 51:

	Variable -> VARIABLE_SYMBOL . STAR-56	(Rule 176)

	$default	reduce using rule 175 (STAR-56)

	STAR-56	go to state 126

State 52:

	Operation -> Statement .	(Rule 92)

	$default	reduce using rule 92 (Operation)

State 53:

	Operator -> OP01_NAMED . '(' OPTIONAL-39 ')'	(Rule 95)

	'('	shift, and go to state 127

State 54:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '};'	(Rule 50)

	WORD	shift, and go to state 116

	Type	go to state 128

State 55:

	OPTIONAL-50 -> PAREN-49 .	(Rule 151)

	$default	reduce using rule 151 (OPTIONAL-50)

State 56:

	WordScoped -> WORD . STAR-61	(Rule 201)
	LoopLabel -> WORD .	(Rule 205)

	'('	reduce using rule 200 (STAR-61)
	':'	reduce using rule 205 (LoopLabel)
	'::'	reduce using rule 200 (STAR-61)

	STAR-61	go to state 17

State 57:

	Statement -> VariableDeclaration .	(Rule 156)

	$default	reduce using rule 156 (Statement)

State 58:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-40 ')' ';'	(Rule 126)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-41 ')' ';'	(Rule 127)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	'{*'	shift, and go to state 121
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	')'	reduce using rule 119 (OPTIONAL-40)

	WordScoped	go to state 47
	ListElements	go to state 130
	FileHandle	go to state 131
	TypeInner	go to state 83
	ListElement	go to state 84
	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 85
	OPTIONAL-40	go to state 129

State 59:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 164)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 132
	WordScoped	go to state 47

State 60:

	Expression -> LITERAL .	(Rule 141)

	$default	reduce using rule 141 (Expression)

State 61:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 115)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Expression	go to state 133
	Variable	go to state 81
	Operator	go to state 38
	WordScoped	go to state 47

State 62:

	Expression -> 'undef' .	(Rule 140)

	$default	reduce using rule 140 (Expression)

State 63:

	PLUS-5 -> PLUS-5 . Operation	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5 .	(Rule 13)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 44
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP01_NAMED_VOID	shift, and go to state 48
	OP01_NAMED_VOID_PAREN	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP19_LOOP_CONTROL	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 56

	$end	reduce using rule 13 (Program)
	'for my integer'	reduce using rule 152 (OPTIONAL-50)
	'foreach my'	reduce using rule 152 (OPTIONAL-50)
	'while ('	reduce using rule 152 (OPTIONAL-50)

	VariableModification	go to state 67
	VariableDeclaration	go to state 57
	LoopLabel	go to state 65
	Expression	go to state 37
	Operator	go to state 38
	Variable	go to state 66
	Statement	go to state 52
	OPTIONAL-50	go to state 42
	OperatorVoid	go to state 35
	Conditional	go to state 45
	WordScoped	go to state 47
	Operation	go to state 134
	PAREN-49	go to state 55

State 64:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 99)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 135

State 65:

	PAREN-49 -> LoopLabel . ':'	(Rule 150)

	':'	shift, and go to state 136

State 66:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 97)
	Expression -> Variable .	(Rule 142)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 148)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 182)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 183)

	OP02_METHOD_THINARROW	shift, and go to state 137
	OP03_MATH_INC_DEC	shift, and go to state 140
	OP19_VARIABLE_ASSIGN	shift, and go to state 138
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 139

	';'	reduce using rule 142 (Expression)
	OP04_MATH_POW	reduce using rule 142 (Expression)
	OP06_REGEX_MATCH	reduce using rule 142 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 142 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 142 (Expression)
	OP08_STRING_CAT	reduce using rule 142 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 142 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 142 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 142 (Expression)
	OP13_BITWISE_AND	reduce using rule 142 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 142 (Expression)
	OP15_LOGICAL_AND	reduce using rule 142 (Expression)
	OP16_LOGICAL_OR	reduce using rule 142 (Expression)
	OP17_LIST_RANGE	reduce using rule 142 (Expression)
	OP18_TERNARY	reduce using rule 142 (Expression)
	OP23_LOGICAL_AND	reduce using rule 142 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 142 (Expression)

State 67:

	Statement -> VariableModification .	(Rule 157)

	$default	reduce using rule 157 (Statement)

State 68:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 28)

	OP20_HASH_FATARROW	shift, and go to state 141

State 69:

	Include -> 'use' WordScoped ';' .	(Rule 26)

	$default	reduce using rule 26 (Include)

State 70:

	Include -> 'use' WordScoped 'qw(' . PLUS-9 ')' ';'	(Rule 27)

	WORD	shift, and go to state 142

	PLUS-9	go to state 143

State 71:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' . 'use Carp;' 'use RPerl;'	(Rule 23)

	'use Carp;'	shift, and go to state 144

State 72:

	STAR-6 -> STAR-6 Include .	(Rule 16)

	$default	reduce using rule 16 (STAR-6)

State 73:

	STAR-7 -> STAR-7 . Constant	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 . PLUS-8 '1;'	(Rule 22)

	'our'	shift, and go to state 54
	'use constant'	shift, and go to state 27

	PLUS-8	go to state 145
	Subroutine	go to state 147
	Constant	go to state 146

State 74:

	PLUS-25 -> PLUS-25 . WordScoped	(Rule 61)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 . ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	')'	shift, and go to state 149
	WORD	shift, and go to state 13

	WordScoped	go to state 148

State 75:

	PLUS-25 -> WordScoped .	(Rule 62)

	$default	reduce using rule 62 (PLUS-25)

State 76:

	Expression -> '{' '}' .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 77:

	HashEntry -> '%{' . Variable '}'	(Rule 195)

	VARIABLE_SYMBOL	shift, and go to state 51

	Variable	go to state 150

State 78:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-59 Expression	(Rule 194)

	OP20_HASH_FATARROW	shift, and go to state 151

State 79:

	Expression -> '{' HashEntry . STAR-46 '}'	(Rule 144)

	$default	reduce using rule 135 (STAR-46)

	STAR-46	go to state 152

State 80:

	ListElement -> '@{' . Variable '}'	(Rule 190)

	VARIABLE_SYMBOL	shift, and go to state 51

	Variable	go to state 153

State 81:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 97)
	Expression -> Variable .	(Rule 142)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 148)

	OP02_METHOD_THINARROW	shift, and go to state 137
	OP03_MATH_INC_DEC	shift, and go to state 140

	')'	reduce using rule 142 (Expression)
	'..'	reduce using rule 142 (Expression)
	';'	reduce using rule 142 (Expression)
	']'	reduce using rule 142 (Expression)
	'}'	reduce using rule 142 (Expression)
	OP04_MATH_POW	reduce using rule 142 (Expression)
	OP06_REGEX_MATCH	reduce using rule 142 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 142 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 142 (Expression)
	OP08_STRING_CAT	reduce using rule 142 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 142 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 142 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 142 (Expression)
	OP13_BITWISE_AND	reduce using rule 142 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 142 (Expression)
	OP15_LOGICAL_AND	reduce using rule 142 (Expression)
	OP16_LOGICAL_OR	reduce using rule 142 (Expression)
	OP17_LIST_RANGE	reduce using rule 142 (Expression)
	OP18_TERNARY	reduce using rule 142 (Expression)
	OP21_LIST_COMMA	reduce using rule 142 (Expression)
	OP23_LOGICAL_AND	reduce using rule 142 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 142 (Expression)

State 82:

	OPTIONAL-44 -> ListElements .	(Rule 131)

	$default	reduce using rule 131 (OPTIONAL-44)

State 83:

	ListElement -> TypeInner . Expression	(Rule 189)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 154
	WordScoped	go to state 47

State 84:

	ListElements -> ListElement . STAR-58	(Rule 187)

	$default	reduce using rule 186 (STAR-58)

	STAR-58	go to state 155

State 85:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	ListElement -> Expression .	(Rule 188)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

	')'	reduce using rule 188 (ListElement)
	';'	reduce using rule 188 (ListElement)
	']'	reduce using rule 188 (ListElement)
	OP21_LIST_COMMA	reduce using rule 188 (ListElement)

State 86:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 203)

	WORD	shift, and go to state 116

	Type	go to state 156

State 87:

	Expression -> '[' OPTIONAL-44 . ']'	(Rule 143)

	']'	shift, and go to state 157

State 88:

	ListElement -> KEYS_OR_VALUES . '%{' Variable '}'	(Rule 191)

	'%{'	shift, and go to state 158

State 89:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 102)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 159
	WordScoped	go to state 47

State 90:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 117)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 160
	Variable	go to state 81
	Operator	go to state 38

State 91:

	Operator -> Expression OP18_TERNARY . Variable ':' Variable	(Rule 114)

	VARIABLE_SYMBOL	shift, and go to state 51

	Variable	go to state 161

State 92:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 113)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 162
	Operator	go to state 38
	Variable	go to state 81

State 93:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 111)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Expression	go to state 163
	Operator	go to state 38
	Variable	go to state 81
	WordScoped	go to state 47

State 94:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 116)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 164

State 95:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 104)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 165
	Variable	go to state 81
	Operator	go to state 38

State 96:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 108)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Expression	go to state 166
	Variable	go to state 81
	Operator	go to state 38
	WordScoped	go to state 47

State 97:

	Operation -> Expression ';' .	(Rule 91)

	$default	reduce using rule 91 (Operation)

State 98:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 107)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 167

State 99:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 105)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 168
	Operator	go to state 38
	Variable	go to state 81

State 100:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 109)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Expression	go to state 169
	Variable	go to state 81
	Operator	go to state 38
	WordScoped	go to state 47

State 101:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 103)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 170
	WordScoped	go to state 47

State 102:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 110)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 171
	WordScoped	go to state 47

State 103:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 98)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 172
	WordScoped	go to state 47

State 104:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 112)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 173
	WordScoped	go to state 47

State 105:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 101)

	'/'	shift, and go to state 174

State 106:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 96)

	$default	reduce using rule 96 (Operator)

State 107:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	Expression -> '(' Expression . ')'	(Rule 149)

	')'	shift, and go to state 175
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 108:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 106)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 109:

	Statement -> OPTIONAL-50 Loop .	(Rule 154)

	$default	reduce using rule 154 (Statement)

State 110:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 168)

	VARIABLE_SYMBOL	shift, and go to state 176

State 111:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 169)

	WORD	shift, and go to state 116

	Type	go to state 177

State 112:

	Loop -> LoopFor .	(Rule 165)

	$default	reduce using rule 165 (Loop)

State 113:

	Loop -> LoopWhile .	(Rule 167)

	$default	reduce using rule 167 (Loop)

State 114:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 170)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 178
	Variable	go to state 81
	Operator	go to state 38

State 115:

	Loop -> LoopForEach .	(Rule 166)

	$default	reduce using rule 166 (Loop)

State 116:

	Type -> WORD .	(Rule 204)

	$default	reduce using rule 204 (Type)

State 117:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 180)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 181)

	VARIABLE_SYMBOL	shift, and go to state 179

State 118:

	Expression -> WordScoped '(' . OPTIONAL-47 ')'	(Rule 147)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	')'	reduce using rule 137 (OPTIONAL-47)

	TypeInner	go to state 83
	ListElement	go to state 84
	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 85
	ListElements	go to state 180
	WordScoped	go to state 47
	OPTIONAL-47	go to state 181

State 119:

	OPTIONAL-42 -> ListElements .	(Rule 122)

	$default	reduce using rule 122 (OPTIONAL-42)

State 120:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 . ';'	(Rule 128)

	';'	shift, and go to state 182

State 121:

	FileHandle -> '{*' . WORD '}'	(Rule 202)

	WORD	shift, and go to state 183

State 122:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-43 ';'	(Rule 129)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	';'	reduce using rule 125 (OPTIONAL-43)

	OPTIONAL-43	go to state 185
	WordScoped	go to state 47
	ListElements	go to state 184
	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 85
	TypeInner	go to state 83
	ListElement	go to state 84

State 123:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	')'	shift, and go to state 186
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 124:

	LoopLabel -> WORD .	(Rule 205)

	$default	reduce using rule 205 (LoopLabel)

State 125:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 130)

	';'	shift, and go to state 187

State 126:

	STAR-56 -> STAR-56 . VariableRetrieval	(Rule 174)
	Variable -> VARIABLE_SYMBOL STAR-56 .	(Rule 176)

	OP02_ARRAY_THINARROW	shift, and go to state 188
	OP02_HASH_THINARROW	shift, and go to state 189

	')'	reduce using rule 176 (Variable)
	'..'	reduce using rule 176 (Variable)
	':'	reduce using rule 176 (Variable)
	';'	reduce using rule 176 (Variable)
	']'	reduce using rule 176 (Variable)
	'}'	reduce using rule 176 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 176 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 176 (Variable)
	OP04_MATH_POW	reduce using rule 176 (Variable)
	OP06_REGEX_MATCH	reduce using rule 176 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 176 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 176 (Variable)
	OP08_STRING_CAT	reduce using rule 176 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 176 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 176 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 176 (Variable)
	OP13_BITWISE_AND	reduce using rule 176 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 176 (Variable)
	OP15_LOGICAL_AND	reduce using rule 176 (Variable)
	OP16_LOGICAL_OR	reduce using rule 176 (Variable)
	OP17_LIST_RANGE	reduce using rule 176 (Variable)
	OP18_TERNARY	reduce using rule 176 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 176 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 176 (Variable)
	OP21_LIST_COMMA	reduce using rule 176 (Variable)
	OP23_LOGICAL_AND	reduce using rule 176 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 176 (Variable)

	VariableRetrieval	go to state 190

State 127:

	Operator -> OP01_NAMED '(' . OPTIONAL-39 ')'	(Rule 95)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	')'	reduce using rule 94 (OPTIONAL-39)

	TypeInner	go to state 83
	ListElement	go to state 84
	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 85
	WordScoped	go to state 47
	ListElements	go to state 192
	OPTIONAL-39	go to state 191

State 128:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '};'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 193

State 129:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 . ')' ';'	(Rule 126)

	')'	shift, and go to state 194

State 130:

	OPTIONAL-40 -> ListElements .	(Rule 118)

	$default	reduce using rule 118 (OPTIONAL-40)

State 131:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-41 ')' ';'	(Rule 127)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	')'	reduce using rule 121 (OPTIONAL-41)

	Expression	go to state 85
	Operator	go to state 38
	Variable	go to state 81
	ListElement	go to state 84
	TypeInner	go to state 83
	ListElements	go to state 195
	WordScoped	go to state 47
	OPTIONAL-41	go to state 196

State 132:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 164)

	')'	shift, and go to state 197
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 133:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 115)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 134:

	PLUS-5 -> PLUS-5 Operation .	(Rule 11)

	$default	reduce using rule 11 (PLUS-5)

State 135:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 99)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103

	')'	reduce using rule 99 (Operator)
	'..'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP06_REGEX_MATCH	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 136:

	PAREN-49 -> LoopLabel ':' .	(Rule 150)

	$default	reduce using rule 150 (PAREN-49)

State 137:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-48 ')'	(Rule 148)

	WORD	shift, and go to state 198

State 138:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 182)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 199
	WordScoped	go to state 47

State 139:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 183)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Expression	go to state 200
	Operator	go to state 38
	Variable	go to state 81
	WordScoped	go to state 47

State 140:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 97)

	$default	reduce using rule 97 (Operator)

State 141:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 28)

	'my'	shift, and go to state 86

	TypeInner	go to state 201

State 142:

	PLUS-9 -> WORD .	(Rule 25)

	$default	reduce using rule 25 (PLUS-9)

State 143:

	PLUS-9 -> PLUS-9 . WORD	(Rule 24)
	Include -> 'use' WordScoped 'qw(' PLUS-9 . ')' ';'	(Rule 27)

	')'	shift, and go to state 202
	WORD	shift, and go to state 203

State 144:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' . 'use RPerl;'	(Rule 23)

	'use RPerl;'	shift, and go to state 204

State 145:

	PLUS-8 -> PLUS-8 . Subroutine	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 . '1;'	(Rule 22)

	'1;'	shift, and go to state 206
	'our'	shift, and go to state 54

	Subroutine	go to state 205

State 146:

	STAR-7 -> STAR-7 Constant .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 147:

	PLUS-8 -> Subroutine .	(Rule 21)

	$default	reduce using rule 21 (PLUS-8)

State 148:

	PLUS-25 -> PLUS-25 WordScoped .	(Rule 61)

	$default	reduce using rule 61 (PLUS-25)

State 149:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' . ';' STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	';'	shift, and go to state 207

State 150:

	HashEntry -> '%{' Variable . '}'	(Rule 195)

	'}'	shift, and go to state 208

State 151:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-59 Expression	(Rule 194)

	'my'	shift, and go to state 86

	'('	reduce using rule 193 (OPTIONAL-59)
	'['	reduce using rule 193 (OPTIONAL-59)
	'undef'	reduce using rule 193 (OPTIONAL-59)
	'{'	reduce using rule 193 (OPTIONAL-59)
	LITERAL	reduce using rule 193 (OPTIONAL-59)
	OP01_NAMED	reduce using rule 193 (OPTIONAL-59)
	OP03_MATH_INC_DEC	reduce using rule 193 (OPTIONAL-59)
	OP05_LOGICAL_NEG	reduce using rule 193 (OPTIONAL-59)
	OP05_MATH_NEG	reduce using rule 193 (OPTIONAL-59)
	OP10_NAMED_UNARY	reduce using rule 193 (OPTIONAL-59)
	OP22_LOGICAL_NOT	reduce using rule 193 (OPTIONAL-59)
	VARIABLE_SYMBOL	reduce using rule 193 (OPTIONAL-59)
	WORD	reduce using rule 193 (OPTIONAL-59)

	TypeInner	go to state 210
	OPTIONAL-59	go to state 209

State 152:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 134)
	Expression -> '{' HashEntry STAR-46 . '}'	(Rule 144)

	'}'	shift, and go to state 211
	OP21_LIST_COMMA	shift, and go to state 212

	PAREN-45	go to state 213

State 153:

	ListElement -> '@{' Variable . '}'	(Rule 190)

	'}'	shift, and go to state 214

State 154:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	ListElement -> TypeInner Expression .	(Rule 189)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

	')'	reduce using rule 189 (ListElement)
	';'	reduce using rule 189 (ListElement)
	']'	reduce using rule 189 (ListElement)
	OP21_LIST_COMMA	reduce using rule 189 (ListElement)

State 155:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 185)
	ListElements -> ListElement STAR-58 .	(Rule 187)

	OP21_LIST_COMMA	shift, and go to state 216

	')'	reduce using rule 187 (ListElements)
	';'	reduce using rule 187 (ListElements)
	']'	reduce using rule 187 (ListElements)

	PAREN-57	go to state 215

State 156:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 203)

	'$TYPED_'	shift, and go to state 217

State 157:

	Expression -> '[' OPTIONAL-44 ']' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 158:

	ListElement -> KEYS_OR_VALUES '%{' . Variable '}'	(Rule 191)

	VARIABLE_SYMBOL	shift, and go to state 51

	Variable	go to state 218

State 159:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105

	')'	reduce using rule 102 (Operator)
	'..'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 102 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 102 (Operator)
	OP08_STRING_CAT	reduce using rule 102 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 102 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 102 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 160:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 161:

	Operator -> Expression OP18_TERNARY Variable . ':' Variable	(Rule 114)

	':'	shift, and go to state 219

State 162:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 163:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 164:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 165:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP08_STRING_CAT	reduce using rule 104 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 104 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 104 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 166:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP13_BITWISE_AND	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 167:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 168:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 169:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 170:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 103 (Operator)
	OP08_STRING_CAT	reduce using rule 103 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 103 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 103 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 171:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 172:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103

	')'	reduce using rule 98 (Operator)
	'..'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP06_REGEX_MATCH	reduce using rule 98 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 98 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 98 (Operator)
	OP08_STRING_CAT	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 173:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 174:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 101)

	OP06_REGEX_PATTERN	shift, and go to state 220

State 175:

	Expression -> '(' Expression ')' .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 176:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 168)

	'('	shift, and go to state 221

State 177:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 169)

	VARIABLE_SYMBOL	shift, and go to state 222

State 178:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 170)

	')'	shift, and go to state 223
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 179:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 180)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 181)

	';'	shift, and go to state 225
	OP19_VARIABLE_ASSIGN	shift, and go to state 224

State 180:

	OPTIONAL-47 -> ListElements .	(Rule 136)

	$default	reduce using rule 136 (OPTIONAL-47)

State 181:

	Expression -> WordScoped '(' OPTIONAL-47 . ')'	(Rule 147)

	')'	shift, and go to state 226

State 182:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';' .	(Rule 128)

	$default	reduce using rule 128 (OperatorVoid)

State 183:

	FileHandle -> '{*' WORD . '}'	(Rule 202)

	'}'	shift, and go to state 227

State 184:

	OPTIONAL-43 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-43)

State 185:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 . ';'	(Rule 129)

	';'	shift, and go to state 228

State 186:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 100)

	$default	reduce using rule 100 (Operator)

State 187:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 130)

	$default	reduce using rule 130 (OperatorVoid)

State 188:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 177)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 229
	Operator	go to state 38
	Variable	go to state 81

State 189:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 178)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 179)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 231

	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 230
	WordScoped	go to state 47

State 190:

	STAR-56 -> STAR-56 VariableRetrieval .	(Rule 174)

	$default	reduce using rule 174 (STAR-56)

State 191:

	Operator -> OP01_NAMED '(' OPTIONAL-39 . ')'	(Rule 95)

	')'	shift, and go to state 232

State 192:

	OPTIONAL-39 -> ListElements .	(Rule 93)

	$default	reduce using rule 93 (OPTIONAL-39)

State 193:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-18 PLUS-19 '};'	(Rule 50)

	'= sub {'	shift, and go to state 233

State 194:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' . ';'	(Rule 126)

	';'	shift, and go to state 234

State 195:

	OPTIONAL-41 -> ListElements .	(Rule 120)

	$default	reduce using rule 120 (OPTIONAL-41)

State 196:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 . ')' ';'	(Rule 127)

	')'	shift, and go to state 235

State 197:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-52 OPTIONAL-54	(Rule 164)

	'{'	shift, and go to state 236

	CodeBlock	go to state 237

State 198:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-48 ')'	(Rule 148)

	'('	shift, and go to state 238

State 199:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 182)

	';'	shift, and go to state 239
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 200:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 183)

	';'	shift, and go to state 240
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 201:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 28)

	'['	shift, and go to state 242
	'{'	shift, and go to state 241
	LITERAL	shift, and go to state 243

	ConstantValue	go to state 244

State 202:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' . ';'	(Rule 27)

	';'	shift, and go to state 245

State 203:

	PLUS-9 -> PLUS-9 WORD .	(Rule 24)

	$default	reduce using rule 24 (PLUS-9)

State 204:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' .	(Rule 23)

	$default	reduce using rule 23 (Header)

State 205:

	PLUS-8 -> PLUS-8 Subroutine .	(Rule 20)

	$default	reduce using rule 20 (PLUS-8)

State 206:

	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;' .	(Rule 22)

	$default	reduce using rule 22 (Package)

State 207:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' . STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 246

State 208:

	HashEntry -> '%{' Variable '}' .	(Rule 195)

	$default	reduce using rule 195 (HashEntry)

State 209:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-59 . Expression	(Rule 194)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Expression	go to state 247
	Operator	go to state 38
	Variable	go to state 81
	WordScoped	go to state 47

State 210:

	OPTIONAL-59 -> TypeInner .	(Rule 192)

	$default	reduce using rule 192 (OPTIONAL-59)

State 211:

	Expression -> '{' HashEntry STAR-46 '}' .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 212:

	PAREN-45 -> OP21_LIST_COMMA . HashEntry	(Rule 133)

	'%{'	shift, and go to state 77
	WORD	shift, and go to state 78

	HashEntry	go to state 248

State 213:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 134)

	$default	reduce using rule 134 (STAR-46)

State 214:

	ListElement -> '@{' Variable '}' .	(Rule 190)

	$default	reduce using rule 190 (ListElement)

State 215:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 185)

	$default	reduce using rule 185 (STAR-58)

State 216:

	PAREN-57 -> OP21_LIST_COMMA . ListElement	(Rule 184)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 85
	Variable	go to state 81
	Operator	go to state 38
	TypeInner	go to state 83
	ListElement	go to state 249

State 217:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 203)

	WORD	shift, and go to state 250

State 218:

	ListElement -> KEYS_OR_VALUES '%{' Variable . '}'	(Rule 191)

	'}'	shift, and go to state 251

State 219:

	Operator -> Expression OP18_TERNARY Variable ':' . Variable	(Rule 114)

	VARIABLE_SYMBOL	shift, and go to state 51

	Variable	go to state 252

State 220:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 101)

	'/'	shift, and go to state 253

State 221:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 168)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Expression	go to state 254
	Operator	go to state 38
	Variable	go to state 81
	WordScoped	go to state 47

State 222:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 169)

	'('	shift, and go to state 255

State 223:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 170)

	'{'	shift, and go to state 236

	CodeBlock	go to state 256

State 224:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 181)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 257
	Variable	go to state 81
	Operator	go to state 38

State 225:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 180)

	$default	reduce using rule 180 (VariableDeclaration)

State 226:

	Expression -> WordScoped '(' OPTIONAL-47 ')' .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 227:

	FileHandle -> '{*' WORD '}' .	(Rule 202)

	$default	reduce using rule 202 (FileHandle)

State 228:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';' .	(Rule 129)

	$default	reduce using rule 129 (OperatorVoid)

State 229:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 177)

	']'	shift, and go to state 258
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 230:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 178)

	'}'	shift, and go to state 259
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 231:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 179)
	WordScoped -> WORD . STAR-61	(Rule 201)

	'}'	shift, and go to state 260

	'('	reduce using rule 200 (STAR-61)
	'::'	reduce using rule 200 (STAR-61)

	STAR-61	go to state 17

State 232:

	Operator -> OP01_NAMED '(' OPTIONAL-39 ')' .	(Rule 95)

	$default	reduce using rule 95 (Operator)

State 233:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-18 PLUS-19 '};'	(Rule 50)

	'( my'	shift, and go to state 262

	'('	reduce using rule 47 (OPTIONAL-18)
	'['	reduce using rule 47 (OPTIONAL-18)
	'for my integer'	reduce using rule 47 (OPTIONAL-18)
	'foreach my'	reduce using rule 47 (OPTIONAL-18)
	'if ('	reduce using rule 47 (OPTIONAL-18)
	'my'	reduce using rule 47 (OPTIONAL-18)
	'undef'	reduce using rule 47 (OPTIONAL-18)
	'while ('	reduce using rule 47 (OPTIONAL-18)
	'{'	reduce using rule 47 (OPTIONAL-18)
	LITERAL	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID	reduce using rule 47 (OPTIONAL-18)
	OP01_NAMED_VOID_PAREN	reduce using rule 47 (OPTIONAL-18)
	OP03_MATH_INC_DEC	reduce using rule 47 (OPTIONAL-18)
	OP05_LOGICAL_NEG	reduce using rule 47 (OPTIONAL-18)
	OP05_MATH_NEG	reduce using rule 47 (OPTIONAL-18)
	OP10_NAMED_UNARY	reduce using rule 47 (OPTIONAL-18)
	OP19_LOOP_CONTROL	reduce using rule 47 (OPTIONAL-18)
	OP22_LOGICAL_NOT	reduce using rule 47 (OPTIONAL-18)
	VARIABLE_SYMBOL	reduce using rule 47 (OPTIONAL-18)
	WORD	reduce using rule 47 (OPTIONAL-18)

	SubroutineArguments	go to state 261
	OPTIONAL-18	go to state 263

State 234:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';' .	(Rule 126)

	$default	reduce using rule 126 (OperatorVoid)

State 235:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' . ';'	(Rule 127)

	';'	shift, and go to state 264

State 236:

	CodeBlock -> '{' . PLUS-55 '}'	(Rule 173)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 44
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP01_NAMED_VOID	shift, and go to state 48
	OP01_NAMED_VOID_PAREN	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP19_LOOP_CONTROL	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 56

	'for my integer'	reduce using rule 152 (OPTIONAL-50)
	'foreach my'	reduce using rule 152 (OPTIONAL-50)
	'while ('	reduce using rule 152 (OPTIONAL-50)

	Statement	go to state 52
	OPTIONAL-50	go to state 42
	VariableModification	go to state 67
	PLUS-55	go to state 265
	LoopLabel	go to state 65
	VariableDeclaration	go to state 57
	Expression	go to state 37
	Operator	go to state 38
	Variable	go to state 66
	WordScoped	go to state 47
	PAREN-49	go to state 55
	Operation	go to state 266
	OperatorVoid	go to state 35
	Conditional	go to state 45

State 237:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-52 OPTIONAL-54	(Rule 164)

	$default	reduce using rule 160 (STAR-52)

	STAR-52	go to state 267

State 238:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-48 ')'	(Rule 148)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	')'	reduce using rule 139 (OPTIONAL-48)

	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 85
	OPTIONAL-48	go to state 269
	ListElement	go to state 84
	TypeInner	go to state 83
	WordScoped	go to state 47
	ListElements	go to state 268

State 239:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 182)

	$default	reduce using rule 182 (VariableModification)

State 240:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 183)

	$default	reduce using rule 183 (VariableModification)

State 241:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 45)

	WORD	shift, and go to state 270

State 242:

	ConstantValue -> '[' . OPTIONAL-10 LITERAL STAR-13 ']'	(Rule 44)

	'my'	shift, and go to state 86

	LITERAL	reduce using rule 30 (OPTIONAL-10)

	OPTIONAL-10	go to state 272
	TypeInner	go to state 271

State 243:

	ConstantValue -> LITERAL .	(Rule 43)

	$default	reduce using rule 43 (ConstantValue)

State 244:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 28)

	';'	shift, and go to state 273

State 245:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';' .	(Rule 27)

	$default	reduce using rule 27 (Include)

State 246:

	STAR-26 -> STAR-26 . Include	(Rule 63)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 . STAR-27 Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	'use'	shift, and go to state 21

	'our %properties = ('	reduce using rule 66 (STAR-27)
	'use constant'	reduce using rule 66 (STAR-27)

	Include	go to state 275
	STAR-27	go to state 274

State 247:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-59 Expression .	(Rule 194)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

	'}'	reduce using rule 194 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 194 (HashEntry)

State 248:

	PAREN-45 -> OP21_LIST_COMMA HashEntry .	(Rule 133)

	$default	reduce using rule 133 (PAREN-45)

State 249:

	PAREN-57 -> OP21_LIST_COMMA ListElement .	(Rule 184)

	$default	reduce using rule 184 (PAREN-57)

State 250:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 203)

	OP19_VARIABLE_ASSIGN	shift, and go to state 276

State 251:

	ListElement -> KEYS_OR_VALUES '%{' Variable '}' .	(Rule 191)

	$default	reduce using rule 191 (ListElement)

State 252:

	Operator -> Expression OP18_TERNARY Variable ':' Variable .	(Rule 114)

	$default	reduce using rule 114 (Operator)

State 253:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 254:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 168)

	'..'	shift, and go to state 277
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 255:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 169)

	'('	shift, and go to state 40
	'@{'	shift, and go to state 80
	'['	shift, and go to state 36
	'my'	shift, and go to state 86
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	KEYS_OR_VALUES	shift, and go to state 88
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	ListElements	go to state 278
	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 85
	ListElement	go to state 84
	TypeInner	go to state 83

State 256:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 170)

	$default	reduce using rule 170 (LoopWhile)

State 257:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 181)

	';'	shift, and go to state 279
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 258:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 177)

	$default	reduce using rule 177 (VariableRetrieval)

State 259:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 178)

	$default	reduce using rule 178 (VariableRetrieval)

State 260:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 179)

	$default	reduce using rule 179 (VariableRetrieval)

State 261:

	OPTIONAL-18 -> SubroutineArguments .	(Rule 46)

	$default	reduce using rule 46 (OPTIONAL-18)

State 262:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	WORD	shift, and go to state 116

	Type	go to state 280

State 263:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 . PLUS-19 '};'	(Rule 50)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 44
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP01_NAMED_VOID	shift, and go to state 48
	OP01_NAMED_VOID_PAREN	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP19_LOOP_CONTROL	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 56

	'for my integer'	reduce using rule 152 (OPTIONAL-50)
	'foreach my'	reduce using rule 152 (OPTIONAL-50)
	'while ('	reduce using rule 152 (OPTIONAL-50)

	Statement	go to state 52
	OPTIONAL-50	go to state 42
	VariableModification	go to state 67
	Operator	go to state 38
	Variable	go to state 66
	Expression	go to state 37
	VariableDeclaration	go to state 57
	LoopLabel	go to state 65
	WordScoped	go to state 47
	PLUS-19	go to state 281
	PAREN-49	go to state 55
	Operation	go to state 282
	OperatorVoid	go to state 35
	Conditional	go to state 45

State 264:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';' .	(Rule 127)

	$default	reduce using rule 127 (OperatorVoid)

State 265:

	PLUS-55 -> PLUS-55 . Operation	(Rule 171)
	CodeBlock -> '{' PLUS-55 . '}'	(Rule 173)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 44
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	'}'	shift, and go to state 283
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP01_NAMED_VOID	shift, and go to state 48
	OP01_NAMED_VOID_PAREN	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP19_LOOP_CONTROL	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 56

	'for my integer'	reduce using rule 152 (OPTIONAL-50)
	'foreach my'	reduce using rule 152 (OPTIONAL-50)
	'while ('	reduce using rule 152 (OPTIONAL-50)

	OPTIONAL-50	go to state 42
	Statement	go to state 52
	Operator	go to state 38
	Variable	go to state 66
	Expression	go to state 37
	LoopLabel	go to state 65
	VariableDeclaration	go to state 57
	VariableModification	go to state 67
	Operation	go to state 284
	PAREN-49	go to state 55
	WordScoped	go to state 47
	Conditional	go to state 45
	OperatorVoid	go to state 35

State 266:

	PLUS-55 -> Operation .	(Rule 172)

	$default	reduce using rule 172 (PLUS-55)

State 267:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 159)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 . OPTIONAL-54	(Rule 164)

	'else'	shift, and go to state 288
	'elsif ('	shift, and go to state 287

	$end	reduce using rule 163 (OPTIONAL-54)
	'('	reduce using rule 163 (OPTIONAL-54)
	'['	reduce using rule 163 (OPTIONAL-54)
	'for my integer'	reduce using rule 163 (OPTIONAL-54)
	'foreach my'	reduce using rule 163 (OPTIONAL-54)
	'if ('	reduce using rule 163 (OPTIONAL-54)
	'my'	reduce using rule 163 (OPTIONAL-54)
	'undef'	reduce using rule 163 (OPTIONAL-54)
	'while ('	reduce using rule 163 (OPTIONAL-54)
	'{'	reduce using rule 163 (OPTIONAL-54)
	'}'	reduce using rule 163 (OPTIONAL-54)
	'};'	reduce using rule 163 (OPTIONAL-54)
	LITERAL	reduce using rule 163 (OPTIONAL-54)
	OP01_NAMED	reduce using rule 163 (OPTIONAL-54)
	OP01_NAMED_VOID	reduce using rule 163 (OPTIONAL-54)
	OP01_NAMED_VOID_PAREN	reduce using rule 163 (OPTIONAL-54)
	OP03_MATH_INC_DEC	reduce using rule 163 (OPTIONAL-54)
	OP05_LOGICAL_NEG	reduce using rule 163 (OPTIONAL-54)
	OP05_MATH_NEG	reduce using rule 163 (OPTIONAL-54)
	OP10_NAMED_UNARY	reduce using rule 163 (OPTIONAL-54)
	OP19_LOOP_CONTROL	reduce using rule 163 (OPTIONAL-54)
	OP22_LOGICAL_NOT	reduce using rule 163 (OPTIONAL-54)
	VARIABLE_SYMBOL	reduce using rule 163 (OPTIONAL-54)
	WORD	reduce using rule 163 (OPTIONAL-54)

	PAREN-51	go to state 289
	OPTIONAL-54	go to state 285
	PAREN-53	go to state 286

State 268:

	OPTIONAL-48 -> ListElements .	(Rule 138)

	$default	reduce using rule 138 (OPTIONAL-48)

State 269:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 . ')'	(Rule 148)

	')'	shift, and go to state 290

State 270:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 45)

	OP20_HASH_FATARROW	shift, and go to state 291

State 271:

	OPTIONAL-10 -> TypeInner .	(Rule 29)

	$default	reduce using rule 29 (OPTIONAL-10)

State 272:

	ConstantValue -> '[' OPTIONAL-10 . LITERAL STAR-13 ']'	(Rule 44)

	LITERAL	shift, and go to state 292

State 273:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 28)

	$default	reduce using rule 28 (Constant)

State 274:

	STAR-27 -> STAR-27 . Constant	(Rule 65)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 . Properties STAR-28 '1;' OPTIONAL-31	(Rule 74)

	'our %properties = ('	shift, and go to state 293
	'use constant'	shift, and go to state 27

	Constant	go to state 294
	Properties	go to state 295

State 275:

	STAR-26 -> STAR-26 Include .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 276:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 203)

	$default	reduce using rule 203 (TypeInner)

State 277:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 168)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 296
	Variable	go to state 81
	Operator	go to state 38

State 278:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 169)

	')'	shift, and go to state 297

State 279:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 181)

	$default	reduce using rule 181 (VariableDeclaration)

State 280:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	VARIABLE_SYMBOL	shift, and go to state 298

State 281:

	PLUS-19 -> PLUS-19 . Operation	(Rule 48)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 . '};'	(Rule 50)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 44
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	'};'	shift, and go to state 299
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP01_NAMED_VOID	shift, and go to state 48
	OP01_NAMED_VOID_PAREN	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP19_LOOP_CONTROL	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 56

	'for my integer'	reduce using rule 152 (OPTIONAL-50)
	'foreach my'	reduce using rule 152 (OPTIONAL-50)
	'while ('	reduce using rule 152 (OPTIONAL-50)

	Conditional	go to state 45
	OperatorVoid	go to state 35
	Operation	go to state 300
	PAREN-49	go to state 55
	WordScoped	go to state 47
	LoopLabel	go to state 65
	Expression	go to state 37
	VariableDeclaration	go to state 57
	Operator	go to state 38
	Variable	go to state 66
	VariableModification	go to state 67
	OPTIONAL-50	go to state 42
	Statement	go to state 52

State 282:

	PLUS-19 -> Operation .	(Rule 49)

	$default	reduce using rule 49 (PLUS-19)

State 283:

	CodeBlock -> '{' PLUS-55 '}' .	(Rule 173)

	$default	reduce using rule 173 (CodeBlock)

State 284:

	PLUS-55 -> PLUS-55 Operation .	(Rule 171)

	$default	reduce using rule 171 (PLUS-55)

State 285:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54 .	(Rule 164)

	$default	reduce using rule 164 (Conditional)

State 286:

	OPTIONAL-54 -> PAREN-53 .	(Rule 162)

	$default	reduce using rule 162 (OPTIONAL-54)

State 287:

	PAREN-51 -> 'elsif (' . Expression ')' CodeBlock	(Rule 158)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Variable	go to state 81
	Operator	go to state 38
	Expression	go to state 301

State 288:

	PAREN-53 -> 'else' . CodeBlock	(Rule 161)

	'{'	shift, and go to state 236

	CodeBlock	go to state 302

State 289:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 159)

	$default	reduce using rule 159 (STAR-52)

State 290:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')' .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 291:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 45)

	'my'	shift, and go to state 86

	LITERAL	reduce using rule 37 (OPTIONAL-14)

	TypeInner	go to state 304
	OPTIONAL-14	go to state 303

State 292:

	ConstantValue -> '[' OPTIONAL-10 LITERAL . STAR-13 ']'	(Rule 44)

	$default	reduce using rule 35 (STAR-13)

	STAR-13	go to state 305

State 293:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-33 ')' ';'	(Rule 78)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 79)

	'%{'	shift, and go to state 308
	')'	shift, and go to state 306
	WORD	shift, and go to state 307

	HashEntryTyped	go to state 309

State 294:

	STAR-27 -> STAR-27 Constant .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 295:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties . STAR-28 '1;' OPTIONAL-31	(Rule 74)

	$default	reduce using rule 68 (STAR-28)

	STAR-28	go to state 310

State 296:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 168)

	')'	shift, and go to state 311
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 297:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 169)

	'{'	shift, and go to state 236

	CodeBlock	go to state 312

State 298:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	$default	reduce using rule 53 (STAR-21)

	STAR-21	go to state 313

State 299:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '};' .	(Rule 50)

	$default	reduce using rule 50 (Subroutine)

State 300:

	PLUS-19 -> PLUS-19 Operation .	(Rule 48)

	$default	reduce using rule 48 (PLUS-19)

State 301:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	PAREN-51 -> 'elsif (' Expression . ')' CodeBlock	(Rule 158)

	')'	shift, and go to state 314
	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 302:

	PAREN-53 -> 'else' CodeBlock .	(Rule 161)

	$default	reduce using rule 161 (PAREN-53)

State 303:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 . LITERAL STAR-17 '}'	(Rule 45)

	LITERAL	shift, and go to state 315

State 304:

	OPTIONAL-14 -> TypeInner .	(Rule 36)

	$default	reduce using rule 36 (OPTIONAL-14)

State 305:

	STAR-13 -> STAR-13 . PAREN-12	(Rule 34)
	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 . ']'	(Rule 44)

	']'	shift, and go to state 318
	OP21_LIST_COMMA	shift, and go to state 316

	PAREN-12	go to state 317

State 306:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 79)

	';'	shift, and go to state 319

State 307:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 196)

	OP20_HASH_FATARROW	shift, and go to state 320

State 308:

	HashEntryTyped -> '%{' . Variable '}'	(Rule 197)

	VARIABLE_SYMBOL	shift, and go to state 51

	Variable	go to state 321

State 309:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-33 ')' ';'	(Rule 78)

	$default	reduce using rule 77 (STAR-33)

	STAR-33	go to state 322

State 310:

	STAR-28 -> STAR-28 . Method	(Rule 67)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 . '1;' OPTIONAL-31	(Rule 74)

	'1;'	shift, and go to state 325
	'our'	shift, and go to state 324

	Method	go to state 323

State 311:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 168)

	'{'	shift, and go to state 236

	CodeBlock	go to state 326

State 312:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 169)

	$default	reduce using rule 169 (LoopForEach)

State 313:

	STAR-21 -> STAR-21 . PAREN-20	(Rule 52)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	')'	shift, and go to state 329
	OP21_LIST_COMMA	shift, and go to state 327

	PAREN-20	go to state 328

State 314:

	PAREN-51 -> 'elsif (' Expression ')' . CodeBlock	(Rule 158)

	'{'	shift, and go to state 236

	CodeBlock	go to state 330

State 315:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL . STAR-17 '}'	(Rule 45)

	$default	reduce using rule 42 (STAR-17)

	STAR-17	go to state 331

State 316:

	PAREN-12 -> OP21_LIST_COMMA . OPTIONAL-11 LITERAL	(Rule 33)

	'my'	shift, and go to state 86

	LITERAL	reduce using rule 32 (OPTIONAL-11)

	OPTIONAL-11	go to state 333
	TypeInner	go to state 332

State 317:

	STAR-13 -> STAR-13 PAREN-12 .	(Rule 34)

	$default	reduce using rule 34 (STAR-13)

State 318:

	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']' .	(Rule 44)

	$default	reduce using rule 44 (ConstantValue)

State 319:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 79)

	$default	reduce using rule 79 (Properties)

State 320:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 196)

	'my'	shift, and go to state 86

	TypeInner	go to state 334

State 321:

	HashEntryTyped -> '%{' Variable . '}'	(Rule 197)

	'}'	shift, and go to state 335

State 322:

	STAR-33 -> STAR-33 . PAREN-32	(Rule 76)
	Properties -> 'our %properties = (' HashEntryTyped STAR-33 . ')' ';'	(Rule 78)

	')'	shift, and go to state 338
	OP21_LIST_COMMA	shift, and go to state 336

	PAREN-32	go to state 337

State 323:

	STAR-28 -> STAR-28 Method .	(Rule 67)

	$default	reduce using rule 67 (STAR-28)

State 324:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '};'	(Rule 84)

	WORD	shift, and go to state 116

	Type	go to state 339

State 325:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;' . OPTIONAL-31	(Rule 74)

	'our'	shift, and go to state 54

	$end	reduce using rule 73 (OPTIONAL-31)
	'package'	reduce using rule 73 (OPTIONAL-31)

	PAREN-30	go to state 342
	Subroutine	go to state 343
	PLUS-29	go to state 341
	OPTIONAL-31	go to state 340

State 326:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 168)

	$default	reduce using rule 168 (LoopFor)

State 327:

	PAREN-20 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 51)

	'my'	shift, and go to state 344

State 328:

	STAR-21 -> STAR-21 PAREN-20 .	(Rule 52)

	$default	reduce using rule 52 (STAR-21)

State 329:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 56)

	OP19_VARIABLE_ASSIGN	shift, and go to state 345

State 330:

	PAREN-51 -> 'elsif (' Expression ')' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (PAREN-51)

State 331:

	STAR-17 -> STAR-17 . PAREN-16	(Rule 41)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 . '}'	(Rule 45)

	'}'	shift, and go to state 346
	OP21_LIST_COMMA	shift, and go to state 347

	PAREN-16	go to state 348

State 332:

	OPTIONAL-11 -> TypeInner .	(Rule 31)

	$default	reduce using rule 31 (OPTIONAL-11)

State 333:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 . LITERAL	(Rule 33)

	LITERAL	shift, and go to state 349

State 334:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 196)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 350
	Variable	go to state 81
	Operator	go to state 38

State 335:

	HashEntryTyped -> '%{' Variable '}' .	(Rule 197)

	$default	reduce using rule 197 (HashEntryTyped)

State 336:

	PAREN-32 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 75)

	'%{'	shift, and go to state 308
	WORD	shift, and go to state 307

	HashEntryTyped	go to state 351

State 337:

	STAR-33 -> STAR-33 PAREN-32 .	(Rule 76)

	$default	reduce using rule 76 (STAR-33)

State 338:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' . ';'	(Rule 78)

	';'	shift, and go to state 352

State 339:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '};'	(Rule 84)

	VARIABLE_SYMBOL	shift, and go to state 353

State 340:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;' OPTIONAL-31 .	(Rule 74)

	$default	reduce using rule 74 (Class)

State 341:

	PLUS-29 -> PLUS-29 . Subroutine	(Rule 69)
	PAREN-30 -> PLUS-29 . '1;'	(Rule 71)

	'1;'	shift, and go to state 355
	'our'	shift, and go to state 54

	Subroutine	go to state 354

State 342:

	OPTIONAL-31 -> PAREN-30 .	(Rule 72)

	$default	reduce using rule 72 (OPTIONAL-31)

State 343:

	PLUS-29 -> Subroutine .	(Rule 70)

	$default	reduce using rule 70 (PLUS-29)

State 344:

	PAREN-20 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 51)

	WORD	shift, and go to state 116

	Type	go to state 356

State 345:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-22	(Rule 56)

	'@_;'	shift, and go to state 357

State 346:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}' .	(Rule 45)

	$default	reduce using rule 45 (ConstantValue)

State 347:

	PAREN-16 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 40)

	WORD	shift, and go to state 358

State 348:

	STAR-17 -> STAR-17 PAREN-16 .	(Rule 41)

	$default	reduce using rule 41 (STAR-17)

State 349:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL .	(Rule 33)

	$default	reduce using rule 33 (PAREN-12)

State 350:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 196)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

	')'	reduce using rule 196 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 196 (HashEntryTyped)

State 351:

	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 75)

	$default	reduce using rule 75 (PAREN-32)

State 352:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';' .	(Rule 78)

	$default	reduce using rule 78 (Properties)

State 353:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-34 PLUS-35 '};'	(Rule 84)

	'= sub {'	shift, and go to state 359

State 354:

	PLUS-29 -> PLUS-29 Subroutine .	(Rule 69)

	$default	reduce using rule 69 (PLUS-29)

State 355:

	PAREN-30 -> PLUS-29 '1;' .	(Rule 71)

	$default	reduce using rule 71 (PAREN-30)

State 356:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 51)

	VARIABLE_SYMBOL	shift, and go to state 360

State 357:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-22	(Rule 56)

	$default	reduce using rule 55 (STAR-22)

	STAR-22	go to state 361

State 358:

	PAREN-16 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 40)

	OP20_HASH_FATARROW	shift, and go to state 362

State 359:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-34 PLUS-35 '};'	(Rule 84)

	'( my'	shift, and go to state 363

	'('	reduce using rule 81 (OPTIONAL-34)
	'['	reduce using rule 81 (OPTIONAL-34)
	'for my integer'	reduce using rule 81 (OPTIONAL-34)
	'foreach my'	reduce using rule 81 (OPTIONAL-34)
	'if ('	reduce using rule 81 (OPTIONAL-34)
	'my'	reduce using rule 81 (OPTIONAL-34)
	'undef'	reduce using rule 81 (OPTIONAL-34)
	'while ('	reduce using rule 81 (OPTIONAL-34)
	'{'	reduce using rule 81 (OPTIONAL-34)
	LITERAL	reduce using rule 81 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 81 (OPTIONAL-34)
	OP01_NAMED_VOID	reduce using rule 81 (OPTIONAL-34)
	OP01_NAMED_VOID_PAREN	reduce using rule 81 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 81 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 81 (OPTIONAL-34)
	OP05_MATH_NEG	reduce using rule 81 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 81 (OPTIONAL-34)
	OP19_LOOP_CONTROL	reduce using rule 81 (OPTIONAL-34)
	OP22_LOGICAL_NOT	reduce using rule 81 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 81 (OPTIONAL-34)
	WORD	reduce using rule 81 (OPTIONAL-34)

	OPTIONAL-34	go to state 364
	MethodArguments	go to state 365

State 360:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 51)

	$default	reduce using rule 51 (PAREN-20)

State 361:

	STAR-22 -> STAR-22 . ArgumentCheck	(Rule 54)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22 .	(Rule 56)

	'::'	shift, and go to state 366

	'('	reduce using rule 56 (SubroutineArguments)
	'['	reduce using rule 56 (SubroutineArguments)
	'for my integer'	reduce using rule 56 (SubroutineArguments)
	'foreach my'	reduce using rule 56 (SubroutineArguments)
	'if ('	reduce using rule 56 (SubroutineArguments)
	'my'	reduce using rule 56 (SubroutineArguments)
	'undef'	reduce using rule 56 (SubroutineArguments)
	'while ('	reduce using rule 56 (SubroutineArguments)
	'{'	reduce using rule 56 (SubroutineArguments)
	LITERAL	reduce using rule 56 (SubroutineArguments)
	OP01_NAMED	reduce using rule 56 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 56 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 56 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 56 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 56 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 56 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 56 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 56 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 56 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 56 (SubroutineArguments)
	WORD	reduce using rule 56 (SubroutineArguments)

	ArgumentCheck	go to state 367

State 362:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-15 LITERAL	(Rule 40)

	'my'	shift, and go to state 86

	LITERAL	reduce using rule 39 (OPTIONAL-15)

	OPTIONAL-15	go to state 368
	TypeInner	go to state 369

State 363:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	TYPE_CLASS_OR_SELF	shift, and go to state 370

State 364:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 . PLUS-35 '};'	(Rule 84)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 44
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP01_NAMED_VOID	shift, and go to state 48
	OP01_NAMED_VOID_PAREN	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP19_LOOP_CONTROL	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 56

	'for my integer'	reduce using rule 152 (OPTIONAL-50)
	'foreach my'	reduce using rule 152 (OPTIONAL-50)
	'while ('	reduce using rule 152 (OPTIONAL-50)

	OperatorVoid	go to state 35
	Conditional	go to state 45
	WordScoped	go to state 47
	Operation	go to state 371
	PAREN-49	go to state 55
	VariableModification	go to state 67
	PLUS-35	go to state 372
	VariableDeclaration	go to state 57
	Expression	go to state 37
	LoopLabel	go to state 65
	Operator	go to state 38
	Variable	go to state 66
	Statement	go to state 52
	OPTIONAL-50	go to state 42

State 365:

	OPTIONAL-34 -> MethodArguments .	(Rule 80)

	$default	reduce using rule 80 (OPTIONAL-34)

State 366:

	ArgumentCheck -> '::' . CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';'	(Rule 60)

	CHECK_OR_CHECKTRACE	shift, and go to state 373

State 367:

	STAR-22 -> STAR-22 ArgumentCheck .	(Rule 54)

	$default	reduce using rule 54 (STAR-22)

State 368:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 . LITERAL	(Rule 40)

	LITERAL	shift, and go to state 374

State 369:

	OPTIONAL-15 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-15)

State 370:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	$default	reduce using rule 87 (STAR-37)

	STAR-37	go to state 375

State 371:

	PLUS-35 -> Operation .	(Rule 83)

	$default	reduce using rule 83 (PLUS-35)

State 372:

	PLUS-35 -> PLUS-35 . Operation	(Rule 82)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 . '};'	(Rule 84)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'if ('	shift, and go to state 59
	'my'	shift, and go to state 44
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	'};'	shift, and go to state 376
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP01_NAMED_VOID	shift, and go to state 48
	OP01_NAMED_VOID_PAREN	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP19_LOOP_CONTROL	shift, and go to state 50
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 56

	'for my integer'	reduce using rule 152 (OPTIONAL-50)
	'foreach my'	reduce using rule 152 (OPTIONAL-50)
	'while ('	reduce using rule 152 (OPTIONAL-50)

	OPTIONAL-50	go to state 42
	Statement	go to state 52
	Variable	go to state 66
	Operator	go to state 38
	VariableDeclaration	go to state 57
	Expression	go to state 37
	LoopLabel	go to state 65
	VariableModification	go to state 67
	PAREN-49	go to state 55
	Operation	go to state 377
	WordScoped	go to state 47
	Conditional	go to state 45
	OperatorVoid	go to state 35

State 373:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-24 ')' ';'	(Rule 60)

	'('	shift, and go to state 378

State 374:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL .	(Rule 40)

	$default	reduce using rule 40 (PAREN-16)

State 375:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 86)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	')'	shift, and go to state 380
	OP21_LIST_COMMA	shift, and go to state 381

	PAREN-36	go to state 379

State 376:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '};' .	(Rule 84)

	$default	reduce using rule 84 (Method)

State 377:

	PLUS-35 -> PLUS-35 Operation .	(Rule 82)

	$default	reduce using rule 82 (PLUS-35)

State 378:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-24 ')' ';'	(Rule 60)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Operator	go to state 38
	Variable	go to state 81
	Expression	go to state 382
	WordScoped	go to state 47

State 379:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 86)

	$default	reduce using rule 86 (STAR-37)

State 380:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 90)

	OP19_VARIABLE_ASSIGN	shift, and go to state 383

State 381:

	PAREN-36 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 85)

	'my'	shift, and go to state 384

State 382:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-24 ')' ';'	(Rule 60)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP21_LIST_COMMA	shift, and go to state 386
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

	')'	reduce using rule 59 (OPTIONAL-24)

	PAREN-23	go to state 387
	OPTIONAL-24	go to state 385

State 383:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-38	(Rule 90)

	'@_;'	shift, and go to state 388

State 384:

	PAREN-36 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 85)

	WORD	shift, and go to state 116

	Type	go to state 389

State 385:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 . ')' ';'	(Rule 60)

	')'	shift, and go to state 390

State 386:

	PAREN-23 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 57)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	Expression	go to state 391
	Operator	go to state 38
	Variable	go to state 81
	WordScoped	go to state 47

State 387:

	OPTIONAL-24 -> PAREN-23 .	(Rule 58)

	$default	reduce using rule 58 (OPTIONAL-24)

State 388:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-38	(Rule 90)

	$default	reduce using rule 89 (STAR-38)

	STAR-38	go to state 392

State 389:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 85)

	VARIABLE_SYMBOL	shift, and go to state 393

State 390:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' . ';'	(Rule 60)

	';'	shift, and go to state 394

State 391:

	PAREN-23 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 57)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP21_LIST_COMMA	shift, and go to state 395
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

State 392:

	STAR-38 -> STAR-38 . ArgumentCheck	(Rule 88)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38 .	(Rule 90)

	'::'	shift, and go to state 366

	'('	reduce using rule 90 (MethodArguments)
	'['	reduce using rule 90 (MethodArguments)
	'for my integer'	reduce using rule 90 (MethodArguments)
	'foreach my'	reduce using rule 90 (MethodArguments)
	'if ('	reduce using rule 90 (MethodArguments)
	'my'	reduce using rule 90 (MethodArguments)
	'undef'	reduce using rule 90 (MethodArguments)
	'while ('	reduce using rule 90 (MethodArguments)
	'{'	reduce using rule 90 (MethodArguments)
	LITERAL	reduce using rule 90 (MethodArguments)
	OP01_NAMED	reduce using rule 90 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 90 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 90 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 90 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 90 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 90 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 90 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 90 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 90 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 90 (MethodArguments)
	WORD	reduce using rule 90 (MethodArguments)

	ArgumentCheck	go to state 396

State 393:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 85)

	$default	reduce using rule 85 (PAREN-36)

State 394:

	ArgumentCheck -> '::' CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';' .	(Rule 60)

	$default	reduce using rule 60 (ArgumentCheck)

State 395:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 57)

	'('	shift, and go to state 40
	'['	shift, and go to state 36
	'undef'	shift, and go to state 62
	'{'	shift, and go to state 34
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 39
	OP05_LOGICAL_NEG	shift, and go to state 64
	OP05_MATH_NEG	shift, and go to state 49
	OP10_NAMED_UNARY	shift, and go to state 41
	OP22_LOGICAL_NOT	shift, and go to state 61
	VARIABLE_SYMBOL	shift, and go to state 51
	WORD	shift, and go to state 13

	WordScoped	go to state 47
	Expression	go to state 397
	Variable	go to state 81
	Operator	go to state 38

State 396:

	STAR-38 -> STAR-38 ArgumentCheck .	(Rule 88)

	$default	reduce using rule 88 (STAR-38)

State 397:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 57)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 98)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 101)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 102)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 103)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 104)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 105)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 107)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 108)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 109)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 110)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 111)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 112)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 113)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 114)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 116)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 117)

	OP04_MATH_POW	shift, and go to state 103
	OP06_REGEX_MATCH	shift, and go to state 105
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 89
	OP08_MATH_ADD_SUB	shift, and go to state 101
	OP08_STRING_CAT	shift, and go to state 95
	OP09_BITWISE_SHIFT	shift, and go to state 99
	OP11_COMPARE_LT_GT	shift, and go to state 98
	OP12_COMPARE_EQ_NEQ	shift, and go to state 96
	OP13_BITWISE_AND	shift, and go to state 100
	OP14_BITWISE_OR_XOR	shift, and go to state 102
	OP15_LOGICAL_AND	shift, and go to state 93
	OP16_LOGICAL_OR	shift, and go to state 104
	OP17_LIST_RANGE	shift, and go to state 92
	OP18_TERNARY	shift, and go to state 91
	OP23_LOGICAL_AND	shift, and go to state 94
	OP24_LOGICAL_OR_XOR	shift, and go to state 90

	')'	reduce using rule 57 (PAREN-23)


Summary:
--------
Number of rules         : 206
Number of terminals     : 82
Number of non-terminals : 101
Number of states        : 398
