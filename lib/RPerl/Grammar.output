Conflicts:
----------
Conflict in state 144 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 144 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 144 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 144 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 144 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 144 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 144 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 144 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 144 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 144 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 144 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 144 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 144 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 144 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 144 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 144 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 144 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 149 between rule 111 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 149 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 149 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 149 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 149 between rule 111 and token OP18_TERNARY resolved as shift.
Conflict in state 149 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 149 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 149 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 149 between rule 111 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 149 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 149 between rule 111 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 149 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 149 between rule 111 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 149 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 149 between rule 111 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 149 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 149 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 178 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 178 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 178 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 178 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 178 between rule 100 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 178 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 178 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 178 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 178 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 178 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 178 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 178 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 178 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 178 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 178 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 178 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 178 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 184 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 184 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 184 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 184 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 184 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 184 between rule 92 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 184 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 184 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 184 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 184 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 184 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 184 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 184 between rule 92 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 184 between rule 92 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 184 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 184 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 184 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 215 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 215 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 215 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 215 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 215 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 215 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 215 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 215 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 215 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 215 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 215 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 215 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 215 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 215 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 231 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 231 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 231 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 231 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 231 between rule 91 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 231 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 231 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 231 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 231 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 231 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 231 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 231 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 231 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 231 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 231 between rule 91 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 232 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 232 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 232 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 232 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 232 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 232 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 232 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 232 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 232 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 232 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 232 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 232 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 232 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 232 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 232 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 234 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 234 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 234 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 234 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 234 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 234 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 234 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 234 between rule 98 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 234 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 234 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 234 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 234 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 234 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 234 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 234 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 235 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 235 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 235 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 235 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 235 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 235 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 235 between rule 103 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 235 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 235 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 235 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 235 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 235 between rule 103 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 235 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 235 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 236 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 236 between rule 108 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 236 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 236 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 236 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 236 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 236 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 236 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 236 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 236 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 236 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 236 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 236 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 236 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 236 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 237 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 237 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 237 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 237 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 237 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 237 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 237 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 237 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 237 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 237 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 237 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 237 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 237 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 237 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 238 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 238 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 238 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 238 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 238 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 238 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 238 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 238 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 238 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 238 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 238 between rule 97 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 238 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 238 between rule 97 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 238 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 238 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 242 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 242 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 242 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 242 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 242 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 242 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 242 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 242 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 242 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 242 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 242 between rule 96 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 242 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 242 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 242 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 242 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 243 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 243 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 243 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 243 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 243 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 243 between rule 107 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 243 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 243 between rule 107 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 243 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 243 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 243 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 243 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 243 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 243 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 243 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 244 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 244 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 244 between rule 99 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 244 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 244 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 244 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 244 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 244 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 244 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 244 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 244 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 244 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 244 between rule 99 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 244 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 244 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 245 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 245 between rule 113 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 245 between rule 113 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 245 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 245 between rule 113 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 245 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 245 between rule 113 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 245 between rule 113 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 245 between rule 113 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 245 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 245 between rule 113 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 245 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 245 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 245 between rule 113 and token OP18_TERNARY resolved as shift.
Conflict in state 245 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 245 between rule 113 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 245 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 246 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 246 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 246 between rule 109 and token OP17_LIST_RANGE resolved as error.
Conflict in state 246 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 246 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 246 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 246 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 246 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 246 between rule 109 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 246 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 246 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 246 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 246 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 246 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 246 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 246 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 246 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 247 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 247 between rule 104 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 247 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 247 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 247 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 247 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 247 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 247 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 247 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 247 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 247 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 247 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 248 between rule 112 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 248 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 248 between rule 112 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 248 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 112 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 248 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 248 between rule 112 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 248 between rule 112 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 248 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 248 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 248 between rule 112 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 248 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 248 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 248 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 248 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 248 between rule 112 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 248 between rule 112 and token OP18_TERNARY resolved as shift.
Conflict in state 249 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 249 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 249 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 249 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 249 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 249 between rule 95 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 249 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 249 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 249 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 249 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 249 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 249 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 249 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 249 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 249 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 249 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 249 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 378 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 378 between rule 109 and token OP17_LIST_RANGE resolved as error.
Conflict in state 378 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 378 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 378 between rule 109 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 378 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 378 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 378 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 378 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 378 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 378 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 378 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 378 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 378 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 378 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 378 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 378 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 389 between rule 87 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 389 between rule 87 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 389 between rule 87 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 389 between rule 87 and token OP04_MATH_POW resolved as shift.
Conflict in state 389 between rule 87 and token OP18_TERNARY resolved as shift.
Conflict in state 389 between rule 87 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 389 between rule 87 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 389 between rule 87 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 389 between rule 87 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 389 between rule 87 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 389 between rule 87 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 389 between rule 87 and token OP08_STRING_CAT resolved as shift.
Conflict in state 389 between rule 87 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 389 between rule 87 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 389 between rule 87 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 389 between rule 87 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 389 between rule 87 and token OP23_LOGICAL_AND resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	OPTIONAL-23 -> PropertiesClass
58:	OPTIONAL-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our $properties = {' Critic HashEntryTyped STAR-26 '}' ';'
66:	Properties -> 'our $properties = {' '}' ';' Critic
67:	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped
68:	STAR-28 -> STAR-28 PAREN-27
69:	STAR-28 -> /* empty */
70:	PropertiesClass -> 'our $class_properties = {' Critic HashEntryTyped STAR-28 '}' ';'
71:	OPTIONAL-29 -> MethodArguments
72:	OPTIONAL-29 -> /* empty */
73:	PLUS-30 -> PLUS-30 Operation
74:	PLUS-30 -> Operation
75:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'
76:	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
77:	STAR-32 -> STAR-32 PAREN-31
78:	STAR-32 -> /* empty */
79:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'
80:	MethodOrSubroutine -> Method
81:	MethodOrSubroutine -> Subroutine
82:	Operation -> Expression ';'
83:	Operation -> Statement
84:	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
85:	Operator -> OP01_NAMED SubExpression
86:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
87:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
88:	Operator -> OP01_CLOSE FH_REF_SYMBOL
89:	Operator -> OP03_MATH_INC_DEC Variable
90:	Operator -> Variable OP03_MATH_INC_DEC
91:	Operator -> SubExpression OP04_MATH_POW SubExpression
92:	Operator -> OP05_LOGICAL_NEG SubExpression
93:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
94:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
95:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
96:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
97:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
98:	Operator -> SubExpression OP08_STRING_CAT SubExpression
99:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
100:	Operator -> OP10_NAMED_UNARY SubExpression
101:	Operator -> OP10_NAMED_UNARY
102:	Operator -> OP10_STRINGIFY_UNARY SubExpression ')'
103:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
104:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
105:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
106:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
107:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
108:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
109:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
110:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
111:	Operator -> OP22_LOGICAL_NEG SubExpression
112:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
113:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
114:	PAREN-33 -> STDOUT_STDERR
115:	OPTIONAL-34 -> PAREN-33
116:	OPTIONAL-34 -> /* empty */
117:	OPTIONAL-35 -> ListElements
118:	OPTIONAL-35 -> /* empty */
119:	OPTIONAL-36 -> LoopLabel
120:	OPTIONAL-36 -> /* empty */
121:	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';'
122:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
123:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';'
124:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
125:	OperatorVoid -> OP19_LOOP_CONTROL OPTIONAL-36 ';'
126:	OPTIONAL-37 -> ListElements
127:	OPTIONAL-37 -> /* empty */
128:	OPTIONAL-38 -> ListElements
129:	OPTIONAL-38 -> /* empty */
130:	Expression -> Operator
131:	Expression -> WordScoped LPAREN OPTIONAL-37 ')'
132:	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 ')'
133:	SubExpression -> Expression
134:	SubExpression -> 'undef'
135:	SubExpression -> Literal
136:	SubExpression -> Variable
137:	SubExpression -> ArrayReference
138:	SubExpression -> ArrayDereferenced
139:	SubExpression -> HashReference
140:	SubExpression -> HashDereferenced
141:	SubExpression -> LBRACE '}'
142:	SubExpression -> LPAREN SubExpression ')'
143:	SubExpressionOrStdin -> SubExpression
144:	SubExpressionOrStdin -> STDIN
145:	PAREN-39 -> LoopLabel COLON
146:	OPTIONAL-40 -> PAREN-39
147:	OPTIONAL-40 -> /* empty */
148:	Statement -> Conditional
149:	Statement -> OPTIONAL-40 Loop
150:	Statement -> OperatorVoid
151:	Statement -> VariableDeclaration
152:	Statement -> VariableModification
153:	PAREN-41 -> 'elsif (' SubExpression ')' CodeBlock
154:	STAR-42 -> STAR-42 PAREN-41
155:	STAR-42 -> /* empty */
156:	PAREN-43 -> 'else' CodeBlock
157:	OPTIONAL-44 -> PAREN-43
158:	OPTIONAL-44 -> /* empty */
159:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-42 OPTIONAL-44
160:	Loop -> LoopFor
161:	Loop -> LoopForEach
162:	Loop -> LoopWhile
163:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
164:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
165:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
166:	PLUS-45 -> PLUS-45 Operation
167:	PLUS-45 -> Operation
168:	CodeBlock -> LBRACE PLUS-45 '}'
169:	STAR-46 -> STAR-46 VariableRetrieval
170:	STAR-46 -> /* empty */
171:	Variable -> VARIABLE_SYMBOL STAR-46
172:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
173:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
174:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
175:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
176:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
177:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
178:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
179:	PAREN-47 -> OP21_LIST_COMMA ListElement
180:	STAR-48 -> STAR-48 PAREN-47
181:	STAR-48 -> /* empty */
182:	PLUS-49 -> PLUS-49 WORD
183:	PLUS-49 -> WORD
184:	ListElements -> ListElement STAR-48
185:	ListElements -> OP01_QW LPAREN PLUS-49 ')'
186:	ListElement -> SubExpression
187:	ListElement -> TypeInner SubExpression
188:	ListElement -> KEYS_OR_VALUES HashDereferenced
189:	OPTIONAL-50 -> ListElements
190:	OPTIONAL-50 -> /* empty */
191:	ArrayReference -> LBRACKET OPTIONAL-50 ']'
192:	ArrayDereferenced -> '@{' Variable '}'
193:	ArrayDereferenced -> '@{' ArrayReference '}'
194:	OPTIONAL-51 -> TypeInner
195:	OPTIONAL-51 -> /* empty */
196:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-51 SubExpression
197:	HashEntry -> HashDereferenced
198:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
199:	HashEntryTyped -> HashDereferenced
200:	PAREN-52 -> OP21_LIST_COMMA HashEntry
201:	STAR-53 -> STAR-53 PAREN-52
202:	STAR-53 -> /* empty */
203:	HashReference -> LBRACE HashEntry STAR-53 '}'
204:	HashDereferenced -> '%{' Variable '}'
205:	HashDereferenced -> '%{' HashReference '}'
206:	WordScoped -> WORD
207:	WordScoped -> WORD_SCOPED
208:	LoopLabel -> WORD
209:	Type -> WORD
210:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
211:	VariableOrLiteral -> Variable
212:	VariableOrLiteral -> Literal
213:	Literal -> LITERAL_STRING
214:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 8
	SHEBANG	shift, and go to state 7

	'package'	reduce using rule 20 (OPTIONAL-9)

	Program	go to state 2
	ModuleHeader	go to state 3
	PLUS-2	go to state 6
	OPTIONAL-9	go to state 1
	PAREN-1	go to state 5
	Critic	go to state 9
	CompileUnit	go to state 4

State 1:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 10

State 2:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 3:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 12

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	STAR-10	go to state 14
	Class	go to state 15
	Module	go to state 13
	Package	go to state 11

State 4:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 16

State 5:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 6:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 8

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 9
	OPTIONAL-9	go to state 1
	ModuleHeader	go to state 3
	PAREN-1	go to state 17

State 7:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 8

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 18
	OPTIONAL-3	go to state 19

State 8:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 20

	PLUS-14	go to state 21

State 9:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 10:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 23

State 11:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 12:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 25

State 13:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 14:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 8

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	STAR-11	go to state 27
	Critic	go to state 26

State 15:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 16:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 17:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 18:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 19:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 28

	Header	go to state 29

State 20:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 21:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 31
	WORD	shift, and go to state 30

State 22:

	WordScoped -> WORD_SCOPED .	(Rule 207)

	$default	reduce using rule 207 (WordScoped)

State 23:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 32

State 24:

	WordScoped -> WORD .	(Rule 206)

	$default	reduce using rule 206 (WordScoped)

State 25:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 33

State 26:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 27:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 35

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 36
	Include	go to state 34

State 28:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 37

State 29:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 38

State 30:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 31:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 32:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 28

	Header	go to state 39

State 33:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 40

State 34:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 35:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 41

State 36:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 44
	'use constant'	shift, and go to state 43

	Subroutine	go to state 42
	Constant	go to state 46
	PLUS-13	go to state 45

State 37:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 47

State 38:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 8

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_STRINGIFY_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 49
	STAR-5	go to state 48

State 39:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 40:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 35

	Include	go to state 50

State 41:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 51
	'qw('	shift, and go to state 52

State 42:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 43:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 53

State 44:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 54

	Type	go to state 55

State 45:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 56

	Subroutine	go to state 57

State 46:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 47:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 58

State 48:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 35

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_STRINGIFY_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	Include	go to state 59
	STAR-6	go to state 60

State 49:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 50:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 61

State 51:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 52:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 62

	PLUS-15	go to state 63

State 53:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 64

State 54:

	Type -> WORD .	(Rule 209)

	$default	reduce using rule 209 (Type)

State 55:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 65

State 56:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 66

State 57:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 58:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 67

State 59:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 60:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 43

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_STRINGIFY_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 69
	STAR-7	go to state 68

State 61:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 8

	'our $properties = {'	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	STAR-21	go to state 70
	Critic	go to state 71

State 62:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 63:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 73
	WORD	shift, and go to state 72

State 64:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 74

	TypeInner	go to state 75

State 65:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 76

State 66:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 67:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'if ('	shift, and go to state 113
	'my'	shift, and go to state 83
	'our'	shift, and go to state 44
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 90
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_OPEN	shift, and go to state 82
	OP01_PRINT	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 116
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 147 (OPTIONAL-40)
	'foreach my'	reduce using rule 147 (OPTIONAL-40)
	'while ('	reduce using rule 147 (OPTIONAL-40)

	VariableModification	go to state 108
	PAREN-39	go to state 81
	ArrayDereferenced	go to state 84
	SubExpression	go to state 102
	Operation	go to state 77
	Expression	go to state 101
	OperatorVoid	go to state 78
	Literal	go to state 96
	HashReference	go to state 97
	Subroutine	go to state 117
	Conditional	go to state 99
	OPTIONAL-40	go to state 119
	PLUS-8	go to state 121
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	LoopLabel	go to state 91
	Statement	go to state 89
	Operator	go to state 109
	VariableDeclaration	go to state 94
	Variable	go to state 114
	WordScoped	go to state 111

State 69:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 70:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 35

	'our $properties = {'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 122
	STAR-22	go to state 123

State 71:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 72:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 73:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 124

State 74:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 210)

	WORD	shift, and go to state 54

	Type	go to state 125

State 75:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115

	Literal	go to state 126

State 76:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 129

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_STRINGIFY_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 128
	OPTIONAL-16	go to state 127

State 77:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 78:

	Statement -> OperatorVoid .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 79:

	Operator -> OP10_STRINGIFY_UNARY . SubExpression ')'	(Rule 102)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	SubExpression	go to state 131
	Expression	go to state 130
	Operator	go to state 109
	Variable	go to state 132
	WordScoped	go to state 111

State 80:

	SubExpression -> LBRACE . '}'	(Rule 141)
	HashReference -> LBRACE . HashEntry STAR-53 '}'	(Rule 203)

	'%{'	shift, and go to state 118
	'}'	shift, and go to state 134
	WORD	shift, and go to state 135

	HashDereferenced	go to state 137
	HashEntry	go to state 136

State 81:

	OPTIONAL-40 -> PAREN-39 .	(Rule 146)

	$default	reduce using rule 146 (OPTIONAL-40)

State 82:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'my'	shift, and go to state 138

State 83:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 175)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)

	WORD	shift, and go to state 54

	Type	go to state 139

State 84:

	SubExpression -> ArrayDereferenced .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 85:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 89)

	VARIABLE_SYMBOL	shift, and go to state 110

	Variable	go to state 140

State 86:

	Literal -> LITERAL_NUMBER .	(Rule 214)

	$default	reduce using rule 214 (Literal)

State 87:

	OperatorVoid -> OP19_LOOP_CONTROL . OPTIONAL-36 ';'	(Rule 125)

	WORD	shift, and go to state 142

	';'	reduce using rule 120 (OPTIONAL-36)

	OPTIONAL-36	go to state 141
	LoopLabel	go to state 143

State 88:

	SubExpression -> HashDereferenced .	(Rule 140)

	$default	reduce using rule 140 (SubExpression)

State 89:

	Operation -> Statement .	(Rule 83)

	$default	reduce using rule 83 (Operation)

State 90:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 124)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	HashReference	go to state 97
	Literal	go to state 96
	WordScoped	go to state 111
	Variable	go to state 132
	ListElement	go to state 146
	Operator	go to state 109
	Expression	go to state 130
	TypeInner	go to state 147
	SubExpression	go to state 144
	HashDereferenced	go to state 88

State 91:

	PAREN-39 -> LoopLabel . COLON	(Rule 145)

	COLON	shift, and go to state 148

State 92:

	SubExpression -> 'undef' .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 93:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 111)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 130
	SubExpression	go to state 149
	HashDereferenced	go to state 88
	WordScoped	go to state 111
	Variable	go to state 132
	Operator	go to state 109
	Literal	go to state 96
	HashReference	go to state 97
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84

State 94:

	Statement -> VariableDeclaration .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 95:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-35 ';'	(Rule 123)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	';'	reduce using rule 118 (OPTIONAL-35)

	WordScoped	go to state 111
	Variable	go to state 132
	OPTIONAL-35	go to state 154
	ListElement	go to state 153
	Operator	go to state 109
	TypeInner	go to state 147
	Expression	go to state 130
	SubExpression	go to state 151
	HashDereferenced	go to state 88
	ArrayReference	go to state 120
	ListElements	go to state 150
	ArrayDereferenced	go to state 84
	HashReference	go to state 97
	Literal	go to state 96

State 96:

	SubExpression -> Literal .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 97:

	SubExpression -> HashReference .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 98:

	ArrayReference -> LBRACKET . OPTIONAL-50 ']'	(Rule 191)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	']'	reduce using rule 190 (OPTIONAL-50)

	Literal	go to state 96
	HashReference	go to state 97
	OPTIONAL-50	go to state 155
	ArrayDereferenced	go to state 84
	ListElements	go to state 156
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	SubExpression	go to state 151
	TypeInner	go to state 147
	Expression	go to state 130
	Operator	go to state 109
	ListElement	go to state 153
	Variable	go to state 132
	WordScoped	go to state 111

State 99:

	Statement -> Conditional .	(Rule 148)

	$default	reduce using rule 148 (Statement)

State 100:

	Operator -> LPAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 142)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 157
	OP01_OPEN	shift, and go to state 82
	OP01_PRINT	shift, and go to state 159
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 111
	Variable	go to state 132
	Operator	go to state 109
	Expression	go to state 130
	SubExpression	go to state 158
	HashDereferenced	go to state 88
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	HashReference	go to state 97
	Literal	go to state 96

State 101:

	Operation -> Expression . ';'	(Rule 82)
	SubExpression -> Expression .	(Rule 133)

	';'	shift, and go to state 160

	OP04_MATH_POW	reduce using rule 133 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 133 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 133 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 133 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 133 (SubExpression)
	OP08_STRING_CAT	reduce using rule 133 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 133 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 133 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 133 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 133 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 133 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 133 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 133 (SubExpression)
	OP18_TERNARY	reduce using rule 133 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 133 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 133 (SubExpression)

State 102:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 103:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 100)
	Operator -> OP10_NAMED_UNARY .	(Rule 101)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP04_MATH_POW	reduce using rule 101 (Operator)
	OP06_REGEX_MATCH	reduce using rule 101 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 101 (Operator)
	OP07_STRING_REPEAT	reduce using rule 101 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 101 (Operator)
	OP08_STRING_CAT	reduce using rule 101 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 101 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	Literal	go to state 96
	HashReference	go to state 97
	Variable	go to state 132
	WordScoped	go to state 111
	Operator	go to state 109
	SubExpression	go to state 178
	Expression	go to state 130
	HashDereferenced	go to state 88

State 104:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 88)

	FH_REF_SYMBOL	shift, and go to state 179

State 105:

	OperatorVoid -> OP01_PRINT . OPTIONAL-34 ListElements ';'	(Rule 121)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 122)

	FH_REF_SYMBOL_BRACES	shift, and go to state 181
	STDOUT_STDERR	shift, and go to state 183

	'%{'	reduce using rule 116 (OPTIONAL-34)
	'@{'	reduce using rule 116 (OPTIONAL-34)
	'my'	reduce using rule 116 (OPTIONAL-34)
	'undef'	reduce using rule 116 (OPTIONAL-34)
	KEYS_OR_VALUES	reduce using rule 116 (OPTIONAL-34)
	LBRACE	reduce using rule 116 (OPTIONAL-34)
	LBRACKET	reduce using rule 116 (OPTIONAL-34)
	LITERAL_NUMBER	reduce using rule 116 (OPTIONAL-34)
	LITERAL_STRING	reduce using rule 116 (OPTIONAL-34)
	LPAREN	reduce using rule 116 (OPTIONAL-34)
	OP01_CLOSE	reduce using rule 116 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 116 (OPTIONAL-34)
	OP01_OPEN	reduce using rule 116 (OPTIONAL-34)
	OP01_QW	reduce using rule 116 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 116 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 116 (OPTIONAL-34)
	OP05_MATH_NEG_LPAREN	reduce using rule 116 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 116 (OPTIONAL-34)
	OP10_STRINGIFY_UNARY	reduce using rule 116 (OPTIONAL-34)
	OP22_LOGICAL_NEG	reduce using rule 116 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 116 (OPTIONAL-34)
	WORD	reduce using rule 116 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 116 (OPTIONAL-34)

	OPTIONAL-34	go to state 180
	PAREN-33	go to state 182

State 106:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 92)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 132
	WordScoped	go to state 111
	Operator	go to state 109
	SubExpression	go to state 184
	Expression	go to state 130
	HashDereferenced	go to state 88
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	HashReference	go to state 97
	Literal	go to state 96

State 107:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 192)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 193)

	LBRACKET	shift, and go to state 98
	VARIABLE_SYMBOL	shift, and go to state 110

	ArrayReference	go to state 186
	Variable	go to state 185

State 108:

	Statement -> VariableModification .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 109:

	Expression -> Operator .	(Rule 130)

	$default	reduce using rule 130 (Expression)

State 110:

	Variable -> VARIABLE_SYMBOL . STAR-46	(Rule 171)

	$default	reduce using rule 170 (STAR-46)

	STAR-46	go to state 187

State 111:

	Expression -> WordScoped . LPAREN OPTIONAL-37 ')'	(Rule 131)

	LPAREN	shift, and go to state 188

State 112:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 93)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 97
	Literal	go to state 96
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	SubExpression	go to state 189
	Expression	go to state 130
	HashDereferenced	go to state 88
	Variable	go to state 132
	WordScoped	go to state 111
	Operator	go to state 109

State 113:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-42 OPTIONAL-44	(Rule 159)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 111
	Variable	go to state 132
	Operator	go to state 109
	Expression	go to state 130
	SubExpression	go to state 190
	HashDereferenced	go to state 88
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	HashReference	go to state 97
	Literal	go to state 96

State 114:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 136)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 177)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 178)

	OP02_METHOD_THINARROW	shift, and go to state 194
	OP03_MATH_INC_DEC	shift, and go to state 192
	OP19_VARIABLE_ASSIGN	shift, and go to state 191
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 193

	OP04_MATH_POW	reduce using rule 136 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 136 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 136 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 136 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 136 (SubExpression)
	OP08_STRING_CAT	reduce using rule 136 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 136 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 136 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 136 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 136 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 136 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 136 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 136 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 136 (SubExpression)
	OP18_TERNARY	reduce using rule 136 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 136 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 136 (SubExpression)

State 115:

	Literal -> LITERAL_STRING .	(Rule 213)

	$default	reduce using rule 213 (Literal)

State 116:

	WordScoped -> WORD .	(Rule 206)
	LoopLabel -> WORD .	(Rule 208)

	COLON	reduce using rule 208 (LoopLabel)
	LPAREN	reduce using rule 206 (WordScoped)

State 117:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 118:

	HashDereferenced -> '%{' . Variable '}'	(Rule 204)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 205)

	LBRACE	shift, and go to state 195
	VARIABLE_SYMBOL	shift, and go to state 110

	HashReference	go to state 196
	Variable	go to state 197

State 119:

	Statement -> OPTIONAL-40 . Loop	(Rule 149)

	'for my integer'	shift, and go to state 201
	'foreach my'	shift, and go to state 204
	'while ('	shift, and go to state 200

	Loop	go to state 198
	LoopWhile	go to state 203
	LoopForEach	go to state 199
	LoopFor	go to state 202

State 120:

	SubExpression -> ArrayReference .	(Rule 137)

	$default	reduce using rule 137 (SubExpression)

State 121:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'if ('	shift, and go to state 113
	'my'	shift, and go to state 83
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 90
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_OPEN	shift, and go to state 82
	OP01_PRINT	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 116
	WORD_SCOPED	shift, and go to state 22

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 147 (OPTIONAL-40)
	'foreach my'	reduce using rule 147 (OPTIONAL-40)
	'while ('	reduce using rule 147 (OPTIONAL-40)

	Literal	go to state 96
	HashReference	go to state 97
	ArrayReference	go to state 120
	Conditional	go to state 99
	OPTIONAL-40	go to state 119
	HashDereferenced	go to state 88
	VariableDeclaration	go to state 94
	Variable	go to state 114
	WordScoped	go to state 111
	LoopLabel	go to state 91
	Statement	go to state 89
	Operator	go to state 109
	VariableModification	go to state 108
	PAREN-39	go to state 81
	ArrayDereferenced	go to state 84
	SubExpression	go to state 102
	Operation	go to state 205
	Expression	go to state 101
	OperatorVoid	go to state 78

State 122:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 123:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our $properties = {'	shift, and go to state 208
	'use constant'	shift, and go to state 43

	Properties	go to state 207
	Constant	go to state 206

State 124:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 125:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 210)

	'$TYPED_'	shift, and go to state 209

State 126:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 210

State 127:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'if ('	shift, and go to state 113
	'my'	shift, and go to state 83
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 90
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_OPEN	shift, and go to state 82
	OP01_PRINT	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 116
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 147 (OPTIONAL-40)
	'foreach my'	reduce using rule 147 (OPTIONAL-40)
	'while ('	reduce using rule 147 (OPTIONAL-40)

	OperatorVoid	go to state 78
	Expression	go to state 101
	Operation	go to state 211
	SubExpression	go to state 102
	ArrayDereferenced	go to state 84
	PAREN-39	go to state 81
	VariableModification	go to state 108
	PLUS-17	go to state 212
	WordScoped	go to state 111
	VariableDeclaration	go to state 94
	Variable	go to state 114
	Operator	go to state 109
	Statement	go to state 89
	LoopLabel	go to state 91
	HashDereferenced	go to state 88
	ArrayReference	go to state 120
	OPTIONAL-40	go to state 119
	Conditional	go to state 99
	HashReference	go to state 97
	Literal	go to state 96

State 128:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 129:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 54

	Type	go to state 213

State 130:

	SubExpression -> Expression .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 131:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> OP10_STRINGIFY_UNARY SubExpression . ')'	(Rule 102)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	')'	shift, and go to state 214
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 132:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 ')'	(Rule 132)
	SubExpression -> Variable .	(Rule 136)

	OP02_METHOD_THINARROW	shift, and go to state 194
	OP03_MATH_INC_DEC	shift, and go to state 192

	')'	reduce using rule 136 (SubExpression)
	';'	reduce using rule 136 (SubExpression)
	']'	reduce using rule 136 (SubExpression)
	'}'	reduce using rule 136 (SubExpression)
	OP04_MATH_POW	reduce using rule 136 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 136 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 136 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 136 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 136 (SubExpression)
	OP08_STRING_CAT	reduce using rule 136 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 136 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 136 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 136 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 136 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 136 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 136 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 136 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 136 (SubExpression)
	OP18_TERNARY	reduce using rule 136 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 136 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 136 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 136 (SubExpression)

State 133:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 215
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	Literal	go to state 96
	HashReference	go to state 97
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120

State 134:

	SubExpression -> LBRACE '}' .	(Rule 141)

	$default	reduce using rule 141 (SubExpression)

State 135:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-51 SubExpression	(Rule 196)

	OP20_HASH_FATARROW	shift, and go to state 216

State 136:

	HashReference -> LBRACE HashEntry . STAR-53 '}'	(Rule 203)

	$default	reduce using rule 202 (STAR-53)

	STAR-53	go to state 217

State 137:

	HashEntry -> HashDereferenced .	(Rule 197)

	$default	reduce using rule 197 (HashEntry)

State 138:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'filehandle_ref'	shift, and go to state 218

State 139:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 175)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)

	VARIABLE_SYMBOL	shift, and go to state 219

State 140:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 89)

	$default	reduce using rule 89 (Operator)

State 141:

	OperatorVoid -> OP19_LOOP_CONTROL OPTIONAL-36 . ';'	(Rule 125)

	';'	shift, and go to state 220

State 142:

	LoopLabel -> WORD .	(Rule 208)

	$default	reduce using rule 208 (LoopLabel)

State 143:

	OPTIONAL-36 -> LoopLabel .	(Rule 119)

	$default	reduce using rule 119 (OPTIONAL-36)

State 144:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	ListElement -> SubExpression .	(Rule 186)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 145:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 188)

	'%{'	shift, and go to state 118

	HashDereferenced	go to state 221

State 146:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 124)

	OP21_LIST_COMMA	shift, and go to state 222

State 147:

	ListElement -> TypeInner . SubExpression	(Rule 187)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 223
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120

State 148:

	PAREN-39 -> LoopLabel COLON .	(Rule 145)

	$default	reduce using rule 145 (PAREN-39)

State 149:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 111)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169

	')'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 150:

	OPTIONAL-35 -> ListElements .	(Rule 117)

	$default	reduce using rule 117 (OPTIONAL-35)

State 151:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	ListElement -> SubExpression .	(Rule 186)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

	')'	reduce using rule 186 (ListElement)
	';'	reduce using rule 186 (ListElement)
	']'	reduce using rule 186 (ListElement)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)

State 152:

	ListElements -> OP01_QW . LPAREN PLUS-49 ')'	(Rule 185)

	LPAREN	shift, and go to state 224

State 153:

	ListElements -> ListElement . STAR-48	(Rule 184)

	$default	reduce using rule 181 (STAR-48)

	STAR-48	go to state 225

State 154:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 . ';'	(Rule 123)

	';'	shift, and go to state 226

State 155:

	ArrayReference -> LBRACKET OPTIONAL-50 . ']'	(Rule 191)

	']'	shift, and go to state 227

State 156:

	OPTIONAL-50 -> ListElements .	(Rule 189)

	$default	reduce using rule 189 (OPTIONAL-50)

State 157:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	SubExpression	go to state 144
	Expression	go to state 130
	TypeInner	go to state 147
	HashDereferenced	go to state 88
	ListElement	go to state 228
	Variable	go to state 132
	WordScoped	go to state 111
	Operator	go to state 109
	Literal	go to state 96
	HashReference	go to state 97
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84

State 158:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 142)

	')'	shift, and go to state 229
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 159:

	Operator -> LPAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)

	FH_REF_SYMBOL_BRACES	shift, and go to state 230

State 160:

	Operation -> Expression ';' .	(Rule 82)

	$default	reduce using rule 82 (Operation)

State 161:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 91)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 132
	WordScoped	go to state 111
	Operator	go to state 109
	SubExpression	go to state 231
	Expression	go to state 130
	HashDereferenced	go to state 88
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	Literal	go to state 96
	HashReference	go to state 97

State 162:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	SubExpression	go to state 232
	Expression	go to state 130
	Operator	go to state 109
	Variable	go to state 132
	WordScoped	go to state 111

State 163:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 94)

	OP06_REGEX_PATTERN	shift, and go to state 233

State 164:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 98)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	Literal	go to state 96
	HashReference	go to state 97
	WordScoped	go to state 111
	Variable	go to state 132
	Operator	go to state 109
	Expression	go to state 130
	SubExpression	go to state 234
	HashDereferenced	go to state 88

State 165:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 103)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 235
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	Literal	go to state 96
	HashReference	go to state 97

State 166:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 108)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	SubExpression	go to state 236
	Expression	go to state 130
	HashDereferenced	go to state 88
	Variable	go to state 132
	WordScoped	go to state 111
	Operator	go to state 109
	Literal	go to state 96
	HashReference	go to state 97
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84

State 167:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 97
	Literal	go to state 96
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	Expression	go to state 130
	SubExpression	go to state 237
	HashDereferenced	go to state 88
	WordScoped	go to state 111
	Variable	go to state 132
	Operator	go to state 109

State 168:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 97)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	HashReference	go to state 97
	Literal	go to state 96
	WordScoped	go to state 111
	Variable	go to state 132
	Operator	go to state 109
	Expression	go to state 130
	SubExpression	go to state 238
	HashDereferenced	go to state 88

State 169:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 110)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 110

	Literal	go to state 239
	VariableOrLiteral	go to state 240
	Variable	go to state 241

State 170:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 96)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	HashReference	go to state 97
	Literal	go to state 96
	Variable	go to state 132
	WordScoped	go to state 111
	Operator	go to state 109
	SubExpression	go to state 242
	Expression	go to state 130
	HashDereferenced	go to state 88

State 171:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 107)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	HashReference	go to state 97
	Literal	go to state 96
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 243

State 172:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 99)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 244
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	Literal	go to state 96
	HashReference	go to state 97

State 173:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 113)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 96
	HashReference	go to state 97
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 245
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132

State 174:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 109)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	Literal	go to state 96
	HashReference	go to state 97
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 246

State 175:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 104)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 247
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	Literal	go to state 96
	HashReference	go to state 97

State 176:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 112)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 88
	SubExpression	go to state 248
	Expression	go to state 130
	Operator	go to state 109
	Variable	go to state 132
	WordScoped	go to state 111
	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120

State 177:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 95)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 96
	HashReference	go to state 97
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	SubExpression	go to state 249
	Expression	go to state 130
	HashDereferenced	go to state 88
	Variable	go to state 132
	WordScoped	go to state 111
	Operator	go to state 109

State 178:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 100)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 179:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 180:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 . ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ListElements	go to state 250
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	SubExpression	go to state 151
	TypeInner	go to state 147
	Expression	go to state 130
	Operator	go to state 109
	ListElement	go to state 153
	Variable	go to state 132
	WordScoped	go to state 111

State 181:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 122)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 96
	HashReference	go to state 97
	ListElements	go to state 251
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	SubExpression	go to state 151
	Expression	go to state 130
	TypeInner	go to state 147
	HashDereferenced	go to state 88
	Variable	go to state 132
	ListElement	go to state 153
	WordScoped	go to state 111
	Operator	go to state 109

State 182:

	OPTIONAL-34 -> PAREN-33 .	(Rule 115)

	$default	reduce using rule 115 (OPTIONAL-34)

State 183:

	PAREN-33 -> STDOUT_STDERR .	(Rule 114)

	$default	reduce using rule 114 (PAREN-33)

State 184:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 92)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP06_REGEX_MATCH	reduce using rule 92 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Operator)
	OP07_STRING_REPEAT	reduce using rule 92 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 185:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 192)

	'}'	shift, and go to state 252

State 186:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 193)

	'}'	shift, and go to state 253

State 187:

	STAR-46 -> STAR-46 . VariableRetrieval	(Rule 169)
	Variable -> VARIABLE_SYMBOL STAR-46 .	(Rule 171)

	OP02_ARRAY_THINARROW	shift, and go to state 256
	OP02_HASH_THINARROW	shift, and go to state 255

	')'	reduce using rule 171 (Variable)
	';'	reduce using rule 171 (Variable)
	']'	reduce using rule 171 (Variable)
	'}'	reduce using rule 171 (Variable)
	COLON	reduce using rule 171 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 171 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 171 (Variable)
	OP04_MATH_POW	reduce using rule 171 (Variable)
	OP06_REGEX_MATCH	reduce using rule 171 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 171 (Variable)
	OP07_STRING_REPEAT	reduce using rule 171 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 171 (Variable)
	OP08_STRING_CAT	reduce using rule 171 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 171 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 171 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 171 (Variable)
	OP13_BITWISE_AND	reduce using rule 171 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 171 (Variable)
	OP15_LOGICAL_AND	reduce using rule 171 (Variable)
	OP16_LOGICAL_OR	reduce using rule 171 (Variable)
	OP17_LIST_RANGE	reduce using rule 171 (Variable)
	OP18_TERNARY	reduce using rule 171 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 171 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 171 (Variable)
	OP21_LIST_COMMA	reduce using rule 171 (Variable)
	OP23_LOGICAL_AND	reduce using rule 171 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 171 (Variable)

	VariableRetrieval	go to state 254

State 188:

	Expression -> WordScoped LPAREN . OPTIONAL-37 ')'	(Rule 131)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 127 (OPTIONAL-37)

	HashReference	go to state 97
	Literal	go to state 96
	OPTIONAL-37	go to state 257
	ArrayDereferenced	go to state 84
	ListElements	go to state 258
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	SubExpression	go to state 151
	TypeInner	go to state 147
	Expression	go to state 130
	Operator	go to state 109
	ListElement	go to state 153
	Variable	go to state 132
	WordScoped	go to state 111

State 189:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 93)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	')'	shift, and go to state 259
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 190:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-42 OPTIONAL-44	(Rule 159)

	')'	shift, and go to state 260
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 191:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 177)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	STDIN	shift, and go to state 263
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 96
	HashReference	go to state 97
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	SubExpression	go to state 262
	Expression	go to state 130
	Operator	go to state 109
	Variable	go to state 132
	SubExpressionOrStdin	go to state 261
	WordScoped	go to state 111

State 192:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 193:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 178)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 264
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120

State 194:

	Expression -> Variable OP02_METHOD_THINARROW . WORD LPAREN OPTIONAL-38 ')'	(Rule 132)

	WORD	shift, and go to state 265

State 195:

	HashReference -> LBRACE . HashEntry STAR-53 '}'	(Rule 203)

	'%{'	shift, and go to state 118
	WORD	shift, and go to state 135

	HashDereferenced	go to state 137
	HashEntry	go to state 136

State 196:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 205)

	'}'	shift, and go to state 266

State 197:

	HashDereferenced -> '%{' Variable . '}'	(Rule 204)

	'}'	shift, and go to state 267

State 198:

	Statement -> OPTIONAL-40 Loop .	(Rule 149)

	$default	reduce using rule 149 (Statement)

State 199:

	Loop -> LoopForEach .	(Rule 161)

	$default	reduce using rule 161 (Loop)

State 200:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	HashReference	go to state 97
	Literal	go to state 96
	WordScoped	go to state 111
	Variable	go to state 132
	Operator	go to state 109
	Expression	go to state 130
	SubExpression	go to state 268
	HashDereferenced	go to state 88

State 201:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	VARIABLE_SYMBOL	shift, and go to state 269

State 202:

	Loop -> LoopFor .	(Rule 160)

	$default	reduce using rule 160 (Loop)

State 203:

	Loop -> LoopWhile .	(Rule 162)

	$default	reduce using rule 162 (Loop)

State 204:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	WORD	shift, and go to state 54

	Type	go to state 270

State 205:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 206:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 207:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our $class_properties = {'	shift, and go to state 271

	'our'	reduce using rule 58 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 58 (OPTIONAL-23)

	OPTIONAL-23	go to state 272
	PropertiesClass	go to state 273

State 208:

	Properties -> 'our $properties = {' . Critic HashEntryTyped STAR-26 '}' ';'	(Rule 65)
	Properties -> 'our $properties = {' . '}' ';' Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 8
	'}'	shift, and go to state 275

	Critic	go to state 274

State 209:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 210)

	WORD	shift, and go to state 276

State 210:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 211:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 212:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'if ('	shift, and go to state 113
	'my'	shift, and go to state 83
	'undef'	shift, and go to state 92
	'}'	shift, and go to state 277
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 90
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_OPEN	shift, and go to state 82
	OP01_PRINT	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 116
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 147 (OPTIONAL-40)
	'foreach my'	reduce using rule 147 (OPTIONAL-40)
	'while ('	reduce using rule 147 (OPTIONAL-40)

	ArrayReference	go to state 120
	OPTIONAL-40	go to state 119
	Conditional	go to state 99
	HashReference	go to state 97
	Literal	go to state 96
	WordScoped	go to state 111
	VariableDeclaration	go to state 94
	Variable	go to state 114
	Operator	go to state 109
	Statement	go to state 89
	LoopLabel	go to state 91
	HashDereferenced	go to state 88
	ArrayDereferenced	go to state 84
	PAREN-39	go to state 81
	VariableModification	go to state 108
	OperatorVoid	go to state 78
	Operation	go to state 278
	Expression	go to state 101
	SubExpression	go to state 102

State 213:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 279

State 214:

	Operator -> OP10_STRINGIFY_UNARY SubExpression ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 215:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 216:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-51 SubExpression	(Rule 196)

	'my'	shift, and go to state 74

	'%{'	reduce using rule 195 (OPTIONAL-51)
	'@{'	reduce using rule 195 (OPTIONAL-51)
	'undef'	reduce using rule 195 (OPTIONAL-51)
	LBRACE	reduce using rule 195 (OPTIONAL-51)
	LBRACKET	reduce using rule 195 (OPTIONAL-51)
	LITERAL_NUMBER	reduce using rule 195 (OPTIONAL-51)
	LITERAL_STRING	reduce using rule 195 (OPTIONAL-51)
	LPAREN	reduce using rule 195 (OPTIONAL-51)
	OP01_CLOSE	reduce using rule 195 (OPTIONAL-51)
	OP01_NAMED	reduce using rule 195 (OPTIONAL-51)
	OP01_OPEN	reduce using rule 195 (OPTIONAL-51)
	OP03_MATH_INC_DEC	reduce using rule 195 (OPTIONAL-51)
	OP05_LOGICAL_NEG	reduce using rule 195 (OPTIONAL-51)
	OP05_MATH_NEG_LPAREN	reduce using rule 195 (OPTIONAL-51)
	OP10_NAMED_UNARY	reduce using rule 195 (OPTIONAL-51)
	OP10_STRINGIFY_UNARY	reduce using rule 195 (OPTIONAL-51)
	OP22_LOGICAL_NEG	reduce using rule 195 (OPTIONAL-51)
	VARIABLE_SYMBOL	reduce using rule 195 (OPTIONAL-51)
	WORD	reduce using rule 195 (OPTIONAL-51)
	WORD_SCOPED	reduce using rule 195 (OPTIONAL-51)

	TypeInner	go to state 280
	OPTIONAL-51	go to state 281

State 217:

	STAR-53 -> STAR-53 . PAREN-52	(Rule 201)
	HashReference -> LBRACE HashEntry STAR-53 . '}'	(Rule 203)

	'}'	shift, and go to state 283
	OP21_LIST_COMMA	shift, and go to state 282

	PAREN-52	go to state 284

State 218:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	FH_REF_SYMBOL	shift, and go to state 285

State 219:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 175)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)

	';'	shift, and go to state 286
	OP19_VARIABLE_ASSIGN	shift, and go to state 287

State 220:

	OperatorVoid -> OP19_LOOP_CONTROL OPTIONAL-36 ';' .	(Rule 125)

	$default	reduce using rule 125 (OperatorVoid)

State 221:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 188)

	$default	reduce using rule 188 (ListElement)

State 222:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 124)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 109
	ListElement	go to state 153
	Variable	go to state 132
	WordScoped	go to state 111
	HashDereferenced	go to state 88
	SubExpression	go to state 151
	Expression	go to state 130
	TypeInner	go to state 147
	ArrayDereferenced	go to state 84
	ListElements	go to state 288
	ArrayReference	go to state 120
	HashReference	go to state 97
	Literal	go to state 96

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	ListElement -> TypeInner SubExpression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

	')'	reduce using rule 187 (ListElement)
	';'	reduce using rule 187 (ListElement)
	']'	reduce using rule 187 (ListElement)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)

State 224:

	ListElements -> OP01_QW LPAREN . PLUS-49 ')'	(Rule 185)

	WORD	shift, and go to state 289

	PLUS-49	go to state 290

State 225:

	STAR-48 -> STAR-48 . PAREN-47	(Rule 180)
	ListElements -> ListElement STAR-48 .	(Rule 184)

	OP21_LIST_COMMA	shift, and go to state 291

	')'	reduce using rule 184 (ListElements)
	';'	reduce using rule 184 (ListElements)
	']'	reduce using rule 184 (ListElements)

	PAREN-47	go to state 292

State 226:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';' .	(Rule 123)

	$default	reduce using rule 123 (OperatorVoid)

State 227:

	ArrayReference -> LBRACKET OPTIONAL-50 ']' .	(Rule 191)

	$default	reduce using rule 191 (ArrayReference)

State 228:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 86)

	OP21_LIST_COMMA	shift, and go to state 293

State 229:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 142)

	$default	reduce using rule 142 (SubExpression)

State 230:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ListElements	go to state 294
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	SubExpression	go to state 151
	Expression	go to state 130
	TypeInner	go to state 147
	Operator	go to state 109
	Variable	go to state 132
	ListElement	go to state 153
	WordScoped	go to state 111

State 231:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP06_REGEX_MATCH	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP07_STRING_REPEAT	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 233:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 94)

	$default	reduce using rule 94 (Operator)

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP08_STRING_CAT	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 236:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 237:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 238:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 97 (Operator)
	OP08_STRING_CAT	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 239:

	VariableOrLiteral -> Literal .	(Rule 212)

	$default	reduce using rule 212 (VariableOrLiteral)

State 240:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 110)

	COLON	shift, and go to state 295

State 241:

	VariableOrLiteral -> Variable .	(Rule 211)

	$default	reduce using rule 211 (VariableOrLiteral)

State 242:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_STRING_REPEAT	shift, and go to state 177

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 96 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 243:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 244:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 245:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176

	')'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 246:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 247:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 248:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169

	')'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 249:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP07_STRING_REPEAT	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 250:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements . ';'	(Rule 121)

	';'	shift, and go to state 296

State 251:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 122)

	';'	shift, and go to state 297

State 252:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 192)

	$default	reduce using rule 192 (ArrayDereferenced)

State 253:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 193)

	$default	reduce using rule 193 (ArrayDereferenced)

State 254:

	STAR-46 -> STAR-46 VariableRetrieval .	(Rule 169)

	$default	reduce using rule 169 (STAR-46)

State 255:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 173)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 174)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 298
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 299
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120

State 256:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 172)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	Literal	go to state 96
	HashReference	go to state 97
	Operator	go to state 109
	Variable	go to state 132
	WordScoped	go to state 111
	HashDereferenced	go to state 88
	SubExpression	go to state 300
	Expression	go to state 130

State 257:

	Expression -> WordScoped LPAREN OPTIONAL-37 . ')'	(Rule 131)

	')'	shift, and go to state 301

State 258:

	OPTIONAL-37 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-37)

State 259:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 260:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-42 OPTIONAL-44	(Rule 159)

	LBRACE	shift, and go to state 303

	CodeBlock	go to state 302

State 261:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 177)

	';'	shift, and go to state 304

State 262:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	SubExpressionOrStdin -> SubExpression .	(Rule 143)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

	';'	reduce using rule 143 (SubExpressionOrStdin)

State 263:

	SubExpressionOrStdin -> STDIN .	(Rule 144)

	$default	reduce using rule 144 (SubExpressionOrStdin)

State 264:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 178)

	';'	shift, and go to state 305
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 265:

	Expression -> Variable OP02_METHOD_THINARROW WORD . LPAREN OPTIONAL-38 ')'	(Rule 132)

	LPAREN	shift, and go to state 306

State 266:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 205)

	$default	reduce using rule 205 (HashDereferenced)

State 267:

	HashDereferenced -> '%{' Variable '}' .	(Rule 204)

	$default	reduce using rule 204 (HashDereferenced)

State 268:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 307
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 269:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	LPAREN	shift, and go to state 308

State 270:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 164)

	VARIABLE_SYMBOL	shift, and go to state 309

State 271:

	PropertiesClass -> 'our $class_properties = {' . Critic HashEntryTyped STAR-28 '}' ';'	(Rule 70)

	'## no critic qw('	shift, and go to state 8

	Critic	go to state 310

State 272:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 311

State 273:

	OPTIONAL-23 -> PropertiesClass .	(Rule 57)

	$default	reduce using rule 57 (OPTIONAL-23)

State 274:

	Properties -> 'our $properties = {' Critic . HashEntryTyped STAR-26 '}' ';'	(Rule 65)

	'%{'	shift, and go to state 118
	WORD	shift, and go to state 314

	HashDereferenced	go to state 312
	HashEntryTyped	go to state 313

State 275:

	Properties -> 'our $properties = {' '}' . ';' Critic	(Rule 66)

	';'	shift, and go to state 315

State 276:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 210)

	OP19_VARIABLE_ASSIGN	shift, and go to state 316

State 277:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 317

State 278:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 279:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 318

State 280:

	OPTIONAL-51 -> TypeInner .	(Rule 194)

	$default	reduce using rule 194 (OPTIONAL-51)

State 281:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-51 . SubExpression	(Rule 196)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	HashReference	go to state 97
	Literal	go to state 96
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 319

State 282:

	PAREN-52 -> OP21_LIST_COMMA . HashEntry	(Rule 200)

	'%{'	shift, and go to state 118
	WORD	shift, and go to state 135

	HashDereferenced	go to state 137
	HashEntry	go to state 320

State 283:

	HashReference -> LBRACE HashEntry STAR-53 '}' .	(Rule 203)

	$default	reduce using rule 203 (HashReference)

State 284:

	STAR-53 -> STAR-53 PAREN-52 .	(Rule 201)

	$default	reduce using rule 201 (STAR-53)

State 285:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 321

State 286:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 175)

	$default	reduce using rule 175 (VariableDeclaration)

State 287:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 176)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	STDIN	shift, and go to state 263
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 96
	HashReference	go to state 97
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 262
	Operator	go to state 109
	SubExpressionOrStdin	go to state 322
	WordScoped	go to state 111
	Variable	go to state 132

State 288:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 124)

	';'	shift, and go to state 323

State 289:

	PLUS-49 -> WORD .	(Rule 183)

	$default	reduce using rule 183 (PLUS-49)

State 290:

	PLUS-49 -> PLUS-49 . WORD	(Rule 182)
	ListElements -> OP01_QW LPAREN PLUS-49 . ')'	(Rule 185)

	')'	shift, and go to state 324
	WORD	shift, and go to state 325

State 291:

	PAREN-47 -> OP21_LIST_COMMA . ListElement	(Rule 179)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 109
	WordScoped	go to state 111
	ListElement	go to state 326
	Variable	go to state 132
	HashDereferenced	go to state 88
	Expression	go to state 130
	TypeInner	go to state 147
	SubExpression	go to state 151
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	Literal	go to state 96
	HashReference	go to state 97

State 292:

	STAR-48 -> STAR-48 PAREN-47 .	(Rule 180)

	$default	reduce using rule 180 (STAR-48)

State 293:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 109
	Variable	go to state 132
	ListElement	go to state 153
	WordScoped	go to state 111
	HashDereferenced	go to state 88
	SubExpression	go to state 151
	TypeInner	go to state 147
	Expression	go to state 130
	ArrayDereferenced	go to state 84
	ListElements	go to state 327
	ArrayReference	go to state 120
	Literal	go to state 96
	HashReference	go to state 97

State 294:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 84)

	')'	shift, and go to state 328

State 295:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 110)

	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 110

	Variable	go to state 241
	VariableOrLiteral	go to state 329
	Literal	go to state 239

State 296:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 297:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 122)

	$default	reduce using rule 122 (OperatorVoid)

State 298:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 174)
	WordScoped -> WORD .	(Rule 206)

	'}'	shift, and go to state 330

	LPAREN	reduce using rule 206 (WordScoped)

State 299:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 173)

	'}'	shift, and go to state 331
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 300:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 172)

	']'	shift, and go to state 332
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 301:

	Expression -> WordScoped LPAREN OPTIONAL-37 ')' .	(Rule 131)

	$default	reduce using rule 131 (Expression)

State 302:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-42 OPTIONAL-44	(Rule 159)

	$default	reduce using rule 155 (STAR-42)

	STAR-42	go to state 333

State 303:

	CodeBlock -> LBRACE . PLUS-45 '}'	(Rule 168)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'if ('	shift, and go to state 113
	'my'	shift, and go to state 83
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 90
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_OPEN	shift, and go to state 82
	OP01_PRINT	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 116
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 147 (OPTIONAL-40)
	'foreach my'	reduce using rule 147 (OPTIONAL-40)
	'while ('	reduce using rule 147 (OPTIONAL-40)

	PLUS-45	go to state 335
	OperatorVoid	go to state 78
	Operation	go to state 334
	Expression	go to state 101
	SubExpression	go to state 102
	ArrayDereferenced	go to state 84
	PAREN-39	go to state 81
	VariableModification	go to state 108
	WordScoped	go to state 111
	Variable	go to state 114
	VariableDeclaration	go to state 94
	Operator	go to state 109
	Statement	go to state 89
	LoopLabel	go to state 91
	HashDereferenced	go to state 88
	ArrayReference	go to state 120
	OPTIONAL-40	go to state 119
	Conditional	go to state 99
	HashReference	go to state 97
	Literal	go to state 96

State 304:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 177)

	$default	reduce using rule 177 (VariableModification)

State 305:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableModification)

State 306:

	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN . OPTIONAL-38 ')'	(Rule 132)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 129 (OPTIONAL-38)

	HashDereferenced	go to state 88
	SubExpression	go to state 151
	TypeInner	go to state 147
	Expression	go to state 130
	Operator	go to state 109
	Variable	go to state 132
	ListElement	go to state 153
	WordScoped	go to state 111
	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ListElements	go to state 336
	OPTIONAL-38	go to state 337
	ArrayReference	go to state 120

State 307:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 165)

	LBRACE	shift, and go to state 303

	CodeBlock	go to state 338

State 308:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 96
	HashReference	go to state 97
	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	SubExpression	go to state 339
	Expression	go to state 130
	HashDereferenced	go to state 88
	Variable	go to state 132
	WordScoped	go to state 111
	Operator	go to state 109

State 309:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 164)

	LPAREN	shift, and go to state 340

State 310:

	PropertiesClass -> 'our $class_properties = {' Critic . HashEntryTyped STAR-28 '}' ';'	(Rule 70)

	'%{'	shift, and go to state 118
	WORD	shift, and go to state 314

	HashEntryTyped	go to state 341
	HashDereferenced	go to state 312

State 311:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 342
	LITERAL_NUMBER	shift, and go to state 345

	MethodOrSubroutine	go to state 344
	Subroutine	go to state 343
	Method	go to state 346

State 312:

	HashEntryTyped -> HashDereferenced .	(Rule 199)

	$default	reduce using rule 199 (HashEntryTyped)

State 313:

	Properties -> 'our $properties = {' Critic HashEntryTyped . STAR-26 '}' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 347

State 314:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 198)

	OP20_HASH_FATARROW	shift, and go to state 348

State 315:

	Properties -> 'our $properties = {' '}' ';' . Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 8

	Critic	go to state 349

State 316:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 210)

	$default	reduce using rule 210 (TypeInner)

State 317:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 318:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 352
	OP21_LIST_COMMA	shift, and go to state 351

	PAREN-18	go to state 350

State 319:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-51 SubExpression .	(Rule 196)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

	'}'	reduce using rule 196 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 196 (HashEntry)

State 320:

	PAREN-52 -> OP21_LIST_COMMA HashEntry .	(Rule 200)

	$default	reduce using rule 200 (PAREN-52)

State 321:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	LITERAL_STRING	shift, and go to state 353

State 322:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 176)

	';'	shift, and go to state 354

State 323:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 124)

	$default	reduce using rule 124 (OperatorVoid)

State 324:

	ListElements -> OP01_QW LPAREN PLUS-49 ')' .	(Rule 185)

	$default	reduce using rule 185 (ListElements)

State 325:

	PLUS-49 -> PLUS-49 WORD .	(Rule 182)

	$default	reduce using rule 182 (PLUS-49)

State 326:

	PAREN-47 -> OP21_LIST_COMMA ListElement .	(Rule 179)

	$default	reduce using rule 179 (PAREN-47)

State 327:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 86)

	')'	shift, and go to state 355

State 328:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 329:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 110)

	$default	reduce using rule 110 (Operator)

State 330:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 174)

	$default	reduce using rule 174 (VariableRetrieval)

State 331:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 173)

	$default	reduce using rule 173 (VariableRetrieval)

State 332:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 172)

	$default	reduce using rule 172 (VariableRetrieval)

State 333:

	STAR-42 -> STAR-42 . PAREN-41	(Rule 154)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-42 . OPTIONAL-44	(Rule 159)

	'else'	shift, and go to state 360
	'elsif ('	shift, and go to state 359

	$end	reduce using rule 158 (OPTIONAL-44)
	'%{'	reduce using rule 158 (OPTIONAL-44)
	'@{'	reduce using rule 158 (OPTIONAL-44)
	'for my integer'	reduce using rule 158 (OPTIONAL-44)
	'foreach my'	reduce using rule 158 (OPTIONAL-44)
	'if ('	reduce using rule 158 (OPTIONAL-44)
	'my'	reduce using rule 158 (OPTIONAL-44)
	'undef'	reduce using rule 158 (OPTIONAL-44)
	'while ('	reduce using rule 158 (OPTIONAL-44)
	'}'	reduce using rule 158 (OPTIONAL-44)
	LBRACE	reduce using rule 158 (OPTIONAL-44)
	LBRACKET	reduce using rule 158 (OPTIONAL-44)
	LITERAL_NUMBER	reduce using rule 158 (OPTIONAL-44)
	LITERAL_STRING	reduce using rule 158 (OPTIONAL-44)
	LPAREN	reduce using rule 158 (OPTIONAL-44)
	OP01_CLOSE	reduce using rule 158 (OPTIONAL-44)
	OP01_NAMED	reduce using rule 158 (OPTIONAL-44)
	OP01_NAMED_VOID	reduce using rule 158 (OPTIONAL-44)
	OP01_OPEN	reduce using rule 158 (OPTIONAL-44)
	OP01_PRINT	reduce using rule 158 (OPTIONAL-44)
	OP03_MATH_INC_DEC	reduce using rule 158 (OPTIONAL-44)
	OP05_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-44)
	OP05_MATH_NEG_LPAREN	reduce using rule 158 (OPTIONAL-44)
	OP10_NAMED_UNARY	reduce using rule 158 (OPTIONAL-44)
	OP10_STRINGIFY_UNARY	reduce using rule 158 (OPTIONAL-44)
	OP19_LOOP_CONTROL	reduce using rule 158 (OPTIONAL-44)
	OP22_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-44)
	VARIABLE_SYMBOL	reduce using rule 158 (OPTIONAL-44)
	WORD	reduce using rule 158 (OPTIONAL-44)
	WORD_SCOPED	reduce using rule 158 (OPTIONAL-44)

	OPTIONAL-44	go to state 356
	PAREN-43	go to state 357
	PAREN-41	go to state 358

State 334:

	PLUS-45 -> Operation .	(Rule 167)

	$default	reduce using rule 167 (PLUS-45)

State 335:

	PLUS-45 -> PLUS-45 . Operation	(Rule 166)
	CodeBlock -> LBRACE PLUS-45 . '}'	(Rule 168)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'if ('	shift, and go to state 113
	'my'	shift, and go to state 83
	'undef'	shift, and go to state 92
	'}'	shift, and go to state 362
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 90
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_OPEN	shift, and go to state 82
	OP01_PRINT	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 116
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 147 (OPTIONAL-40)
	'foreach my'	reduce using rule 147 (OPTIONAL-40)
	'while ('	reduce using rule 147 (OPTIONAL-40)

	PAREN-39	go to state 81
	VariableModification	go to state 108
	ArrayDereferenced	go to state 84
	Operation	go to state 361
	Expression	go to state 101
	SubExpression	go to state 102
	OperatorVoid	go to state 78
	Literal	go to state 96
	HashReference	go to state 97
	OPTIONAL-40	go to state 119
	Conditional	go to state 99
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	Operator	go to state 109
	Statement	go to state 89
	LoopLabel	go to state 91
	WordScoped	go to state 111
	VariableDeclaration	go to state 94
	Variable	go to state 114

State 336:

	OPTIONAL-38 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-38)

State 337:

	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 . ')'	(Rule 132)

	')'	shift, and go to state 363

State 338:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (LoopWhile)

State 339:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 163)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 364
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 340:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'my'	shift, and go to state 74
	'undef'	shift, and go to state 92
	KEYS_OR_VALUES	shift, and go to state 145
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP01_QW	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 96
	HashReference	go to state 97
	ArrayReference	go to state 120
	ListElements	go to state 365
	ArrayDereferenced	go to state 84
	Expression	go to state 130
	TypeInner	go to state 147
	SubExpression	go to state 151
	HashDereferenced	go to state 88
	WordScoped	go to state 111
	Variable	go to state 132
	ListElement	go to state 153
	Operator	go to state 109

State 341:

	PropertiesClass -> 'our $class_properties = {' Critic HashEntryTyped . STAR-28 '}' ';'	(Rule 70)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 366

State 342:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	TYPE_METHOD	shift, and go to state 367
	WORD	shift, and go to state 54

	Type	go to state 55

State 343:

	MethodOrSubroutine -> Subroutine .	(Rule 81)

	$default	reduce using rule 81 (MethodOrSubroutine)

State 344:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 345:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 368

State 346:

	MethodOrSubroutine -> Method .	(Rule 80)

	$default	reduce using rule 80 (MethodOrSubroutine)

State 347:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our $properties = {' Critic HashEntryTyped STAR-26 . '}' ';'	(Rule 65)

	'}'	shift, and go to state 369
	OP21_LIST_COMMA	shift, and go to state 370

	PAREN-25	go to state 371

State 348:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 198)

	'my'	shift, and go to state 74

	TypeInner	go to state 372

State 349:

	Properties -> 'our $properties = {' '}' ';' Critic .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 350:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 351:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 373

State 352:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 374

State 353:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 375

State 354:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 176)

	$default	reduce using rule 176 (VariableDeclaration)

State 355:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 356:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-42 OPTIONAL-44 .	(Rule 159)

	$default	reduce using rule 159 (Conditional)

State 357:

	OPTIONAL-44 -> PAREN-43 .	(Rule 157)

	$default	reduce using rule 157 (OPTIONAL-44)

State 358:

	STAR-42 -> STAR-42 PAREN-41 .	(Rule 154)

	$default	reduce using rule 154 (STAR-42)

State 359:

	PAREN-41 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 153)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 120
	ArrayDereferenced	go to state 84
	Literal	go to state 96
	HashReference	go to state 97
	WordScoped	go to state 111
	Variable	go to state 132
	Operator	go to state 109
	Expression	go to state 130
	SubExpression	go to state 376
	HashDereferenced	go to state 88

State 360:

	PAREN-43 -> 'else' . CodeBlock	(Rule 156)

	LBRACE	shift, and go to state 303

	CodeBlock	go to state 377

State 361:

	PLUS-45 -> PLUS-45 Operation .	(Rule 166)

	$default	reduce using rule 166 (PLUS-45)

State 362:

	CodeBlock -> LBRACE PLUS-45 '}' .	(Rule 168)

	$default	reduce using rule 168 (CodeBlock)

State 363:

	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 ')' .	(Rule 132)

	$default	reduce using rule 132 (Expression)

State 364:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 109)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	HashReference	go to state 97
	Literal	go to state 96
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 378

State 365:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 164)

	')'	shift, and go to state 379

State 366:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 68)
	PropertiesClass -> 'our $class_properties = {' Critic HashEntryTyped STAR-28 . '}' ';'	(Rule 70)

	'}'	shift, and go to state 382
	OP21_LIST_COMMA	shift, and go to state 380

	PAREN-27	go to state 381

State 367:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	VARIABLE_SYMBOL	shift, and go to state 383

State 368:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 369:

	Properties -> 'our $properties = {' Critic HashEntryTyped STAR-26 '}' . ';'	(Rule 65)

	';'	shift, and go to state 384

State 370:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 62)

	'%{'	shift, and go to state 118
	WORD	shift, and go to state 314

	HashEntryTyped	go to state 385
	HashDereferenced	go to state 312

State 371:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 372:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 198)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 97
	Literal	go to state 96
	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	HashDereferenced	go to state 88
	SubExpression	go to state 386
	Expression	go to state 130
	Operator	go to state 109
	Variable	go to state 132
	WordScoped	go to state 111

State 373:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 54

	Type	go to state 387

State 374:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 388

State 375:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 87)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 133
	OP01_OPEN	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 84
	ArrayReference	go to state 120
	Literal	go to state 96
	HashReference	go to state 97
	Operator	go to state 109
	WordScoped	go to state 111
	Variable	go to state 132
	HashDereferenced	go to state 88
	Expression	go to state 130
	SubExpression	go to state 389

State 376:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	PAREN-41 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 153)

	')'	shift, and go to state 390
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

State 377:

	PAREN-43 -> 'else' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (PAREN-43)

State 378:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 391
	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 379:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 164)

	LBRACE	shift, and go to state 303

	CodeBlock	go to state 392

State 380:

	PAREN-27 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 67)

	'%{'	shift, and go to state 118
	WORD	shift, and go to state 314

	HashEntryTyped	go to state 393
	HashDereferenced	go to state 312

State 381:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 382:

	PropertiesClass -> 'our $class_properties = {' Critic HashEntryTyped STAR-28 '}' . ';'	(Rule 70)

	';'	shift, and go to state 394

State 383:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'= sub {'	shift, and go to state 395

State 384:

	Properties -> 'our $properties = {' Critic HashEntryTyped STAR-26 '}' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 385:

	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 386:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 198)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169
	OP23_LOGICAL_AND	shift, and go to state 176
	OP24_LOGICAL_OR_XOR	shift, and go to state 173

	'}'	reduce using rule 198 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 198 (HashEntryTyped)

State 387:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 396

State 388:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 389:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 87)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 95)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 97)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 98)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 103)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 104)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 107)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 108)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 109)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 112)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 113)

	OP04_MATH_POW	shift, and go to state 161
	OP06_REGEX_MATCH	shift, and go to state 163
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 170
	OP07_STRING_REPEAT	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 168
	OP08_STRING_CAT	shift, and go to state 164
	OP09_BITWISE_SHIFT	shift, and go to state 172
	OP11_COMPARE_LT_GT	shift, and go to state 165
	OP12_COMPARE_EQ_NE	shift, and go to state 175
	OP13_BITWISE_AND	shift, and go to state 167
	OP14_BITWISE_OR_XOR	shift, and go to state 162
	OP15_LOGICAL_AND	shift, and go to state 171
	OP16_LOGICAL_OR	shift, and go to state 166
	OP17_LIST_RANGE	shift, and go to state 174
	OP18_TERNARY	shift, and go to state 169

	')'	reduce using rule 87 (Operator)
	';'	reduce using rule 87 (Operator)
	']'	reduce using rule 87 (Operator)
	'}'	reduce using rule 87 (Operator)
	OP21_LIST_COMMA	reduce using rule 87 (Operator)
	OP23_LOGICAL_AND	reduce using rule 87 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 87 (Operator)

State 390:

	PAREN-41 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 153)

	LBRACE	shift, and go to state 303

	CodeBlock	go to state 397

State 391:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 163)

	LBRACE	shift, and go to state 303

	CodeBlock	go to state 398

State 392:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 164)

	$default	reduce using rule 164 (LoopForEach)

State 393:

	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 67)

	$default	reduce using rule 67 (PAREN-27)

State 394:

	PropertiesClass -> 'our $class_properties = {' Critic HashEntryTyped STAR-28 '}' ';' .	(Rule 70)

	$default	reduce using rule 70 (PropertiesClass)

State 395:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'( my'	shift, and go to state 399

	'%{'	reduce using rule 72 (OPTIONAL-29)
	'@{'	reduce using rule 72 (OPTIONAL-29)
	'for my integer'	reduce using rule 72 (OPTIONAL-29)
	'foreach my'	reduce using rule 72 (OPTIONAL-29)
	'if ('	reduce using rule 72 (OPTIONAL-29)
	'my'	reduce using rule 72 (OPTIONAL-29)
	'undef'	reduce using rule 72 (OPTIONAL-29)
	'while ('	reduce using rule 72 (OPTIONAL-29)
	LBRACE	reduce using rule 72 (OPTIONAL-29)
	LBRACKET	reduce using rule 72 (OPTIONAL-29)
	LITERAL_NUMBER	reduce using rule 72 (OPTIONAL-29)
	LITERAL_STRING	reduce using rule 72 (OPTIONAL-29)
	LPAREN	reduce using rule 72 (OPTIONAL-29)
	OP01_CLOSE	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT	reduce using rule 72 (OPTIONAL-29)
	OP03_MATH_INC_DEC	reduce using rule 72 (OPTIONAL-29)
	OP05_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	OP05_MATH_NEG_LPAREN	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP10_STRINGIFY_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL	reduce using rule 72 (OPTIONAL-29)
	OP22_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	VARIABLE_SYMBOL	reduce using rule 72 (OPTIONAL-29)
	WORD	reduce using rule 72 (OPTIONAL-29)
	WORD_SCOPED	reduce using rule 72 (OPTIONAL-29)

	OPTIONAL-29	go to state 401
	MethodArguments	go to state 400

State 396:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 397:

	PAREN-41 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 153)

	$default	reduce using rule 153 (PAREN-41)

State 398:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (LoopFor)

State 399:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	TYPE_CLASS_OR_SELF	shift, and go to state 402

State 400:

	OPTIONAL-29 -> MethodArguments .	(Rule 71)

	$default	reduce using rule 71 (OPTIONAL-29)

State 401:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 . PLUS-30 '}' ';'	(Rule 75)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'if ('	shift, and go to state 113
	'my'	shift, and go to state 83
	'undef'	shift, and go to state 92
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 90
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_OPEN	shift, and go to state 82
	OP01_PRINT	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 116
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 147 (OPTIONAL-40)
	'foreach my'	reduce using rule 147 (OPTIONAL-40)
	'while ('	reduce using rule 147 (OPTIONAL-40)

	ArrayDereferenced	go to state 84
	VariableModification	go to state 108
	PAREN-39	go to state 81
	OperatorVoid	go to state 78
	SubExpression	go to state 102
	Expression	go to state 101
	Operation	go to state 404
	OPTIONAL-40	go to state 119
	Conditional	go to state 99
	ArrayReference	go to state 120
	Literal	go to state 96
	HashReference	go to state 97
	PLUS-30	go to state 403
	LoopLabel	go to state 91
	Operator	go to state 109
	Statement	go to state 89
	Variable	go to state 114
	VariableDeclaration	go to state 94
	WordScoped	go to state 111
	HashDereferenced	go to state 88

State 402:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	$default	reduce using rule 78 (STAR-32)

	STAR-32	go to state 405

State 403:

	PLUS-30 -> PLUS-30 . Operation	(Rule 73)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 . '}' ';'	(Rule 75)

	'%{'	shift, and go to state 118
	'@{'	shift, and go to state 107
	'if ('	shift, and go to state 113
	'my'	shift, and go to state 83
	'undef'	shift, and go to state 92
	'}'	shift, and go to state 406
	LBRACE	shift, and go to state 80
	LBRACKET	shift, and go to state 98
	LITERAL_NUMBER	shift, and go to state 86
	LITERAL_STRING	shift, and go to state 115
	LPAREN	shift, and go to state 100
	OP01_CLOSE	shift, and go to state 104
	OP01_NAMED	shift, and go to state 90
	OP01_NAMED_VOID	shift, and go to state 95
	OP01_OPEN	shift, and go to state 82
	OP01_PRINT	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 106
	OP05_MATH_NEG_LPAREN	shift, and go to state 112
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_STRINGIFY_UNARY	shift, and go to state 79
	OP19_LOOP_CONTROL	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 93
	VARIABLE_SYMBOL	shift, and go to state 110
	WORD	shift, and go to state 116
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 147 (OPTIONAL-40)
	'foreach my'	reduce using rule 147 (OPTIONAL-40)
	'while ('	reduce using rule 147 (OPTIONAL-40)

	SubExpression	go to state 102
	Expression	go to state 101
	Operation	go to state 407
	OperatorVoid	go to state 78
	VariableModification	go to state 108
	PAREN-39	go to state 81
	ArrayDereferenced	go to state 84
	HashDereferenced	go to state 88
	LoopLabel	go to state 91
	Statement	go to state 89
	Operator	go to state 109
	VariableDeclaration	go to state 94
	Variable	go to state 114
	WordScoped	go to state 111
	Literal	go to state 96
	HashReference	go to state 97
	OPTIONAL-40	go to state 119
	Conditional	go to state 99
	ArrayReference	go to state 120

State 404:

	PLUS-30 -> Operation .	(Rule 74)

	$default	reduce using rule 74 (PLUS-30)

State 405:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 77)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	')'	shift, and go to state 408
	OP21_LIST_COMMA	shift, and go to state 409

	PAREN-31	go to state 410

State 406:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' . ';'	(Rule 75)

	';'	shift, and go to state 411

State 407:

	PLUS-30 -> PLUS-30 Operation .	(Rule 73)

	$default	reduce using rule 73 (PLUS-30)

State 408:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	OP19_VARIABLE_ASSIGN	shift, and go to state 412

State 409:

	PAREN-31 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 76)

	'my'	shift, and go to state 413

State 410:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 77)

	$default	reduce using rule 77 (STAR-32)

State 411:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';' .	(Rule 75)

	$default	reduce using rule 75 (Method)

State 412:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 79)

	'@_;'	shift, and go to state 414

State 413:

	PAREN-31 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 76)

	WORD	shift, and go to state 54

	Type	go to state 415

State 414:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 79)

	$default	reduce using rule 79 (MethodArguments)

State 415:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 76)

	VARIABLE_SYMBOL	shift, and go to state 416

State 416:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 76)

	$default	reduce using rule 76 (PAREN-31)


Summary:
--------
Number of rules         : 215
Number of terminals     : 88
Number of non-terminals : 102
Number of states        : 417
