Conflicts:
----------
Conflict in state 165 between rule 85 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 165 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 165 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 165 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 165 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 165 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 165 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 165 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 165 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 165 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 165 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 165 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 165 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 165 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 165 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 165 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 181 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 181 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 181 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 181 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 181 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 181 between rule 92 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 181 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 181 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 181 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 181 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 181 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 181 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 181 between rule 92 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 181 between rule 92 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 190 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 190 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 190 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 190 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 190 between rule 109 and token OP18_TERNARY resolved as shift.
Conflict in state 190 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 190 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 190 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 190 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 190 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 190 between rule 109 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 190 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 190 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 190 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 190 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 190 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 192 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 192 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 192 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 192 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 192 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 192 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 192 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 192 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 192 between rule 100 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 192 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 192 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 192 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 192 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 192 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 192 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 192 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 193 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 193 between rule 99 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 193 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 193 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 193 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 193 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 193 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 193 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 193 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 193 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 193 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 193 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 193 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 212 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 212 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 212 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 212 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 212 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 212 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 212 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 212 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 212 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 212 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 212 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 212 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 212 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 212 between rule 85 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 223 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 223 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 223 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 223 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 223 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 223 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 223 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 223 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 223 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 223 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 223 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 223 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 223 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 223 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 224 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 224 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 224 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 224 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 224 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 224 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 224 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 224 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 224 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 224 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 224 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 224 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 225 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 225 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 225 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 225 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 225 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 225 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 225 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 225 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 225 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 225 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 225 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 225 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 225 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 225 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 225 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 226 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 226 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 226 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 226 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 226 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 226 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 226 between rule 95 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 226 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 226 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 226 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 226 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 226 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 226 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 226 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 227 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 227 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 227 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 227 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 227 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 227 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 227 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 227 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 227 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 227 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 227 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 227 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 227 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 227 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 227 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 228 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 228 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 228 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 228 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 228 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 228 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 228 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 228 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 228 between rule 97 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 228 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 228 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 228 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 228 between rule 97 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 228 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 228 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 228 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 230 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 230 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 230 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 230 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 230 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 230 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 230 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 230 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 230 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 230 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 230 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 230 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 230 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 230 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 231 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 231 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 231 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 231 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 231 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 231 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 231 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 231 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 231 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 231 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 231 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 231 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 231 between rule 102 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 231 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 232 between rule 101 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 232 between rule 101 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 232 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 232 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 232 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 232 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 232 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 232 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 232 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 232 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 232 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 232 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 232 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 232 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 233 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 233 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 233 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 233 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 233 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 233 between rule 107 and token OP17_LIST_RANGE resolved as error.
Conflict in state 233 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 233 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 233 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 233 between rule 107 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 233 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 233 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 233 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 233 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 233 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 233 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 234 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 234 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 234 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 234 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 234 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 234 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 234 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 234 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 234 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 234 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 234 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 234 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 234 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 234 between rule 98 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 235 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 235 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 235 between rule 111 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 235 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 235 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 235 between rule 111 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 235 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 235 between rule 111 and token OP18_TERNARY resolved as shift.
Conflict in state 235 between rule 111 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 235 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 235 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 235 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 235 between rule 111 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 235 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 236 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 236 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 236 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 236 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 236 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 236 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 91 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 236 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 236 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 236 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 236 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 236 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 236 between rule 91 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 236 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 236 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 236 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 238 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 238 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 238 between rule 96 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 238 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 238 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 238 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 238 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 238 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 238 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 238 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 238 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 238 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 238 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 238 between rule 96 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 363 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 363 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 363 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 363 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 363 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 363 between rule 107 and token OP17_LIST_RANGE resolved as error.
Conflict in state 363 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 363 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 363 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 363 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 363 between rule 107 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 363 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 363 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 363 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 363 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 363 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 377 between rule 87 and token OP08_STRING_CAT resolved as shift.
Conflict in state 377 between rule 87 and token OP18_TERNARY resolved as shift.
Conflict in state 377 between rule 87 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 377 between rule 87 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 377 between rule 87 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 377 between rule 87 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 377 between rule 87 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 377 between rule 87 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 377 between rule 87 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 377 between rule 87 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 377 between rule 87 and token OP04_MATH_POW resolved as shift.
Conflict in state 377 between rule 87 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 377 between rule 87 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 377 between rule 87 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 377 between rule 87 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 377 between rule 87 and token OP24_LOGICAL_OR_XOR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	OPTIONAL-23 -> PropertiesClass
58:	OPTIONAL-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';'
66:	Properties -> 'our %properties = (' ')' ';' Critic
67:	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped
68:	STAR-28 -> STAR-28 PAREN-27
69:	STAR-28 -> /* empty */
70:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';'
71:	OPTIONAL-29 -> MethodArguments
72:	OPTIONAL-29 -> /* empty */
73:	PLUS-30 -> PLUS-30 Operation
74:	PLUS-30 -> Operation
75:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'
76:	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
77:	STAR-32 -> STAR-32 PAREN-31
78:	STAR-32 -> /* empty */
79:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'
80:	MethodOrSubroutine -> Method
81:	MethodOrSubroutine -> Subroutine
82:	Operation -> Expression ';'
83:	Operation -> Statement
84:	Operator -> LEFT_PAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
85:	Operator -> OP01_NAMED SubExpression
86:	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
87:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
88:	Operator -> OP01_CLOSE FH_REF_SYMBOL
89:	Operator -> OP03_MATH_INC_DEC Variable
90:	Operator -> Variable OP03_MATH_INC_DEC
91:	Operator -> SubExpression OP04_MATH_POW SubExpression
92:	Operator -> OP05_LOGICAL_NEG SubExpression
93:	Operator -> OP05_MATH_NEG_LEFT_PAREN SubExpression ')'
94:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
95:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
96:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
97:	Operator -> SubExpression OP08_STRING_CAT SubExpression
98:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
99:	Operator -> OP10_NAMED_UNARY SubExpression
100:	Operator -> OP10_NAMED_UNARY_STRINGIFY SubExpression
101:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
102:	Operator -> SubExpression OP12_COMPARE_EQ_NEQ SubExpression
103:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
104:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
105:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
106:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
107:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
108:	Operator -> SubExpression OP18_TERNARY Variable COLON Variable
109:	Operator -> OP22_LOGICAL_NOT SubExpression
110:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
111:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
112:	PAREN-33 -> STDOUT_STDERR
113:	OPTIONAL-34 -> PAREN-33
114:	OPTIONAL-34 -> /* empty */
115:	OPTIONAL-35 -> ListElements
116:	OPTIONAL-35 -> /* empty */
117:	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';'
118:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
119:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';'
120:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
121:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
122:	OPTIONAL-36 -> ListElements
123:	OPTIONAL-36 -> /* empty */
124:	OPTIONAL-37 -> ListElements
125:	OPTIONAL-37 -> /* empty */
126:	Expression -> Operator
127:	Expression -> WordScoped LEFT_PAREN OPTIONAL-36 ')'
128:	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 ')'
129:	SubExpression -> Expression
130:	SubExpression -> 'undef'
131:	SubExpression -> Literal
132:	SubExpression -> Variable
133:	SubExpression -> ArrayReference
134:	SubExpression -> ArrayDereferenced
135:	SubExpression -> HashReference
136:	SubExpression -> HashDereferenced
137:	SubExpression -> LEFT_BRACE '}'
138:	SubExpression -> LEFT_PAREN SubExpression ')'
139:	SubExpressionOrStdin -> SubExpression
140:	SubExpressionOrStdin -> STDIN
141:	PAREN-38 -> LoopLabel COLON
142:	OPTIONAL-39 -> PAREN-38
143:	OPTIONAL-39 -> /* empty */
144:	Statement -> Conditional
145:	Statement -> OPTIONAL-39 Loop
146:	Statement -> OperatorVoid
147:	Statement -> VariableDeclaration
148:	Statement -> VariableModification
149:	PAREN-40 -> 'elsif (' SubExpression ')' CodeBlock
150:	STAR-41 -> STAR-41 PAREN-40
151:	STAR-41 -> /* empty */
152:	PAREN-42 -> 'else' CodeBlock
153:	OPTIONAL-43 -> PAREN-42
154:	OPTIONAL-43 -> /* empty */
155:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 OPTIONAL-43
156:	Loop -> LoopFor
157:	Loop -> LoopForEach
158:	Loop -> LoopWhile
159:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
160:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock
161:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
162:	PLUS-44 -> PLUS-44 Operation
163:	PLUS-44 -> Operation
164:	CodeBlock -> LEFT_BRACE PLUS-44 '}'
165:	STAR-45 -> STAR-45 VariableRetrieval
166:	STAR-45 -> /* empty */
167:	Variable -> VARIABLE_SYMBOL STAR-45
168:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
169:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
170:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
171:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
172:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
173:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
174:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
175:	PAREN-46 -> OP21_LIST_COMMA ListElement
176:	STAR-47 -> STAR-47 PAREN-46
177:	STAR-47 -> /* empty */
178:	PLUS-48 -> PLUS-48 WORD
179:	PLUS-48 -> WORD
180:	ListElements -> ListElement STAR-47
181:	ListElements -> OP01_QW LEFT_PAREN PLUS-48 ')'
182:	ListElement -> SubExpression
183:	ListElement -> TypeInner SubExpression
184:	ListElement -> KEYS_OR_VALUES HashDereferenced
185:	OPTIONAL-49 -> ListElements
186:	OPTIONAL-49 -> /* empty */
187:	ArrayReference -> LEFT_BRACKET OPTIONAL-49 ']'
188:	ArrayDereferenced -> '@{' Variable '}'
189:	ArrayDereferenced -> '@{' ArrayReference '}'
190:	OPTIONAL-50 -> TypeInner
191:	OPTIONAL-50 -> /* empty */
192:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 SubExpression
193:	HashEntry -> HashDereferenced
194:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
195:	HashEntryTyped -> HashDereferenced
196:	PAREN-51 -> OP21_LIST_COMMA HashEntry
197:	STAR-52 -> STAR-52 PAREN-51
198:	STAR-52 -> /* empty */
199:	HashReference -> LEFT_BRACE HashEntry STAR-52 '}'
200:	HashDereferenced -> '%{' Variable '}'
201:	HashDereferenced -> '%{' HashReference '}'
202:	WordScoped -> WORD
203:	WordScoped -> WORD_SCOPED
204:	LoopLabel -> WORD
205:	Type -> WORD
206:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
207:	Literal -> LITERAL_STRING
208:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 4
	SHEBANG	shift, and go to state 1

	'package'	reduce using rule 20 (OPTIONAL-9)

	PLUS-2	go to state 7
	PAREN-1	go to state 8
	ModuleHeader	go to state 6
	Critic	go to state 5
	Program	go to state 3
	CompileUnit	go to state 2
	OPTIONAL-9	go to state 9

State 1:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 11
	OPTIONAL-3	go to state 10

State 2:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 12

State 3:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 4:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 14

	PLUS-14	go to state 13

State 5:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 6:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 16

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	STAR-10	go to state 15
	Class	go to state 18
	Package	go to state 17
	Module	go to state 19

State 7:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 4

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 9
	PAREN-1	go to state 20
	Critic	go to state 5
	ModuleHeader	go to state 6

State 8:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 9:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 21

State 10:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 22

	Header	go to state 23

State 11:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 12:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 13:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 25
	WORD	shift, and go to state 24

State 14:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 15:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 4

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	STAR-11	go to state 27
	Critic	go to state 26

State 16:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 29

State 17:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 18:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 19:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 20:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 21:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 31

State 22:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 32

State 23:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 33

State 24:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 25:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 26:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 27:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 34

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 35
	Include	go to state 36

State 28:

	WordScoped -> WORD .	(Rule 202)

	$default	reduce using rule 202 (WordScoped)

State 29:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 37

State 30:

	WordScoped -> WORD_SCOPED .	(Rule 203)

	$default	reduce using rule 203 (WordScoped)

State 31:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 38

State 32:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 39

State 33:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LEFT_BRACE	reduce using rule 11 (STAR-5)
	LEFT_BRACKET	reduce using rule 11 (STAR-5)
	LEFT_PAREN	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LEFT_PAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 40
	STAR-5	go to state 41

State 34:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 42

State 35:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 44
	'use constant'	shift, and go to state 47

	Constant	go to state 46
	PLUS-13	go to state 45
	Subroutine	go to state 43

State 36:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 37:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 48

State 38:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 22

	Header	go to state 49

State 39:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 50

State 40:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 41:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 34

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LEFT_BRACE	reduce using rule 13 (STAR-6)
	LEFT_BRACKET	reduce using rule 13 (STAR-6)
	LEFT_PAREN	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LEFT_PAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	STAR-6	go to state 51
	Include	go to state 52

State 42:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 54
	'qw('	shift, and go to state 53

State 43:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 44:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 55

	Type	go to state 56

State 45:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 57

	Subroutine	go to state 58

State 46:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 47:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 59

State 48:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 34

	Include	go to state 60

State 49:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 50:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 61

State 51:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 47

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LEFT_BRACE	reduce using rule 15 (STAR-7)
	LEFT_BRACKET	reduce using rule 15 (STAR-7)
	LEFT_PAREN	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LEFT_PAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 63
	STAR-7	go to state 62

State 52:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 53:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 64

	PLUS-15	go to state 65

State 54:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 55:

	Type -> WORD .	(Rule 205)

	$default	reduce using rule 205 (Type)

State 56:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 66

State 57:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 67

State 58:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 59:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 68

State 60:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 69

State 61:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 62:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'if ('	shift, and go to state 76
	'my'	shift, and go to state 78
	'our'	shift, and go to state 44
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 93
	OP01_NAMED_VOID	shift, and go to state 75
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 99
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 143 (OPTIONAL-39)
	'foreach my'	reduce using rule 143 (OPTIONAL-39)
	'while ('	reduce using rule 143 (OPTIONAL-39)

	Conditional	go to state 98
	PLUS-8	go to state 96
	VariableDeclaration	go to state 103
	Variable	go to state 71
	Subroutine	go to state 90
	OperatorVoid	go to state 70
	HashDereferenced	go to state 89
	PAREN-38	go to state 88
	Expression	go to state 94
	ArrayDereferenced	go to state 92
	Operator	go to state 82
	Literal	go to state 83
	LoopLabel	go to state 84
	WordScoped	go to state 110
	Operation	go to state 86
	HashReference	go to state 111
	VariableModification	go to state 85
	ArrayReference	go to state 107
	OPTIONAL-39	go to state 106
	Statement	go to state 81
	SubExpression	go to state 80

State 63:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 64:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 65:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 115
	WORD	shift, and go to state 116

State 66:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 117

State 67:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 68:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 118

	TypeInner	go to state 119

State 69:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 4

	'our %properties = ('	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 120
	STAR-21	go to state 121

State 70:

	Statement -> OperatorVoid .	(Rule 146)

	$default	reduce using rule 146 (Statement)

State 71:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 ')'	(Rule 128)
	SubExpression -> Variable .	(Rule 132)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 173)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 174)

	OP02_METHOD_THINARROW	shift, and go to state 124
	OP03_MATH_INC_DEC	shift, and go to state 123
	OP19_VARIABLE_ASSIGN	shift, and go to state 125
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 122

	OP04_MATH_POW	reduce using rule 132 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 132 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 132 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 132 (SubExpression)
	OP08_STRING_CAT	reduce using rule 132 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 132 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 132 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 132 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 132 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 132 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 132 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 132 (SubExpression)
	OP18_TERNARY	reduce using rule 132 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 132 (SubExpression)

State 72:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 88)

	FH_REF_SYMBOL	shift, and go to state 126

State 73:

	OperatorVoid -> OP01_PRINT . OPTIONAL-34 ListElements ';'	(Rule 117)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 118)

	FH_REF_SYMBOL_BRACES	shift, and go to state 128
	STDOUT_STDERR	shift, and go to state 129

	'%{'	reduce using rule 114 (OPTIONAL-34)
	'@{'	reduce using rule 114 (OPTIONAL-34)
	'my'	reduce using rule 114 (OPTIONAL-34)
	'undef'	reduce using rule 114 (OPTIONAL-34)
	KEYS_OR_VALUES	reduce using rule 114 (OPTIONAL-34)
	LEFT_BRACE	reduce using rule 114 (OPTIONAL-34)
	LEFT_BRACKET	reduce using rule 114 (OPTIONAL-34)
	LEFT_PAREN	reduce using rule 114 (OPTIONAL-34)
	LITERAL_NUMBER	reduce using rule 114 (OPTIONAL-34)
	LITERAL_STRING	reduce using rule 114 (OPTIONAL-34)
	OP01_CLOSE	reduce using rule 114 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 114 (OPTIONAL-34)
	OP01_OPEN	reduce using rule 114 (OPTIONAL-34)
	OP01_QW	reduce using rule 114 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 114 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 114 (OPTIONAL-34)
	OP05_MATH_NEG_LEFT_PAREN	reduce using rule 114 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 114 (OPTIONAL-34)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 114 (OPTIONAL-34)
	OP22_LOGICAL_NOT	reduce using rule 114 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 114 (OPTIONAL-34)
	WORD	reduce using rule 114 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 114 (OPTIONAL-34)

	OPTIONAL-34	go to state 130
	PAREN-33	go to state 127

State 74:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 121)

	WORD	shift, and go to state 131

	LoopLabel	go to state 132

State 75:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-35 ';'	(Rule 119)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	';'	reduce using rule 116 (OPTIONAL-35)

	Variable	go to state 139
	HashDereferenced	go to state 89
	TypeInner	go to state 137
	OPTIONAL-35	go to state 140
	Expression	go to state 134
	SubExpression	go to state 142
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	Literal	go to state 83
	Operator	go to state 82
	ListElement	go to state 138
	ListElements	go to state 133
	WordScoped	go to state 110
	HashReference	go to state 111

State 76:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-41 OPTIONAL-43	(Rule 155)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 143
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Expression	go to state 134

State 77:

	Literal -> LITERAL_STRING .	(Rule 207)

	$default	reduce using rule 207 (Literal)

State 78:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 171)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 172)

	WORD	shift, and go to state 55

	Type	go to state 144

State 79:

	Variable -> VARIABLE_SYMBOL . STAR-45	(Rule 167)

	$default	reduce using rule 166 (STAR-45)

	STAR-45	go to state 145

State 80:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 81:

	Operation -> Statement .	(Rule 83)

	$default	reduce using rule 83 (Operation)

State 82:

	Expression -> Operator .	(Rule 126)

	$default	reduce using rule 126 (Expression)

State 83:

	SubExpression -> Literal .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 84:

	PAREN-38 -> LoopLabel . COLON	(Rule 141)

	COLON	shift, and go to state 162

State 85:

	Statement -> VariableModification .	(Rule 148)

	$default	reduce using rule 148 (Statement)

State 86:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 87:

	Operator -> OP05_MATH_NEG_LEFT_PAREN . SubExpression ')'	(Rule 93)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 163
	Expression	go to state 134
	HashDereferenced	go to state 89
	Variable	go to state 139

State 88:

	OPTIONAL-39 -> PAREN-38 .	(Rule 142)

	$default	reduce using rule 142 (OPTIONAL-39)

State 89:

	SubExpression -> HashDereferenced .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 90:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 91:

	SubExpression -> 'undef' .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 92:

	SubExpression -> ArrayDereferenced .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 93:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 120)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Literal	go to state 83
	Operator	go to state 82
	WordScoped	go to state 110
	ListElement	go to state 164
	HashReference	go to state 111
	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	TypeInner	go to state 137
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 165

State 94:

	Operation -> Expression . ';'	(Rule 82)
	SubExpression -> Expression .	(Rule 129)

	';'	shift, and go to state 166

	OP04_MATH_POW	reduce using rule 129 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 129 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 129 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 129 (SubExpression)
	OP08_STRING_CAT	reduce using rule 129 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 129 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 129 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 129 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 129 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 129 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 129 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 129 (SubExpression)
	OP18_TERNARY	reduce using rule 129 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 129 (SubExpression)

State 95:

	SubExpression -> LEFT_BRACE . '}'	(Rule 137)
	HashReference -> LEFT_BRACE . HashEntry STAR-52 '}'	(Rule 199)

	'%{'	shift, and go to state 100
	'}'	shift, and go to state 170
	WORD	shift, and go to state 168

	HashDereferenced	go to state 167
	HashEntry	go to state 169

State 96:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'if ('	shift, and go to state 76
	'my'	shift, and go to state 78
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 93
	OP01_NAMED_VOID	shift, and go to state 75
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 99
	WORD_SCOPED	shift, and go to state 30

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 143 (OPTIONAL-39)
	'foreach my'	reduce using rule 143 (OPTIONAL-39)
	'while ('	reduce using rule 143 (OPTIONAL-39)

	VariableDeclaration	go to state 103
	Conditional	go to state 98
	ArrayDereferenced	go to state 92
	Expression	go to state 94
	PAREN-38	go to state 88
	HashDereferenced	go to state 89
	OperatorVoid	go to state 70
	Variable	go to state 71
	VariableModification	go to state 85
	HashReference	go to state 111
	Operation	go to state 171
	WordScoped	go to state 110
	LoopLabel	go to state 84
	Operator	go to state 82
	Literal	go to state 83
	SubExpression	go to state 80
	Statement	go to state 81
	ArrayReference	go to state 107
	OPTIONAL-39	go to state 106

State 97:

	Literal -> LITERAL_NUMBER .	(Rule 208)

	$default	reduce using rule 208 (Literal)

State 98:

	Statement -> Conditional .	(Rule 144)

	$default	reduce using rule 144 (Statement)

State 99:

	WordScoped -> WORD .	(Rule 202)
	LoopLabel -> WORD .	(Rule 204)

	COLON	reduce using rule 204 (LoopLabel)
	LEFT_PAREN	reduce using rule 202 (WordScoped)

State 100:

	HashDereferenced -> '%{' . Variable '}'	(Rule 200)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 201)

	LEFT_BRACE	shift, and go to state 174
	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 172
	HashReference	go to state 173

State 101:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 89)

	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 175

State 102:

	Operator -> LEFT_PAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)
	Operator -> LEFT_PAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)
	SubExpression -> LEFT_PAREN . SubExpression ')'	(Rule 138)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 178
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 176
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 177
	Expression	go to state 134
	HashDereferenced	go to state 89
	Variable	go to state 139

State 103:

	Statement -> VariableDeclaration .	(Rule 147)

	$default	reduce using rule 147 (Statement)

State 104:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 188)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 189)

	LEFT_BRACKET	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 79

	ArrayReference	go to state 179
	Variable	go to state 180

State 105:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 92)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Expression	go to state 134
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 181
	Variable	go to state 139
	HashDereferenced	go to state 89
	HashReference	go to state 111
	Literal	go to state 83
	Operator	go to state 82
	WordScoped	go to state 110

State 106:

	Statement -> OPTIONAL-39 . Loop	(Rule 145)

	'for my integer'	shift, and go to state 183
	'foreach my'	shift, and go to state 182
	'while ('	shift, and go to state 185

	LoopFor	go to state 186
	LoopWhile	go to state 187
	LoopForEach	go to state 184
	Loop	go to state 188

State 107:

	SubExpression -> ArrayReference .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 108:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'my'	shift, and go to state 189

State 109:

	Operator -> OP22_LOGICAL_NOT . SubExpression	(Rule 109)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 190
	Expression	go to state 134

State 110:

	Expression -> WordScoped . LEFT_PAREN OPTIONAL-36 ')'	(Rule 127)

	LEFT_PAREN	shift, and go to state 191

State 111:

	SubExpression -> HashReference .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 112:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . SubExpression	(Rule 100)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 192
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	Expression	go to state 134

State 113:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 99)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 193
	Expression	go to state 134
	HashDereferenced	go to state 89
	Variable	go to state 139

State 114:

	ArrayReference -> LEFT_BRACKET . OPTIONAL-49 ']'	(Rule 187)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	']'	reduce using rule 186 (OPTIONAL-49)

	HashReference	go to state 111
	WordScoped	go to state 110
	ListElement	go to state 138
	ListElements	go to state 195
	Operator	go to state 82
	Literal	go to state 83
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 142
	Expression	go to state 134
	TypeInner	go to state 137
	HashDereferenced	go to state 89
	Variable	go to state 139
	OPTIONAL-49	go to state 194

State 115:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 196

State 116:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 117:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 197

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LEFT_BRACE	reduce using rule 43 (OPTIONAL-16)
	LEFT_BRACKET	reduce using rule 43 (OPTIONAL-16)
	LEFT_PAREN	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LEFT_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 199
	OPTIONAL-16	go to state 198

State 118:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 206)

	WORD	shift, and go to state 55

	Type	go to state 200

State 119:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77

	Literal	go to state 201

State 120:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 121:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 34

	'our %properties = ('	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 202
	STAR-22	go to state 203

State 122:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 174)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Literal	go to state 83
	Operator	go to state 82
	WordScoped	go to state 110
	HashReference	go to state 111
	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 204

State 123:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 124:

	Expression -> Variable OP02_METHOD_THINARROW . WORD LEFT_PAREN OPTIONAL-37 ')'	(Rule 128)

	WORD	shift, and go to state 205

State 125:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 173)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	STDIN	shift, and go to state 206
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111
	SubExpressionOrStdin	go to state 207
	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 208
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	Expression	go to state 134

State 126:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 127:

	OPTIONAL-34 -> PAREN-33 .	(Rule 113)

	$default	reduce using rule 113 (OPTIONAL-34)

State 128:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 118)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Operator	go to state 82
	Literal	go to state 83
	WordScoped	go to state 110
	ListElements	go to state 209
	ListElement	go to state 138
	HashReference	go to state 111
	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	TypeInner	go to state 137
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 142

State 129:

	PAREN-33 -> STDOUT_STDERR .	(Rule 112)

	$default	reduce using rule 112 (PAREN-33)

State 130:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 142
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	TypeInner	go to state 137
	Expression	go to state 134
	ListElement	go to state 138
	ListElements	go to state 210
	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111

State 131:

	LoopLabel -> WORD .	(Rule 204)

	$default	reduce using rule 204 (LoopLabel)

State 132:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 121)

	';'	shift, and go to state 211

State 133:

	OPTIONAL-35 -> ListElements .	(Rule 115)

	$default	reduce using rule 115 (OPTIONAL-35)

State 134:

	SubExpression -> Expression .	(Rule 129)

	$default	reduce using rule 129 (SubExpression)

State 135:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 212
	Operator	go to state 82
	Literal	go to state 83
	WordScoped	go to state 110
	HashReference	go to state 111

State 136:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 184)

	'%{'	shift, and go to state 100

	HashDereferenced	go to state 213

State 137:

	ListElement -> TypeInner . SubExpression	(Rule 183)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 214
	Operator	go to state 82
	Literal	go to state 83
	WordScoped	go to state 110
	HashReference	go to state 111

State 138:

	ListElements -> ListElement . STAR-47	(Rule 180)

	$default	reduce using rule 177 (STAR-47)

	STAR-47	go to state 215

State 139:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 ')'	(Rule 128)
	SubExpression -> Variable .	(Rule 132)

	OP02_METHOD_THINARROW	shift, and go to state 124
	OP03_MATH_INC_DEC	shift, and go to state 123

	')'	reduce using rule 132 (SubExpression)
	';'	reduce using rule 132 (SubExpression)
	']'	reduce using rule 132 (SubExpression)
	'}'	reduce using rule 132 (SubExpression)
	OP04_MATH_POW	reduce using rule 132 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 132 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 132 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 132 (SubExpression)
	OP08_STRING_CAT	reduce using rule 132 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 132 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 132 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 132 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 132 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 132 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 132 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 132 (SubExpression)
	OP18_TERNARY	reduce using rule 132 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 132 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 132 (SubExpression)

State 140:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 . ';'	(Rule 119)

	';'	shift, and go to state 216

State 141:

	ListElements -> OP01_QW . LEFT_PAREN PLUS-48 ')'	(Rule 181)

	LEFT_PAREN	shift, and go to state 217

State 142:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> SubExpression .	(Rule 182)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

	')'	reduce using rule 182 (ListElement)
	';'	reduce using rule 182 (ListElement)
	']'	reduce using rule 182 (ListElement)
	OP21_LIST_COMMA	reduce using rule 182 (ListElement)

State 143:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-41 OPTIONAL-43	(Rule 155)

	')'	shift, and go to state 218
	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 144:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 171)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 172)

	VARIABLE_SYMBOL	shift, and go to state 219

State 145:

	STAR-45 -> STAR-45 . VariableRetrieval	(Rule 165)
	Variable -> VARIABLE_SYMBOL STAR-45 .	(Rule 167)

	OP02_ARRAY_THINARROW	shift, and go to state 221
	OP02_HASH_THINARROW	shift, and go to state 220

	')'	reduce using rule 167 (Variable)
	';'	reduce using rule 167 (Variable)
	']'	reduce using rule 167 (Variable)
	'}'	reduce using rule 167 (Variable)
	COLON	reduce using rule 167 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 167 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 167 (Variable)
	OP04_MATH_POW	reduce using rule 167 (Variable)
	OP06_REGEX_MATCH	reduce using rule 167 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 167 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 167 (Variable)
	OP08_STRING_CAT	reduce using rule 167 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 167 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 167 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 167 (Variable)
	OP13_BITWISE_AND	reduce using rule 167 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 167 (Variable)
	OP15_LOGICAL_AND	reduce using rule 167 (Variable)
	OP16_LOGICAL_OR	reduce using rule 167 (Variable)
	OP17_LIST_RANGE	reduce using rule 167 (Variable)
	OP18_TERNARY	reduce using rule 167 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 167 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 167 (Variable)
	OP21_LIST_COMMA	reduce using rule 167 (Variable)
	OP23_LOGICAL_AND	reduce using rule 167 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 167 (Variable)

	VariableRetrieval	go to state 222

State 146:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Operator	go to state 82
	Literal	go to state 83
	WordScoped	go to state 110
	HashReference	go to state 111
	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	SubExpression	go to state 223
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92

State 147:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 104)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 89
	Variable	go to state 139
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 224
	Expression	go to state 134
	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111

State 148:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Operator	go to state 82
	Literal	go to state 83
	WordScoped	go to state 110
	HashReference	go to state 111
	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	SubExpression	go to state 225
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92

State 149:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 95)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Expression	go to state 134
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 226
	Variable	go to state 139
	HashDereferenced	go to state 89
	HashReference	go to state 111
	Literal	go to state 83
	Operator	go to state 82
	WordScoped	go to state 110

State 150:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 110)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 227
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Expression	go to state 134

State 151:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 228
	Expression	go to state 134

State 152:

	Operator -> SubExpression OP18_TERNARY . Variable COLON Variable	(Rule 108)

	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 229

State 153:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 103)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 230
	Operator	go to state 82
	Literal	go to state 83
	WordScoped	go to state 110
	HashReference	go to state 111

State 154:

	Operator -> SubExpression OP12_COMPARE_EQ_NEQ . SubExpression	(Rule 102)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 231
	Expression	go to state 134

State 155:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 101)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	SubExpression	go to state 232
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Literal	go to state 83
	Operator	go to state 82
	WordScoped	go to state 110
	HashReference	go to state 111

State 156:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 107)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Operator	go to state 82
	Literal	go to state 83
	WordScoped	go to state 110
	HashReference	go to state 111
	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	SubExpression	go to state 233
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92

State 157:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 98)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Operator	go to state 82
	Literal	go to state 83
	WordScoped	go to state 110
	Expression	go to state 134
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 234
	Variable	go to state 139
	HashDereferenced	go to state 89

State 158:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 111)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 235
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Expression	go to state 134

State 159:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 91)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 236
	Expression	go to state 134
	HashDereferenced	go to state 89
	Variable	go to state 139
	HashReference	go to state 111
	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82

State 160:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 94)

	OP06_REGEX_PATTERN	shift, and go to state 237

State 161:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 96)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 238
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Expression	go to state 134

State 162:

	PAREN-38 -> LoopLabel COLON .	(Rule 141)

	$default	reduce using rule 141 (PAREN-38)

State 163:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_MATH_NEG_LEFT_PAREN SubExpression . ')'	(Rule 93)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	')'	shift, and go to state 239
	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 164:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 120)

	OP21_LIST_COMMA	shift, and go to state 240

State 165:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> SubExpression .	(Rule 182)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 182 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 166:

	Operation -> Expression ';' .	(Rule 82)

	$default	reduce using rule 82 (Operation)

State 167:

	HashEntry -> HashDereferenced .	(Rule 193)

	$default	reduce using rule 193 (HashEntry)

State 168:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-50 SubExpression	(Rule 192)

	OP20_HASH_FATARROW	shift, and go to state 241

State 169:

	HashReference -> LEFT_BRACE HashEntry . STAR-52 '}'	(Rule 199)

	$default	reduce using rule 198 (STAR-52)

	STAR-52	go to state 242

State 170:

	SubExpression -> LEFT_BRACE '}' .	(Rule 137)

	$default	reduce using rule 137 (SubExpression)

State 171:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 172:

	HashDereferenced -> '%{' Variable . '}'	(Rule 200)

	'}'	shift, and go to state 243

State 173:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 201)

	'}'	shift, and go to state 244

State 174:

	HashReference -> LEFT_BRACE . HashEntry STAR-52 '}'	(Rule 199)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 168

	HashEntry	go to state 169
	HashDereferenced	go to state 167

State 175:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 89)

	$default	reduce using rule 89 (Operator)

State 176:

	Operator -> LEFT_PAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)

	FH_REF_SYMBOL_BRACES	shift, and go to state 245

State 177:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	SubExpression -> LEFT_PAREN SubExpression . ')'	(Rule 138)

	')'	shift, and go to state 246
	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 178:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	Operator -> LEFT_PAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	WordScoped	go to state 110
	ListElement	go to state 247
	Literal	go to state 83
	Operator	go to state 82
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 165
	Expression	go to state 134
	TypeInner	go to state 137
	HashDereferenced	go to state 89
	Variable	go to state 139

State 179:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 189)

	'}'	shift, and go to state 248

State 180:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 188)

	'}'	shift, and go to state 249

State 181:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 92)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP06_REGEX_MATCH	reduce using rule 92 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 182:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock	(Rule 160)

	WORD	shift, and go to state 55

	Type	go to state 250

State 183:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LEFT_PAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	VARIABLE_SYMBOL	shift, and go to state 251

State 184:

	Loop -> LoopForEach .	(Rule 157)

	$default	reduce using rule 157 (Loop)

State 185:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 161)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 252
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Expression	go to state 134
	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111

State 186:

	Loop -> LoopFor .	(Rule 156)

	$default	reduce using rule 156 (Loop)

State 187:

	Loop -> LoopWhile .	(Rule 158)

	$default	reduce using rule 158 (Loop)

State 188:

	Statement -> OPTIONAL-39 Loop .	(Rule 145)

	$default	reduce using rule 145 (Statement)

State 189:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'filehandle_ref'	shift, and go to state 253

State 190:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> OP22_LOGICAL_NOT SubExpression .	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 191:

	Expression -> WordScoped LEFT_PAREN . OPTIONAL-36 ')'	(Rule 127)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	')'	reduce using rule 123 (OPTIONAL-36)

	HashReference	go to state 111
	OPTIONAL-36	go to state 255
	ListElement	go to state 138
	ListElements	go to state 254
	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	SubExpression	go to state 142
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	TypeInner	go to state 137
	Expression	go to state 134
	HashDereferenced	go to state 89
	Variable	go to state 139

State 192:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY_STRINGIFY SubExpression .	(Rule 100)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 193:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 194:

	ArrayReference -> LEFT_BRACKET OPTIONAL-49 . ']'	(Rule 187)

	']'	shift, and go to state 256

State 195:

	OPTIONAL-49 -> ListElements .	(Rule 185)

	$default	reduce using rule 185 (OPTIONAL-49)

State 196:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 197:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 55

	Type	go to state 257

State 198:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'if ('	shift, and go to state 76
	'my'	shift, and go to state 78
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 93
	OP01_NAMED_VOID	shift, and go to state 75
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 99
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 143 (OPTIONAL-39)
	'foreach my'	reduce using rule 143 (OPTIONAL-39)
	'while ('	reduce using rule 143 (OPTIONAL-39)

	Variable	go to state 71
	OperatorVoid	go to state 70
	PAREN-38	go to state 88
	HashDereferenced	go to state 89
	Expression	go to state 94
	ArrayDereferenced	go to state 92
	Conditional	go to state 98
	VariableDeclaration	go to state 103
	ArrayReference	go to state 107
	OPTIONAL-39	go to state 106
	Statement	go to state 81
	SubExpression	go to state 80
	Operator	go to state 82
	Literal	go to state 83
	PLUS-17	go to state 258
	LoopLabel	go to state 84
	WordScoped	go to state 110
	Operation	go to state 259
	HashReference	go to state 111
	VariableModification	go to state 85

State 199:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 200:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 206)

	'$TYPED_'	shift, and go to state 260

State 201:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 261

State 202:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 203:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties = ('	shift, and go to state 262
	'use constant'	shift, and go to state 47

	Properties	go to state 264
	Constant	go to state 263

State 204:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 174)

	';'	shift, and go to state 265
	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 205:

	Expression -> Variable OP02_METHOD_THINARROW WORD . LEFT_PAREN OPTIONAL-37 ')'	(Rule 128)

	LEFT_PAREN	shift, and go to state 266

State 206:

	SubExpressionOrStdin -> STDIN .	(Rule 140)

	$default	reduce using rule 140 (SubExpressionOrStdin)

State 207:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 173)

	';'	shift, and go to state 267

State 208:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	SubExpressionOrStdin -> SubExpression .	(Rule 139)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

	';'	reduce using rule 139 (SubExpressionOrStdin)

State 209:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 118)

	';'	shift, and go to state 268

State 210:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements . ';'	(Rule 117)

	';'	shift, and go to state 269

State 211:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 212:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 213:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 184)

	$default	reduce using rule 184 (ListElement)

State 214:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> TypeInner SubExpression .	(Rule 183)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

	')'	reduce using rule 183 (ListElement)
	';'	reduce using rule 183 (ListElement)
	']'	reduce using rule 183 (ListElement)
	OP21_LIST_COMMA	reduce using rule 183 (ListElement)

State 215:

	STAR-47 -> STAR-47 . PAREN-46	(Rule 176)
	ListElements -> ListElement STAR-47 .	(Rule 180)

	OP21_LIST_COMMA	shift, and go to state 271

	')'	reduce using rule 180 (ListElements)
	';'	reduce using rule 180 (ListElements)
	']'	reduce using rule 180 (ListElements)

	PAREN-46	go to state 270

State 216:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 217:

	ListElements -> OP01_QW LEFT_PAREN . PLUS-48 ')'	(Rule 181)

	WORD	shift, and go to state 272

	PLUS-48	go to state 273

State 218:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-41 OPTIONAL-43	(Rule 155)

	LEFT_BRACE	shift, and go to state 274

	CodeBlock	go to state 275

State 219:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 171)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 172)

	';'	shift, and go to state 277
	OP19_VARIABLE_ASSIGN	shift, and go to state 276

State 220:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 169)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 170)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 278
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 279
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Expression	go to state 134

State 221:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 168)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Literal	go to state 83
	Operator	go to state 82
	WordScoped	go to state 110
	HashReference	go to state 111
	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 280

State 222:

	STAR-45 -> STAR-45 VariableRetrieval .	(Rule 165)

	$default	reduce using rule 165 (STAR-45)

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 224:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 225:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 226:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 227:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 228:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP08_STRING_CAT	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 229:

	Operator -> SubExpression OP18_TERNARY Variable . COLON Variable	(Rule 108)

	COLON	shift, and go to state 281

State 230:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 231:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression OP12_COMPARE_EQ_NEQ SubExpression .	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 233:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150

	')'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 236:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP06_REGEX_MATCH	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 237:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 94)

	$default	reduce using rule 94 (Operator)

State 238:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 239:

	Operator -> OP05_MATH_NEG_LEFT_PAREN SubExpression ')' .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 240:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 120)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	ListElement	go to state 138
	ListElements	go to state 282
	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	SubExpression	go to state 142
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	TypeInner	go to state 137
	Expression	go to state 134
	HashDereferenced	go to state 89
	Variable	go to state 139

State 241:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-50 SubExpression	(Rule 192)

	'my'	shift, and go to state 118

	'%{'	reduce using rule 191 (OPTIONAL-50)
	'@{'	reduce using rule 191 (OPTIONAL-50)
	'undef'	reduce using rule 191 (OPTIONAL-50)
	LEFT_BRACE	reduce using rule 191 (OPTIONAL-50)
	LEFT_BRACKET	reduce using rule 191 (OPTIONAL-50)
	LEFT_PAREN	reduce using rule 191 (OPTIONAL-50)
	LITERAL_NUMBER	reduce using rule 191 (OPTIONAL-50)
	LITERAL_STRING	reduce using rule 191 (OPTIONAL-50)
	OP01_CLOSE	reduce using rule 191 (OPTIONAL-50)
	OP01_NAMED	reduce using rule 191 (OPTIONAL-50)
	OP01_OPEN	reduce using rule 191 (OPTIONAL-50)
	OP03_MATH_INC_DEC	reduce using rule 191 (OPTIONAL-50)
	OP05_LOGICAL_NEG	reduce using rule 191 (OPTIONAL-50)
	OP05_MATH_NEG_LEFT_PAREN	reduce using rule 191 (OPTIONAL-50)
	OP10_NAMED_UNARY	reduce using rule 191 (OPTIONAL-50)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 191 (OPTIONAL-50)
	OP22_LOGICAL_NOT	reduce using rule 191 (OPTIONAL-50)
	VARIABLE_SYMBOL	reduce using rule 191 (OPTIONAL-50)
	WORD	reduce using rule 191 (OPTIONAL-50)
	WORD_SCOPED	reduce using rule 191 (OPTIONAL-50)

	TypeInner	go to state 284
	OPTIONAL-50	go to state 283

State 242:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 197)
	HashReference -> LEFT_BRACE HashEntry STAR-52 . '}'	(Rule 199)

	'}'	shift, and go to state 286
	OP21_LIST_COMMA	shift, and go to state 287

	PAREN-51	go to state 285

State 243:

	HashDereferenced -> '%{' Variable '}' .	(Rule 200)

	$default	reduce using rule 200 (HashDereferenced)

State 244:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 201)

	$default	reduce using rule 201 (HashDereferenced)

State 245:

	Operator -> LEFT_PAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Literal	go to state 83
	Operator	go to state 82
	ListElement	go to state 138
	ListElements	go to state 288
	WordScoped	go to state 110
	TypeInner	go to state 137
	Expression	go to state 134
	SubExpression	go to state 142
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	Variable	go to state 139
	HashDereferenced	go to state 89

State 246:

	SubExpression -> LEFT_PAREN SubExpression ')' .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 247:

	Operator -> LEFT_PAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 86)

	OP21_LIST_COMMA	shift, and go to state 289

State 248:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 189)

	$default	reduce using rule 189 (ArrayDereferenced)

State 249:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 188)

	$default	reduce using rule 188 (ArrayDereferenced)

State 250:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock	(Rule 160)

	VARIABLE_SYMBOL	shift, and go to state 290

State 251:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LEFT_PAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	LEFT_PAREN	shift, and go to state 291

State 252:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 161)

	')'	shift, and go to state 292
	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 253:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	FH_REF_SYMBOL	shift, and go to state 293

State 254:

	OPTIONAL-36 -> ListElements .	(Rule 122)

	$default	reduce using rule 122 (OPTIONAL-36)

State 255:

	Expression -> WordScoped LEFT_PAREN OPTIONAL-36 . ')'	(Rule 127)

	')'	shift, and go to state 294

State 256:

	ArrayReference -> LEFT_BRACKET OPTIONAL-49 ']' .	(Rule 187)

	$default	reduce using rule 187 (ArrayReference)

State 257:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 295

State 258:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'if ('	shift, and go to state 76
	'my'	shift, and go to state 78
	'undef'	shift, and go to state 91
	'}'	shift, and go to state 297
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 93
	OP01_NAMED_VOID	shift, and go to state 75
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 99
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 143 (OPTIONAL-39)
	'foreach my'	reduce using rule 143 (OPTIONAL-39)
	'while ('	reduce using rule 143 (OPTIONAL-39)

	Conditional	go to state 98
	VariableDeclaration	go to state 103
	HashDereferenced	go to state 89
	PAREN-38	go to state 88
	OperatorVoid	go to state 70
	Variable	go to state 71
	ArrayDereferenced	go to state 92
	Expression	go to state 94
	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	LoopLabel	go to state 84
	HashReference	go to state 111
	VariableModification	go to state 85
	Operation	go to state 296
	OPTIONAL-39	go to state 106
	ArrayReference	go to state 107
	SubExpression	go to state 80
	Statement	go to state 81

State 259:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 260:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 206)

	WORD	shift, and go to state 298

State 261:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 262:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-26 ')' ';'	(Rule 65)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 4
	')'	shift, and go to state 300

	Critic	go to state 299

State 263:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 264:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties_class = ('	shift, and go to state 303

	'our'	reduce using rule 58 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 58 (OPTIONAL-23)

	OPTIONAL-23	go to state 301
	PropertiesClass	go to state 302

State 265:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 174)

	$default	reduce using rule 174 (VariableModification)

State 266:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN . OPTIONAL-37 ')'	(Rule 128)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	')'	reduce using rule 125 (OPTIONAL-37)

	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 142
	Expression	go to state 134
	TypeInner	go to state 137
	HashDereferenced	go to state 89
	OPTIONAL-37	go to state 305
	Variable	go to state 139
	HashReference	go to state 111
	WordScoped	go to state 110
	ListElement	go to state 138
	ListElements	go to state 304
	Operator	go to state 82
	Literal	go to state 83

State 267:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 173)

	$default	reduce using rule 173 (VariableModification)

State 268:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 269:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 270:

	STAR-47 -> STAR-47 PAREN-46 .	(Rule 176)

	$default	reduce using rule 176 (STAR-47)

State 271:

	PAREN-46 -> OP21_LIST_COMMA . ListElement	(Rule 175)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Operator	go to state 82
	Literal	go to state 83
	ListElement	go to state 306
	WordScoped	go to state 110
	TypeInner	go to state 137
	Expression	go to state 134
	SubExpression	go to state 142
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Variable	go to state 139
	HashDereferenced	go to state 89

State 272:

	PLUS-48 -> WORD .	(Rule 179)

	$default	reduce using rule 179 (PLUS-48)

State 273:

	PLUS-48 -> PLUS-48 . WORD	(Rule 178)
	ListElements -> OP01_QW LEFT_PAREN PLUS-48 . ')'	(Rule 181)

	')'	shift, and go to state 307
	WORD	shift, and go to state 308

State 274:

	CodeBlock -> LEFT_BRACE . PLUS-44 '}'	(Rule 164)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'if ('	shift, and go to state 76
	'my'	shift, and go to state 78
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 93
	OP01_NAMED_VOID	shift, and go to state 75
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 99
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 143 (OPTIONAL-39)
	'foreach my'	reduce using rule 143 (OPTIONAL-39)
	'while ('	reduce using rule 143 (OPTIONAL-39)

	HashDereferenced	go to state 89
	PAREN-38	go to state 88
	Variable	go to state 71
	OperatorVoid	go to state 70
	ArrayDereferenced	go to state 92
	Expression	go to state 94
	Conditional	go to state 98
	VariableDeclaration	go to state 103
	SubExpression	go to state 80
	Statement	go to state 81
	ArrayReference	go to state 107
	OPTIONAL-39	go to state 106
	WordScoped	go to state 110
	PLUS-44	go to state 310
	LoopLabel	go to state 84
	Literal	go to state 83
	Operator	go to state 82
	VariableModification	go to state 85
	HashReference	go to state 111
	Operation	go to state 309

State 275:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-41 OPTIONAL-43	(Rule 155)

	$default	reduce using rule 151 (STAR-41)

	STAR-41	go to state 311

State 276:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 172)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	STDIN	shift, and go to state 206
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	Variable	go to state 139
	HashDereferenced	go to state 89
	Expression	go to state 134
	SubExpression	go to state 208
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	Operator	go to state 82
	Literal	go to state 83
	WordScoped	go to state 110
	SubExpressionOrStdin	go to state 312
	HashReference	go to state 111

State 277:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 171)

	$default	reduce using rule 171 (VariableDeclaration)

State 278:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 170)
	WordScoped -> WORD .	(Rule 202)

	'}'	shift, and go to state 313

	LEFT_PAREN	reduce using rule 202 (WordScoped)

State 279:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 169)

	'}'	shift, and go to state 314
	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 280:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 168)

	']'	shift, and go to state 315
	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 281:

	Operator -> SubExpression OP18_TERNARY Variable COLON . Variable	(Rule 108)

	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 316

State 282:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 120)

	';'	shift, and go to state 317

State 283:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 . SubExpression	(Rule 192)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111
	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 318
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Expression	go to state 134

State 284:

	OPTIONAL-50 -> TypeInner .	(Rule 190)

	$default	reduce using rule 190 (OPTIONAL-50)

State 285:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 197)

	$default	reduce using rule 197 (STAR-52)

State 286:

	HashReference -> LEFT_BRACE HashEntry STAR-52 '}' .	(Rule 199)

	$default	reduce using rule 199 (HashReference)

State 287:

	PAREN-51 -> OP21_LIST_COMMA . HashEntry	(Rule 196)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 168

	HashEntry	go to state 319
	HashDereferenced	go to state 167

State 288:

	Operator -> LEFT_PAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 84)

	')'	shift, and go to state 320

State 289:

	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 89
	Variable	go to state 139
	SubExpression	go to state 142
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	TypeInner	go to state 137
	Expression	go to state 134
	ListElements	go to state 321
	ListElement	go to state 138
	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111

State 290:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LEFT_PAREN ListElements ')' CodeBlock	(Rule 160)

	LEFT_PAREN	shift, and go to state 322

State 291:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 323
	Expression	go to state 134
	HashDereferenced	go to state 89
	Variable	go to state 139

State 292:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 161)

	LEFT_BRACE	shift, and go to state 274

	CodeBlock	go to state 324

State 293:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 325

State 294:

	Expression -> WordScoped LEFT_PAREN OPTIONAL-36 ')' .	(Rule 127)

	$default	reduce using rule 127 (Expression)

State 295:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 326

State 296:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 297:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 327

State 298:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 206)

	OP19_VARIABLE_ASSIGN	shift, and go to state 328

State 299:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-26 ')' ';'	(Rule 65)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 330

	HashEntryTyped	go to state 331
	HashDereferenced	go to state 329

State 300:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 66)

	';'	shift, and go to state 332

State 301:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 333

State 302:

	OPTIONAL-23 -> PropertiesClass .	(Rule 57)

	$default	reduce using rule 57 (OPTIONAL-23)

State 303:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 334

State 304:

	OPTIONAL-37 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-37)

State 305:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 . ')'	(Rule 128)

	')'	shift, and go to state 335

State 306:

	PAREN-46 -> OP21_LIST_COMMA ListElement .	(Rule 175)

	$default	reduce using rule 175 (PAREN-46)

State 307:

	ListElements -> OP01_QW LEFT_PAREN PLUS-48 ')' .	(Rule 181)

	$default	reduce using rule 181 (ListElements)

State 308:

	PLUS-48 -> PLUS-48 WORD .	(Rule 178)

	$default	reduce using rule 178 (PLUS-48)

State 309:

	PLUS-44 -> Operation .	(Rule 163)

	$default	reduce using rule 163 (PLUS-44)

State 310:

	PLUS-44 -> PLUS-44 . Operation	(Rule 162)
	CodeBlock -> LEFT_BRACE PLUS-44 . '}'	(Rule 164)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'if ('	shift, and go to state 76
	'my'	shift, and go to state 78
	'undef'	shift, and go to state 91
	'}'	shift, and go to state 336
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 93
	OP01_NAMED_VOID	shift, and go to state 75
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 99
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 143 (OPTIONAL-39)
	'foreach my'	reduce using rule 143 (OPTIONAL-39)
	'while ('	reduce using rule 143 (OPTIONAL-39)

	ArrayReference	go to state 107
	OPTIONAL-39	go to state 106
	Statement	go to state 81
	SubExpression	go to state 80
	WordScoped	go to state 110
	Literal	go to state 83
	Operator	go to state 82
	LoopLabel	go to state 84
	HashReference	go to state 111
	VariableModification	go to state 85
	Operation	go to state 337
	HashDereferenced	go to state 89
	PAREN-38	go to state 88
	OperatorVoid	go to state 70
	Variable	go to state 71
	ArrayDereferenced	go to state 92
	Expression	go to state 94
	Conditional	go to state 98
	VariableDeclaration	go to state 103

State 311:

	STAR-41 -> STAR-41 . PAREN-40	(Rule 150)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 . OPTIONAL-43	(Rule 155)

	'else'	shift, and go to state 341
	'elsif ('	shift, and go to state 339

	$end	reduce using rule 154 (OPTIONAL-43)
	'%{'	reduce using rule 154 (OPTIONAL-43)
	'@{'	reduce using rule 154 (OPTIONAL-43)
	'for my integer'	reduce using rule 154 (OPTIONAL-43)
	'foreach my'	reduce using rule 154 (OPTIONAL-43)
	'if ('	reduce using rule 154 (OPTIONAL-43)
	'my'	reduce using rule 154 (OPTIONAL-43)
	'undef'	reduce using rule 154 (OPTIONAL-43)
	'while ('	reduce using rule 154 (OPTIONAL-43)
	'}'	reduce using rule 154 (OPTIONAL-43)
	LEFT_BRACE	reduce using rule 154 (OPTIONAL-43)
	LEFT_BRACKET	reduce using rule 154 (OPTIONAL-43)
	LEFT_PAREN	reduce using rule 154 (OPTIONAL-43)
	LITERAL_NUMBER	reduce using rule 154 (OPTIONAL-43)
	LITERAL_STRING	reduce using rule 154 (OPTIONAL-43)
	OP01_CLOSE	reduce using rule 154 (OPTIONAL-43)
	OP01_NAMED	reduce using rule 154 (OPTIONAL-43)
	OP01_NAMED_VOID	reduce using rule 154 (OPTIONAL-43)
	OP01_OPEN	reduce using rule 154 (OPTIONAL-43)
	OP01_PRINT	reduce using rule 154 (OPTIONAL-43)
	OP03_MATH_INC_DEC	reduce using rule 154 (OPTIONAL-43)
	OP05_LOGICAL_NEG	reduce using rule 154 (OPTIONAL-43)
	OP05_MATH_NEG_LEFT_PAREN	reduce using rule 154 (OPTIONAL-43)
	OP10_NAMED_UNARY	reduce using rule 154 (OPTIONAL-43)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 154 (OPTIONAL-43)
	OP19_LOOP_CONTROL	reduce using rule 154 (OPTIONAL-43)
	OP22_LOGICAL_NOT	reduce using rule 154 (OPTIONAL-43)
	VARIABLE_SYMBOL	reduce using rule 154 (OPTIONAL-43)
	WORD	reduce using rule 154 (OPTIONAL-43)
	WORD_SCOPED	reduce using rule 154 (OPTIONAL-43)

	OPTIONAL-43	go to state 338
	PAREN-40	go to state 340
	PAREN-42	go to state 342

State 312:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 172)

	';'	shift, and go to state 343

State 313:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 170)

	$default	reduce using rule 170 (VariableRetrieval)

State 314:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 169)

	$default	reduce using rule 169 (VariableRetrieval)

State 315:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 168)

	$default	reduce using rule 168 (VariableRetrieval)

State 316:

	Operator -> SubExpression OP18_TERNARY Variable COLON Variable .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 317:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 318:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 SubExpression .	(Rule 192)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

	'}'	reduce using rule 192 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 192 (HashEntry)

State 319:

	PAREN-51 -> OP21_LIST_COMMA HashEntry .	(Rule 196)

	$default	reduce using rule 196 (PAREN-51)

State 320:

	Operator -> LEFT_PAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 321:

	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 86)

	')'	shift, and go to state 344

State 322:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN . ListElements ')' CodeBlock	(Rule 160)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 91
	KEYS_OR_VALUES	shift, and go to state 136
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP01_QW	shift, and go to state 141
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Literal	go to state 83
	Operator	go to state 82
	ListElements	go to state 345
	ListElement	go to state 138
	WordScoped	go to state 110
	TypeInner	go to state 137
	Expression	go to state 134
	SubExpression	go to state 142
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	Variable	go to state 139
	HashDereferenced	go to state 89

State 323:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 159)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 346
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 324:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 161)

	$default	reduce using rule 161 (LoopWhile)

State 325:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	LITERAL_STRING	shift, and go to state 347

State 326:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 350
	OP21_LIST_COMMA	shift, and go to state 349

	PAREN-18	go to state 348

State 327:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 328:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 206)

	$default	reduce using rule 206 (TypeInner)

State 329:

	HashEntryTyped -> HashDereferenced .	(Rule 195)

	$default	reduce using rule 195 (HashEntryTyped)

State 330:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 194)

	OP20_HASH_FATARROW	shift, and go to state 351

State 331:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-26 ')' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 352

State 332:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 353

State 333:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 357
	LITERAL_NUMBER	shift, and go to state 354

	Subroutine	go to state 355
	Method	go to state 356
	MethodOrSubroutine	go to state 358

State 334:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 330

	HashDereferenced	go to state 329
	HashEntryTyped	go to state 359

State 335:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 ')' .	(Rule 128)

	$default	reduce using rule 128 (Expression)

State 336:

	CodeBlock -> LEFT_BRACE PLUS-44 '}' .	(Rule 164)

	$default	reduce using rule 164 (CodeBlock)

State 337:

	PLUS-44 -> PLUS-44 Operation .	(Rule 162)

	$default	reduce using rule 162 (PLUS-44)

State 338:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 OPTIONAL-43 .	(Rule 155)

	$default	reduce using rule 155 (Conditional)

State 339:

	PAREN-40 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 149)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 89
	Variable	go to state 139
	ArrayDereferenced	go to state 92
	ArrayReference	go to state 107
	SubExpression	go to state 360
	Expression	go to state 134
	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111

State 340:

	STAR-41 -> STAR-41 PAREN-40 .	(Rule 150)

	$default	reduce using rule 150 (STAR-41)

State 341:

	PAREN-42 -> 'else' . CodeBlock	(Rule 152)

	LEFT_BRACE	shift, and go to state 274

	CodeBlock	go to state 361

State 342:

	OPTIONAL-43 -> PAREN-42 .	(Rule 153)

	$default	reduce using rule 153 (OPTIONAL-43)

State 343:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 172)

	$default	reduce using rule 172 (VariableDeclaration)

State 344:

	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 345:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements . ')' CodeBlock	(Rule 160)

	')'	shift, and go to state 362

State 346:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 107)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 159)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Literal	go to state 83
	Operator	go to state 82
	WordScoped	go to state 110
	Expression	go to state 134
	SubExpression	go to state 363
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	Variable	go to state 139
	HashDereferenced	go to state 89

State 347:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 364

State 348:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 349:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 365

State 350:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 366

State 351:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 194)

	'my'	shift, and go to state 118

	TypeInner	go to state 367

State 352:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 . ')' ';'	(Rule 65)

	')'	shift, and go to state 368
	OP21_LIST_COMMA	shift, and go to state 369

	PAREN-25	go to state 370

State 353:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 354:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 371

State 355:

	MethodOrSubroutine -> Subroutine .	(Rule 81)

	$default	reduce using rule 81 (MethodOrSubroutine)

State 356:

	MethodOrSubroutine -> Method .	(Rule 80)

	$default	reduce using rule 80 (MethodOrSubroutine)

State 357:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	TYPE_METHOD	shift, and go to state 372
	WORD	shift, and go to state 55

	Type	go to state 56

State 358:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 359:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-28 ')' ';'	(Rule 70)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 373

State 360:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	PAREN-40 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 149)

	')'	shift, and go to state 374
	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

State 361:

	PAREN-42 -> 'else' CodeBlock .	(Rule 152)

	$default	reduce using rule 152 (PAREN-42)

State 362:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' . CodeBlock	(Rule 160)

	LEFT_BRACE	shift, and go to state 274

	CodeBlock	go to state 375

State 363:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 159)

	')'	shift, and go to state 376
	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 364:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 87)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashDereferenced	go to state 89
	Variable	go to state 139
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 377
	Expression	go to state 134
	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	HashReference	go to state 111

State 365:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 55

	Type	go to state 378

State 366:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 379

State 367:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 194)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 135
	OP01_OPEN	shift, and go to state 108
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 28
	WORD_SCOPED	shift, and go to state 30

	HashReference	go to state 111
	Literal	go to state 83
	Operator	go to state 82
	WordScoped	go to state 110
	Expression	go to state 134
	ArrayReference	go to state 107
	ArrayDereferenced	go to state 92
	SubExpression	go to state 380
	Variable	go to state 139
	HashDereferenced	go to state 89

State 368:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' . ';'	(Rule 65)

	';'	shift, and go to state 381

State 369:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 62)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 330

	HashDereferenced	go to state 329
	HashEntryTyped	go to state 382

State 370:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 371:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 372:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	VARIABLE_SYMBOL	shift, and go to state 383

State 373:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 68)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 . ')' ';'	(Rule 70)

	')'	shift, and go to state 384
	OP21_LIST_COMMA	shift, and go to state 385

	PAREN-27	go to state 386

State 374:

	PAREN-40 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 149)

	LEFT_BRACE	shift, and go to state 274

	CodeBlock	go to state 387

State 375:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock .	(Rule 160)

	$default	reduce using rule 160 (LoopForEach)

State 376:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 159)

	LEFT_BRACE	shift, and go to state 274

	CodeBlock	go to state 388

State 377:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 87)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152

	')'	reduce using rule 87 (Operator)
	';'	reduce using rule 87 (Operator)
	']'	reduce using rule 87 (Operator)
	'}'	reduce using rule 87 (Operator)
	OP21_LIST_COMMA	reduce using rule 87 (Operator)
	OP23_LOGICAL_AND	reduce using rule 87 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 87 (Operator)

State 378:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 389

State 379:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 380:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 194)

	OP04_MATH_POW	shift, and go to state 159
	OP06_REGEX_MATCH	shift, and go to state 160
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 149
	OP08_MATH_ADD_SUB	shift, and go to state 161
	OP08_STRING_CAT	shift, and go to state 151
	OP09_BITWISE_SHIFT	shift, and go to state 157
	OP11_COMPARE_LT_GT	shift, and go to state 155
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 153
	OP14_BITWISE_OR_XOR	shift, and go to state 147
	OP15_LOGICAL_AND	shift, and go to state 146
	OP16_LOGICAL_OR	shift, and go to state 148
	OP17_LIST_RANGE	shift, and go to state 156
	OP18_TERNARY	shift, and go to state 152
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 158

	')'	reduce using rule 194 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 194 (HashEntryTyped)

State 381:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 382:

	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 383:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'= sub {'	shift, and go to state 390

State 384:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' . ';'	(Rule 70)

	';'	shift, and go to state 391

State 385:

	PAREN-27 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 67)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 330

	HashEntryTyped	go to state 392
	HashDereferenced	go to state 329

State 386:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 387:

	PAREN-40 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 149)

	$default	reduce using rule 149 (PAREN-40)

State 388:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 159)

	$default	reduce using rule 159 (LoopFor)

State 389:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 390:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'( my'	shift, and go to state 395

	'%{'	reduce using rule 72 (OPTIONAL-29)
	'@{'	reduce using rule 72 (OPTIONAL-29)
	'for my integer'	reduce using rule 72 (OPTIONAL-29)
	'foreach my'	reduce using rule 72 (OPTIONAL-29)
	'if ('	reduce using rule 72 (OPTIONAL-29)
	'my'	reduce using rule 72 (OPTIONAL-29)
	'undef'	reduce using rule 72 (OPTIONAL-29)
	'while ('	reduce using rule 72 (OPTIONAL-29)
	LEFT_BRACE	reduce using rule 72 (OPTIONAL-29)
	LEFT_BRACKET	reduce using rule 72 (OPTIONAL-29)
	LEFT_PAREN	reduce using rule 72 (OPTIONAL-29)
	LITERAL_NUMBER	reduce using rule 72 (OPTIONAL-29)
	LITERAL_STRING	reduce using rule 72 (OPTIONAL-29)
	OP01_CLOSE	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT	reduce using rule 72 (OPTIONAL-29)
	OP03_MATH_INC_DEC	reduce using rule 72 (OPTIONAL-29)
	OP05_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	OP05_MATH_NEG_LEFT_PAREN	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL	reduce using rule 72 (OPTIONAL-29)
	OP22_LOGICAL_NOT	reduce using rule 72 (OPTIONAL-29)
	VARIABLE_SYMBOL	reduce using rule 72 (OPTIONAL-29)
	WORD	reduce using rule 72 (OPTIONAL-29)
	WORD_SCOPED	reduce using rule 72 (OPTIONAL-29)

	MethodArguments	go to state 393
	OPTIONAL-29	go to state 394

State 391:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';' .	(Rule 70)

	$default	reduce using rule 70 (PropertiesClass)

State 392:

	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 67)

	$default	reduce using rule 67 (PAREN-27)

State 393:

	OPTIONAL-29 -> MethodArguments .	(Rule 71)

	$default	reduce using rule 71 (OPTIONAL-29)

State 394:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 . PLUS-30 '}' ';'	(Rule 75)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'if ('	shift, and go to state 76
	'my'	shift, and go to state 78
	'undef'	shift, and go to state 91
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 93
	OP01_NAMED_VOID	shift, and go to state 75
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 99
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 143 (OPTIONAL-39)
	'foreach my'	reduce using rule 143 (OPTIONAL-39)
	'while ('	reduce using rule 143 (OPTIONAL-39)

	Conditional	go to state 98
	VariableDeclaration	go to state 103
	PAREN-38	go to state 88
	HashDereferenced	go to state 89
	Variable	go to state 71
	OperatorVoid	go to state 70
	ArrayDereferenced	go to state 92
	PLUS-30	go to state 397
	Expression	go to state 94
	WordScoped	go to state 110
	Operator	go to state 82
	Literal	go to state 83
	LoopLabel	go to state 84
	HashReference	go to state 111
	VariableModification	go to state 85
	Operation	go to state 396
	OPTIONAL-39	go to state 106
	ArrayReference	go to state 107
	SubExpression	go to state 80
	Statement	go to state 81

State 395:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	TYPE_CLASS_OR_SELF	shift, and go to state 398

State 396:

	PLUS-30 -> Operation .	(Rule 74)

	$default	reduce using rule 74 (PLUS-30)

State 397:

	PLUS-30 -> PLUS-30 . Operation	(Rule 73)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 . '}' ';'	(Rule 75)

	'%{'	shift, and go to state 100
	'@{'	shift, and go to state 104
	'if ('	shift, and go to state 76
	'my'	shift, and go to state 78
	'undef'	shift, and go to state 91
	'}'	shift, and go to state 400
	LEFT_BRACE	shift, and go to state 95
	LEFT_BRACKET	shift, and go to state 114
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 97
	LITERAL_STRING	shift, and go to state 77
	OP01_CLOSE	shift, and go to state 72
	OP01_NAMED	shift, and go to state 93
	OP01_NAMED_VOID	shift, and go to state 75
	OP01_OPEN	shift, and go to state 108
	OP01_PRINT	shift, and go to state 73
	OP03_MATH_INC_DEC	shift, and go to state 101
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LEFT_PAREN	shift, and go to state 87
	OP10_NAMED_UNARY	shift, and go to state 113
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 112
	OP19_LOOP_CONTROL	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 99
	WORD_SCOPED	shift, and go to state 30

	'for my integer'	reduce using rule 143 (OPTIONAL-39)
	'foreach my'	reduce using rule 143 (OPTIONAL-39)
	'while ('	reduce using rule 143 (OPTIONAL-39)

	Statement	go to state 81
	SubExpression	go to state 80
	OPTIONAL-39	go to state 106
	ArrayReference	go to state 107
	VariableModification	go to state 85
	HashReference	go to state 111
	Operation	go to state 399
	WordScoped	go to state 110
	LoopLabel	go to state 84
	Operator	go to state 82
	Literal	go to state 83
	ArrayDereferenced	go to state 92
	Expression	go to state 94
	HashDereferenced	go to state 89
	PAREN-38	go to state 88
	OperatorVoid	go to state 70
	Variable	go to state 71
	VariableDeclaration	go to state 103
	Conditional	go to state 98

State 398:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	$default	reduce using rule 78 (STAR-32)

	STAR-32	go to state 401

State 399:

	PLUS-30 -> PLUS-30 Operation .	(Rule 73)

	$default	reduce using rule 73 (PLUS-30)

State 400:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' . ';'	(Rule 75)

	';'	shift, and go to state 402

State 401:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 77)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	')'	shift, and go to state 404
	OP21_LIST_COMMA	shift, and go to state 403

	PAREN-31	go to state 405

State 402:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';' .	(Rule 75)

	$default	reduce using rule 75 (Method)

State 403:

	PAREN-31 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 76)

	'my'	shift, and go to state 406

State 404:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	OP19_VARIABLE_ASSIGN	shift, and go to state 407

State 405:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 77)

	$default	reduce using rule 77 (STAR-32)

State 406:

	PAREN-31 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 76)

	WORD	shift, and go to state 55

	Type	go to state 408

State 407:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 79)

	'@_;'	shift, and go to state 409

State 408:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 76)

	VARIABLE_SYMBOL	shift, and go to state 410

State 409:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 79)

	$default	reduce using rule 79 (MethodArguments)

State 410:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 76)

	$default	reduce using rule 76 (PAREN-31)


Summary:
--------
Number of rules         : 209
Number of terminals     : 87
Number of non-terminals : 100
Number of states        : 411
