Conflicts:
----------
Conflict in state 114 between rule 118 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 114 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 114 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 114 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 114 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 114 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 114 between rule 118 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 114 between rule 118 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 114 between rule 118 and token OP18_TERNARY resolved as shift.
Conflict in state 114 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 114 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 114 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 114 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 114 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 114 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 114 between rule 118 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 130 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 130 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 130 between rule 101 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 130 between rule 101 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 130 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 130 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 130 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 130 between rule 101 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 130 between rule 101 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 130 between rule 101 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 130 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 130 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 130 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 130 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 130 between rule 101 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 130 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 145 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 145 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 145 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 145 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 145 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 145 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 145 between rule 108 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 145 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 145 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 145 between rule 108 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 145 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 145 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 145 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 145 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 145 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 145 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 147 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 147 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 147 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 147 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 147 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 147 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 147 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 147 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 147 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 147 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 147 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 147 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 147 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 147 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 147 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 147 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 167 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 167 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 167 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 167 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 167 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 167 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 167 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 167 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 167 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 167 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 167 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 167 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 167 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 167 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 167 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 167 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 168 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 168 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 168 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 168 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 168 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 168 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 168 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 168 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 168 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 168 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 168 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 168 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 168 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 168 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 168 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 168 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 169 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 169 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 169 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 169 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 169 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 169 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 169 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 169 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 169 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 169 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 169 between rule 113 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 169 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 169 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 169 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 169 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 169 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 170 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 170 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 170 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 170 between rule 116 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 170 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 170 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 170 between rule 116 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 170 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 170 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 170 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 170 between rule 116 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 170 between rule 116 and token OP17_LIST_RANGE resolved as error.
Conflict in state 170 between rule 116 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 170 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 170 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 170 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 171 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 171 between rule 119 and token OP18_TERNARY resolved as shift.
Conflict in state 171 between rule 119 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 171 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 171 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 171 between rule 119 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 171 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 171 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 171 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 171 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 171 between rule 119 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 171 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 171 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 171 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 171 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 171 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 173 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 173 between rule 120 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 173 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 173 between rule 120 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 173 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 173 between rule 120 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 173 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 173 between rule 120 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 173 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 173 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 173 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 173 between rule 120 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 173 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 173 between rule 120 and token OP18_TERNARY resolved as shift.
Conflict in state 173 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 173 between rule 120 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 174 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 174 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 174 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 174 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 174 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 174 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 174 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 174 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 174 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 174 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 174 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 174 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 174 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 174 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 174 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 174 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 175 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 175 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 175 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 175 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 175 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 175 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 175 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 175 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 175 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 175 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 175 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 175 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 175 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 175 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 175 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 175 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 176 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 176 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 176 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 176 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 176 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 176 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 176 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 176 between rule 110 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 176 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 176 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 176 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 176 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 176 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 176 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 176 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 176 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 177 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 177 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 177 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 177 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 177 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 177 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 177 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 177 between rule 114 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 177 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 177 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 177 between rule 114 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 177 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 177 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 177 between rule 114 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 177 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 177 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 179 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 179 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 179 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 179 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 179 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 179 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 179 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 179 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 179 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 179 between rule 107 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 179 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 179 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 179 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 179 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 179 between rule 107 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 179 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 180 between rule 100 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 180 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 180 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 180 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 180 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 180 between rule 100 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 180 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 180 between rule 100 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 180 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 180 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 180 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 180 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 180 between rule 100 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 180 between rule 100 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 180 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 180 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 181 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 115 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 181 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 181 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 181 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 181 between rule 115 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 181 between rule 115 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 181 between rule 115 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 181 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 181 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 181 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 181 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 181 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 181 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 181 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 181 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 182 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 182 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 182 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 182 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 182 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 182 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 182 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 182 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 182 between rule 104 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 182 between rule 104 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 182 between rule 104 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 182 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 182 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 182 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 182 between rule 104 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 182 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Include
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Constant
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Subroutine
10:	STAR-4 -> /* empty */
11:	PLUS-5 -> PLUS-5 Operation
12:	PLUS-5 -> Operation
13:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5
14:	Module -> Package
15:	Module -> Class
16:	STAR-6 -> STAR-6 Include
17:	STAR-6 -> /* empty */
18:	STAR-7 -> STAR-7 Constant
19:	STAR-7 -> /* empty */
20:	PLUS-8 -> PLUS-8 Subroutine
21:	PLUS-8 -> Subroutine
22:	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'
23:	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes
24:	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub
25:	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' ';' '}' ';'
26:	PLUS-9 -> PLUS-9 WORD
27:	PLUS-9 -> WORD
28:	Include -> 'use' WordScoped ';'
29:	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';'
30:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
31:	OPTIONAL-10 -> TypeInner
32:	OPTIONAL-10 -> /* empty */
33:	OPTIONAL-11 -> TypeInner
34:	OPTIONAL-11 -> /* empty */
35:	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL
36:	STAR-13 -> STAR-13 PAREN-12
37:	STAR-13 -> /* empty */
38:	OPTIONAL-14 -> TypeInner
39:	OPTIONAL-14 -> /* empty */
40:	OPTIONAL-15 -> TypeInner
41:	OPTIONAL-15 -> /* empty */
42:	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL
43:	STAR-17 -> STAR-17 PAREN-16
44:	STAR-17 -> /* empty */
45:	ConstantValue -> LITERAL
46:	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']'
47:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'
48:	OPTIONAL-18 -> SubroutineArguments
49:	OPTIONAL-18 -> /* empty */
50:	PLUS-19 -> PLUS-19 Operation
51:	PLUS-19 -> Operation
52:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'
53:	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
54:	STAR-21 -> STAR-21 PAREN-20
55:	STAR-21 -> /* empty */
56:	STAR-22 -> STAR-22 ArgumentCheck
57:	STAR-22 -> /* empty */
58:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22
59:	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
60:	OPTIONAL-24 -> PAREN-23
61:	OPTIONAL-24 -> /* empty */
62:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';'
63:	PLUS-25 -> PLUS-25 WordScoped
64:	PLUS-25 -> WordScoped
65:	STAR-26 -> STAR-26 Include
66:	STAR-26 -> /* empty */
67:	STAR-27 -> STAR-27 Constant
68:	STAR-27 -> /* empty */
69:	STAR-28 -> STAR-28 Method
70:	STAR-28 -> /* empty */
71:	PLUS-29 -> PLUS-29 Subroutine
72:	PLUS-29 -> Subroutine
73:	PAREN-30 -> PLUS-29 '1;1;'
74:	OPTIONAL-31 -> PAREN-30
75:	OPTIONAL-31 -> /* empty */
76:	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31
77:	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped
78:	STAR-33 -> STAR-33 PAREN-32
79:	STAR-33 -> /* empty */
80:	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';'
81:	Properties -> 'our %properties = (' ')' ';'
82:	OPTIONAL-34 -> MethodArguments
83:	OPTIONAL-34 -> /* empty */
84:	PLUS-35 -> PLUS-35 Operation
85:	PLUS-35 -> Operation
86:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'
87:	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
88:	STAR-37 -> STAR-37 PAREN-36
89:	STAR-37 -> /* empty */
90:	STAR-38 -> STAR-38 ArgumentCheck
91:	STAR-38 -> /* empty */
92:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38
93:	Operation -> Expression ';'
94:	Operation -> Statement
95:	OPTIONAL-39 -> ListElements
96:	OPTIONAL-39 -> /* empty */
97:	Operator -> OP01_NAMED '(' OPTIONAL-39 ')'
98:	Operator -> OP03_MATH_INC_DEC Variable
99:	Operator -> Variable OP03_MATH_INC_DEC
100:	Operator -> Expression OP04_MATH_POW Expression
101:	Operator -> OP05_LOGICAL_NEG Expression
102:	Operator -> OP05_MATH_NEG Expression ')'
103:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
104:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
105:	Operator -> Expression OP08_MATH_ADD_SUB Expression
106:	Operator -> Expression OP08_STRING_CAT Expression
107:	Operator -> Expression OP09_BITWISE_SHIFT Expression
108:	Operator -> OP10_NAMED_UNARY Expression
109:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
110:	Operator -> Expression OP11_COMPARE_LT_GT Expression
111:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
112:	Operator -> Expression OP13_BITWISE_AND Expression
113:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
114:	Operator -> Expression OP15_LOGICAL_AND Expression
115:	Operator -> Expression OP16_LOGICAL_OR Expression
116:	Operator -> Expression OP17_LIST_RANGE Expression
117:	Operator -> Expression OP18_TERNARY Variable COLON Variable
118:	Operator -> OP22_LOGICAL_NOT Expression
119:	Operator -> Expression OP23_LOGICAL_AND Expression
120:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
121:	OPTIONAL-40 -> ListElements
122:	OPTIONAL-40 -> /* empty */
123:	OPTIONAL-41 -> ListElements
124:	OPTIONAL-41 -> /* empty */
125:	OPTIONAL-42 -> ListElements
126:	OPTIONAL-42 -> /* empty */
127:	OPTIONAL-43 -> ListElements
128:	OPTIONAL-43 -> /* empty */
129:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';'
130:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';'
131:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';'
132:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';'
133:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
134:	OPTIONAL-44 -> ListElements
135:	OPTIONAL-44 -> /* empty */
136:	OPTIONAL-45 -> ListElements
137:	OPTIONAL-45 -> /* empty */
138:	Expression -> 'undef'
139:	Expression -> LITERAL
140:	Expression -> Variable
141:	Expression -> ArrayReference
142:	Expression -> ArrayDereferenced
143:	Expression -> HashReference
144:	Expression -> HashDereferenced
145:	Expression -> '{' '}'
146:	Expression -> Operator
147:	Expression -> WordScoped '(' OPTIONAL-44 ')'
148:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'
149:	Expression -> '(' Expression ')'
150:	PAREN-46 -> LoopLabel COLON
151:	OPTIONAL-47 -> PAREN-46
152:	OPTIONAL-47 -> /* empty */
153:	Statement -> Conditional
154:	Statement -> OPTIONAL-47 Loop
155:	Statement -> OperatorVoid
156:	Statement -> VariableDeclaration
157:	Statement -> VariableModification
158:	PAREN-48 -> 'elsif (' Expression ')' CodeBlock
159:	STAR-49 -> STAR-49 PAREN-48
160:	STAR-49 -> /* empty */
161:	PAREN-50 -> 'else' CodeBlock
162:	OPTIONAL-51 -> PAREN-50
163:	OPTIONAL-51 -> /* empty */
164:	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51
165:	Loop -> LoopFor
166:	Loop -> LoopForEach
167:	Loop -> LoopWhile
168:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
169:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
170:	LoopWhile -> 'while (' Expression ')' CodeBlock
171:	PLUS-52 -> PLUS-52 Operation
172:	PLUS-52 -> Operation
173:	CodeBlock -> '{' PLUS-52 '}'
174:	STAR-53 -> STAR-53 VariableRetrieval
175:	STAR-53 -> /* empty */
176:	Variable -> VARIABLE_SYMBOL STAR-53
177:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
178:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
179:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
180:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
181:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'
182:	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';'
183:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
184:	PAREN-54 -> OP21_LIST_COMMA ListElement
185:	STAR-55 -> STAR-55 PAREN-54
186:	STAR-55 -> /* empty */
187:	ListElements -> ListElement STAR-55
188:	ListElement -> Expression
189:	ListElement -> TypeInner Expression
190:	ListElement -> KEYS_OR_VALUES HashDereferenced
191:	OPTIONAL-56 -> ListElements
192:	OPTIONAL-56 -> /* empty */
193:	ArrayReference -> '[' OPTIONAL-56 ']'
194:	ArrayDereferenced -> '@{' Variable '}'
195:	ArrayDereferenced -> '@{' ArrayReference '}'
196:	OPTIONAL-57 -> TypeInner
197:	OPTIONAL-57 -> /* empty */
198:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 Expression
199:	HashEntry -> HashDereferenced
200:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
201:	HashEntryTyped -> HashDereferenced
202:	PAREN-58 -> OP21_LIST_COMMA HashEntry
203:	STAR-59 -> STAR-59 PAREN-58
204:	STAR-59 -> /* empty */
205:	HashReference -> '{' HashEntry STAR-59 '}'
206:	HashDereferenced -> '%{' Variable '}'
207:	HashDereferenced -> '%{' HashReference '}'
208:	WordScoped -> WORD
209:	WordScoped -> WORD_SCOPED
210:	FileHandle -> '{*' WORD '}'
211:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
212:	Type -> WORD
213:	LoopLabel -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 3
	SHEBANG	shift, and go to state 4

	PLUS-1	go to state 7
	Program	go to state 8
	Package	go to state 6
	Class	go to state 5
	Module	go to state 1
	CompileUnit	go to state 2

State 1:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 2:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 9

State 3:

	Package -> 'package' . WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 10

State 4:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use strict;'	shift, and go to state 13

	Header	go to state 14

State 5:

	Module -> Class .	(Rule 15)

	$default	reduce using rule 15 (Module)

State 6:

	Module -> Package .	(Rule 14)

	$default	reduce using rule 14 (Module)

State 7:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 3

	$end	reduce using rule 4 (CompileUnit)

	Package	go to state 6
	Class	go to state 5
	Module	go to state 15

State 8:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 9:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 10:

	Package -> 'package' WordScoped . ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	';'	shift, and go to state 16

State 11:

	WordScoped -> WORD .	(Rule 208)

	$default	reduce using rule 208 (WordScoped)

State 12:

	WordScoped -> WORD_SCOPED .	(Rule 209)

	$default	reduce using rule 209 (WordScoped)

State 13:

	Header -> 'use strict;' . 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	'use warnings;'	shift, and go to state 17

State 14:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 18

State 15:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 16:

	Package -> 'package' WordScoped ';' . Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	'use strict;'	shift, and go to state 13

	Header	go to state 19

State 17:

	Header -> 'use strict;' 'use warnings;' . 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	'our $VERSION ='	shift, and go to state 20

State 18:

	STAR-2 -> STAR-2 . Include	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use'	shift, and go to state 23

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)
	WORD_SCOPED	reduce using rule 8 (STAR-3)

	STAR-3	go to state 22
	Include	go to state 21

State 19:

	Package -> 'package' WordScoped ';' Header . STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	'use parent qw('	shift, and go to state 25

	'our'	reduce using rule 17 (STAR-6)
	'use constant'	reduce using rule 17 (STAR-6)
	'use'	reduce using rule 17 (STAR-6)

	STAR-6	go to state 24

State 20:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' . VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	VERSION_NUMBER	shift, and go to state 26

State 21:

	STAR-2 -> STAR-2 Include .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 22:

	STAR-3 -> STAR-3 . Constant	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 PLUS-5	(Rule 13)

	'use constant'	shift, and go to state 29

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)
	WORD_SCOPED	reduce using rule 10 (STAR-4)

	STAR-4	go to state 28
	Constant	go to state 27

State 23:

	Include -> 'use' . WordScoped ';'	(Rule 28)
	Include -> 'use' . WordScoped 'qw(' PLUS-9 ')' ';'	(Rule 29)

	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 30

State 24:

	STAR-6 -> STAR-6 . Include	(Rule 16)
	Package -> 'package' WordScoped ';' Header STAR-6 . STAR-7 PLUS-8 '1;1;'	(Rule 22)

	'use'	shift, and go to state 23

	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)

	Include	go to state 32
	STAR-7	go to state 31

State 25:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 34
	PLUS-25	go to state 33

State 26:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER . ';' 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	';'	shift, and go to state 35

State 27:

	STAR-3 -> STAR-3 Constant .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 28:

	STAR-4 -> STAR-4 . Subroutine	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . PLUS-5	(Rule 13)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 58
	'our'	shift, and go to state 42
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP01_NAMED_VOID	shift, and go to state 49
	OP01_NAMED_VOID_PAREN	shift, and go to state 64
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 51
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 73
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	Operation	go to state 69
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	PLUS-5	go to state 50
	OPTIONAL-47	go to state 76
	LoopLabel	go to state 72
	OperatorVoid	go to state 39
	PAREN-46	go to state 40
	VariableDeclaration	go to state 52
	Operator	go to state 37
	Conditional	go to state 36
	Statement	go to state 54
	ArrayReference	go to state 62
	Expression	go to state 43
	VariableModification	go to state 65
	Variable	go to state 63
	WordScoped	go to state 44
	Subroutine	go to state 59
	HashDereferenced	go to state 60

State 29:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 30)

	WORD	shift, and go to state 77

State 30:

	Include -> 'use' WordScoped . ';'	(Rule 28)
	Include -> 'use' WordScoped . 'qw(' PLUS-9 ')' ';'	(Rule 29)

	';'	shift, and go to state 79
	'qw('	shift, and go to state 78

State 31:

	STAR-7 -> STAR-7 . Constant	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 . PLUS-8 '1;1;'	(Rule 22)

	'our'	shift, and go to state 42
	'use constant'	shift, and go to state 29

	Constant	go to state 81
	Subroutine	go to state 82
	PLUS-8	go to state 80

State 32:

	STAR-6 -> STAR-6 Include .	(Rule 16)

	$default	reduce using rule 16 (STAR-6)

State 33:

	PLUS-25 -> PLUS-25 . WordScoped	(Rule 63)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 . ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	')'	shift, and go to state 84
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 83

State 34:

	PLUS-25 -> WordScoped .	(Rule 64)

	$default	reduce using rule 64 (PLUS-25)

State 35:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' . 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	'use Carp;'	shift, and go to state 85

State 36:

	Statement -> Conditional .	(Rule 153)

	$default	reduce using rule 153 (Statement)

State 37:

	Expression -> Operator .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 38:

	Expression -> '(' . Expression ')'	(Rule 149)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 60
	Variable	go to state 86
	WordScoped	go to state 44
	ArrayReference	go to state 62
	Expression	go to state 87
	HashReference	go to state 66
	Operator	go to state 37
	ArrayDereferenced	go to state 68

State 39:

	Statement -> OperatorVoid .	(Rule 155)

	$default	reduce using rule 155 (Statement)

State 40:

	OPTIONAL-47 -> PAREN-46 .	(Rule 151)

	$default	reduce using rule 151 (OPTIONAL-47)

State 41:

	Operator -> OP01_NAMED . '(' OPTIONAL-39 ')'	(Rule 97)

	'('	shift, and go to state 88

State 42:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 52)

	WORD	shift, and go to state 90

	Type	go to state 89

State 43:

	Operation -> Expression . ';'	(Rule 93)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	';'	shift, and go to state 102
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 44:

	Expression -> WordScoped . '(' OPTIONAL-44 ')'	(Rule 147)

	'('	shift, and go to state 108

State 45:

	HashDereferenced -> '%{' . Variable '}'	(Rule 206)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 207)

	'{'	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 61

	Variable	go to state 111
	HashReference	go to state 109

State 46:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 194)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 195)

	'['	shift, and go to state 55
	VARIABLE_SYMBOL	shift, and go to state 61

	ArrayReference	go to state 112
	Variable	go to state 113

State 47:

	Expression -> LITERAL .	(Rule 139)

	$default	reduce using rule 139 (Expression)

State 48:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 118)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66
	Expression	go to state 114
	ArrayReference	go to state 62
	Variable	go to state 86
	WordScoped	go to state 44
	HashDereferenced	go to state 60

State 49:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-42 ';'	(Rule 131)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-43 ';'	(Rule 132)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	'{*'	shift, and go to state 117
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	';'	reduce using rule 126 (OPTIONAL-42)

	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66
	Variable	go to state 86
	WordScoped	go to state 44
	FileHandle	go to state 118
	ListElement	go to state 120
	Expression	go to state 122
	TypeInner	go to state 123
	ArrayReference	go to state 62
	HashDereferenced	go to state 60
	ListElements	go to state 121
	OPTIONAL-42	go to state 116

State 50:

	PLUS-5 -> PLUS-5 . Operation	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5 .	(Rule 13)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 58
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP01_NAMED_VOID	shift, and go to state 49
	OP01_NAMED_VOID_PAREN	shift, and go to state 64
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 51
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 73
	WORD_SCOPED	shift, and go to state 12

	$end	reduce using rule 13 (Program)
	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	LoopLabel	go to state 72
	OPTIONAL-47	go to state 76
	HashReference	go to state 66
	ArrayDereferenced	go to state 68
	Operation	go to state 124
	HashDereferenced	go to state 60
	WordScoped	go to state 44
	Variable	go to state 63
	VariableModification	go to state 65
	Expression	go to state 43
	ArrayReference	go to state 62
	Statement	go to state 54
	Conditional	go to state 36
	Operator	go to state 37
	VariableDeclaration	go to state 52
	PAREN-46	go to state 40
	OperatorVoid	go to state 39

State 51:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 133)

	WORD	shift, and go to state 126

	LoopLabel	go to state 125

State 52:

	Statement -> VariableDeclaration .	(Rule 156)

	$default	reduce using rule 156 (Statement)

State 53:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 164)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 127
	ArrayReference	go to state 62
	Variable	go to state 86
	WordScoped	go to state 44
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66

State 54:

	Operation -> Statement .	(Rule 94)

	$default	reduce using rule 94 (Operation)

State 55:

	ArrayReference -> '[' . OPTIONAL-56 ']'	(Rule 193)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	']'	reduce using rule 192 (OPTIONAL-56)

	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37
	ListElement	go to state 120
	Variable	go to state 86
	WordScoped	go to state 44
	TypeInner	go to state 123
	ArrayReference	go to state 62
	Expression	go to state 122
	OPTIONAL-56	go to state 128
	ListElements	go to state 129
	HashDereferenced	go to state 60

State 56:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 101)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayReference	go to state 62
	Expression	go to state 130
	Variable	go to state 86
	WordScoped	go to state 44
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 57:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 98)

	VARIABLE_SYMBOL	shift, and go to state 61

	Variable	go to state 131

State 58:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 180)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 181)

	WORD	shift, and go to state 90

	Type	go to state 132

State 59:

	STAR-4 -> STAR-4 Subroutine .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 60:

	Expression -> HashDereferenced .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 61:

	Variable -> VARIABLE_SYMBOL . STAR-53	(Rule 176)

	$default	reduce using rule 175 (STAR-53)

	STAR-53	go to state 133

State 62:

	Expression -> ArrayReference .	(Rule 141)

	$default	reduce using rule 141 (Expression)

State 63:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 99)
	Expression -> Variable .	(Rule 140)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 148)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 182)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 183)

	OP02_METHOD_THINARROW	shift, and go to state 134
	OP03_MATH_INC_DEC	shift, and go to state 135
	OP19_VARIABLE_ASSIGN	shift, and go to state 137
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 136

	';'	reduce using rule 140 (Expression)
	OP04_MATH_POW	reduce using rule 140 (Expression)
	OP06_REGEX_MATCH	reduce using rule 140 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 140 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 140 (Expression)
	OP08_STRING_CAT	reduce using rule 140 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 140 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 140 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 140 (Expression)
	OP13_BITWISE_AND	reduce using rule 140 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 140 (Expression)
	OP15_LOGICAL_AND	reduce using rule 140 (Expression)
	OP16_LOGICAL_OR	reduce using rule 140 (Expression)
	OP17_LIST_RANGE	reduce using rule 140 (Expression)
	OP18_TERNARY	reduce using rule 140 (Expression)
	OP23_LOGICAL_AND	reduce using rule 140 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 140 (Expression)

State 64:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-40 ')' ';'	(Rule 129)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-41 ')' ';'	(Rule 130)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	'{*'	shift, and go to state 117
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 122 (OPTIONAL-40)

	HashDereferenced	go to state 60
	ListElements	go to state 138
	Expression	go to state 122
	ArrayReference	go to state 62
	TypeInner	go to state 123
	Variable	go to state 86
	FileHandle	go to state 139
	WordScoped	go to state 44
	ListElement	go to state 120
	Operator	go to state 37
	HashReference	go to state 66
	OPTIONAL-40	go to state 140
	ArrayDereferenced	go to state 68

State 65:

	Statement -> VariableModification .	(Rule 157)

	$default	reduce using rule 157 (Statement)

State 66:

	Expression -> HashReference .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 67:

	Expression -> '{' . '}'	(Rule 145)
	HashReference -> '{' . HashEntry STAR-59 '}'	(Rule 205)

	'%{'	shift, and go to state 45
	'}'	shift, and go to state 141
	WORD	shift, and go to state 142

	HashDereferenced	go to state 144
	HashEntry	go to state 143

State 68:

	Expression -> ArrayDereferenced .	(Rule 142)

	$default	reduce using rule 142 (Expression)

State 69:

	PLUS-5 -> Operation .	(Rule 12)

	$default	reduce using rule 12 (PLUS-5)

State 70:

	Expression -> 'undef' .	(Rule 138)

	$default	reduce using rule 138 (Expression)

State 71:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 108)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68
	HashDereferenced	go to state 60
	Expression	go to state 145
	ArrayReference	go to state 62
	WordScoped	go to state 44
	Variable	go to state 86

State 72:

	PAREN-46 -> LoopLabel . COLON	(Rule 150)

	COLON	shift, and go to state 146

State 73:

	WordScoped -> WORD .	(Rule 208)
	LoopLabel -> WORD .	(Rule 213)

	'('	reduce using rule 208 (WordScoped)
	COLON	reduce using rule 213 (LoopLabel)

State 74:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 109)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayReference	go to state 62
	Expression	go to state 147
	WordScoped	go to state 44
	Variable	go to state 86
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66

State 75:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 102)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashReference	go to state 66
	Operator	go to state 37
	ArrayDereferenced	go to state 68
	HashDereferenced	go to state 60
	Variable	go to state 86
	WordScoped	go to state 44
	Expression	go to state 148
	ArrayReference	go to state 62

State 76:

	Statement -> OPTIONAL-47 . Loop	(Rule 154)

	'for my integer'	shift, and go to state 152
	'foreach my'	shift, and go to state 151
	'while ('	shift, and go to state 155

	LoopForEach	go to state 153
	LoopWhile	go to state 154
	Loop	go to state 150
	LoopFor	go to state 149

State 77:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 30)

	OP20_HASH_FATARROW	shift, and go to state 156

State 78:

	Include -> 'use' WordScoped 'qw(' . PLUS-9 ')' ';'	(Rule 29)

	WORD	shift, and go to state 158

	PLUS-9	go to state 157

State 79:

	Include -> 'use' WordScoped ';' .	(Rule 28)

	$default	reduce using rule 28 (Include)

State 80:

	PLUS-8 -> PLUS-8 . Subroutine	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 . '1;1;'	(Rule 22)

	'1;1;'	shift, and go to state 160
	'our'	shift, and go to state 42

	Subroutine	go to state 159

State 81:

	STAR-7 -> STAR-7 Constant .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 82:

	PLUS-8 -> Subroutine .	(Rule 21)

	$default	reduce using rule 21 (PLUS-8)

State 83:

	PLUS-25 -> PLUS-25 WordScoped .	(Rule 63)

	$default	reduce using rule 63 (PLUS-25)

State 84:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' . ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	';'	shift, and go to state 161

State 85:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' . 'use RPerl;' OpsTypes	(Rule 23)

	'use RPerl;'	shift, and go to state 162

State 86:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 99)
	Expression -> Variable .	(Rule 140)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 148)

	OP02_METHOD_THINARROW	shift, and go to state 134
	OP03_MATH_INC_DEC	shift, and go to state 135

	')'	reduce using rule 140 (Expression)
	'..'	reduce using rule 140 (Expression)
	';'	reduce using rule 140 (Expression)
	']'	reduce using rule 140 (Expression)
	'}'	reduce using rule 140 (Expression)
	OP04_MATH_POW	reduce using rule 140 (Expression)
	OP06_REGEX_MATCH	reduce using rule 140 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 140 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 140 (Expression)
	OP08_STRING_CAT	reduce using rule 140 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 140 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 140 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 140 (Expression)
	OP13_BITWISE_AND	reduce using rule 140 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 140 (Expression)
	OP15_LOGICAL_AND	reduce using rule 140 (Expression)
	OP16_LOGICAL_OR	reduce using rule 140 (Expression)
	OP17_LIST_RANGE	reduce using rule 140 (Expression)
	OP18_TERNARY	reduce using rule 140 (Expression)
	OP21_LIST_COMMA	reduce using rule 140 (Expression)
	OP23_LOGICAL_AND	reduce using rule 140 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 140 (Expression)

State 87:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	Expression -> '(' Expression . ')'	(Rule 149)

	')'	shift, and go to state 163
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 88:

	Operator -> OP01_NAMED '(' . OPTIONAL-39 ')'	(Rule 97)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 96 (OPTIONAL-39)

	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37
	Variable	go to state 86
	WordScoped	go to state 44
	ListElement	go to state 120
	Expression	go to state 122
	ArrayReference	go to state 62
	TypeInner	go to state 123
	ListElements	go to state 165
	HashDereferenced	go to state 60
	OPTIONAL-39	go to state 164

State 89:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 52)

	VARIABLE_SYMBOL	shift, and go to state 166

State 90:

	Type -> WORD .	(Rule 212)

	$default	reduce using rule 212 (Type)

State 91:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 105)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashReference	go to state 66
	Operator	go to state 37
	ArrayDereferenced	go to state 68
	HashDereferenced	go to state 60
	ArrayReference	go to state 62
	Expression	go to state 167
	WordScoped	go to state 44
	Variable	go to state 86

State 92:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 112)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 60
	Expression	go to state 168
	ArrayReference	go to state 62
	Variable	go to state 86
	WordScoped	go to state 44
	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68

State 93:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 113)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 60
	Variable	go to state 86
	WordScoped	go to state 44
	ArrayReference	go to state 62
	Expression	go to state 169
	HashReference	go to state 66
	Operator	go to state 37
	ArrayDereferenced	go to state 68

State 94:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 116)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 44
	Variable	go to state 86
	ArrayReference	go to state 62
	Expression	go to state 170
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 95:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 119)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Variable	go to state 86
	WordScoped	go to state 44
	Expression	go to state 171
	ArrayReference	go to state 62
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66

State 96:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 103)

	'/'	shift, and go to state 172

State 97:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 120)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68
	HashDereferenced	go to state 60
	WordScoped	go to state 44
	Variable	go to state 86
	Expression	go to state 173
	ArrayReference	go to state 62

State 98:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 111)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66
	Variable	go to state 86
	WordScoped	go to state 44
	ArrayReference	go to state 62
	Expression	go to state 174
	HashDereferenced	go to state 60

State 99:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 106)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 60
	Expression	go to state 175
	ArrayReference	go to state 62
	WordScoped	go to state 44
	Variable	go to state 86
	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68

State 100:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 110)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37
	ArrayReference	go to state 62
	Expression	go to state 176
	Variable	go to state 86
	WordScoped	go to state 44
	HashDereferenced	go to state 60

State 101:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 114)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68
	HashDereferenced	go to state 60
	WordScoped	go to state 44
	Variable	go to state 86
	ArrayReference	go to state 62
	Expression	go to state 177

State 102:

	Operation -> Expression ';' .	(Rule 93)

	$default	reduce using rule 93 (Operation)

State 103:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 117)

	VARIABLE_SYMBOL	shift, and go to state 61

	Variable	go to state 178

State 104:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 107)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68
	HashDereferenced	go to state 60
	ArrayReference	go to state 62
	Expression	go to state 179
	Variable	go to state 86
	WordScoped	go to state 44

State 105:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 100)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayReference	go to state 62
	Expression	go to state 180
	Variable	go to state 86
	WordScoped	go to state 44
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 106:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 115)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66
	Expression	go to state 181
	ArrayReference	go to state 62
	Variable	go to state 86
	WordScoped	go to state 44
	HashDereferenced	go to state 60

State 107:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 104)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 182
	ArrayReference	go to state 62
	Variable	go to state 86
	WordScoped	go to state 44
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 108:

	Expression -> WordScoped '(' . OPTIONAL-44 ')'	(Rule 147)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 135 (OPTIONAL-44)

	ArrayDereferenced	go to state 68
	OPTIONAL-44	go to state 183
	HashReference	go to state 66
	Operator	go to state 37
	Expression	go to state 122
	ArrayReference	go to state 62
	TypeInner	go to state 123
	Variable	go to state 86
	WordScoped	go to state 44
	ListElement	go to state 120
	HashDereferenced	go to state 60
	ListElements	go to state 184

State 109:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 207)

	'}'	shift, and go to state 185

State 110:

	HashReference -> '{' . HashEntry STAR-59 '}'	(Rule 205)

	'%{'	shift, and go to state 45
	WORD	shift, and go to state 142

	HashEntry	go to state 143
	HashDereferenced	go to state 144

State 111:

	HashDereferenced -> '%{' Variable . '}'	(Rule 206)

	'}'	shift, and go to state 186

State 112:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 195)

	'}'	shift, and go to state 187

State 113:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 194)

	'}'	shift, and go to state 188

State 114:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 118)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 115:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	WORD	shift, and go to state 90

	Type	go to state 189

State 116:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 . ';'	(Rule 131)

	';'	shift, and go to state 190

State 117:

	FileHandle -> '{*' . WORD '}'	(Rule 210)

	WORD	shift, and go to state 191

State 118:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-43 ';'	(Rule 132)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	';'	reduce using rule 128 (OPTIONAL-43)

	HashReference	go to state 66
	Operator	go to state 37
	ArrayDereferenced	go to state 68
	ListElements	go to state 193
	HashDereferenced	go to state 60
	TypeInner	go to state 123
	ArrayReference	go to state 62
	Expression	go to state 122
	OPTIONAL-43	go to state 192
	ListElement	go to state 120
	Variable	go to state 86
	WordScoped	go to state 44

State 119:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 190)

	'%{'	shift, and go to state 45

	HashDereferenced	go to state 194

State 120:

	ListElements -> ListElement . STAR-55	(Rule 187)

	$default	reduce using rule 186 (STAR-55)

	STAR-55	go to state 195

State 121:

	OPTIONAL-42 -> ListElements .	(Rule 125)

	$default	reduce using rule 125 (OPTIONAL-42)

State 122:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	ListElement -> Expression .	(Rule 188)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

	')'	reduce using rule 188 (ListElement)
	';'	reduce using rule 188 (ListElement)
	']'	reduce using rule 188 (ListElement)
	OP21_LIST_COMMA	reduce using rule 188 (ListElement)

State 123:

	ListElement -> TypeInner . Expression	(Rule 189)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 60
	ArrayReference	go to state 62
	Expression	go to state 196
	WordScoped	go to state 44
	Variable	go to state 86
	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68

State 124:

	PLUS-5 -> PLUS-5 Operation .	(Rule 11)

	$default	reduce using rule 11 (PLUS-5)

State 125:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 133)

	';'	shift, and go to state 197

State 126:

	LoopLabel -> WORD .	(Rule 213)

	$default	reduce using rule 213 (LoopLabel)

State 127:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 164)

	')'	shift, and go to state 198
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 128:

	ArrayReference -> '[' OPTIONAL-56 . ']'	(Rule 193)

	']'	shift, and go to state 199

State 129:

	OPTIONAL-56 -> ListElements .	(Rule 191)

	$default	reduce using rule 191 (OPTIONAL-56)

State 130:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 101)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105

	')'	reduce using rule 101 (Operator)
	'..'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP06_REGEX_MATCH	reduce using rule 101 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 101 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 101 (Operator)
	OP08_STRING_CAT	reduce using rule 101 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 101 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 131:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 98)

	$default	reduce using rule 98 (Operator)

State 132:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 180)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 181)

	VARIABLE_SYMBOL	shift, and go to state 200

State 133:

	STAR-53 -> STAR-53 . VariableRetrieval	(Rule 174)
	Variable -> VARIABLE_SYMBOL STAR-53 .	(Rule 176)

	OP02_ARRAY_THINARROW	shift, and go to state 203
	OP02_HASH_THINARROW	shift, and go to state 202

	')'	reduce using rule 176 (Variable)
	'..'	reduce using rule 176 (Variable)
	';'	reduce using rule 176 (Variable)
	']'	reduce using rule 176 (Variable)
	'}'	reduce using rule 176 (Variable)
	COLON	reduce using rule 176 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 176 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 176 (Variable)
	OP04_MATH_POW	reduce using rule 176 (Variable)
	OP06_REGEX_MATCH	reduce using rule 176 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 176 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 176 (Variable)
	OP08_STRING_CAT	reduce using rule 176 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 176 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 176 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 176 (Variable)
	OP13_BITWISE_AND	reduce using rule 176 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 176 (Variable)
	OP15_LOGICAL_AND	reduce using rule 176 (Variable)
	OP16_LOGICAL_OR	reduce using rule 176 (Variable)
	OP17_LIST_RANGE	reduce using rule 176 (Variable)
	OP18_TERNARY	reduce using rule 176 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 176 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 176 (Variable)
	OP21_LIST_COMMA	reduce using rule 176 (Variable)
	OP23_LOGICAL_AND	reduce using rule 176 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 176 (Variable)

	VariableRetrieval	go to state 201

State 134:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-45 ')'	(Rule 148)

	WORD	shift, and go to state 204

State 135:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 99)

	$default	reduce using rule 99 (Operator)

State 136:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 183)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37
	Variable	go to state 86
	WordScoped	go to state 44
	ArrayReference	go to state 62
	Expression	go to state 205
	HashDereferenced	go to state 60

State 137:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 182)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 44
	Variable	go to state 86
	Expression	go to state 206
	ArrayReference	go to state 62
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 138:

	OPTIONAL-40 -> ListElements .	(Rule 121)

	$default	reduce using rule 121 (OPTIONAL-40)

State 139:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-41 ')' ';'	(Rule 130)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 124 (OPTIONAL-41)

	Expression	go to state 122
	OPTIONAL-41	go to state 208
	TypeInner	go to state 123
	ArrayReference	go to state 62
	Variable	go to state 86
	WordScoped	go to state 44
	ListElement	go to state 120
	HashDereferenced	go to state 60
	ListElements	go to state 207
	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66

State 140:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 . ')' ';'	(Rule 129)

	')'	shift, and go to state 209

State 141:

	Expression -> '{' '}' .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 142:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-57 Expression	(Rule 198)

	OP20_HASH_FATARROW	shift, and go to state 210

State 143:

	HashReference -> '{' HashEntry . STAR-59 '}'	(Rule 205)

	$default	reduce using rule 204 (STAR-59)

	STAR-59	go to state 211

State 144:

	HashEntry -> HashDereferenced .	(Rule 199)

	$default	reduce using rule 199 (HashEntry)

State 145:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 108)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 108 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 108 (Operator)
	OP13_BITWISE_AND	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 146:

	PAREN-46 -> LoopLabel COLON .	(Rule 150)

	$default	reduce using rule 150 (PAREN-46)

State 147:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 109)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 148:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 102)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	')'	shift, and go to state 212
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 149:

	Loop -> LoopFor .	(Rule 165)

	$default	reduce using rule 165 (Loop)

State 150:

	Statement -> OPTIONAL-47 Loop .	(Rule 154)

	$default	reduce using rule 154 (Statement)

State 151:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 169)

	WORD	shift, and go to state 90

	Type	go to state 213

State 152:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 168)

	VARIABLE_SYMBOL	shift, and go to state 214

State 153:

	Loop -> LoopForEach .	(Rule 166)

	$default	reduce using rule 166 (Loop)

State 154:

	Loop -> LoopWhile .	(Rule 167)

	$default	reduce using rule 167 (Loop)

State 155:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 170)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Variable	go to state 86
	WordScoped	go to state 44
	Expression	go to state 215
	ArrayReference	go to state 62
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 156:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 30)

	'my'	shift, and go to state 115

	TypeInner	go to state 216

State 157:

	PLUS-9 -> PLUS-9 . WORD	(Rule 26)
	Include -> 'use' WordScoped 'qw(' PLUS-9 . ')' ';'	(Rule 29)

	')'	shift, and go to state 218
	WORD	shift, and go to state 217

State 158:

	PLUS-9 -> WORD .	(Rule 27)

	$default	reduce using rule 27 (PLUS-9)

State 159:

	PLUS-8 -> PLUS-8 Subroutine .	(Rule 20)

	$default	reduce using rule 20 (PLUS-8)

State 160:

	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;' .	(Rule 22)

	$default	reduce using rule 22 (Package)

State 161:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' . STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	$default	reduce using rule 66 (STAR-26)

	STAR-26	go to state 219

State 162:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' . OpsTypes	(Rule 23)

	'our'	shift, and go to state 221

	OpsTypes	go to state 220

State 163:

	Expression -> '(' Expression ')' .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 164:

	Operator -> OP01_NAMED '(' OPTIONAL-39 . ')'	(Rule 97)

	')'	shift, and go to state 222

State 165:

	OPTIONAL-39 -> ListElements .	(Rule 95)

	$default	reduce using rule 95 (OPTIONAL-39)

State 166:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 52)

	'= sub {'	shift, and go to state 223

State 167:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 168:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 169:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 170:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 171:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 172:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 103)

	OP06_REGEX_PATTERN	shift, and go to state 224

State 173:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95

	')'	reduce using rule 120 (Operator)
	'..'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 174:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 175:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 176:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 177:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 178:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 117)

	COLON	shift, and go to state 225

State 179:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 107 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 180:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105

	')'	reduce using rule 100 (Operator)
	'..'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP06_REGEX_MATCH	reduce using rule 100 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 100 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 100 (Operator)
	OP08_STRING_CAT	reduce using rule 100 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 181:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 182:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 104 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 104 (Operator)
	OP08_STRING_CAT	reduce using rule 104 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 104 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 104 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 183:

	Expression -> WordScoped '(' OPTIONAL-44 . ')'	(Rule 147)

	')'	shift, and go to state 226

State 184:

	OPTIONAL-44 -> ListElements .	(Rule 134)

	$default	reduce using rule 134 (OPTIONAL-44)

State 185:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 207)

	$default	reduce using rule 207 (HashDereferenced)

State 186:

	HashDereferenced -> '%{' Variable '}' .	(Rule 206)

	$default	reduce using rule 206 (HashDereferenced)

State 187:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 195)

	$default	reduce using rule 195 (ArrayDereferenced)

State 188:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 194)

	$default	reduce using rule 194 (ArrayDereferenced)

State 189:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	'$TYPED_'	shift, and go to state 227

State 190:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';' .	(Rule 131)

	$default	reduce using rule 131 (OperatorVoid)

State 191:

	FileHandle -> '{*' WORD . '}'	(Rule 210)

	'}'	shift, and go to state 228

State 192:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 . ';'	(Rule 132)

	';'	shift, and go to state 229

State 193:

	OPTIONAL-43 -> ListElements .	(Rule 127)

	$default	reduce using rule 127 (OPTIONAL-43)

State 194:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 190)

	$default	reduce using rule 190 (ListElement)

State 195:

	STAR-55 -> STAR-55 . PAREN-54	(Rule 185)
	ListElements -> ListElement STAR-55 .	(Rule 187)

	OP21_LIST_COMMA	shift, and go to state 231

	')'	reduce using rule 187 (ListElements)
	';'	reduce using rule 187 (ListElements)
	']'	reduce using rule 187 (ListElements)

	PAREN-54	go to state 230

State 196:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	ListElement -> TypeInner Expression .	(Rule 189)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

	')'	reduce using rule 189 (ListElement)
	';'	reduce using rule 189 (ListElement)
	']'	reduce using rule 189 (ListElement)
	OP21_LIST_COMMA	reduce using rule 189 (ListElement)

State 197:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 133)

	$default	reduce using rule 133 (OperatorVoid)

State 198:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-49 OPTIONAL-51	(Rule 164)

	'{'	shift, and go to state 232

	CodeBlock	go to state 233

State 199:

	ArrayReference -> '[' OPTIONAL-56 ']' .	(Rule 193)

	$default	reduce using rule 193 (ArrayReference)

State 200:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 180)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 181)

	';'	shift, and go to state 234
	OP19_VARIABLE_ASSIGN	shift, and go to state 235

State 201:

	STAR-53 -> STAR-53 VariableRetrieval .	(Rule 174)

	$default	reduce using rule 174 (STAR-53)

State 202:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 178)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 179)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 237
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66
	Expression	go to state 236
	ArrayReference	go to state 62
	WordScoped	go to state 44
	Variable	go to state 86
	HashDereferenced	go to state 60

State 203:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 177)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 238
	ArrayReference	go to state 62
	WordScoped	go to state 44
	Variable	go to state 86
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 204:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-45 ')'	(Rule 148)

	'('	shift, and go to state 239

State 205:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 183)

	';'	shift, and go to state 240
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 206:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 182)

	';'	shift, and go to state 241
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 207:

	OPTIONAL-41 -> ListElements .	(Rule 123)

	$default	reduce using rule 123 (OPTIONAL-41)

State 208:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 . ')' ';'	(Rule 130)

	')'	shift, and go to state 242

State 209:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' . ';'	(Rule 129)

	';'	shift, and go to state 243

State 210:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-57 Expression	(Rule 198)

	'my'	shift, and go to state 115

	'%{'	reduce using rule 197 (OPTIONAL-57)
	'('	reduce using rule 197 (OPTIONAL-57)
	'@{'	reduce using rule 197 (OPTIONAL-57)
	'['	reduce using rule 197 (OPTIONAL-57)
	'undef'	reduce using rule 197 (OPTIONAL-57)
	'{'	reduce using rule 197 (OPTIONAL-57)
	LITERAL	reduce using rule 197 (OPTIONAL-57)
	OP01_NAMED	reduce using rule 197 (OPTIONAL-57)
	OP03_MATH_INC_DEC	reduce using rule 197 (OPTIONAL-57)
	OP05_LOGICAL_NEG	reduce using rule 197 (OPTIONAL-57)
	OP05_MATH_NEG	reduce using rule 197 (OPTIONAL-57)
	OP10_NAMED_UNARY	reduce using rule 197 (OPTIONAL-57)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 197 (OPTIONAL-57)
	OP22_LOGICAL_NOT	reduce using rule 197 (OPTIONAL-57)
	VARIABLE_SYMBOL	reduce using rule 197 (OPTIONAL-57)
	WORD	reduce using rule 197 (OPTIONAL-57)
	WORD_SCOPED	reduce using rule 197 (OPTIONAL-57)

	OPTIONAL-57	go to state 245
	TypeInner	go to state 244

State 211:

	STAR-59 -> STAR-59 . PAREN-58	(Rule 203)
	HashReference -> '{' HashEntry STAR-59 . '}'	(Rule 205)

	'}'	shift, and go to state 246
	OP21_LIST_COMMA	shift, and go to state 247

	PAREN-58	go to state 248

State 212:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 213:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 169)

	VARIABLE_SYMBOL	shift, and go to state 249

State 214:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 168)

	'('	shift, and go to state 250

State 215:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 170)

	')'	shift, and go to state 251
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 216:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 30)

	'['	shift, and go to state 253
	'{'	shift, and go to state 252
	LITERAL	shift, and go to state 254

	ConstantValue	go to state 255

State 217:

	PLUS-9 -> PLUS-9 WORD .	(Rule 26)

	$default	reduce using rule 26 (PLUS-9)

State 218:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' . ';'	(Rule 29)

	';'	shift, and go to state 256

State 219:

	STAR-26 -> STAR-26 . Include	(Rule 65)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 . STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	'use'	shift, and go to state 23

	'our %properties = ('	reduce using rule 68 (STAR-27)
	'use constant'	reduce using rule 68 (STAR-27)

	Include	go to state 258
	STAR-27	go to state 257

State 220:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes .	(Rule 23)

	$default	reduce using rule 23 (Header)

State 221:

	OpsTypes -> 'our' . Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	WORD	shift, and go to state 90

	Type	go to state 259

State 222:

	Operator -> OP01_NAMED '(' OPTIONAL-39 ')' .	(Rule 97)

	$default	reduce using rule 97 (Operator)

State 223:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-18 PLUS-19 '}' ';'	(Rule 52)

	'( my'	shift, and go to state 260

	'%{'	reduce using rule 49 (OPTIONAL-18)
	'('	reduce using rule 49 (OPTIONAL-18)
	'@{'	reduce using rule 49 (OPTIONAL-18)
	'['	reduce using rule 49 (OPTIONAL-18)
	'for my integer'	reduce using rule 49 (OPTIONAL-18)
	'foreach my'	reduce using rule 49 (OPTIONAL-18)
	'if ('	reduce using rule 49 (OPTIONAL-18)
	'my'	reduce using rule 49 (OPTIONAL-18)
	'undef'	reduce using rule 49 (OPTIONAL-18)
	'while ('	reduce using rule 49 (OPTIONAL-18)
	'{'	reduce using rule 49 (OPTIONAL-18)
	LITERAL	reduce using rule 49 (OPTIONAL-18)
	OP01_NAMED	reduce using rule 49 (OPTIONAL-18)
	OP01_NAMED_VOID	reduce using rule 49 (OPTIONAL-18)
	OP01_NAMED_VOID_PAREN	reduce using rule 49 (OPTIONAL-18)
	OP03_MATH_INC_DEC	reduce using rule 49 (OPTIONAL-18)
	OP05_LOGICAL_NEG	reduce using rule 49 (OPTIONAL-18)
	OP05_MATH_NEG	reduce using rule 49 (OPTIONAL-18)
	OP10_NAMED_UNARY	reduce using rule 49 (OPTIONAL-18)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 49 (OPTIONAL-18)
	OP19_LOOP_CONTROL	reduce using rule 49 (OPTIONAL-18)
	OP22_LOGICAL_NOT	reduce using rule 49 (OPTIONAL-18)
	VARIABLE_SYMBOL	reduce using rule 49 (OPTIONAL-18)
	WORD	reduce using rule 49 (OPTIONAL-18)
	WORD_SCOPED	reduce using rule 49 (OPTIONAL-18)

	SubroutineArguments	go to state 262
	OPTIONAL-18	go to state 261

State 224:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 103)

	'/'	shift, and go to state 263

State 225:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 117)

	VARIABLE_SYMBOL	shift, and go to state 61

	Variable	go to state 264

State 226:

	Expression -> WordScoped '(' OPTIONAL-44 ')' .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 227:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	WORD	shift, and go to state 265

State 228:

	FileHandle -> '{*' WORD '}' .	(Rule 210)

	$default	reduce using rule 210 (FileHandle)

State 229:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';' .	(Rule 132)

	$default	reduce using rule 132 (OperatorVoid)

State 230:

	STAR-55 -> STAR-55 PAREN-54 .	(Rule 185)

	$default	reduce using rule 185 (STAR-55)

State 231:

	PAREN-54 -> OP21_LIST_COMMA . ListElement	(Rule 184)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ListElement	go to state 266
	WordScoped	go to state 44
	Variable	go to state 86
	ArrayReference	go to state 62
	TypeInner	go to state 123
	Expression	go to state 122
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 232:

	CodeBlock -> '{' . PLUS-52 '}'	(Rule 173)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 58
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP01_NAMED_VOID	shift, and go to state 49
	OP01_NAMED_VOID_PAREN	shift, and go to state 64
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 51
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 73
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	OperatorVoid	go to state 39
	PAREN-46	go to state 40
	Operator	go to state 37
	Conditional	go to state 36
	PLUS-52	go to state 268
	VariableDeclaration	go to state 52
	Statement	go to state 54
	Expression	go to state 43
	ArrayReference	go to state 62
	Variable	go to state 63
	WordScoped	go to state 44
	VariableModification	go to state 65
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	Operation	go to state 267
	HashReference	go to state 66
	OPTIONAL-47	go to state 76
	LoopLabel	go to state 72

State 233:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-49 OPTIONAL-51	(Rule 164)

	$default	reduce using rule 160 (STAR-49)

	STAR-49	go to state 269

State 234:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 180)

	$default	reduce using rule 180 (VariableDeclaration)

State 235:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 181)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66
	Variable	go to state 86
	WordScoped	go to state 44
	Expression	go to state 270
	ArrayReference	go to state 62
	HashDereferenced	go to state 60

State 236:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 178)

	'}'	shift, and go to state 271
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 237:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 179)
	WordScoped -> WORD .	(Rule 208)

	'}'	shift, and go to state 272

	'('	reduce using rule 208 (WordScoped)

State 238:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 177)

	']'	shift, and go to state 273
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 239:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-45 ')'	(Rule 148)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 137 (OPTIONAL-45)

	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68
	OPTIONAL-45	go to state 274
	HashDereferenced	go to state 60
	ListElements	go to state 275
	Expression	go to state 122
	ArrayReference	go to state 62
	TypeInner	go to state 123
	Variable	go to state 86
	WordScoped	go to state 44
	ListElement	go to state 120

State 240:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 183)

	$default	reduce using rule 183 (VariableModification)

State 241:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 182)

	$default	reduce using rule 182 (VariableModification)

State 242:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' . ';'	(Rule 130)

	';'	shift, and go to state 276

State 243:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';' .	(Rule 129)

	$default	reduce using rule 129 (OperatorVoid)

State 244:

	OPTIONAL-57 -> TypeInner .	(Rule 196)

	$default	reduce using rule 196 (OPTIONAL-57)

State 245:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 . Expression	(Rule 198)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66
	Expression	go to state 277
	ArrayReference	go to state 62
	Variable	go to state 86
	WordScoped	go to state 44
	HashDereferenced	go to state 60

State 246:

	HashReference -> '{' HashEntry STAR-59 '}' .	(Rule 205)

	$default	reduce using rule 205 (HashReference)

State 247:

	PAREN-58 -> OP21_LIST_COMMA . HashEntry	(Rule 202)

	'%{'	shift, and go to state 45
	WORD	shift, and go to state 142

	HashDereferenced	go to state 144
	HashEntry	go to state 278

State 248:

	STAR-59 -> STAR-59 PAREN-58 .	(Rule 203)

	$default	reduce using rule 203 (STAR-59)

State 249:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 169)

	'('	shift, and go to state 279

State 250:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 168)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 60
	ArrayReference	go to state 62
	Expression	go to state 280
	WordScoped	go to state 44
	Variable	go to state 86
	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68

State 251:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 170)

	'{'	shift, and go to state 232

	CodeBlock	go to state 281

State 252:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 47)

	WORD	shift, and go to state 282

State 253:

	ConstantValue -> '[' . OPTIONAL-10 LITERAL STAR-13 ']'	(Rule 46)

	'my'	shift, and go to state 115

	LITERAL	reduce using rule 32 (OPTIONAL-10)

	OPTIONAL-10	go to state 284
	TypeInner	go to state 283

State 254:

	ConstantValue -> LITERAL .	(Rule 45)

	$default	reduce using rule 45 (ConstantValue)

State 255:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 30)

	';'	shift, and go to state 285

State 256:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';' .	(Rule 29)

	$default	reduce using rule 29 (Include)

State 257:

	STAR-27 -> STAR-27 . Constant	(Rule 67)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 . Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	'our %properties = ('	shift, and go to state 288
	'use constant'	shift, and go to state 29

	Constant	go to state 286
	Properties	go to state 287

State 258:

	STAR-26 -> STAR-26 Include .	(Rule 65)

	$default	reduce using rule 65 (STAR-26)

State 259:

	OpsTypes -> 'our' Type . OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	OPS_TYPES_ID	shift, and go to state 289

State 260:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	WORD	shift, and go to state 90

	Type	go to state 290

State 261:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 . PLUS-19 '}' ';'	(Rule 52)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 58
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP01_NAMED_VOID	shift, and go to state 49
	OP01_NAMED_VOID_PAREN	shift, and go to state 64
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 51
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 73
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	ArrayDereferenced	go to state 68
	Operation	go to state 291
	HashReference	go to state 66
	OPTIONAL-47	go to state 76
	LoopLabel	go to state 72
	OperatorVoid	go to state 39
	PAREN-46	go to state 40
	PLUS-19	go to state 292
	Conditional	go to state 36
	Operator	go to state 37
	VariableDeclaration	go to state 52
	Statement	go to state 54
	Expression	go to state 43
	ArrayReference	go to state 62
	Variable	go to state 63
	WordScoped	go to state 44
	VariableModification	go to state 65
	HashDereferenced	go to state 60

State 262:

	OPTIONAL-18 -> SubroutineArguments .	(Rule 48)

	$default	reduce using rule 48 (OPTIONAL-18)

State 263:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 264:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 117)

	$default	reduce using rule 117 (Operator)

State 265:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 211)

	OP19_VARIABLE_ASSIGN	shift, and go to state 293

State 266:

	PAREN-54 -> OP21_LIST_COMMA ListElement .	(Rule 184)

	$default	reduce using rule 184 (PAREN-54)

State 267:

	PLUS-52 -> Operation .	(Rule 172)

	$default	reduce using rule 172 (PLUS-52)

State 268:

	PLUS-52 -> PLUS-52 . Operation	(Rule 171)
	CodeBlock -> '{' PLUS-52 . '}'	(Rule 173)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 58
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	'}'	shift, and go to state 294
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP01_NAMED_VOID	shift, and go to state 49
	OP01_NAMED_VOID_PAREN	shift, and go to state 64
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 51
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 73
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	HashDereferenced	go to state 60
	VariableModification	go to state 65
	WordScoped	go to state 44
	Variable	go to state 63
	ArrayReference	go to state 62
	Expression	go to state 43
	Statement	go to state 54
	VariableDeclaration	go to state 52
	Operator	go to state 37
	Conditional	go to state 36
	PAREN-46	go to state 40
	OperatorVoid	go to state 39
	LoopLabel	go to state 72
	OPTIONAL-47	go to state 76
	HashReference	go to state 66
	Operation	go to state 295
	ArrayDereferenced	go to state 68

State 269:

	STAR-49 -> STAR-49 . PAREN-48	(Rule 159)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 . OPTIONAL-51	(Rule 164)

	'else'	shift, and go to state 298
	'elsif ('	shift, and go to state 300

	$end	reduce using rule 163 (OPTIONAL-51)
	'%{'	reduce using rule 163 (OPTIONAL-51)
	'('	reduce using rule 163 (OPTIONAL-51)
	'@{'	reduce using rule 163 (OPTIONAL-51)
	'['	reduce using rule 163 (OPTIONAL-51)
	'for my integer'	reduce using rule 163 (OPTIONAL-51)
	'foreach my'	reduce using rule 163 (OPTIONAL-51)
	'if ('	reduce using rule 163 (OPTIONAL-51)
	'my'	reduce using rule 163 (OPTIONAL-51)
	'undef'	reduce using rule 163 (OPTIONAL-51)
	'while ('	reduce using rule 163 (OPTIONAL-51)
	'{'	reduce using rule 163 (OPTIONAL-51)
	'}'	reduce using rule 163 (OPTIONAL-51)
	LITERAL	reduce using rule 163 (OPTIONAL-51)
	OP01_NAMED	reduce using rule 163 (OPTIONAL-51)
	OP01_NAMED_VOID	reduce using rule 163 (OPTIONAL-51)
	OP01_NAMED_VOID_PAREN	reduce using rule 163 (OPTIONAL-51)
	OP03_MATH_INC_DEC	reduce using rule 163 (OPTIONAL-51)
	OP05_LOGICAL_NEG	reduce using rule 163 (OPTIONAL-51)
	OP05_MATH_NEG	reduce using rule 163 (OPTIONAL-51)
	OP10_NAMED_UNARY	reduce using rule 163 (OPTIONAL-51)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 163 (OPTIONAL-51)
	OP19_LOOP_CONTROL	reduce using rule 163 (OPTIONAL-51)
	OP22_LOGICAL_NOT	reduce using rule 163 (OPTIONAL-51)
	VARIABLE_SYMBOL	reduce using rule 163 (OPTIONAL-51)
	WORD	reduce using rule 163 (OPTIONAL-51)
	WORD_SCOPED	reduce using rule 163 (OPTIONAL-51)

	PAREN-48	go to state 296
	PAREN-50	go to state 297
	OPTIONAL-51	go to state 299

State 270:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 181)

	';'	shift, and go to state 301
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 271:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 178)

	$default	reduce using rule 178 (VariableRetrieval)

State 272:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 179)

	$default	reduce using rule 179 (VariableRetrieval)

State 273:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 177)

	$default	reduce using rule 177 (VariableRetrieval)

State 274:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 . ')'	(Rule 148)

	')'	shift, and go to state 302

State 275:

	OPTIONAL-45 -> ListElements .	(Rule 136)

	$default	reduce using rule 136 (OPTIONAL-45)

State 276:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';' .	(Rule 130)

	$default	reduce using rule 130 (OperatorVoid)

State 277:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 Expression .	(Rule 198)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

	'}'	reduce using rule 198 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 198 (HashEntry)

State 278:

	PAREN-58 -> OP21_LIST_COMMA HashEntry .	(Rule 202)

	$default	reduce using rule 202 (PAREN-58)

State 279:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 169)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 119
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashReference	go to state 66
	Operator	go to state 37
	ArrayDereferenced	go to state 68
	HashDereferenced	go to state 60
	ListElements	go to state 303
	Expression	go to state 122
	TypeInner	go to state 123
	ArrayReference	go to state 62
	WordScoped	go to state 44
	Variable	go to state 86
	ListElement	go to state 120

State 280:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 168)

	'..'	shift, and go to state 304
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 281:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 170)

	$default	reduce using rule 170 (LoopWhile)

State 282:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 47)

	OP20_HASH_FATARROW	shift, and go to state 305

State 283:

	OPTIONAL-10 -> TypeInner .	(Rule 31)

	$default	reduce using rule 31 (OPTIONAL-10)

State 284:

	ConstantValue -> '[' OPTIONAL-10 . LITERAL STAR-13 ']'	(Rule 46)

	LITERAL	shift, and go to state 306

State 285:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 30)

	$default	reduce using rule 30 (Constant)

State 286:

	STAR-27 -> STAR-27 Constant .	(Rule 67)

	$default	reduce using rule 67 (STAR-27)

State 287:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties . STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	$default	reduce using rule 70 (STAR-28)

	STAR-28	go to state 307

State 288:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-33 ')' ';'	(Rule 80)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 81)

	'%{'	shift, and go to state 45
	')'	shift, and go to state 309
	WORD	shift, and go to state 310

	HashEntryTyped	go to state 311
	HashDereferenced	go to state 308

State 289:

	OpsTypes -> 'our' Type OPS_TYPES_ID . OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	OP19_VARIABLE_ASSIGN	shift, and go to state 312

State 290:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 313

State 291:

	PLUS-19 -> Operation .	(Rule 51)

	$default	reduce using rule 51 (PLUS-19)

State 292:

	PLUS-19 -> PLUS-19 . Operation	(Rule 50)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 . '}' ';'	(Rule 52)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 58
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	'}'	shift, and go to state 314
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP01_NAMED_VOID	shift, and go to state 49
	OP01_NAMED_VOID_PAREN	shift, and go to state 64
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 51
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 73
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	OperatorVoid	go to state 39
	PAREN-46	go to state 40
	Operator	go to state 37
	Conditional	go to state 36
	VariableDeclaration	go to state 52
	Statement	go to state 54
	Expression	go to state 43
	ArrayReference	go to state 62
	Variable	go to state 63
	WordScoped	go to state 44
	VariableModification	go to state 65
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	Operation	go to state 315
	HashReference	go to state 66
	OPTIONAL-47	go to state 76
	LoopLabel	go to state 72

State 293:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 211)

	$default	reduce using rule 211 (TypeInner)

State 294:

	CodeBlock -> '{' PLUS-52 '}' .	(Rule 173)

	$default	reduce using rule 173 (CodeBlock)

State 295:

	PLUS-52 -> PLUS-52 Operation .	(Rule 171)

	$default	reduce using rule 171 (PLUS-52)

State 296:

	STAR-49 -> STAR-49 PAREN-48 .	(Rule 159)

	$default	reduce using rule 159 (STAR-49)

State 297:

	OPTIONAL-51 -> PAREN-50 .	(Rule 162)

	$default	reduce using rule 162 (OPTIONAL-51)

State 298:

	PAREN-50 -> 'else' . CodeBlock	(Rule 161)

	'{'	shift, and go to state 232

	CodeBlock	go to state 316

State 299:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51 .	(Rule 164)

	$default	reduce using rule 164 (Conditional)

State 300:

	PAREN-48 -> 'elsif (' . Expression ')' CodeBlock	(Rule 158)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 44
	Variable	go to state 86
	Expression	go to state 317
	ArrayReference	go to state 62
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66

State 301:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 181)

	$default	reduce using rule 181 (VariableDeclaration)

State 302:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')' .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 303:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 169)

	')'	shift, and go to state 318

State 304:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 168)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68
	HashDereferenced	go to state 60
	Variable	go to state 86
	WordScoped	go to state 44
	Expression	go to state 319
	ArrayReference	go to state 62

State 305:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 47)

	'my'	shift, and go to state 115

	LITERAL	reduce using rule 39 (OPTIONAL-14)

	OPTIONAL-14	go to state 321
	TypeInner	go to state 320

State 306:

	ConstantValue -> '[' OPTIONAL-10 LITERAL . STAR-13 ']'	(Rule 46)

	$default	reduce using rule 37 (STAR-13)

	STAR-13	go to state 322

State 307:

	STAR-28 -> STAR-28 . Method	(Rule 69)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 . '1;1;' OPTIONAL-31	(Rule 76)

	'1;1;'	shift, and go to state 323
	'our'	shift, and go to state 325

	Method	go to state 324

State 308:

	HashEntryTyped -> HashDereferenced .	(Rule 201)

	$default	reduce using rule 201 (HashEntryTyped)

State 309:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 81)

	';'	shift, and go to state 326

State 310:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 200)

	OP20_HASH_FATARROW	shift, and go to state 327

State 311:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-33 ')' ';'	(Rule 80)

	$default	reduce using rule 79 (STAR-33)

	STAR-33	go to state 328

State 312:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN . LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	LITERAL	shift, and go to state 329

State 313:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	$default	reduce using rule 55 (STAR-21)

	STAR-21	go to state 330

State 314:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' . ';'	(Rule 52)

	';'	shift, and go to state 331

State 315:

	PLUS-19 -> PLUS-19 Operation .	(Rule 50)

	$default	reduce using rule 50 (PLUS-19)

State 316:

	PAREN-50 -> 'else' CodeBlock .	(Rule 161)

	$default	reduce using rule 161 (PAREN-50)

State 317:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	PAREN-48 -> 'elsif (' Expression . ')' CodeBlock	(Rule 158)

	')'	shift, and go to state 332
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 318:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 169)

	'{'	shift, and go to state 232

	CodeBlock	go to state 333

State 319:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 168)

	')'	shift, and go to state 334
	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 320:

	OPTIONAL-14 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-14)

State 321:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 . LITERAL STAR-17 '}'	(Rule 47)

	LITERAL	shift, and go to state 335

State 322:

	STAR-13 -> STAR-13 . PAREN-12	(Rule 36)
	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 . ']'	(Rule 46)

	']'	shift, and go to state 336
	OP21_LIST_COMMA	shift, and go to state 338

	PAREN-12	go to state 337

State 323:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' . OPTIONAL-31	(Rule 76)

	'our'	shift, and go to state 42

	$end	reduce using rule 75 (OPTIONAL-31)
	'package'	reduce using rule 75 (OPTIONAL-31)

	Subroutine	go to state 342
	PLUS-29	go to state 339
	PAREN-30	go to state 341
	OPTIONAL-31	go to state 340

State 324:

	STAR-28 -> STAR-28 Method .	(Rule 69)

	$default	reduce using rule 69 (STAR-28)

State 325:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 86)

	WORD	shift, and go to state 90

	Type	go to state 343

State 326:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 81)

	$default	reduce using rule 81 (Properties)

State 327:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 200)

	'my'	shift, and go to state 115

	TypeInner	go to state 344

State 328:

	STAR-33 -> STAR-33 . PAREN-32	(Rule 78)
	Properties -> 'our %properties = (' HashEntryTyped STAR-33 . ')' ';'	(Rule 80)

	')'	shift, and go to state 345
	OP21_LIST_COMMA	shift, and go to state 347

	PAREN-32	go to state 346

State 329:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL . ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	';'	shift, and go to state 348

State 330:

	STAR-21 -> STAR-21 . PAREN-20	(Rule 54)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	')'	shift, and go to state 351
	OP21_LIST_COMMA	shift, and go to state 349

	PAREN-20	go to state 350

State 331:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';' .	(Rule 52)

	$default	reduce using rule 52 (Subroutine)

State 332:

	PAREN-48 -> 'elsif (' Expression ')' . CodeBlock	(Rule 158)

	'{'	shift, and go to state 232

	CodeBlock	go to state 352

State 333:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 169)

	$default	reduce using rule 169 (LoopForEach)

State 334:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 168)

	'{'	shift, and go to state 232

	CodeBlock	go to state 353

State 335:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL . STAR-17 '}'	(Rule 47)

	$default	reduce using rule 44 (STAR-17)

	STAR-17	go to state 354

State 336:

	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']' .	(Rule 46)

	$default	reduce using rule 46 (ConstantValue)

State 337:

	STAR-13 -> STAR-13 PAREN-12 .	(Rule 36)

	$default	reduce using rule 36 (STAR-13)

State 338:

	PAREN-12 -> OP21_LIST_COMMA . OPTIONAL-11 LITERAL	(Rule 35)

	'my'	shift, and go to state 115

	LITERAL	reduce using rule 34 (OPTIONAL-11)

	TypeInner	go to state 355
	OPTIONAL-11	go to state 356

State 339:

	PLUS-29 -> PLUS-29 . Subroutine	(Rule 71)
	PAREN-30 -> PLUS-29 . '1;1;'	(Rule 73)

	'1;1;'	shift, and go to state 357
	'our'	shift, and go to state 42

	Subroutine	go to state 358

State 340:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31 .	(Rule 76)

	$default	reduce using rule 76 (Class)

State 341:

	OPTIONAL-31 -> PAREN-30 .	(Rule 74)

	$default	reduce using rule 74 (OPTIONAL-31)

State 342:

	PLUS-29 -> Subroutine .	(Rule 72)

	$default	reduce using rule 72 (PLUS-29)

State 343:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 86)

	VARIABLE_SYMBOL	shift, and go to state 359

State 344:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 200)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 60
	WordScoped	go to state 44
	Variable	go to state 86
	ArrayReference	go to state 62
	Expression	go to state 360
	Operator	go to state 37
	HashReference	go to state 66
	ArrayDereferenced	go to state 68

State 345:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' . ';'	(Rule 80)

	';'	shift, and go to state 361

State 346:

	STAR-33 -> STAR-33 PAREN-32 .	(Rule 78)

	$default	reduce using rule 78 (STAR-33)

State 347:

	PAREN-32 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 77)

	'%{'	shift, and go to state 45
	WORD	shift, and go to state 310

	HashDereferenced	go to state 308
	HashEntryTyped	go to state 362

State 348:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' . 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	'our'	shift, and go to state 363

State 349:

	PAREN-20 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 53)

	'my'	shift, and go to state 364

State 350:

	STAR-21 -> STAR-21 PAREN-20 .	(Rule 54)

	$default	reduce using rule 54 (STAR-21)

State 351:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	OP19_VARIABLE_ASSIGN	shift, and go to state 365

State 352:

	PAREN-48 -> 'elsif (' Expression ')' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (PAREN-48)

State 353:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 168)

	$default	reduce using rule 168 (LoopFor)

State 354:

	STAR-17 -> STAR-17 . PAREN-16	(Rule 43)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 . '}'	(Rule 47)

	'}'	shift, and go to state 366
	OP21_LIST_COMMA	shift, and go to state 368

	PAREN-16	go to state 367

State 355:

	OPTIONAL-11 -> TypeInner .	(Rule 33)

	$default	reduce using rule 33 (OPTIONAL-11)

State 356:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 . LITERAL	(Rule 35)

	LITERAL	shift, and go to state 369

State 357:

	PAREN-30 -> PLUS-29 '1;1;' .	(Rule 73)

	$default	reduce using rule 73 (PAREN-30)

State 358:

	PLUS-29 -> PLUS-29 Subroutine .	(Rule 71)

	$default	reduce using rule 71 (PLUS-29)

State 359:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 86)

	'= sub {'	shift, and go to state 370

State 360:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 200)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

	')'	reduce using rule 200 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 200 (HashEntryTyped)

State 361:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';' .	(Rule 80)

	$default	reduce using rule 80 (Properties)

State 362:

	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 77)

	$default	reduce using rule 77 (PAREN-32)

State 363:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' . Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	WORD	shift, and go to state 90

	Type	go to state 371

State 364:

	PAREN-20 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 53)

	WORD	shift, and go to state 90

	Type	go to state 372

State 365:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-22	(Rule 58)

	'@_;'	shift, and go to state 373

State 366:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}' .	(Rule 47)

	$default	reduce using rule 47 (ConstantValue)

State 367:

	STAR-17 -> STAR-17 PAREN-16 .	(Rule 43)

	$default	reduce using rule 43 (STAR-17)

State 368:

	PAREN-16 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 42)

	WORD	shift, and go to state 374

State 369:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL .	(Rule 35)

	$default	reduce using rule 35 (PAREN-12)

State 370:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-34 PLUS-35 '}' ';'	(Rule 86)

	'( my'	shift, and go to state 375

	'%{'	reduce using rule 83 (OPTIONAL-34)
	'('	reduce using rule 83 (OPTIONAL-34)
	'@{'	reduce using rule 83 (OPTIONAL-34)
	'['	reduce using rule 83 (OPTIONAL-34)
	'for my integer'	reduce using rule 83 (OPTIONAL-34)
	'foreach my'	reduce using rule 83 (OPTIONAL-34)
	'if ('	reduce using rule 83 (OPTIONAL-34)
	'my'	reduce using rule 83 (OPTIONAL-34)
	'undef'	reduce using rule 83 (OPTIONAL-34)
	'while ('	reduce using rule 83 (OPTIONAL-34)
	'{'	reduce using rule 83 (OPTIONAL-34)
	LITERAL	reduce using rule 83 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 83 (OPTIONAL-34)
	OP01_NAMED_VOID	reduce using rule 83 (OPTIONAL-34)
	OP01_NAMED_VOID_PAREN	reduce using rule 83 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 83 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 83 (OPTIONAL-34)
	OP05_MATH_NEG	reduce using rule 83 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 83 (OPTIONAL-34)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 83 (OPTIONAL-34)
	OP19_LOOP_CONTROL	reduce using rule 83 (OPTIONAL-34)
	OP22_LOGICAL_NOT	reduce using rule 83 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 83 (OPTIONAL-34)
	WORD	reduce using rule 83 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 83 (OPTIONAL-34)

	MethodArguments	go to state 376
	OPTIONAL-34	go to state 377

State 371:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type . OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	OPS_SUB	shift, and go to state 378

State 372:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 53)

	VARIABLE_SYMBOL	shift, and go to state 379

State 373:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-22	(Rule 58)

	$default	reduce using rule 57 (STAR-22)

	STAR-22	go to state 380

State 374:

	PAREN-16 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 42)

	OP20_HASH_FATARROW	shift, and go to state 381

State 375:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 92)

	TYPE_CLASS_OR_SELF	shift, and go to state 382

State 376:

	OPTIONAL-34 -> MethodArguments .	(Rule 82)

	$default	reduce using rule 82 (OPTIONAL-34)

State 377:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 . PLUS-35 '}' ';'	(Rule 86)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 58
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP01_NAMED_VOID	shift, and go to state 49
	OP01_NAMED_VOID_PAREN	shift, and go to state 64
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 51
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 73
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	OperatorVoid	go to state 39
	PAREN-46	go to state 40
	Operator	go to state 37
	Conditional	go to state 36
	VariableDeclaration	go to state 52
	Statement	go to state 54
	Expression	go to state 43
	ArrayReference	go to state 62
	WordScoped	go to state 44
	Variable	go to state 63
	VariableModification	go to state 65
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	Operation	go to state 384
	HashReference	go to state 66
	OPTIONAL-47	go to state 76
	PLUS-35	go to state 383
	LoopLabel	go to state 72

State 378:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB . OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	'= sub {'	shift, and go to state 385

	OpsTypesSub	go to state 386

State 379:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 53)

	$default	reduce using rule 53 (PAREN-20)

State 380:

	STAR-22 -> STAR-22 . ArgumentCheck	(Rule 56)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22 .	(Rule 58)

	CHECK_OR_CHECKTRACE	shift, and go to state 388

	'%{'	reduce using rule 58 (SubroutineArguments)
	'('	reduce using rule 58 (SubroutineArguments)
	'@{'	reduce using rule 58 (SubroutineArguments)
	'['	reduce using rule 58 (SubroutineArguments)
	'for my integer'	reduce using rule 58 (SubroutineArguments)
	'foreach my'	reduce using rule 58 (SubroutineArguments)
	'if ('	reduce using rule 58 (SubroutineArguments)
	'my'	reduce using rule 58 (SubroutineArguments)
	'undef'	reduce using rule 58 (SubroutineArguments)
	'while ('	reduce using rule 58 (SubroutineArguments)
	'{'	reduce using rule 58 (SubroutineArguments)
	LITERAL	reduce using rule 58 (SubroutineArguments)
	OP01_NAMED	reduce using rule 58 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 58 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 58 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 58 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 58 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 58 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 58 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 58 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 58 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 58 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 58 (SubroutineArguments)
	WORD	reduce using rule 58 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 58 (SubroutineArguments)

	ArgumentCheck	go to state 387

State 381:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-15 LITERAL	(Rule 42)

	'my'	shift, and go to state 115

	LITERAL	reduce using rule 41 (OPTIONAL-15)

	TypeInner	go to state 390
	OPTIONAL-15	go to state 389

State 382:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 92)

	$default	reduce using rule 89 (STAR-37)

	STAR-37	go to state 391

State 383:

	PLUS-35 -> PLUS-35 . Operation	(Rule 84)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 . '}' ';'	(Rule 86)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 58
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	'}'	shift, and go to state 393
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP01_NAMED_VOID	shift, and go to state 49
	OP01_NAMED_VOID_PAREN	shift, and go to state 64
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 51
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 73
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	Expression	go to state 43
	ArrayReference	go to state 62
	Variable	go to state 63
	WordScoped	go to state 44
	VariableModification	go to state 65
	HashDereferenced	go to state 60
	OperatorVoid	go to state 39
	PAREN-46	go to state 40
	Conditional	go to state 36
	Operator	go to state 37
	VariableDeclaration	go to state 52
	Statement	go to state 54
	OPTIONAL-47	go to state 76
	LoopLabel	go to state 72
	ArrayDereferenced	go to state 68
	Operation	go to state 392
	HashReference	go to state 66

State 384:

	PLUS-35 -> Operation .	(Rule 85)

	$default	reduce using rule 85 (PLUS-35)

State 385:

	OpsTypesSub -> '= sub {' . OP01_NAMED_VOID_PAREN LITERAL ')' ';' '}' ';'	(Rule 25)

	OP01_NAMED_VOID_PAREN	shift, and go to state 394

State 386:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub . 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	'our'	shift, and go to state 395

State 387:

	STAR-22 -> STAR-22 ArgumentCheck .	(Rule 56)

	$default	reduce using rule 56 (STAR-22)

State 388:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-24 ')' ';'	(Rule 62)

	'('	shift, and go to state 396

State 389:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 . LITERAL	(Rule 42)

	LITERAL	shift, and go to state 397

State 390:

	OPTIONAL-15 -> TypeInner .	(Rule 40)

	$default	reduce using rule 40 (OPTIONAL-15)

State 391:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 88)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 92)

	')'	shift, and go to state 398
	OP21_LIST_COMMA	shift, and go to state 400

	PAREN-36	go to state 399

State 392:

	PLUS-35 -> PLUS-35 Operation .	(Rule 84)

	$default	reduce using rule 84 (PLUS-35)

State 393:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' . ';'	(Rule 86)

	';'	shift, and go to state 401

State 394:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN . LITERAL ')' ';' '}' ';'	(Rule 25)

	LITERAL	shift, and go to state 402

State 395:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' . Type TYPES_SUB OpsTypesSub	(Rule 24)

	WORD	shift, and go to state 90

	Type	go to state 403

State 396:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-24 ')' ';'	(Rule 62)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 44
	Variable	go to state 86
	Expression	go to state 404
	ArrayReference	go to state 62
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	Operator	go to state 37
	HashReference	go to state 66

State 397:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL .	(Rule 42)

	$default	reduce using rule 42 (PAREN-16)

State 398:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 92)

	OP19_VARIABLE_ASSIGN	shift, and go to state 405

State 399:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 88)

	$default	reduce using rule 88 (STAR-37)

State 400:

	PAREN-36 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 87)

	'my'	shift, and go to state 406

State 401:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';' .	(Rule 86)

	$default	reduce using rule 86 (Method)

State 402:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL . ')' ';' '}' ';'	(Rule 25)

	')'	shift, and go to state 407

State 403:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type . TYPES_SUB OpsTypesSub	(Rule 24)

	TYPES_SUB	shift, and go to state 408

State 404:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-24 ')' ';'	(Rule 62)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP21_LIST_COMMA	shift, and go to state 411
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

	')'	reduce using rule 61 (OPTIONAL-24)

	OPTIONAL-24	go to state 410
	PAREN-23	go to state 409

State 405:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-38	(Rule 92)

	'@_;'	shift, and go to state 412

State 406:

	PAREN-36 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 87)

	WORD	shift, and go to state 90

	Type	go to state 413

State 407:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' . ';' '}' ';'	(Rule 25)

	';'	shift, and go to state 414

State 408:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB . OpsTypesSub	(Rule 24)

	'= sub {'	shift, and go to state 385

	OpsTypesSub	go to state 415

State 409:

	OPTIONAL-24 -> PAREN-23 .	(Rule 60)

	$default	reduce using rule 60 (OPTIONAL-24)

State 410:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 . ')' ';'	(Rule 62)

	')'	shift, and go to state 416

State 411:

	PAREN-23 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 59)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayReference	go to state 62
	Expression	go to state 417
	Variable	go to state 86
	WordScoped	go to state 44
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 412:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-38	(Rule 92)

	$default	reduce using rule 91 (STAR-38)

	STAR-38	go to state 418

State 413:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 87)

	VARIABLE_SYMBOL	shift, and go to state 419

State 414:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' ';' . '}' ';'	(Rule 25)

	'}'	shift, and go to state 420

State 415:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub .	(Rule 24)

	$default	reduce using rule 24 (OpsTypes)

State 416:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' . ';'	(Rule 62)

	';'	shift, and go to state 421

State 417:

	PAREN-23 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 59)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP21_LIST_COMMA	shift, and go to state 422
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

State 418:

	STAR-38 -> STAR-38 . ArgumentCheck	(Rule 90)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38 .	(Rule 92)

	CHECK_OR_CHECKTRACE	shift, and go to state 388

	'%{'	reduce using rule 92 (MethodArguments)
	'('	reduce using rule 92 (MethodArguments)
	'@{'	reduce using rule 92 (MethodArguments)
	'['	reduce using rule 92 (MethodArguments)
	'for my integer'	reduce using rule 92 (MethodArguments)
	'foreach my'	reduce using rule 92 (MethodArguments)
	'if ('	reduce using rule 92 (MethodArguments)
	'my'	reduce using rule 92 (MethodArguments)
	'undef'	reduce using rule 92 (MethodArguments)
	'while ('	reduce using rule 92 (MethodArguments)
	'{'	reduce using rule 92 (MethodArguments)
	LITERAL	reduce using rule 92 (MethodArguments)
	OP01_NAMED	reduce using rule 92 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 92 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 92 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 92 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 92 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 92 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 92 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 92 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 92 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 92 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 92 (MethodArguments)
	WORD	reduce using rule 92 (MethodArguments)
	WORD_SCOPED	reduce using rule 92 (MethodArguments)

	ArgumentCheck	go to state 423

State 419:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 87)

	$default	reduce using rule 87 (PAREN-36)

State 420:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' ';' '}' . ';'	(Rule 25)

	';'	shift, and go to state 424

State 421:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';' .	(Rule 62)

	$default	reduce using rule 62 (ArgumentCheck)

State 422:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 59)

	'%{'	shift, and go to state 45
	'('	shift, and go to state 38
	'@{'	shift, and go to state 46
	'['	shift, and go to state 55
	'undef'	shift, and go to state 70
	'{'	shift, and go to state 67
	LITERAL	shift, and go to state 47
	OP01_NAMED	shift, and go to state 41
	OP03_MATH_INC_DEC	shift, and go to state 57
	OP05_LOGICAL_NEG	shift, and go to state 56
	OP05_MATH_NEG	shift, and go to state 75
	OP10_NAMED_UNARY	shift, and go to state 71
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 48
	VARIABLE_SYMBOL	shift, and go to state 61
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayReference	go to state 62
	Expression	go to state 425
	WordScoped	go to state 44
	Variable	go to state 86
	HashDereferenced	go to state 60
	ArrayDereferenced	go to state 68
	HashReference	go to state 66
	Operator	go to state 37

State 423:

	STAR-38 -> STAR-38 ArgumentCheck .	(Rule 90)

	$default	reduce using rule 90 (STAR-38)

State 424:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' ';' '}' ';' .	(Rule 25)

	$default	reduce using rule 25 (OpsTypesSub)

State 425:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 59)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 105
	OP06_REGEX_MATCH	shift, and go to state 96
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 107
	OP08_MATH_ADD_SUB	shift, and go to state 91
	OP08_STRING_CAT	shift, and go to state 99
	OP09_BITWISE_SHIFT	shift, and go to state 104
	OP11_COMPARE_LT_GT	shift, and go to state 100
	OP12_COMPARE_EQ_NEQ	shift, and go to state 98
	OP13_BITWISE_AND	shift, and go to state 92
	OP14_BITWISE_OR_XOR	shift, and go to state 93
	OP15_LOGICAL_AND	shift, and go to state 101
	OP16_LOGICAL_OR	shift, and go to state 106
	OP17_LIST_RANGE	shift, and go to state 94
	OP18_TERNARY	shift, and go to state 103
	OP23_LOGICAL_AND	shift, and go to state 95
	OP24_LOGICAL_OR_XOR	shift, and go to state 97

	')'	reduce using rule 59 (PAREN-23)


Summary:
--------
Number of rules         : 214
Number of terminals     : 85
Number of non-terminals : 105
Number of states        : 426
