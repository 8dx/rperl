Conflicts:
----------
Conflict in state 162 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 162 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 162 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 162 between rule 94 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 162 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 162 between rule 94 and token OP08_STRING_CAT resolved as shift.
Conflict in state 162 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 162 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 162 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 162 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 162 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 162 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 162 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 162 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 162 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 162 between rule 94 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 162 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 163 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 163 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 163 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 163 between rule 104 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 163 between rule 104 and token OP18_TERNARY resolved as shift.
Conflict in state 163 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 163 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 163 between rule 104 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 163 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 163 between rule 104 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 163 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 163 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 163 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 163 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 163 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 163 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 163 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 166 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 166 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 166 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 166 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 166 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 166 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 166 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 166 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 166 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 166 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 166 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 166 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 166 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 166 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 166 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 166 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 166 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 179 between rule 86 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 179 between rule 86 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 179 between rule 86 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 179 between rule 86 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 179 between rule 86 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 179 between rule 86 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 179 between rule 86 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 179 between rule 86 and token OP18_TERNARY resolved as reduce.
Conflict in state 179 between rule 86 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 179 between rule 86 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 179 between rule 86 and token OP04_MATH_POW resolved as shift.
Conflict in state 179 between rule 86 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 179 between rule 86 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 179 between rule 86 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 179 between rule 86 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 179 between rule 86 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 179 between rule 86 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 208 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 208 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 208 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 208 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 208 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 208 between rule 93 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 208 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 208 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 208 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 208 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 208 between rule 93 and token OP08_STRING_CAT resolved as shift.
Conflict in state 208 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 208 between rule 93 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 208 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 208 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 209 between rule 98 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 209 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 209 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 209 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 209 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 209 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 209 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 209 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 209 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 209 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 209 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 209 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 209 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 209 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 209 between rule 98 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 209 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 210 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 210 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 210 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 210 between rule 89 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 210 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 210 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 210 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 210 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 210 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 210 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 210 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 210 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 210 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 210 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 211 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 211 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 211 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 211 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 211 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 211 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 211 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 211 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 211 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 211 between rule 101 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 211 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 211 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 211 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 211 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 211 between rule 101 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 211 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 211 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 212 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 212 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 212 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 212 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 212 between rule 100 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 212 between rule 100 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 212 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 212 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 212 between rule 100 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 212 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 212 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 212 between rule 100 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 212 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 212 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 213 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 213 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 213 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 213 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 213 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 213 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 213 between rule 91 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 213 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 213 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 213 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 213 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 213 between rule 91 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 213 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 214 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 214 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 214 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 214 between rule 106 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 214 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 214 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 214 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 214 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 214 between rule 106 and token OP18_TERNARY resolved as shift.
Conflict in state 214 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 214 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 214 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 214 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 214 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 214 between rule 106 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 214 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 214 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 215 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 215 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 92 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 215 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 215 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 215 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 215 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 215 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 215 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 215 between rule 92 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 215 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 215 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 215 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 215 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 215 between rule 92 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 220 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 220 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 220 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 220 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 220 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 220 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 220 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 220 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 220 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 220 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 220 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 220 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 220 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 220 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 220 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 221 between rule 97 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 221 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 221 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 221 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 221 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 221 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 221 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 221 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 221 between rule 97 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 221 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 221 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 221 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 221 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 221 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 221 between rule 97 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 222 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 222 between rule 96 and token OP08_STRING_CAT resolved as shift.
Conflict in state 222 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 222 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 222 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 222 between rule 96 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 222 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 222 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 222 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 222 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 96 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 222 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 222 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 222 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 222 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 222 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 223 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 223 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 223 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 223 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 223 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 223 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 223 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 223 between rule 105 and token OP18_TERNARY resolved as shift.
Conflict in state 223 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 223 between rule 105 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 223 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 223 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 223 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 223 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 223 between rule 105 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 223 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 224 between rule 99 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 224 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 224 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 224 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 224 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 224 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 224 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 224 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 224 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 224 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 224 between rule 99 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 224 between rule 99 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 224 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 225 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 225 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 225 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 225 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 225 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 225 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 225 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 225 between rule 90 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 225 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 225 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 225 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 225 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 225 between rule 90 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 225 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 225 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 226 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 226 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 226 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 226 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 226 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 226 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 226 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 226 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 226 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 226 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 226 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 226 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 226 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 226 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 226 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 228 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 228 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 228 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 228 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 228 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 228 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 228 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 228 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 228 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 228 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 228 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 228 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 228 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 228 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 228 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 228 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 228 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 380 between rule 81 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 380 between rule 81 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 380 between rule 81 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 380 between rule 81 and token OP18_TERNARY resolved as shift.
Conflict in state 380 between rule 81 and token OP08_STRING_CAT resolved as shift.
Conflict in state 380 between rule 81 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 380 between rule 81 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 380 between rule 81 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 380 between rule 81 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 380 between rule 81 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 380 between rule 81 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 380 between rule 81 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 380 between rule 81 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 380 between rule 81 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 380 between rule 81 and token OP04_MATH_POW resolved as shift.
Conflict in state 380 between rule 81 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 380 between rule 81 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 390 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 390 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 390 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 390 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 390 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 390 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 390 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 390 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 390 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 390 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 390 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 390 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 390 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 390 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 390 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 390 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 390 between rule 102 and token OP08_STRING_CAT resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 MethodOrSubroutine
58:	STAR-23 -> /* empty */
59:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'
60:	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped
61:	STAR-25 -> STAR-25 PAREN-24
62:	STAR-25 -> /* empty */
63:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'
64:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
65:	OPTIONAL-26 -> MethodArguments
66:	OPTIONAL-26 -> /* empty */
67:	PLUS-27 -> PLUS-27 Operation
68:	PLUS-27 -> Operation
69:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'
70:	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
71:	STAR-29 -> STAR-29 PAREN-28
72:	STAR-29 -> /* empty */
73:	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'
74:	MethodOrSubroutine -> Method
75:	MethodOrSubroutine -> Subroutine
76:	Operation -> Expression ';'
77:	Operation -> Statement
78:	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
79:	Operator -> OP01_NAMED SubExpression
80:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
81:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
82:	Operator -> OP01_CLOSE FH_REF_SYMBOL
83:	Operator -> OP03_MATH_INC_DEC Variable
84:	Operator -> Variable OP03_MATH_INC_DEC
85:	Operator -> SubExpression OP04_MATH_POW SubExpression
86:	Operator -> OP05_LOGICAL_NEG SubExpression
87:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
88:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
89:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
90:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
91:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
92:	Operator -> SubExpression OP08_STRING_CAT SubExpression
93:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
94:	Operator -> OP10_NAMED_UNARY SubExpression
95:	Operator -> OP10_NAMED_UNARY
96:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
97:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
98:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
99:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
100:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
101:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
102:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
103:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
104:	Operator -> OP22_LOGICAL_NEG SubExpression
105:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
106:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
107:	PAREN-30 -> STDOUT_STDERR
108:	OPTIONAL-31 -> PAREN-30
109:	OPTIONAL-31 -> /* empty */
110:	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';'
111:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
112:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
113:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
114:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
115:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
116:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
117:	OPTIONAL-32 -> ListElements
118:	OPTIONAL-32 -> /* empty */
119:	OPTIONAL-33 -> ListElements
120:	OPTIONAL-33 -> /* empty */
121:	Expression -> Operator
122:	Expression -> WordScoped LPAREN OPTIONAL-32 ')'
123:	Expression -> WORD_UPPERCASE LPAREN ')'
124:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'
125:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
126:	SubExpression -> Expression
127:	SubExpression -> 'undef'
128:	SubExpression -> Literal
129:	SubExpression -> Variable
130:	SubExpression -> ArrayReference
131:	SubExpression -> ArrayDereference
132:	SubExpression -> HashReference
133:	SubExpression -> HashDereference
134:	SubExpression -> LPAREN SubExpression ')'
135:	SubExpressionOrStdin -> SubExpression
136:	SubExpressionOrStdin -> STDIN
137:	PAREN-34 -> LoopLabel COLON
138:	OPTIONAL-35 -> PAREN-34
139:	OPTIONAL-35 -> /* empty */
140:	Statement -> Conditional
141:	Statement -> OPTIONAL-35 Loop
142:	Statement -> OperatorVoid
143:	Statement -> VariableDeclaration
144:	Statement -> VariableModification
145:	PAREN-36 -> 'elsif' LPAREN SubExpression ')' CodeBlock
146:	STAR-37 -> STAR-37 PAREN-36
147:	STAR-37 -> /* empty */
148:	PAREN-38 -> 'else' CodeBlock
149:	OPTIONAL-39 -> PAREN-38
150:	OPTIONAL-39 -> /* empty */
151:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-37 OPTIONAL-39
152:	Loop -> LoopFor
153:	Loop -> LoopForEach
154:	Loop -> LoopWhile
155:	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
156:	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
157:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
158:	PLUS-40 -> PLUS-40 Operation
159:	PLUS-40 -> Operation
160:	CodeBlock -> LBRACE PLUS-40 '}'
161:	STAR-41 -> STAR-41 VariableRetrieval
162:	STAR-41 -> /* empty */
163:	Variable -> VARIABLE_SYMBOL STAR-41
164:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
165:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
166:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
167:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
168:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
169:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
170:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
171:	PAREN-42 -> OP21_LIST_COMMA ListElement
172:	STAR-43 -> STAR-43 PAREN-42
173:	STAR-43 -> /* empty */
174:	ListElements -> ListElement STAR-43
175:	PLUS-44 -> PLUS-44 WORD
176:	PLUS-44 -> WORD
177:	ListElement -> SubExpression
178:	ListElement -> TypeInner SubExpression
179:	ListElement -> OP01_QW PLUS-44 ')'
180:	OPTIONAL-45 -> ListElements
181:	OPTIONAL-45 -> /* empty */
182:	ArrayReference -> LBRACKET OPTIONAL-45 ']'
183:	OPTIONAL-46 -> TypeInner
184:	OPTIONAL-46 -> /* empty */
185:	ArrayDereference -> '@{' Variable '}'
186:	ArrayDereference -> '@{' OPTIONAL-46 ArrayReference '}'
187:	OPTIONAL-47 -> TypeInner
188:	OPTIONAL-47 -> /* empty */
189:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-47 SubExpression
190:	HashEntry -> HashDereference
191:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
192:	HashEntryTyped -> HashDereference
193:	PAREN-48 -> OP21_LIST_COMMA HashEntry
194:	STAR-49 -> STAR-49 PAREN-48
195:	STAR-49 -> /* empty */
196:	HashReference -> LBRACE HashEntry STAR-49 '}'
197:	HashReference -> LBRACE '}'
198:	HashDereference -> '%{' Variable '}'
199:	HashDereference -> '%{' HashReference '}'
200:	WordScoped -> WORD
201:	WordScoped -> WORD_SCOPED
202:	LoopLabel -> WORD_UPPERCASE
203:	Type -> WORD
204:	Type -> TYPE_INTEGER
205:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
206:	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
207:	VariableOrLiteral -> Variable
208:	VariableOrLiteral -> Literal
209:	Literal -> LITERAL_STRING
210:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 9
	SHEBANG	shift, and go to state 2

	'package'	reduce using rule 20 (OPTIONAL-9)

	PLUS-2	go to state 8
	CompileUnit	go to state 3
	ModuleHeader	go to state 7
	Critic	go to state 6
	PAREN-1	go to state 1
	Program	go to state 5
	OPTIONAL-9	go to state 4

State 1:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 2:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 9

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 11
	Critic	go to state 10

State 3:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 12

State 4:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 13

State 5:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 6:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 7:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 17

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Class	go to state 15
	STAR-10	go to state 14
	Module	go to state 16
	Package	go to state 18

State 8:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 9

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 6
	ModuleHeader	go to state 7
	OPTIONAL-9	go to state 4
	PAREN-1	go to state 19

State 9:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 20

	PLUS-14	go to state 21

State 10:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 11:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 22

	Header	go to state 23

State 12:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 13:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 25

State 14:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 9

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	STAR-11	go to state 27
	Critic	go to state 28

State 15:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 16:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 17:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 29

State 18:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 19:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 20:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 21:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 30
	WORD	shift, and go to state 31

State 22:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 32

State 23:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 33

State 24:

	WordScoped -> WORD_SCOPED .	(Rule 201)

	$default	reduce using rule 201 (WordScoped)

State 25:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 34

State 26:

	WordScoped -> WORD .	(Rule 200)

	$default	reduce using rule 200 (WordScoped)

State 27:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 36

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 37
	Include	go to state 35

State 28:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 29:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	')'	shift, and go to state 38

State 30:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 31:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 32:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 39

State 33:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 9

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	Critic	go to state 41
	STAR-5	go to state 40

State 34:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 22

	Header	go to state 42

State 35:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 36:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped OP01_QW PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 43

State 37:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 44
	'use constant'	shift, and go to state 47

	Subroutine	go to state 48
	Constant	go to state 46
	PLUS-13	go to state 45

State 38:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	';'	shift, and go to state 49

State 39:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 50

State 40:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 36

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	Include	go to state 52
	STAR-6	go to state 51

State 41:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 42:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 43:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . OP01_QW PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 53
	OP01_QW	shift, and go to state 54

State 44:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57

	Type	go to state 56

State 45:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 59

	Subroutine	go to state 58

State 46:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 47:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	WORD_UPPERCASE	shift, and go to state 60

State 48:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 49:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 36

	Include	go to state 61

State 50:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 62

State 51:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 47

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	STAR-7	go to state 64
	Constant	go to state 63

State 52:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 53:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 54:

	Include -> 'use' WordScoped OP01_QW . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 66

	PLUS-15	go to state 65

State 55:

	Type -> TYPE_INTEGER .	(Rule 204)

	$default	reduce using rule 204 (Type)

State 56:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 67

State 57:

	Type -> WORD .	(Rule 203)

	$default	reduce using rule 203 (Type)

State 58:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 59:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 68

State 60:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 69

State 61:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 70

State 62:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 63:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 64:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'if'	shift, and go to state 95
	'my'	shift, and go to state 98
	'our'	shift, and go to state 44
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 103
	OP01_PRINT	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP19_LOOP_CONTROL	shift, and go to state 81
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 92
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 83

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	HashDereference	go to state 112
	VariableModification	go to state 84
	Literal	go to state 114
	VariableDeclaration	go to state 86
	Subroutine	go to state 87
	Operator	go to state 107
	ArrayDereference	go to state 80
	LoopLabel	go to state 106
	Variable	go to state 108
	WordScoped	go to state 82
	Operation	go to state 97
	OPTIONAL-35	go to state 102
	ArrayReference	go to state 99
	PLUS-8	go to state 77
	Expression	go to state 78
	HashReference	go to state 90
	SubExpression	go to state 71
	Conditional	go to state 72
	Statement	go to state 74
	OperatorVoid	go to state 73
	PAREN-34	go to state 75

State 65:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped OP01_QW PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 117
	WORD	shift, and go to state 118

State 66:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 67:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 119

State 68:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 69:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 41)

	'my'	shift, and go to state 120

	TypeInnerConstant	go to state 121

State 70:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'## no critic qw('	shift, and go to state 9

	'our hash_ref $properties'	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 123
	STAR-21	go to state 122

State 71:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 72:

	Statement -> Conditional .	(Rule 140)

	$default	reduce using rule 140 (Statement)

State 73:

	Statement -> OperatorVoid .	(Rule 142)

	$default	reduce using rule 142 (Statement)

State 74:

	Operation -> Statement .	(Rule 77)

	$default	reduce using rule 77 (Operation)

State 75:

	OPTIONAL-35 -> PAREN-34 .	(Rule 138)

	$default	reduce using rule 138 (OPTIONAL-35)

State 76:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 87)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	ArrayReference	go to state 99
	Literal	go to state 114
	HashDereference	go to state 112
	Expression	go to state 143
	Variable	go to state 144
	SubExpression	go to state 142
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Operator	go to state 107
	WordScoped	go to state 82

State 77:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'if'	shift, and go to state 95
	'my'	shift, and go to state 98
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 103
	OP01_PRINT	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP19_LOOP_CONTROL	shift, and go to state 81
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 92
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 83

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	VariableModification	go to state 84
	Literal	go to state 114
	HashDereference	go to state 112
	VariableDeclaration	go to state 86
	Variable	go to state 108
	ArrayDereference	go to state 80
	LoopLabel	go to state 106
	Operator	go to state 107
	WordScoped	go to state 82
	OPTIONAL-35	go to state 102
	ArrayReference	go to state 99
	Operation	go to state 146
	Expression	go to state 78
	Conditional	go to state 72
	SubExpression	go to state 71
	HashReference	go to state 90
	OperatorVoid	go to state 73
	Statement	go to state 74
	PAREN-34	go to state 75

State 78:

	Operation -> Expression . ';'	(Rule 76)
	SubExpression -> Expression .	(Rule 126)

	';'	shift, and go to state 147

	OP04_MATH_POW	reduce using rule 126 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 126 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 126 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 126 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 126 (SubExpression)
	OP08_STRING_CAT	reduce using rule 126 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 126 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 126 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 126 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 126 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 126 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 126 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 126 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 126 (SubExpression)
	OP18_TERNARY	reduce using rule 126 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 126 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 126 (SubExpression)

State 79:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 112)

	$default	reduce using rule 112 (OperatorVoid)

State 80:

	SubExpression -> ArrayDereference .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 81:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 116)

	WORD_UPPERCASE	shift, and go to state 149

	LoopLabel	go to state 148

State 82:

	Expression -> WordScoped . LPAREN OPTIONAL-32 ')'	(Rule 122)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 125)

	LPAREN	shift, and go to state 151
	OP02_METHOD_THINARROW_NEW	shift, and go to state 150

State 83:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 123)
	LoopLabel -> WORD_UPPERCASE .	(Rule 202)

	LPAREN	shift, and go to state 152

	COLON	reduce using rule 202 (LoopLabel)

State 84:

	Statement -> VariableModification .	(Rule 144)

	$default	reduce using rule 144 (Statement)

State 85:

	Literal -> LITERAL_NUMBER .	(Rule 210)

	$default	reduce using rule 210 (Literal)

State 86:

	Statement -> VariableDeclaration .	(Rule 143)

	$default	reduce using rule 143 (Statement)

State 87:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 88:

	ArrayReference -> LBRACKET . OPTIONAL-45 ']'	(Rule 182)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	']'	reduce using rule 181 (OPTIONAL-45)

	SubExpression	go to state 155
	Variable	go to state 144
	HashReference	go to state 90
	Operator	go to state 107
	ArrayDereference	go to state 80
	ListElement	go to state 158
	WordScoped	go to state 82
	TypeInner	go to state 154
	OPTIONAL-45	go to state 159
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	ListElements	go to state 153
	Expression	go to state 143

State 89:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 82)

	FH_REF_SYMBOL	shift, and go to state 160

State 90:

	SubExpression -> HashReference .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 91:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 113)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	ListElements	go to state 161
	Expression	go to state 143
	SubExpression	go to state 155
	Variable	go to state 144
	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90
	ListElement	go to state 158
	WordScoped	go to state 82
	TypeInner	go to state 154

State 92:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 93:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 94)
	Operator -> OP10_NAMED_UNARY .	(Rule 95)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP04_MATH_POW	reduce using rule 95 (Operator)
	OP06_REGEX_MATCH	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP07_STRING_REPEAT	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	Expression	go to state 143
	SubExpression	go to state 162
	Variable	go to state 144
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Operator	go to state 107
	WordScoped	go to state 82

State 94:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 104)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Variable	go to state 144
	SubExpression	go to state 163
	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90
	WordScoped	go to state 82
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	Expression	go to state 143

State 95:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 151)

	LPAREN	shift, and go to state 164

State 96:

	Literal -> LITERAL_STRING .	(Rule 209)

	$default	reduce using rule 209 (Literal)

State 97:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 98:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 167)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 168)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57

	Type	go to state 165

State 99:

	SubExpression -> ArrayReference .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 100:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 114)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	ArrayReference	go to state 99
	Literal	go to state 114
	HashDereference	go to state 112
	Expression	go to state 143
	SubExpression	go to state 166
	Variable	go to state 144
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Operator	go to state 107
	ListElement	go to state 167
	WordScoped	go to state 82
	TypeInner	go to state 154

State 101:

	ArrayDereference -> '@{' . Variable '}'	(Rule 185)
	ArrayDereference -> '@{' . OPTIONAL-46 ArrayReference '}'	(Rule 186)

	'my'	shift, and go to state 157
	VARIABLE_SYMBOL	shift, and go to state 115

	LBRACKET	reduce using rule 184 (OPTIONAL-46)

	Variable	go to state 170
	TypeInner	go to state 169
	OPTIONAL-46	go to state 168

State 102:

	Statement -> OPTIONAL-35 . Loop	(Rule 141)

	'for'	shift, and go to state 177
	'foreach'	shift, and go to state 175
	'while'	shift, and go to state 173

	LoopFor	go to state 174
	LoopForEach	go to state 172
	LoopWhile	go to state 171
	Loop	go to state 176

State 103:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	'my'	shift, and go to state 178

State 104:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 86)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114
	Expression	go to state 143
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	SubExpression	go to state 179
	Variable	go to state 144
	WordScoped	go to state 82

State 105:

	SubExpression -> 'undef' .	(Rule 127)

	$default	reduce using rule 127 (SubExpression)

State 106:

	PAREN-34 -> LoopLabel . COLON	(Rule 137)

	COLON	shift, and go to state 180

State 107:

	Expression -> Operator .	(Rule 121)

	$default	reduce using rule 121 (Expression)

State 108:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 124)
	SubExpression -> Variable .	(Rule 129)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 169)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 170)

	OP02_METHOD_THINARROW	shift, and go to state 182
	OP03_MATH_INC_DEC	shift, and go to state 184
	OP19_VARIABLE_ASSIGN	shift, and go to state 181
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 183

	OP04_MATH_POW	reduce using rule 129 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 129 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 129 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 129 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 129 (SubExpression)
	OP08_STRING_CAT	reduce using rule 129 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 129 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 129 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 129 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 129 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 129 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 129 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 129 (SubExpression)
	OP18_TERNARY	reduce using rule 129 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 129 (SubExpression)

State 109:

	HashDereference -> '%{' . Variable '}'	(Rule 198)
	HashDereference -> '%{' . HashReference '}'	(Rule 199)

	LBRACE	shift, and go to state 116
	VARIABLE_SYMBOL	shift, and go to state 115

	Variable	go to state 185
	HashReference	go to state 186

State 110:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 83)

	VARIABLE_SYMBOL	shift, and go to state 115

	Variable	go to state 187

State 111:

	Operator -> LPAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 134)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 189
	OP01_OPEN	shift, and go to state 103
	OP01_PRINT	shift, and go to state 188
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	ArrayReference	go to state 99
	Literal	go to state 114
	HashDereference	go to state 112
	WordScoped	go to state 82
	Variable	go to state 144
	SubExpression	go to state 190
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80

State 112:

	SubExpression -> HashDereference .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 113:

	OperatorVoid -> OP01_PRINT . OPTIONAL-31 ListElements ';'	(Rule 110)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 111)

	FH_REF_SYMBOL_BRACES	shift, and go to state 194
	STDOUT_STDERR	shift, and go to state 193

	'%{'	reduce using rule 109 (OPTIONAL-31)
	'@{'	reduce using rule 109 (OPTIONAL-31)
	'my'	reduce using rule 109 (OPTIONAL-31)
	'undef'	reduce using rule 109 (OPTIONAL-31)
	LBRACE	reduce using rule 109 (OPTIONAL-31)
	LBRACKET	reduce using rule 109 (OPTIONAL-31)
	LITERAL_NUMBER	reduce using rule 109 (OPTIONAL-31)
	LITERAL_STRING	reduce using rule 109 (OPTIONAL-31)
	LPAREN	reduce using rule 109 (OPTIONAL-31)
	OP01_CLOSE	reduce using rule 109 (OPTIONAL-31)
	OP01_NAMED	reduce using rule 109 (OPTIONAL-31)
	OP01_OPEN	reduce using rule 109 (OPTIONAL-31)
	OP01_QW	reduce using rule 109 (OPTIONAL-31)
	OP03_MATH_INC_DEC	reduce using rule 109 (OPTIONAL-31)
	OP05_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	OP05_MATH_NEG_LPAREN	reduce using rule 109 (OPTIONAL-31)
	OP10_NAMED_UNARY	reduce using rule 109 (OPTIONAL-31)
	OP22_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	VARIABLE_SYMBOL	reduce using rule 109 (OPTIONAL-31)
	WORD	reduce using rule 109 (OPTIONAL-31)
	WORD_SCOPED	reduce using rule 109 (OPTIONAL-31)
	WORD_UPPERCASE	reduce using rule 109 (OPTIONAL-31)

	PAREN-30	go to state 192
	OPTIONAL-31	go to state 191

State 114:

	SubExpression -> Literal .	(Rule 128)

	$default	reduce using rule 128 (SubExpression)

State 115:

	Variable -> VARIABLE_SYMBOL . STAR-41	(Rule 163)

	$default	reduce using rule 162 (STAR-41)

	STAR-41	go to state 195

State 116:

	HashReference -> LBRACE . HashEntry STAR-49 '}'	(Rule 196)
	HashReference -> LBRACE . '}'	(Rule 197)

	'%{'	shift, and go to state 109
	'}'	shift, and go to state 198
	WORD	shift, and go to state 197

	HashEntry	go to state 196
	HashDereference	go to state 199

State 117:

	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 200

State 118:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 119:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	LPAREN_MY	shift, and go to state 203

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for'	reduce using rule 43 (OPTIONAL-16)
	'foreach'	reduce using rule 43 (OPTIONAL-16)
	'if'	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while'	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)
	WORD_UPPERCASE	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 201
	OPTIONAL-16	go to state 202

State 120:

	TypeInnerConstant -> 'my' . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 206)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57

	Type	go to state 204

State 121:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96

	Literal	go to state 205

State 122:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 36

	'our hash_ref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 206
	STAR-22	go to state 207

State 123:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 124:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	WordScoped	go to state 82
	HashReference	go to state 90
	Operator	go to state 107
	ArrayDereference	go to state 80
	SubExpression	go to state 208
	Variable	go to state 144
	Expression	go to state 143
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99

State 125:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 98)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	ArrayDereference	go to state 80
	Operator	go to state 107
	HashReference	go to state 90
	SubExpression	go to state 209
	Variable	go to state 144
	WordScoped	go to state 82
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99
	Expression	go to state 143

State 126:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 89)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114
	Expression	go to state 143
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	SubExpression	go to state 210
	Variable	go to state 144
	WordScoped	go to state 82

State 127:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 101)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99
	WordScoped	go to state 82
	ArrayDereference	go to state 80
	Operator	go to state 107
	HashReference	go to state 90
	Variable	go to state 144
	SubExpression	go to state 211

State 128:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 100)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	ArrayReference	go to state 99
	Literal	go to state 114
	HashDereference	go to state 112
	WordScoped	go to state 82
	Variable	go to state 144
	SubExpression	go to state 212
	HashReference	go to state 90
	Operator	go to state 107
	ArrayDereference	go to state 80

State 129:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 91)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	WordScoped	go to state 82
	Variable	go to state 144
	SubExpression	go to state 213
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Operator	go to state 107
	Expression	go to state 143
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112

State 130:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	WordScoped	go to state 82
	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90
	SubExpression	go to state 214
	Variable	go to state 144
	Expression	go to state 143
	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114

State 131:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 92)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Variable	go to state 144
	SubExpression	go to state 215
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	WordScoped	go to state 82
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	Expression	go to state 143

State 132:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	VARIABLE_SYMBOL	shift, and go to state 115

	Variable	go to state 216
	Literal	go to state 218
	VariableOrLiteral	go to state 217

State 133:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 88)

	OP06_REGEX_PATTERN	shift, and go to state 219

State 134:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	Expression	go to state 143
	SubExpression	go to state 220
	Variable	go to state 144
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Operator	go to state 107
	WordScoped	go to state 82

State 135:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 97)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	ArrayReference	go to state 99
	Literal	go to state 114
	HashDereference	go to state 112
	Expression	go to state 143
	Variable	go to state 144
	SubExpression	go to state 221
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	WordScoped	go to state 82

State 136:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	WordScoped	go to state 82
	Variable	go to state 144
	SubExpression	go to state 222
	HashReference	go to state 90
	Operator	go to state 107
	ArrayDereference	go to state 80
	Expression	go to state 143
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112

State 137:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	WordScoped	go to state 82
	Variable	go to state 144
	SubExpression	go to state 223
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Expression	go to state 143
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112

State 138:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 99)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99
	WordScoped	go to state 82
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Operator	go to state 107
	Variable	go to state 144
	SubExpression	go to state 224

State 139:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 90)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	ArrayDereference	go to state 80
	Operator	go to state 107
	HashReference	go to state 90
	Variable	go to state 144
	SubExpression	go to state 225
	WordScoped	go to state 82
	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114
	Expression	go to state 143

State 140:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 85)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90
	SubExpression	go to state 226
	Variable	go to state 144
	WordScoped	go to state 82
	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114
	Expression	go to state 143

State 141:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 123)

	LPAREN	shift, and go to state 152

State 142:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	shift, and go to state 227
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 143:

	SubExpression -> Expression .	(Rule 126)

	$default	reduce using rule 126 (SubExpression)

State 144:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 124)
	SubExpression -> Variable .	(Rule 129)

	OP02_METHOD_THINARROW	shift, and go to state 182
	OP03_MATH_INC_DEC	shift, and go to state 184

	')'	reduce using rule 129 (SubExpression)
	';'	reduce using rule 129 (SubExpression)
	']'	reduce using rule 129 (SubExpression)
	'}'	reduce using rule 129 (SubExpression)
	OP04_MATH_POW	reduce using rule 129 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 129 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 129 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 129 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 129 (SubExpression)
	OP08_STRING_CAT	reduce using rule 129 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 129 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 129 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 129 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 129 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 129 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 129 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 129 (SubExpression)
	OP18_TERNARY	reduce using rule 129 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 129 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 129 (SubExpression)

State 145:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114
	WordScoped	go to state 82
	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Variable	go to state 144
	SubExpression	go to state 228

State 146:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 147:

	Operation -> Expression ';' .	(Rule 76)

	$default	reduce using rule 76 (Operation)

State 148:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 116)

	';'	shift, and go to state 229

State 149:

	LoopLabel -> WORD_UPPERCASE .	(Rule 202)

	$default	reduce using rule 202 (LoopLabel)

State 150:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 125)

	')'	shift, and go to state 230

State 151:

	Expression -> WordScoped LPAREN . OPTIONAL-32 ')'	(Rule 122)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	')'	reduce using rule 118 (OPTIONAL-32)

	ListElements	go to state 232
	Expression	go to state 143
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	OPTIONAL-32	go to state 231
	WordScoped	go to state 82
	ListElement	go to state 158
	TypeInner	go to state 154
	Variable	go to state 144
	SubExpression	go to state 155
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Operator	go to state 107

State 152:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 123)

	')'	shift, and go to state 233

State 153:

	OPTIONAL-45 -> ListElements .	(Rule 180)

	$default	reduce using rule 180 (OPTIONAL-45)

State 154:

	ListElement -> TypeInner . SubExpression	(Rule 178)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114
	Expression	go to state 143
	HashReference	go to state 90
	Operator	go to state 107
	ArrayDereference	go to state 80
	SubExpression	go to state 234
	Variable	go to state 144
	WordScoped	go to state 82

State 155:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 177)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

	')'	reduce using rule 177 (ListElement)
	';'	reduce using rule 177 (ListElement)
	']'	reduce using rule 177 (ListElement)
	OP21_LIST_COMMA	reduce using rule 177 (ListElement)

State 156:

	ListElement -> OP01_QW . PLUS-44 ')'	(Rule 179)

	WORD	shift, and go to state 236

	PLUS-44	go to state 235

State 157:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 205)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57

	Type	go to state 237

State 158:

	ListElements -> ListElement . STAR-43	(Rule 174)

	$default	reduce using rule 173 (STAR-43)

	STAR-43	go to state 238

State 159:

	ArrayReference -> LBRACKET OPTIONAL-45 . ']'	(Rule 182)

	']'	shift, and go to state 239

State 160:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 161:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 113)

	';'	shift, and go to state 240

State 162:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 94)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 163:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 164:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 151)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	Expression	go to state 143
	SubExpression	go to state 241
	Variable	go to state 144
	ArrayDereference	go to state 80
	Operator	go to state 107
	HashReference	go to state 90
	WordScoped	go to state 82

State 165:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 167)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 168)

	VARIABLE_SYMBOL	shift, and go to state 242

State 166:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 177)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 177 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 167:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 114)

	OP21_LIST_COMMA	shift, and go to state 243

State 168:

	ArrayDereference -> '@{' OPTIONAL-46 . ArrayReference '}'	(Rule 186)

	LBRACKET	shift, and go to state 88

	ArrayReference	go to state 244

State 169:

	OPTIONAL-46 -> TypeInner .	(Rule 183)

	$default	reduce using rule 183 (OPTIONAL-46)

State 170:

	ArrayDereference -> '@{' Variable . '}'	(Rule 185)

	'}'	shift, and go to state 245

State 171:

	Loop -> LoopWhile .	(Rule 154)

	$default	reduce using rule 154 (Loop)

State 172:

	Loop -> LoopForEach .	(Rule 153)

	$default	reduce using rule 153 (Loop)

State 173:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 157)

	LPAREN	shift, and go to state 246

State 174:

	Loop -> LoopFor .	(Rule 152)

	$default	reduce using rule 152 (Loop)

State 175:

	LoopForEach -> 'foreach' . 'my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 156)

	'my'	shift, and go to state 247

State 176:

	Statement -> OPTIONAL-35 Loop .	(Rule 141)

	$default	reduce using rule 141 (Statement)

State 177:

	LoopFor -> 'for' . 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	'my'	shift, and go to state 248

State 178:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	'filehandle_ref'	shift, and go to state 249

State 179:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 86)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140

	')'	reduce using rule 86 (Operator)
	';'	reduce using rule 86 (Operator)
	']'	reduce using rule 86 (Operator)
	'}'	reduce using rule 86 (Operator)
	OP06_REGEX_MATCH	reduce using rule 86 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 86 (Operator)
	OP07_STRING_REPEAT	reduce using rule 86 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 86 (Operator)
	OP08_STRING_CAT	reduce using rule 86 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 86 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 86 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 86 (Operator)
	OP13_BITWISE_AND	reduce using rule 86 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 86 (Operator)
	OP15_LOGICAL_AND	reduce using rule 86 (Operator)
	OP16_LOGICAL_OR	reduce using rule 86 (Operator)
	OP17_LIST_RANGE	reduce using rule 86 (Operator)
	OP18_TERNARY	reduce using rule 86 (Operator)
	OP21_LIST_COMMA	reduce using rule 86 (Operator)
	OP23_LOGICAL_AND	reduce using rule 86 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 86 (Operator)

State 180:

	PAREN-34 -> LoopLabel COLON .	(Rule 137)

	$default	reduce using rule 137 (PAREN-34)

State 181:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 169)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	STDIN	shift, and go to state 251
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	Expression	go to state 143
	SubExpression	go to state 252
	Variable	go to state 144
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Operator	go to state 107
	WordScoped	go to state 82
	SubExpressionOrStdin	go to state 250

State 182:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-33 ')'	(Rule 124)

	LPAREN	shift, and go to state 253

State 183:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 170)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	Expression	go to state 143
	SubExpression	go to state 254
	Variable	go to state 144
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Operator	go to state 107
	WordScoped	go to state 82

State 184:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 185:

	HashDereference -> '%{' Variable . '}'	(Rule 198)

	'}'	shift, and go to state 255

State 186:

	HashDereference -> '%{' HashReference . '}'	(Rule 199)

	'}'	shift, and go to state 256

State 187:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 83)

	$default	reduce using rule 83 (Operator)

State 188:

	Operator -> LPAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)

	FH_REF_SYMBOL_BRACES	shift, and go to state 257

State 189:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	ListElement	go to state 258
	WordScoped	go to state 82
	TypeInner	go to state 154
	SubExpression	go to state 166
	Variable	go to state 144
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Operator	go to state 107
	Expression	go to state 143
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112

State 190:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 134)

	')'	shift, and go to state 259
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 191:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 . ListElements ';'	(Rule 110)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Variable	go to state 144
	SubExpression	go to state 155
	TypeInner	go to state 154
	WordScoped	go to state 82
	ListElement	go to state 158
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99
	Expression	go to state 143
	ListElements	go to state 260

State 192:

	OPTIONAL-31 -> PAREN-30 .	(Rule 108)

	$default	reduce using rule 108 (OPTIONAL-31)

State 193:

	PAREN-30 -> STDOUT_STDERR .	(Rule 107)

	$default	reduce using rule 107 (PAREN-30)

State 194:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 111)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	TypeInner	go to state 154
	WordScoped	go to state 82
	ListElement	go to state 158
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Variable	go to state 144
	SubExpression	go to state 155
	Expression	go to state 143
	ListElements	go to state 261
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99

State 195:

	STAR-41 -> STAR-41 . VariableRetrieval	(Rule 161)
	Variable -> VARIABLE_SYMBOL STAR-41 .	(Rule 163)

	OP02_ARRAY_THINARROW	shift, and go to state 262
	OP02_HASH_THINARROW	shift, and go to state 263

	')'	reduce using rule 163 (Variable)
	';'	reduce using rule 163 (Variable)
	']'	reduce using rule 163 (Variable)
	'}'	reduce using rule 163 (Variable)
	COLON	reduce using rule 163 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 163 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 163 (Variable)
	OP04_MATH_POW	reduce using rule 163 (Variable)
	OP06_REGEX_MATCH	reduce using rule 163 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 163 (Variable)
	OP07_STRING_REPEAT	reduce using rule 163 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 163 (Variable)
	OP08_STRING_CAT	reduce using rule 163 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 163 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 163 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 163 (Variable)
	OP13_BITWISE_AND	reduce using rule 163 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 163 (Variable)
	OP15_LOGICAL_AND	reduce using rule 163 (Variable)
	OP16_LOGICAL_OR	reduce using rule 163 (Variable)
	OP17_LIST_RANGE	reduce using rule 163 (Variable)
	OP18_TERNARY	reduce using rule 163 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 163 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 163 (Variable)
	OP21_LIST_COMMA	reduce using rule 163 (Variable)
	OP23_LOGICAL_AND	reduce using rule 163 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 163 (Variable)

	VariableRetrieval	go to state 264

State 196:

	HashReference -> LBRACE HashEntry . STAR-49 '}'	(Rule 196)

	$default	reduce using rule 195 (STAR-49)

	STAR-49	go to state 265

State 197:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-47 SubExpression	(Rule 189)

	OP20_HASH_FATARROW	shift, and go to state 266

State 198:

	HashReference -> LBRACE '}' .	(Rule 197)

	$default	reduce using rule 197 (HashReference)

State 199:

	HashEntry -> HashDereference .	(Rule 190)

	$default	reduce using rule 190 (HashEntry)

State 200:

	Include -> 'use' WordScoped OP01_QW PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 201:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 202:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'if'	shift, and go to state 95
	'my'	shift, and go to state 98
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 103
	OP01_PRINT	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP19_LOOP_CONTROL	shift, and go to state 81
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 92
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 83

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	VariableDeclaration	go to state 86
	Literal	go to state 114
	VariableModification	go to state 84
	HashDereference	go to state 112
	WordScoped	go to state 82
	Variable	go to state 108
	Operator	go to state 107
	LoopLabel	go to state 106
	ArrayDereference	go to state 80
	Expression	go to state 78
	ArrayReference	go to state 99
	OPTIONAL-35	go to state 102
	Operation	go to state 268
	OperatorVoid	go to state 73
	Statement	go to state 74
	PAREN-34	go to state 75
	SubExpression	go to state 71
	Conditional	go to state 72
	PLUS-17	go to state 267
	HashReference	go to state 90

State 203:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57

	Type	go to state 269

State 204:

	TypeInnerConstant -> 'my' Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 206)

	'$TYPED_'	shift, and go to state 270

State 205:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 41)

	';'	shift, and go to state 271

State 206:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 207:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'our hash_ref $properties'	shift, and go to state 274
	'use constant'	shift, and go to state 47

	Constant	go to state 273
	Properties	go to state 272

State 208:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 209:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 210:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 211:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 212:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 213:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 214:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 215:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 216:

	VariableOrLiteral -> Variable .	(Rule 207)

	$default	reduce using rule 207 (VariableOrLiteral)

State 217:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 103)

	COLON	shift, and go to state 275

State 218:

	VariableOrLiteral -> Literal .	(Rule 208)

	$default	reduce using rule 208 (VariableOrLiteral)

State 219:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 220:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 221:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 222:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 224:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 225:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_STRING_REPEAT	shift, and go to state 126

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 226:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 227:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 228:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	']'	reduce using rule 79 (Operator)
	'}'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 79 (Operator)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 229:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 230:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 125)

	$default	reduce using rule 125 (Expression)

State 231:

	Expression -> WordScoped LPAREN OPTIONAL-32 . ')'	(Rule 122)

	')'	shift, and go to state 276

State 232:

	OPTIONAL-32 -> ListElements .	(Rule 117)

	$default	reduce using rule 117 (OPTIONAL-32)

State 233:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 123)

	$default	reduce using rule 123 (Expression)

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> TypeInner SubExpression .	(Rule 178)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

	')'	reduce using rule 178 (ListElement)
	';'	reduce using rule 178 (ListElement)
	']'	reduce using rule 178 (ListElement)
	OP21_LIST_COMMA	reduce using rule 178 (ListElement)

State 235:

	PLUS-44 -> PLUS-44 . WORD	(Rule 175)
	ListElement -> OP01_QW PLUS-44 . ')'	(Rule 179)

	')'	shift, and go to state 278
	WORD	shift, and go to state 277

State 236:

	PLUS-44 -> WORD .	(Rule 176)

	$default	reduce using rule 176 (PLUS-44)

State 237:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 205)

	'$TYPED_'	shift, and go to state 279

State 238:

	STAR-43 -> STAR-43 . PAREN-42	(Rule 172)
	ListElements -> ListElement STAR-43 .	(Rule 174)

	OP21_LIST_COMMA	shift, and go to state 280

	')'	reduce using rule 174 (ListElements)
	';'	reduce using rule 174 (ListElements)
	']'	reduce using rule 174 (ListElements)

	PAREN-42	go to state 281

State 239:

	ArrayReference -> LBRACKET OPTIONAL-45 ']' .	(Rule 182)

	$default	reduce using rule 182 (ArrayReference)

State 240:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 113)

	$default	reduce using rule 113 (OperatorVoid)

State 241:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 151)

	')'	shift, and go to state 282
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 242:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 167)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 168)

	';'	shift, and go to state 283
	OP19_VARIABLE_ASSIGN	shift, and go to state 284

State 243:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 114)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	TypeInner	go to state 154
	WordScoped	go to state 82
	ListElement	go to state 158
	ArrayDereference	go to state 80
	Operator	go to state 107
	HashReference	go to state 90
	Variable	go to state 144
	SubExpression	go to state 155
	Expression	go to state 143
	ListElements	go to state 285
	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114

State 244:

	ArrayDereference -> '@{' OPTIONAL-46 ArrayReference . '}'	(Rule 186)

	'}'	shift, and go to state 286

State 245:

	ArrayDereference -> '@{' Variable '}' .	(Rule 185)

	$default	reduce using rule 185 (ArrayDereference)

State 246:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 157)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	WordScoped	go to state 82
	SubExpression	go to state 287
	Variable	go to state 144
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80

State 247:

	LoopForEach -> 'foreach' 'my' . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 156)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57

	Type	go to state 288

State 248:

	LoopFor -> 'for' 'my' . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	TYPE_INTEGER	shift, and go to state 289

State 249:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	FH_REF_SYMBOL	shift, and go to state 290

State 250:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 169)

	';'	shift, and go to state 291

State 251:

	SubExpressionOrStdin -> STDIN .	(Rule 136)

	$default	reduce using rule 136 (SubExpressionOrStdin)

State 252:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpressionOrStdin -> SubExpression .	(Rule 135)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

	';'	reduce using rule 135 (SubExpressionOrStdin)

State 253:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-33 ')'	(Rule 124)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	')'	reduce using rule 120 (OPTIONAL-33)

	ListElement	go to state 158
	WordScoped	go to state 82
	TypeInner	go to state 154
	SubExpression	go to state 155
	Variable	go to state 144
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	ListElements	go to state 293
	Expression	go to state 143
	ArrayReference	go to state 99
	Literal	go to state 114
	HashDereference	go to state 112
	OPTIONAL-33	go to state 292

State 254:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 170)

	';'	shift, and go to state 294
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 255:

	HashDereference -> '%{' Variable '}' .	(Rule 198)

	$default	reduce using rule 198 (HashDereference)

State 256:

	HashDereference -> '%{' HashReference '}' .	(Rule 199)

	$default	reduce using rule 199 (HashDereference)

State 257:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 78)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99
	Expression	go to state 143
	ListElements	go to state 295
	ArrayDereference	go to state 80
	Operator	go to state 107
	HashReference	go to state 90
	Variable	go to state 144
	SubExpression	go to state 155
	TypeInner	go to state 154
	ListElement	go to state 158
	WordScoped	go to state 82

State 258:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 80)

	OP21_LIST_COMMA	shift, and go to state 296

State 259:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 260:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements . ';'	(Rule 110)

	';'	shift, and go to state 297

State 261:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 111)

	';'	shift, and go to state 298

State 262:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 164)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	ArrayReference	go to state 99
	Literal	go to state 114
	HashDereference	go to state 112
	Expression	go to state 143
	SubExpression	go to state 299
	Variable	go to state 144
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Operator	go to state 107
	WordScoped	go to state 82

State 263:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 165)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 166)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 300
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	WordScoped	go to state 82
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Variable	go to state 144
	SubExpression	go to state 301
	Expression	go to state 143
	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114

State 264:

	STAR-41 -> STAR-41 VariableRetrieval .	(Rule 161)

	$default	reduce using rule 161 (STAR-41)

State 265:

	STAR-49 -> STAR-49 . PAREN-48	(Rule 194)
	HashReference -> LBRACE HashEntry STAR-49 . '}'	(Rule 196)

	'}'	shift, and go to state 303
	OP21_LIST_COMMA	shift, and go to state 302

	PAREN-48	go to state 304

State 266:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-47 SubExpression	(Rule 189)

	'my'	shift, and go to state 157

	'%{'	reduce using rule 188 (OPTIONAL-47)
	'@{'	reduce using rule 188 (OPTIONAL-47)
	'undef'	reduce using rule 188 (OPTIONAL-47)
	LBRACE	reduce using rule 188 (OPTIONAL-47)
	LBRACKET	reduce using rule 188 (OPTIONAL-47)
	LITERAL_NUMBER	reduce using rule 188 (OPTIONAL-47)
	LITERAL_STRING	reduce using rule 188 (OPTIONAL-47)
	LPAREN	reduce using rule 188 (OPTIONAL-47)
	OP01_CLOSE	reduce using rule 188 (OPTIONAL-47)
	OP01_NAMED	reduce using rule 188 (OPTIONAL-47)
	OP01_OPEN	reduce using rule 188 (OPTIONAL-47)
	OP03_MATH_INC_DEC	reduce using rule 188 (OPTIONAL-47)
	OP05_LOGICAL_NEG	reduce using rule 188 (OPTIONAL-47)
	OP05_MATH_NEG_LPAREN	reduce using rule 188 (OPTIONAL-47)
	OP10_NAMED_UNARY	reduce using rule 188 (OPTIONAL-47)
	OP22_LOGICAL_NEG	reduce using rule 188 (OPTIONAL-47)
	VARIABLE_SYMBOL	reduce using rule 188 (OPTIONAL-47)
	WORD	reduce using rule 188 (OPTIONAL-47)
	WORD_SCOPED	reduce using rule 188 (OPTIONAL-47)
	WORD_UPPERCASE	reduce using rule 188 (OPTIONAL-47)

	TypeInner	go to state 305
	OPTIONAL-47	go to state 306

State 267:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'if'	shift, and go to state 95
	'my'	shift, and go to state 98
	'undef'	shift, and go to state 105
	'}'	shift, and go to state 307
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 103
	OP01_PRINT	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP19_LOOP_CONTROL	shift, and go to state 81
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 92
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 83

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	VariableDeclaration	go to state 86
	VariableModification	go to state 84
	Literal	go to state 114
	HashDereference	go to state 112
	WordScoped	go to state 82
	Variable	go to state 108
	ArrayDereference	go to state 80
	Operator	go to state 107
	LoopLabel	go to state 106
	Expression	go to state 78
	OPTIONAL-35	go to state 102
	ArrayReference	go to state 99
	Operation	go to state 308
	OperatorVoid	go to state 73
	PAREN-34	go to state 75
	Statement	go to state 74
	SubExpression	go to state 71
	Conditional	go to state 72
	HashReference	go to state 90

State 268:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 269:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 309

State 270:

	TypeInnerConstant -> 'my' Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 206)

	WORD_UPPERCASE	shift, and go to state 310

State 271:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 272:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 311

State 273:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 274:

	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 64)

	OP19_VARIABLE_ASSIGN	shift, and go to state 312

State 275:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	VARIABLE_SYMBOL	shift, and go to state 115

	VariableOrLiteral	go to state 313
	Literal	go to state 218
	Variable	go to state 216

State 276:

	Expression -> WordScoped LPAREN OPTIONAL-32 ')' .	(Rule 122)

	$default	reduce using rule 122 (Expression)

State 277:

	PLUS-44 -> PLUS-44 WORD .	(Rule 175)

	$default	reduce using rule 175 (PLUS-44)

State 278:

	ListElement -> OP01_QW PLUS-44 ')' .	(Rule 179)

	$default	reduce using rule 179 (ListElement)

State 279:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 205)

	WORD	shift, and go to state 314

State 280:

	PAREN-42 -> OP21_LIST_COMMA . ListElement	(Rule 171)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80
	SubExpression	go to state 155
	Variable	go to state 144
	TypeInner	go to state 154
	WordScoped	go to state 82
	ListElement	go to state 315
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99
	Expression	go to state 143

State 281:

	STAR-43 -> STAR-43 PAREN-42 .	(Rule 172)

	$default	reduce using rule 172 (STAR-43)

State 282:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-37 OPTIONAL-39	(Rule 151)

	LBRACE	shift, and go to state 316

	CodeBlock	go to state 317

State 283:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 167)

	$default	reduce using rule 167 (VariableDeclaration)

State 284:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 168)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	STDIN	shift, and go to state 251
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Variable	go to state 144
	SubExpression	go to state 252
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Operator	go to state 107
	WordScoped	go to state 82
	SubExpressionOrStdin	go to state 318
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	Expression	go to state 143

State 285:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 114)

	';'	shift, and go to state 319

State 286:

	ArrayDereference -> '@{' OPTIONAL-46 ArrayReference '}' .	(Rule 186)

	$default	reduce using rule 186 (ArrayDereference)

State 287:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 157)

	')'	shift, and go to state 320
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 288:

	LoopForEach -> 'foreach' 'my' Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 156)

	VARIABLE_SYMBOL	shift, and go to state 321

State 289:

	LoopFor -> 'for' 'my' TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	VARIABLE_SYMBOL	shift, and go to state 322

State 290:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 323

State 291:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 169)

	$default	reduce using rule 169 (VariableModification)

State 292:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 . ')'	(Rule 124)

	')'	shift, and go to state 324

State 293:

	OPTIONAL-33 -> ListElements .	(Rule 119)

	$default	reduce using rule 119 (OPTIONAL-33)

State 294:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 170)

	$default	reduce using rule 170 (VariableModification)

State 295:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 78)

	')'	shift, and go to state 325

State 296:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	TypeInner	go to state 154
	WordScoped	go to state 82
	ListElement	go to state 158
	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Variable	go to state 144
	SubExpression	go to state 155
	Expression	go to state 143
	ListElements	go to state 326
	HashDereference	go to state 112
	ArrayReference	go to state 99
	Literal	go to state 114

State 297:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';' .	(Rule 110)

	$default	reduce using rule 110 (OperatorVoid)

State 298:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 111)

	$default	reduce using rule 111 (OperatorVoid)

State 299:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 164)

	']'	shift, and go to state 327
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 300:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 166)
	WordScoped -> WORD .	(Rule 200)

	'}'	shift, and go to state 328

	LPAREN	reduce using rule 200 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 200 (WordScoped)

State 301:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 165)

	'}'	shift, and go to state 329
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 302:

	PAREN-48 -> OP21_LIST_COMMA . HashEntry	(Rule 193)

	'%{'	shift, and go to state 109
	WORD	shift, and go to state 197

	HashEntry	go to state 330
	HashDereference	go to state 199

State 303:

	HashReference -> LBRACE HashEntry STAR-49 '}' .	(Rule 196)

	$default	reduce using rule 196 (HashReference)

State 304:

	STAR-49 -> STAR-49 PAREN-48 .	(Rule 194)

	$default	reduce using rule 194 (STAR-49)

State 305:

	OPTIONAL-47 -> TypeInner .	(Rule 187)

	$default	reduce using rule 187 (OPTIONAL-47)

State 306:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-47 . SubExpression	(Rule 189)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99
	Expression	go to state 143
	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90
	SubExpression	go to state 331
	Variable	go to state 144
	WordScoped	go to state 82

State 307:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 332

State 308:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 309:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 333

State 310:

	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 206)

	OP19_VARIABLE_ASSIGN	shift, and go to state 334

State 311:

	STAR-23 -> STAR-23 . MethodOrSubroutine	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 . LITERAL_NUMBER ';'	(Rule 59)

	'our'	shift, and go to state 337
	LITERAL_NUMBER	shift, and go to state 335

	Subroutine	go to state 336
	MethodOrSubroutine	go to state 339
	Method	go to state 338

State 312:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 64)

	LBRACE	shift, and go to state 340

State 313:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 314:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 205)

	OP19_VARIABLE_ASSIGN	shift, and go to state 341

State 315:

	PAREN-42 -> OP21_LIST_COMMA ListElement .	(Rule 171)

	$default	reduce using rule 171 (PAREN-42)

State 316:

	CodeBlock -> LBRACE . PLUS-40 '}'	(Rule 160)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'if'	shift, and go to state 95
	'my'	shift, and go to state 98
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 103
	OP01_PRINT	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP19_LOOP_CONTROL	shift, and go to state 81
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 92
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 83

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	OperatorVoid	go to state 73
	Statement	go to state 74
	PAREN-34	go to state 75
	SubExpression	go to state 71
	Conditional	go to state 72
	HashReference	go to state 90
	PLUS-40	go to state 343
	Expression	go to state 78
	OPTIONAL-35	go to state 102
	ArrayReference	go to state 99
	Operation	go to state 342
	WordScoped	go to state 82
	Variable	go to state 108
	Operator	go to state 107
	LoopLabel	go to state 106
	ArrayDereference	go to state 80
	VariableDeclaration	go to state 86
	VariableModification	go to state 84
	Literal	go to state 114
	HashDereference	go to state 112

State 317:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-37 OPTIONAL-39	(Rule 151)

	$default	reduce using rule 147 (STAR-37)

	STAR-37	go to state 344

State 318:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 168)

	';'	shift, and go to state 345

State 319:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 320:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 157)

	LBRACE	shift, and go to state 316

	CodeBlock	go to state 346

State 321:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 156)

	LPAREN	shift, and go to state 347

State 322:

	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	LPAREN	shift, and go to state 348

State 323:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	LITERAL_STRING	shift, and go to state 349

State 324:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')' .	(Rule 124)

	$default	reduce using rule 124 (Expression)

State 325:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 78)

	$default	reduce using rule 78 (Operator)

State 326:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 80)

	')'	shift, and go to state 350

State 327:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 164)

	$default	reduce using rule 164 (VariableRetrieval)

State 328:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 166)

	$default	reduce using rule 166 (VariableRetrieval)

State 329:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 165)

	$default	reduce using rule 165 (VariableRetrieval)

State 330:

	PAREN-48 -> OP21_LIST_COMMA HashEntry .	(Rule 193)

	$default	reduce using rule 193 (PAREN-48)

State 331:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-47 SubExpression .	(Rule 189)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

	'}'	reduce using rule 189 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 189 (HashEntry)

State 332:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 333:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 351
	OP21_LIST_COMMA	shift, and go to state 353

	PAREN-18	go to state 352

State 334:

	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 206)

	$default	reduce using rule 206 (TypeInnerConstant)

State 335:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER . ';'	(Rule 59)

	';'	shift, and go to state 354

State 336:

	MethodOrSubroutine -> Subroutine .	(Rule 75)

	$default	reduce using rule 75 (MethodOrSubroutine)

State 337:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	TYPE_INTEGER	shift, and go to state 55
	TYPE_METHOD	shift, and go to state 355
	WORD	shift, and go to state 57

	Type	go to state 56

State 338:

	MethodOrSubroutine -> Method .	(Rule 74)

	$default	reduce using rule 74 (MethodOrSubroutine)

State 339:

	STAR-23 -> STAR-23 MethodOrSubroutine .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 340:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 64)

	'%{'	shift, and go to state 109
	'}'	shift, and go to state 358
	WORD	shift, and go to state 356

	HashEntryTyped	go to state 357
	HashDereference	go to state 359

State 341:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 205)

	$default	reduce using rule 205 (TypeInner)

State 342:

	PLUS-40 -> Operation .	(Rule 159)

	$default	reduce using rule 159 (PLUS-40)

State 343:

	PLUS-40 -> PLUS-40 . Operation	(Rule 158)
	CodeBlock -> LBRACE PLUS-40 . '}'	(Rule 160)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'if'	shift, and go to state 95
	'my'	shift, and go to state 98
	'undef'	shift, and go to state 105
	'}'	shift, and go to state 361
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 103
	OP01_PRINT	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP19_LOOP_CONTROL	shift, and go to state 81
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 92
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 83

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	Literal	go to state 114
	VariableModification	go to state 84
	HashDereference	go to state 112
	VariableDeclaration	go to state 86
	Variable	go to state 108
	LoopLabel	go to state 106
	ArrayDereference	go to state 80
	Operator	go to state 107
	WordScoped	go to state 82
	ArrayReference	go to state 99
	OPTIONAL-35	go to state 102
	Operation	go to state 360
	Expression	go to state 78
	Conditional	go to state 72
	SubExpression	go to state 71
	HashReference	go to state 90
	OperatorVoid	go to state 73
	Statement	go to state 74
	PAREN-34	go to state 75

State 344:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 146)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-37 . OPTIONAL-39	(Rule 151)

	'else'	shift, and go to state 362
	'elsif'	shift, and go to state 365

	$end	reduce using rule 150 (OPTIONAL-39)
	'%{'	reduce using rule 150 (OPTIONAL-39)
	'@{'	reduce using rule 150 (OPTIONAL-39)
	'for'	reduce using rule 150 (OPTIONAL-39)
	'foreach'	reduce using rule 150 (OPTIONAL-39)
	'if'	reduce using rule 150 (OPTIONAL-39)
	'my'	reduce using rule 150 (OPTIONAL-39)
	'undef'	reduce using rule 150 (OPTIONAL-39)
	'while'	reduce using rule 150 (OPTIONAL-39)
	'}'	reduce using rule 150 (OPTIONAL-39)
	LBRACE	reduce using rule 150 (OPTIONAL-39)
	LBRACKET	reduce using rule 150 (OPTIONAL-39)
	LITERAL_NUMBER	reduce using rule 150 (OPTIONAL-39)
	LITERAL_STRING	reduce using rule 150 (OPTIONAL-39)
	LPAREN	reduce using rule 150 (OPTIONAL-39)
	OP01_CLOSE	reduce using rule 150 (OPTIONAL-39)
	OP01_NAMED	reduce using rule 150 (OPTIONAL-39)
	OP01_NAMED_VOID	reduce using rule 150 (OPTIONAL-39)
	OP01_NAMED_VOID_SCOLON	reduce using rule 150 (OPTIONAL-39)
	OP01_OPEN	reduce using rule 150 (OPTIONAL-39)
	OP01_PRINT	reduce using rule 150 (OPTIONAL-39)
	OP03_MATH_INC_DEC	reduce using rule 150 (OPTIONAL-39)
	OP05_LOGICAL_NEG	reduce using rule 150 (OPTIONAL-39)
	OP05_MATH_NEG_LPAREN	reduce using rule 150 (OPTIONAL-39)
	OP10_NAMED_UNARY	reduce using rule 150 (OPTIONAL-39)
	OP19_LOOP_CONTROL	reduce using rule 150 (OPTIONAL-39)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 150 (OPTIONAL-39)
	OP22_LOGICAL_NEG	reduce using rule 150 (OPTIONAL-39)
	VARIABLE_SYMBOL	reduce using rule 150 (OPTIONAL-39)
	WORD	reduce using rule 150 (OPTIONAL-39)
	WORD_SCOPED	reduce using rule 150 (OPTIONAL-39)
	WORD_UPPERCASE	reduce using rule 150 (OPTIONAL-39)

	PAREN-36	go to state 364
	PAREN-38	go to state 366
	OPTIONAL-39	go to state 363

State 345:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 168)

	$default	reduce using rule 168 (VariableDeclaration)

State 346:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 157)

	$default	reduce using rule 157 (LoopWhile)

State 347:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 156)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	TypeInner	go to state 154
	WordScoped	go to state 82
	ListElement	go to state 158
	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Variable	go to state 144
	SubExpression	go to state 155
	Expression	go to state 143
	ListElements	go to state 367
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99

State 348:

	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	Literal	go to state 114
	ArrayReference	go to state 99
	HashDereference	go to state 112
	WordScoped	go to state 82
	SubExpression	go to state 368
	Variable	go to state 144
	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90

State 349:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 369

State 350:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 80)

	$default	reduce using rule 80 (Operator)

State 351:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 370

State 352:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 353:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 371

State 354:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';' .	(Rule 59)

	$default	reduce using rule 59 (Class)

State 355:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	VARIABLE_SYMBOL	shift, and go to state 372

State 356:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 191)

	OP20_HASH_FATARROW	shift, and go to state 373

State 357:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-25 '}' ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 374

State 358:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 64)

	';'	shift, and go to state 375

State 359:

	HashEntryTyped -> HashDereference .	(Rule 192)

	$default	reduce using rule 192 (HashEntryTyped)

State 360:

	PLUS-40 -> PLUS-40 Operation .	(Rule 158)

	$default	reduce using rule 158 (PLUS-40)

State 361:

	CodeBlock -> LBRACE PLUS-40 '}' .	(Rule 160)

	$default	reduce using rule 160 (CodeBlock)

State 362:

	PAREN-38 -> 'else' . CodeBlock	(Rule 148)

	LBRACE	shift, and go to state 316

	CodeBlock	go to state 376

State 363:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-37 OPTIONAL-39 .	(Rule 151)

	$default	reduce using rule 151 (Conditional)

State 364:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 146)

	$default	reduce using rule 146 (STAR-37)

State 365:

	PAREN-36 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 145)

	LPAREN	shift, and go to state 377

State 366:

	OPTIONAL-39 -> PAREN-38 .	(Rule 149)

	$default	reduce using rule 149 (OPTIONAL-39)

State 367:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 156)

	')'	shift, and go to state 378

State 368:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 155)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 379
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 369:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 81)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	ArrayReference	go to state 99
	Literal	go to state 114
	HashDereference	go to state 112
	WordScoped	go to state 82
	SubExpression	go to state 380
	Variable	go to state 144
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80

State 370:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 381

State 371:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57

	Type	go to state 382

State 372:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	'= sub {'	shift, and go to state 383

State 373:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 191)

	'my'	shift, and go to state 157

	TypeInner	go to state 384

State 374:

	STAR-25 -> STAR-25 . PAREN-24	(Rule 61)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 . '}' ';'	(Rule 63)

	'}'	shift, and go to state 387
	OP21_LIST_COMMA	shift, and go to state 385

	PAREN-24	go to state 386

State 375:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 64)

	$default	reduce using rule 64 (Properties)

State 376:

	PAREN-38 -> 'else' CodeBlock .	(Rule 148)

	$default	reduce using rule 148 (PAREN-38)

State 377:

	PAREN-36 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 145)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99
	WordScoped	go to state 82
	HashReference	go to state 90
	ArrayDereference	go to state 80
	Operator	go to state 107
	SubExpression	go to state 388
	Variable	go to state 144

State 378:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 156)

	LBRACE	shift, and go to state 316

	CodeBlock	go to state 389

State 379:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)
	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	HashDereference	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 99
	WordScoped	go to state 82
	Operator	go to state 107
	ArrayDereference	go to state 80
	HashReference	go to state 90
	Variable	go to state 144
	SubExpression	go to state 390

State 380:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 81)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132

	')'	reduce using rule 81 (Operator)
	';'	reduce using rule 81 (Operator)
	']'	reduce using rule 81 (Operator)
	'}'	reduce using rule 81 (Operator)
	OP21_LIST_COMMA	reduce using rule 81 (Operator)
	OP23_LOGICAL_AND	reduce using rule 81 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 81 (Operator)

State 381:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 382:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 391

State 383:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	LPAREN_MY	shift, and go to state 393

	'%{'	reduce using rule 66 (OPTIONAL-26)
	'@{'	reduce using rule 66 (OPTIONAL-26)
	'for'	reduce using rule 66 (OPTIONAL-26)
	'foreach'	reduce using rule 66 (OPTIONAL-26)
	'if'	reduce using rule 66 (OPTIONAL-26)
	'my'	reduce using rule 66 (OPTIONAL-26)
	'undef'	reduce using rule 66 (OPTIONAL-26)
	'while'	reduce using rule 66 (OPTIONAL-26)
	LBRACE	reduce using rule 66 (OPTIONAL-26)
	LBRACKET	reduce using rule 66 (OPTIONAL-26)
	LITERAL_NUMBER	reduce using rule 66 (OPTIONAL-26)
	LITERAL_STRING	reduce using rule 66 (OPTIONAL-26)
	LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP01_CLOSE	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP01_OPEN	reduce using rule 66 (OPTIONAL-26)
	OP01_PRINT	reduce using rule 66 (OPTIONAL-26)
	OP03_MATH_INC_DEC	reduce using rule 66 (OPTIONAL-26)
	OP05_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	OP05_MATH_NEG_LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP10_NAMED_UNARY	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP22_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	VARIABLE_SYMBOL	reduce using rule 66 (OPTIONAL-26)
	WORD	reduce using rule 66 (OPTIONAL-26)
	WORD_SCOPED	reduce using rule 66 (OPTIONAL-26)
	WORD_UPPERCASE	reduce using rule 66 (OPTIONAL-26)

	MethodArguments	go to state 394
	OPTIONAL-26	go to state 392

State 384:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 191)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 145
	OP01_OPEN	shift, and go to state 103
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 141

	Expression	go to state 143
	ArrayReference	go to state 99
	Literal	go to state 114
	HashDereference	go to state 112
	WordScoped	go to state 82
	Variable	go to state 144
	SubExpression	go to state 395
	Operator	go to state 107
	HashReference	go to state 90
	ArrayDereference	go to state 80

State 385:

	PAREN-24 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 60)

	'%{'	shift, and go to state 109
	WORD	shift, and go to state 356

	HashEntryTyped	go to state 396
	HashDereference	go to state 359

State 386:

	STAR-25 -> STAR-25 PAREN-24 .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 387:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' . ';'	(Rule 63)

	';'	shift, and go to state 397

State 388:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	PAREN-36 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 145)

	')'	shift, and go to state 398
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

State 389:

	LoopForEach -> 'foreach' 'my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (LoopForEach)

State 390:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 155)

	')'	shift, and go to state 399
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 391:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 392:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 . PLUS-27 '}' ';'	(Rule 69)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'if'	shift, and go to state 95
	'my'	shift, and go to state 98
	'undef'	shift, and go to state 105
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 103
	OP01_PRINT	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP19_LOOP_CONTROL	shift, and go to state 81
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 92
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 83

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	HashDereference	go to state 112
	VariableModification	go to state 84
	Literal	go to state 114
	VariableDeclaration	go to state 86
	LoopLabel	go to state 106
	ArrayDereference	go to state 80
	Operator	go to state 107
	Variable	go to state 108
	PLUS-27	go to state 401
	WordScoped	go to state 82
	Operation	go to state 400
	OPTIONAL-35	go to state 102
	ArrayReference	go to state 99
	Expression	go to state 78
	HashReference	go to state 90
	Conditional	go to state 72
	SubExpression	go to state 71
	PAREN-34	go to state 75
	OperatorVoid	go to state 73
	Statement	go to state 74

State 393:

	MethodArguments -> LPAREN_MY . TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	TYPE_SELF	shift, and go to state 402

State 394:

	OPTIONAL-26 -> MethodArguments .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-26)

State 395:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 191)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 133
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 139
	OP07_STRING_REPEAT	shift, and go to state 126
	OP08_MATH_ADD_SUB	shift, and go to state 129
	OP08_STRING_CAT	shift, and go to state 131
	OP09_BITWISE_SHIFT	shift, and go to state 124
	OP11_COMPARE_LT_GT	shift, and go to state 136
	OP12_COMPARE_EQ_NE	shift, and go to state 135
	OP13_BITWISE_AND	shift, and go to state 125
	OP14_BITWISE_OR_XOR	shift, and go to state 138
	OP15_LOGICAL_AND	shift, and go to state 128
	OP16_LOGICAL_OR	shift, and go to state 127
	OP17_LIST_RANGE	shift, and go to state 134
	OP18_TERNARY	shift, and go to state 132
	OP23_LOGICAL_AND	shift, and go to state 137
	OP24_LOGICAL_OR_XOR	shift, and go to state 130

	'}'	reduce using rule 191 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 191 (HashEntryTyped)

State 396:

	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 60)

	$default	reduce using rule 60 (PAREN-24)

State 397:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';' .	(Rule 63)

	$default	reduce using rule 63 (Properties)

State 398:

	PAREN-36 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 145)

	LBRACE	shift, and go to state 316

	CodeBlock	go to state 403

State 399:

	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 155)

	LBRACE	shift, and go to state 316

	CodeBlock	go to state 404

State 400:

	PLUS-27 -> Operation .	(Rule 68)

	$default	reduce using rule 68 (PLUS-27)

State 401:

	PLUS-27 -> PLUS-27 . Operation	(Rule 67)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 . '}' ';'	(Rule 69)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 101
	'if'	shift, and go to state 95
	'my'	shift, and go to state 98
	'undef'	shift, and go to state 105
	'}'	shift, and go to state 406
	LBRACE	shift, and go to state 116
	LBRACKET	shift, and go to state 88
	LITERAL_NUMBER	shift, and go to state 85
	LITERAL_STRING	shift, and go to state 96
	LPAREN	shift, and go to state 111
	OP01_CLOSE	shift, and go to state 89
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 91
	OP01_NAMED_VOID_SCOLON	shift, and go to state 79
	OP01_OPEN	shift, and go to state 103
	OP01_PRINT	shift, and go to state 113
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG_LPAREN	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 93
	OP19_LOOP_CONTROL	shift, and go to state 81
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 92
	OP22_LOGICAL_NEG	shift, and go to state 94
	VARIABLE_SYMBOL	shift, and go to state 115
	WORD	shift, and go to state 26
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 83

	'for'	reduce using rule 139 (OPTIONAL-35)
	'foreach'	reduce using rule 139 (OPTIONAL-35)
	'while'	reduce using rule 139 (OPTIONAL-35)

	Variable	go to state 108
	ArrayDereference	go to state 80
	Operator	go to state 107
	LoopLabel	go to state 106
	WordScoped	go to state 82
	VariableModification	go to state 84
	Literal	go to state 114
	HashDereference	go to state 112
	VariableDeclaration	go to state 86
	Conditional	go to state 72
	SubExpression	go to state 71
	HashReference	go to state 90
	PAREN-34	go to state 75
	OperatorVoid	go to state 73
	Statement	go to state 74
	OPTIONAL-35	go to state 102
	ArrayReference	go to state 99
	Operation	go to state 405
	Expression	go to state 78

State 402:

	MethodArguments -> LPAREN_MY TYPE_SELF . STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 407

State 403:

	PAREN-36 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 145)

	$default	reduce using rule 145 (PAREN-36)

State 404:

	LoopFor -> 'for' 'my' TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 155)

	$default	reduce using rule 155 (LoopFor)

State 405:

	PLUS-27 -> PLUS-27 Operation .	(Rule 67)

	$default	reduce using rule 67 (PLUS-27)

State 406:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' . ';'	(Rule 69)

	';'	shift, and go to state 408

State 407:

	STAR-29 -> STAR-29 . PAREN-28	(Rule 71)
	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	')'	shift, and go to state 410
	OP21_LIST_COMMA	shift, and go to state 411

	PAREN-28	go to state 409

State 408:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';' .	(Rule 69)

	$default	reduce using rule 69 (Method)

State 409:

	STAR-29 -> STAR-29 PAREN-28 .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 410:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	OP19_VARIABLE_ASSIGN	shift, and go to state 412

State 411:

	PAREN-28 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 70)

	'my'	shift, and go to state 413

State 412:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 73)

	'@_;'	shift, and go to state 414

State 413:

	PAREN-28 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 70)

	TYPE_INTEGER	shift, and go to state 55
	WORD	shift, and go to state 57

	Type	go to state 415

State 414:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 73)

	$default	reduce using rule 73 (MethodArguments)

State 415:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 70)

	VARIABLE_SYMBOL	shift, and go to state 416

State 416:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 70)

	$default	reduce using rule 70 (PAREN-28)


Summary:
--------
Number of rules         : 211
Number of terminals     : 89
Number of non-terminals : 98
Number of states        : 417
