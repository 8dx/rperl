Conflicts:
----------
Conflict in state 145 between rule 84 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 145 between rule 84 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 145 between rule 84 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 145 between rule 84 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 145 between rule 84 and token OP18_TERNARY resolved as reduce.
Conflict in state 145 between rule 84 and token OP04_MATH_POW resolved as reduce.
Conflict in state 145 between rule 84 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 145 between rule 84 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 145 between rule 84 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 145 between rule 84 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 145 between rule 84 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 145 between rule 84 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 145 between rule 84 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 145 between rule 84 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 145 between rule 84 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 145 between rule 84 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 147 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 147 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 147 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 147 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 147 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 147 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 147 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 147 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 147 between rule 98 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 147 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 147 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 147 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 147 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 147 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 147 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 147 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 159 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 159 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 159 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 159 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 159 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 159 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 159 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 159 between rule 108 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 159 between rule 108 and token OP18_TERNARY resolved as shift.
Conflict in state 159 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 159 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 159 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 159 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 159 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 159 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 159 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 173 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 173 between rule 99 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 173 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 173 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 173 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 173 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 173 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 173 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 173 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 173 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 173 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 173 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 173 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 173 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 173 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 173 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 187 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 187 between rule 91 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 187 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 187 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 187 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 187 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 187 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 187 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 187 between rule 91 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 187 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 187 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 187 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 187 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 187 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 187 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 187 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 235 between rule 84 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 84 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 235 between rule 84 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 235 between rule 84 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 235 between rule 84 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 235 between rule 84 and token OP04_MATH_POW resolved as reduce.
Conflict in state 235 between rule 84 and token OP18_TERNARY resolved as reduce.
Conflict in state 235 between rule 84 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 235 between rule 84 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 235 between rule 84 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 84 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 235 between rule 84 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 235 between rule 84 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 235 between rule 84 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 84 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 235 between rule 84 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 250 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 250 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 250 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 250 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 250 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 250 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 250 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 250 between rule 97 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 250 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 250 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 250 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 250 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 250 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 250 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 250 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 250 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 252 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 252 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 252 between rule 103 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 252 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 252 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 252 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 252 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 252 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 252 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 252 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 252 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 252 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 252 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 252 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 253 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 253 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 253 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 253 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 253 between rule 90 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 253 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 253 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 253 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 253 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 253 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 253 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 253 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 90 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 253 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 253 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 255 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 255 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 255 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 255 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 255 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 255 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 255 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 255 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 255 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 255 between rule 106 and token OP17_LIST_RANGE resolved as error.
Conflict in state 255 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 255 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 255 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 255 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 255 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 256 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 256 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 256 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 256 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 256 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 256 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 256 between rule 95 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 256 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 256 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 256 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 256 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 256 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 256 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 256 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 257 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 257 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 257 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 257 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 257 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 257 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 257 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 257 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 257 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 257 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 257 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 257 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 257 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 257 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 258 between rule 100 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 258 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 258 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 258 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 258 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 258 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 258 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 258 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 258 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 258 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 258 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 258 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 258 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 258 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 100 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 259 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 259 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 259 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 259 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 259 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 259 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 259 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 259 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 259 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 259 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 259 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 259 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 259 between rule 102 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 259 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 260 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 260 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 260 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 260 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 260 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 260 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 260 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 260 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 260 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 260 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 260 between rule 101 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 260 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 260 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 260 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 261 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 261 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 261 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 261 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 261 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 261 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 261 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 261 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 261 between rule 110 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 261 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 261 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 261 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 261 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 261 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 261 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 261 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 262 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 262 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 262 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 262 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 262 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 262 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 262 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 262 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 262 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 262 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 262 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 262 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 262 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 262 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 262 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 263 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 263 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 263 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 263 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 263 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 263 between rule 94 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 263 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 263 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 263 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 263 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 263 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 263 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 263 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 263 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 263 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 264 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 264 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 264 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 264 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 264 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 264 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 264 between rule 109 and token OP18_TERNARY resolved as shift.
Conflict in state 264 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 264 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 264 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 264 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 264 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 264 between rule 109 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 264 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 264 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 264 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 265 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 265 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 265 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 265 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 265 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 265 between rule 96 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 265 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 265 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 265 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 265 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 265 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 265 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 265 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 265 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 265 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 348 between rule 86 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 348 between rule 86 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 348 between rule 86 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 348 between rule 86 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 348 between rule 86 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 348 between rule 86 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 348 between rule 86 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 348 between rule 86 and token OP08_STRING_CAT resolved as shift.
Conflict in state 348 between rule 86 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 348 between rule 86 and token OP04_MATH_POW resolved as shift.
Conflict in state 348 between rule 86 and token OP18_TERNARY resolved as shift.
Conflict in state 348 between rule 86 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 348 between rule 86 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 348 between rule 86 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 348 between rule 86 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 348 between rule 86 and token OP24_LOGICAL_OR_XOR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	OPTIONAL-23 -> PropertiesClass
58:	OPTIONAL-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';'
66:	Properties -> 'our %properties = (' ')' ';' Critic
67:	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped
68:	STAR-28 -> STAR-28 PAREN-27
69:	STAR-28 -> /* empty */
70:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';'
71:	OPTIONAL-29 -> MethodArguments
72:	OPTIONAL-29 -> /* empty */
73:	PLUS-30 -> PLUS-30 Operation
74:	PLUS-30 -> Operation
75:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'
76:	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
77:	STAR-32 -> STAR-32 PAREN-31
78:	STAR-32 -> /* empty */
79:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'
80:	MethodOrSubroutine -> Method
81:	MethodOrSubroutine -> Subroutine
82:	Operation -> Expression ';'
83:	Operation -> Statement
84:	Operator -> OP01_NAMED SubExpression
85:	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
86:	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
87:	Operator -> OP01_CLOSE FileHandleClose
88:	Operator -> OP03_MATH_INC_DEC Variable
89:	Operator -> Variable OP03_MATH_INC_DEC
90:	Operator -> SubExpression OP04_MATH_POW SubExpression
91:	Operator -> OP05_LOGICAL_NEG SubExpression
92:	Operator -> OP05_MATH_NEG SubExpression ')'
93:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
94:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
95:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
96:	Operator -> SubExpression OP08_STRING_CAT SubExpression
97:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
98:	Operator -> OP10_NAMED_UNARY SubExpression
99:	Operator -> OP10_NAMED_UNARY_STRINGIFY SubExpression
100:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
101:	Operator -> SubExpression OP12_COMPARE_EQ_NEQ SubExpression
102:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
103:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
104:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
105:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
106:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
107:	Operator -> SubExpression OP18_TERNARY Variable COLON Variable
108:	Operator -> OP22_LOGICAL_NOT SubExpression
109:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
110:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
111:	OPTIONAL-33 -> ListElements
112:	OPTIONAL-33 -> /* empty */
113:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-33 ';'
114:	OperatorVoid -> OP01_PRINT_VOID ListElements ';'
115:	OperatorVoid -> OP01_PRINT_VOID FileHandlePrint ListElements ';'
116:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
117:	OPTIONAL-34 -> ListElements
118:	OPTIONAL-34 -> /* empty */
119:	OPTIONAL-35 -> ListElements
120:	OPTIONAL-35 -> /* empty */
121:	Expression -> Operator
122:	Expression -> WordScoped LEFT_PAREN OPTIONAL-34 ')'
123:	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-35 ')'
124:	SubExpression -> Expression
125:	SubExpression -> 'undef'
126:	SubExpression -> Literal
127:	SubExpression -> Variable
128:	SubExpression -> ArrayReference
129:	SubExpression -> ArrayDereferenced
130:	SubExpression -> HashReference
131:	SubExpression -> HashDereferenced
132:	SubExpression -> LEFT_BRACE '}'
133:	SubExpression -> LEFT_PAREN SubExpression ')'
134:	SubExpressionOrPrompt -> SubExpression
135:	SubExpressionOrPrompt -> STDIN_PROMPT
136:	PAREN-36 -> LoopLabel COLON
137:	OPTIONAL-37 -> PAREN-36
138:	OPTIONAL-37 -> /* empty */
139:	Statement -> Conditional
140:	Statement -> OPTIONAL-37 Loop
141:	Statement -> OperatorVoid
142:	Statement -> VariableDeclaration
143:	Statement -> VariableModification
144:	PAREN-38 -> 'elsif (' SubExpression ')' CodeBlock
145:	STAR-39 -> STAR-39 PAREN-38
146:	STAR-39 -> /* empty */
147:	PAREN-40 -> 'else' CodeBlock
148:	OPTIONAL-41 -> PAREN-40
149:	OPTIONAL-41 -> /* empty */
150:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-39 OPTIONAL-41
151:	Loop -> LoopFor
152:	Loop -> LoopForEach
153:	Loop -> LoopWhile
154:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock
155:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock
156:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
157:	PLUS-42 -> PLUS-42 Operation
158:	PLUS-42 -> Operation
159:	CodeBlock -> LEFT_BRACE PLUS-42 '}'
160:	STAR-43 -> STAR-43 VariableRetrieval
161:	STAR-43 -> /* empty */
162:	Variable -> VARIABLE_SYMBOL STAR-43
163:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
164:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
165:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
166:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
167:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'
168:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'
169:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
170:	PAREN-44 -> OP21_LIST_COMMA ListElement
171:	STAR-45 -> STAR-45 PAREN-44
172:	STAR-45 -> /* empty */
173:	PLUS-46 -> PLUS-46 WORD
174:	PLUS-46 -> WORD
175:	ListElements -> ListElement STAR-45
176:	ListElements -> OP01_QW LEFT_PAREN PLUS-46 ')'
177:	ListElement -> SubExpression
178:	ListElement -> TypeInner SubExpression
179:	ListElement -> KEYS_OR_VALUES HashDereferenced
180:	OPTIONAL-47 -> ListElements
181:	OPTIONAL-47 -> /* empty */
182:	ArrayReference -> LEFT_BRACKET OPTIONAL-47 ']'
183:	ArrayDereferenced -> '@{' Variable '}'
184:	ArrayDereferenced -> '@{' ArrayReference '}'
185:	OPTIONAL-48 -> TypeInner
186:	OPTIONAL-48 -> /* empty */
187:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-48 SubExpression
188:	HashEntry -> HashDereferenced
189:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
190:	HashEntryTyped -> HashDereferenced
191:	PAREN-49 -> OP21_LIST_COMMA HashEntry
192:	STAR-50 -> STAR-50 PAREN-49
193:	STAR-50 -> /* empty */
194:	HashReference -> LEFT_BRACE HashEntry STAR-50 '}'
195:	HashDereferenced -> '%{' Variable '}'
196:	HashDereferenced -> '%{' HashReference '}'
197:	WordScoped -> WORD
198:	WordScoped -> WORD_SCOPED
199:	LoopLabel -> WORD
200:	Type -> WORD
201:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
202:	FileHandleOpen -> STDIN_STDOUT_STDERR
203:	FileHandleOpen -> 'my' 'filehandle_ref' FILEHANDLE_REF_SYMBOL
204:	FileHandleClose -> STDIN_STDOUT_STDERR
205:	FileHandleClose -> FILEHANDLE_REF_SYMBOL
206:	FileHandlePrint -> STDIN_STDOUT_STDERR
207:	FileHandlePrint -> LEFT_BRACE FILEHANDLE_REF_SYMBOL '}'
208:	Literal -> LITERAL_STRING
209:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 1
	SHEBANG	shift, and go to state 7

	'package'	reduce using rule 20 (OPTIONAL-9)

	CompileUnit	go to state 5
	PLUS-2	go to state 6
	ModuleHeader	go to state 2
	OPTIONAL-9	go to state 3
	Program	go to state 8
	Critic	go to state 9
	PAREN-1	go to state 4

State 1:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 10

	PLUS-14	go to state 11

State 2:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 15

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Module	go to state 13
	Package	go to state 14
	Class	go to state 12
	STAR-10	go to state 16

State 3:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 17

State 4:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 5:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 18

State 6:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 1

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 3
	PAREN-1	go to state 19
	Critic	go to state 9
	ModuleHeader	go to state 2

State 7:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 1

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 20
	Critic	go to state 21

State 8:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 9:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 10:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 11:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 23
	WORD	shift, and go to state 22

State 12:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 13:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 14:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 15:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 26

State 16:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 1

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	STAR-11	go to state 27
	Critic	go to state 28

State 17:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 29

State 18:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 19:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 20:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 30

	Header	go to state 31

State 21:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 22:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 23:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 24:

	WordScoped -> WORD .	(Rule 197)

	$default	reduce using rule 197 (WordScoped)

State 25:

	WordScoped -> WORD_SCOPED .	(Rule 198)

	$default	reduce using rule 198 (WordScoped)

State 26:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 32

State 27:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 34

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 35
	STAR-12	go to state 33

State 28:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 29:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 36

State 30:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 37

State 31:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 38

State 32:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 39

State 33:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 41
	'use constant'	shift, and go to state 43

	Constant	go to state 44
	Subroutine	go to state 42
	PLUS-13	go to state 40

State 34:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 45

State 35:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 36:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 30

	Header	go to state 46

State 37:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 47

State 38:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 1

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LEFT_BRACE	reduce using rule 11 (STAR-5)
	LEFT_BRACKET	reduce using rule 11 (STAR-5)
	LEFT_PAREN	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	STAR-5	go to state 49
	Critic	go to state 48

State 39:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 34

	Include	go to state 50

State 40:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 41
	LITERAL_NUMBER	shift, and go to state 51

	Subroutine	go to state 52

State 41:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 53

	Type	go to state 54

State 42:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 43:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 55

State 44:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 45:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 57
	'qw('	shift, and go to state 56

State 46:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 47:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 58

State 48:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 49:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 34

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LEFT_BRACE	reduce using rule 13 (STAR-6)
	LEFT_BRACKET	reduce using rule 13 (STAR-6)
	LEFT_PAREN	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	Include	go to state 59
	STAR-6	go to state 60

State 50:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 61

State 51:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 62

State 52:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 53:

	Type -> WORD .	(Rule 200)

	$default	reduce using rule 200 (Type)

State 54:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 63

State 55:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 64

State 56:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 65

	PLUS-15	go to state 66

State 57:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 58:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 67

State 59:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 60:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 43

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LEFT_BRACE	reduce using rule 15 (STAR-7)
	LEFT_BRACKET	reduce using rule 15 (STAR-7)
	LEFT_PAREN	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	STAR-7	go to state 68
	Constant	go to state 69

State 61:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 1

	'our %properties = ('	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	STAR-21	go to state 71
	Critic	go to state 70

State 62:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 63:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 72

State 64:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 73

	TypeInner	go to state 74

State 65:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 66:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 76
	WORD	shift, and go to state 75

State 67:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'if ('	shift, and go to state 96
	'my'	shift, and go to state 118
	'our'	shift, and go to state 41
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 108
	OP01_OPEN	shift, and go to state 94
	OP01_PRINT_VOID	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 95
	WORD_SCOPED	shift, and go to state 25

	'for my integer'	reduce using rule 138 (OPTIONAL-37)
	'foreach my'	reduce using rule 138 (OPTIONAL-37)
	'while ('	reduce using rule 138 (OPTIONAL-37)

	LoopLabel	go to state 112
	PLUS-8	go to state 90
	Operation	go to state 111
	PAREN-36	go to state 110
	SubExpression	go to state 119
	Operator	go to state 120
	VariableDeclaration	go to state 121
	OPTIONAL-37	go to state 93
	VariableModification	go to state 92
	HashDereferenced	go to state 115
	Subroutine	go to state 114
	ArrayDereferenced	go to state 99
	Statement	go to state 100
	Variable	go to state 80
	HashReference	go to state 98
	Literal	go to state 97
	OperatorVoid	go to state 78
	Expression	go to state 105
	WordScoped	go to state 87
	ArrayReference	go to state 86
	Conditional	go to state 83

State 69:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 70:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 71:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 34

	'our %properties = ('	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 123
	STAR-22	go to state 122

State 72:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 125

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LEFT_BRACE	reduce using rule 43 (OPTIONAL-16)
	LEFT_BRACKET	reduce using rule 43 (OPTIONAL-16)
	LEFT_PAREN	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 126
	OPTIONAL-16	go to state 124

State 73:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 201)

	WORD	shift, and go to state 53

	Type	go to state 127

State 74:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88

	Literal	go to state 128

State 75:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 76:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 129

State 77:

	SubExpression -> 'undef' .	(Rule 125)

	$default	reduce using rule 125 (SubExpression)

State 78:

	Statement -> OperatorVoid .	(Rule 141)

	$default	reduce using rule 141 (Statement)

State 79:

	Literal -> LITERAL_NUMBER .	(Rule 209)

	$default	reduce using rule 209 (Literal)

State 80:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 89)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-35 ')'	(Rule 123)
	SubExpression -> Variable .	(Rule 127)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'	(Rule 168)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 169)

	OP02_METHOD_THINARROW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 131
	OP19_VARIABLE_ASSIGN	shift, and go to state 130
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 132

	OP04_MATH_POW	reduce using rule 127 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 127 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 127 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 127 (SubExpression)
	OP08_STRING_CAT	reduce using rule 127 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 127 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 127 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 127 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 127 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 127 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 127 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 127 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 127 (SubExpression)
	OP18_TERNARY	reduce using rule 127 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 127 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 127 (SubExpression)

State 81:

	Operator -> OP05_MATH_NEG . SubExpression ')'	(Rule 92)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayReference	go to state 86
	Operator	go to state 120
	SubExpression	go to state 136
	WordScoped	go to state 87
	Expression	go to state 135
	HashDereferenced	go to state 115
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	Literal	go to state 97

State 82:

	SubExpression -> LEFT_BRACE . '}'	(Rule 132)
	HashReference -> LEFT_BRACE . HashEntry STAR-50 '}'	(Rule 194)

	'%{'	shift, and go to state 109
	'}'	shift, and go to state 138
	WORD	shift, and go to state 137

	HashDereferenced	go to state 139
	HashEntry	go to state 140

State 83:

	Statement -> Conditional .	(Rule 139)

	$default	reduce using rule 139 (Statement)

State 84:

	Variable -> VARIABLE_SYMBOL . STAR-43	(Rule 162)

	$default	reduce using rule 161 (STAR-43)

	STAR-43	go to state 141

State 85:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 183)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 184)

	LEFT_BRACKET	shift, and go to state 104
	VARIABLE_SYMBOL	shift, and go to state 84

	ArrayReference	go to state 142
	Variable	go to state 143

State 86:

	SubExpression -> ArrayReference .	(Rule 128)

	$default	reduce using rule 128 (SubExpression)

State 87:

	Expression -> WordScoped . LEFT_PAREN OPTIONAL-34 ')'	(Rule 122)

	LEFT_PAREN	shift, and go to state 144

State 88:

	Literal -> LITERAL_STRING .	(Rule 208)

	$default	reduce using rule 208 (Literal)

State 89:

	Operator -> OP01_NAMED . SubExpression	(Rule 84)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayReference	go to state 86
	SubExpression	go to state 145
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	HashDereferenced	go to state 115
	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99
	Literal	go to state 97

State 90:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'if ('	shift, and go to state 96
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 108
	OP01_OPEN	shift, and go to state 94
	OP01_PRINT_VOID	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 95
	WORD_SCOPED	shift, and go to state 25

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 138 (OPTIONAL-37)
	'foreach my'	reduce using rule 138 (OPTIONAL-37)
	'while ('	reduce using rule 138 (OPTIONAL-37)

	SubExpression	go to state 119
	Operator	go to state 120
	VariableDeclaration	go to state 121
	OPTIONAL-37	go to state 93
	VariableModification	go to state 92
	HashDereferenced	go to state 115
	LoopLabel	go to state 112
	Operation	go to state 146
	PAREN-36	go to state 110
	WordScoped	go to state 87
	Expression	go to state 105
	ArrayReference	go to state 86
	Conditional	go to state 83
	ArrayDereferenced	go to state 99
	Statement	go to state 100
	HashReference	go to state 98
	Variable	go to state 80
	Literal	go to state 97
	OperatorVoid	go to state 78

State 91:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 98)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Literal	go to state 97
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	Expression	go to state 135
	WordScoped	go to state 87
	Operator	go to state 120
	SubExpression	go to state 147

State 92:

	Statement -> VariableModification .	(Rule 143)

	$default	reduce using rule 143 (Statement)

State 93:

	Statement -> OPTIONAL-37 . Loop	(Rule 140)

	'for my integer'	shift, and go to state 148
	'foreach my'	shift, and go to state 153
	'while ('	shift, and go to state 152

	LoopWhile	go to state 151
	LoopFor	go to state 154
	LoopForEach	go to state 149
	Loop	go to state 150

State 94:

	Operator -> OP01_OPEN . FileHandleOpen OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 86)

	'my'	shift, and go to state 157
	STDIN_STDOUT_STDERR	shift, and go to state 155

	FileHandleOpen	go to state 156

State 95:

	WordScoped -> WORD .	(Rule 197)
	LoopLabel -> WORD .	(Rule 199)

	COLON	reduce using rule 199 (LoopLabel)
	LEFT_PAREN	reduce using rule 197 (WordScoped)

State 96:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-39 OPTIONAL-41	(Rule 150)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayReference	go to state 86
	SubExpression	go to state 158
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	HashDereferenced	go to state 115
	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99
	Literal	go to state 97

State 97:

	SubExpression -> Literal .	(Rule 126)

	$default	reduce using rule 126 (SubExpression)

State 98:

	SubExpression -> HashReference .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 99:

	SubExpression -> ArrayDereferenced .	(Rule 129)

	$default	reduce using rule 129 (SubExpression)

State 100:

	Operation -> Statement .	(Rule 83)

	$default	reduce using rule 83 (Operation)

State 101:

	Operator -> OP22_LOGICAL_NOT . SubExpression	(Rule 108)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	SubExpression	go to state 159
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	ArrayReference	go to state 86
	Literal	go to state 97
	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134

State 102:

	Operator -> LEFT_PAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 85)
	SubExpression -> LEFT_PAREN . SubExpression ')'	(Rule 133)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 160
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	Literal	go to state 97
	ArrayReference	go to state 86
	SubExpression	go to state 161
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	HashDereferenced	go to state 115

State 103:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 88)

	VARIABLE_SYMBOL	shift, and go to state 84

	Variable	go to state 162

State 104:

	ArrayReference -> LEFT_BRACKET . OPTIONAL-47 ']'	(Rule 182)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP01_QW	shift, and go to state 169
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	']'	reduce using rule 181 (OPTIONAL-47)

	ArrayDereferenced	go to state 99
	ListElement	go to state 163
	HashReference	go to state 98
	Variable	go to state 134
	Literal	go to state 97
	Expression	go to state 135
	WordScoped	go to state 87
	OPTIONAL-47	go to state 167
	TypeInner	go to state 168
	Operator	go to state 120
	SubExpression	go to state 164
	ArrayReference	go to state 86
	ListElements	go to state 166
	HashDereferenced	go to state 115

State 105:

	Operation -> Expression . ';'	(Rule 82)
	SubExpression -> Expression .	(Rule 124)

	';'	shift, and go to state 170

	OP04_MATH_POW	reduce using rule 124 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 124 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 124 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 124 (SubExpression)
	OP08_STRING_CAT	reduce using rule 124 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 124 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 124 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 124 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 124 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 124 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 124 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 124 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 124 (SubExpression)
	OP18_TERNARY	reduce using rule 124 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 124 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 124 (SubExpression)

State 106:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 116)

	WORD	shift, and go to state 171

	LoopLabel	go to state 172

State 107:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . SubExpression	(Rule 99)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Literal	go to state 97
	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 135
	Operator	go to state 120
	SubExpression	go to state 173

State 108:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-33 ';'	(Rule 113)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP01_QW	shift, and go to state 169
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	';'	reduce using rule 112 (OPTIONAL-33)

	Literal	go to state 97
	OPTIONAL-33	go to state 175
	ArrayDereferenced	go to state 99
	Variable	go to state 134
	HashReference	go to state 98
	ListElement	go to state 163
	ListElements	go to state 174
	HashDereferenced	go to state 115
	Operator	go to state 120
	TypeInner	go to state 168
	SubExpression	go to state 164
	Expression	go to state 135
	WordScoped	go to state 87
	ArrayReference	go to state 86

State 109:

	HashDereferenced -> '%{' . Variable '}'	(Rule 195)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 196)

	LEFT_BRACE	shift, and go to state 177
	VARIABLE_SYMBOL	shift, and go to state 84

	Variable	go to state 178
	HashReference	go to state 176

State 110:

	OPTIONAL-37 -> PAREN-36 .	(Rule 137)

	$default	reduce using rule 137 (OPTIONAL-37)

State 111:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 112:

	PAREN-36 -> LoopLabel . COLON	(Rule 136)

	COLON	shift, and go to state 179

State 113:

	Operator -> OP01_CLOSE . FileHandleClose	(Rule 87)

	FILEHANDLE_REF_SYMBOL	shift, and go to state 181
	STDIN_STDOUT_STDERR	shift, and go to state 182

	FileHandleClose	go to state 180

State 114:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 115:

	SubExpression -> HashDereferenced .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 116:

	OperatorVoid -> OP01_PRINT_VOID . ListElements ';'	(Rule 114)
	OperatorVoid -> OP01_PRINT_VOID . FileHandlePrint ListElements ';'	(Rule 115)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 185
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP01_QW	shift, and go to state 169
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	STDIN_STDOUT_STDERR	shift, and go to state 184
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Expression	go to state 135
	WordScoped	go to state 87
	TypeInner	go to state 168
	SubExpression	go to state 164
	Operator	go to state 120
	ArrayReference	go to state 86
	FileHandlePrint	go to state 186
	ListElements	go to state 183
	HashDereferenced	go to state 115
	ArrayDereferenced	go to state 99
	ListElement	go to state 163
	Variable	go to state 134
	HashReference	go to state 98
	Literal	go to state 97

State 117:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 91)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99
	Literal	go to state 97
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 135
	Operator	go to state 120
	SubExpression	go to state 187
	HashDereferenced	go to state 115

State 118:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 166)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'	(Rule 167)

	WORD	shift, and go to state 53

	Type	go to state 188

State 119:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 120:

	Expression -> Operator .	(Rule 121)

	$default	reduce using rule 121 (Expression)

State 121:

	Statement -> VariableDeclaration .	(Rule 142)

	$default	reduce using rule 142 (Statement)

State 122:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties = ('	shift, and go to state 206
	'use constant'	shift, and go to state 43

	Constant	go to state 207
	Properties	go to state 205

State 123:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 124:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'if ('	shift, and go to state 96
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 108
	OP01_OPEN	shift, and go to state 94
	OP01_PRINT_VOID	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 95
	WORD_SCOPED	shift, and go to state 25

	'for my integer'	reduce using rule 138 (OPTIONAL-37)
	'foreach my'	reduce using rule 138 (OPTIONAL-37)
	'while ('	reduce using rule 138 (OPTIONAL-37)

	ArrayDereferenced	go to state 99
	Statement	go to state 100
	Variable	go to state 80
	HashReference	go to state 98
	Literal	go to state 97
	PLUS-17	go to state 209
	OperatorVoid	go to state 78
	WordScoped	go to state 87
	Expression	go to state 105
	ArrayReference	go to state 86
	Conditional	go to state 83
	LoopLabel	go to state 112
	Operation	go to state 208
	PAREN-36	go to state 110
	Operator	go to state 120
	SubExpression	go to state 119
	VariableDeclaration	go to state 121
	OPTIONAL-37	go to state 93
	VariableModification	go to state 92
	HashDereferenced	go to state 115

State 125:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 53

	Type	go to state 210

State 126:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 127:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 201)

	'$TYPED_'	shift, and go to state 211

State 128:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 212

State 129:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 130:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrPrompt ';'	(Rule 168)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	STDIN_PROMPT	shift, and go to state 215
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	SubExpressionOrPrompt	go to state 213
	ArrayReference	go to state 86
	SubExpression	go to state 214
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	Literal	go to state 97
	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99

State 131:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 89)

	$default	reduce using rule 89 (Operator)

State 132:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 169)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	Expression	go to state 135
	WordScoped	go to state 87
	Operator	go to state 120
	SubExpression	go to state 216
	ArrayReference	go to state 86
	Literal	go to state 97
	ArrayDereferenced	go to state 99
	Variable	go to state 134
	HashReference	go to state 98

State 133:

	Expression -> Variable OP02_METHOD_THINARROW . WORD LEFT_PAREN OPTIONAL-35 ')'	(Rule 123)

	WORD	shift, and go to state 217

State 134:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 89)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-35 ')'	(Rule 123)
	SubExpression -> Variable .	(Rule 127)

	OP02_METHOD_THINARROW	shift, and go to state 133
	OP03_MATH_INC_DEC	shift, and go to state 131

	')'	reduce using rule 127 (SubExpression)
	'..'	reduce using rule 127 (SubExpression)
	';'	reduce using rule 127 (SubExpression)
	']'	reduce using rule 127 (SubExpression)
	'}'	reduce using rule 127 (SubExpression)
	OP04_MATH_POW	reduce using rule 127 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 127 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 127 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 127 (SubExpression)
	OP08_STRING_CAT	reduce using rule 127 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 127 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 127 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 127 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 127 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 127 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 127 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 127 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 127 (SubExpression)
	OP18_TERNARY	reduce using rule 127 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 127 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 127 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 127 (SubExpression)

State 135:

	SubExpression -> Expression .	(Rule 124)

	$default	reduce using rule 124 (SubExpression)

State 136:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> OP05_MATH_NEG SubExpression . ')'	(Rule 92)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	shift, and go to state 218
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 137:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-48 SubExpression	(Rule 187)

	OP20_HASH_FATARROW	shift, and go to state 219

State 138:

	SubExpression -> LEFT_BRACE '}' .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 139:

	HashEntry -> HashDereferenced .	(Rule 188)

	$default	reduce using rule 188 (HashEntry)

State 140:

	HashReference -> LEFT_BRACE HashEntry . STAR-50 '}'	(Rule 194)

	$default	reduce using rule 193 (STAR-50)

	STAR-50	go to state 220

State 141:

	STAR-43 -> STAR-43 . VariableRetrieval	(Rule 160)
	Variable -> VARIABLE_SYMBOL STAR-43 .	(Rule 162)

	OP02_ARRAY_THINARROW	shift, and go to state 221
	OP02_HASH_THINARROW	shift, and go to state 222

	')'	reduce using rule 162 (Variable)
	'..'	reduce using rule 162 (Variable)
	';'	reduce using rule 162 (Variable)
	']'	reduce using rule 162 (Variable)
	'}'	reduce using rule 162 (Variable)
	COLON	reduce using rule 162 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 162 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 162 (Variable)
	OP04_MATH_POW	reduce using rule 162 (Variable)
	OP06_REGEX_MATCH	reduce using rule 162 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 162 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 162 (Variable)
	OP08_STRING_CAT	reduce using rule 162 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 162 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 162 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 162 (Variable)
	OP13_BITWISE_AND	reduce using rule 162 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 162 (Variable)
	OP15_LOGICAL_AND	reduce using rule 162 (Variable)
	OP16_LOGICAL_OR	reduce using rule 162 (Variable)
	OP17_LIST_RANGE	reduce using rule 162 (Variable)
	OP18_TERNARY	reduce using rule 162 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 162 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 162 (Variable)
	OP21_LIST_COMMA	reduce using rule 162 (Variable)
	OP23_LOGICAL_AND	reduce using rule 162 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 162 (Variable)

	VariableRetrieval	go to state 223

State 142:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 184)

	'}'	shift, and go to state 224

State 143:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 183)

	'}'	shift, and go to state 225

State 144:

	Expression -> WordScoped LEFT_PAREN . OPTIONAL-34 ')'	(Rule 122)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP01_QW	shift, and go to state 169
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	')'	reduce using rule 118 (OPTIONAL-34)

	HashDereferenced	go to state 115
	ListElements	go to state 226
	ArrayReference	go to state 86
	OPTIONAL-34	go to state 227
	Expression	go to state 135
	WordScoped	go to state 87
	Operator	go to state 120
	TypeInner	go to state 168
	SubExpression	go to state 164
	Literal	go to state 97
	ListElement	go to state 163
	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99

State 145:

	Operator -> OP01_NAMED SubExpression .	(Rule 84)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	')'	reduce using rule 84 (Operator)
	'..'	reduce using rule 84 (Operator)
	';'	reduce using rule 84 (Operator)
	']'	reduce using rule 84 (Operator)
	'}'	reduce using rule 84 (Operator)
	OP04_MATH_POW	reduce using rule 84 (Operator)
	OP06_REGEX_MATCH	reduce using rule 84 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 84 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 84 (Operator)
	OP08_STRING_CAT	reduce using rule 84 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 84 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 84 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 84 (Operator)
	OP13_BITWISE_AND	reduce using rule 84 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 84 (Operator)
	OP15_LOGICAL_AND	reduce using rule 84 (Operator)
	OP16_LOGICAL_OR	reduce using rule 84 (Operator)
	OP17_LIST_RANGE	reduce using rule 84 (Operator)
	OP18_TERNARY	reduce using rule 84 (Operator)
	OP21_LIST_COMMA	reduce using rule 84 (Operator)
	OP23_LOGICAL_AND	reduce using rule 84 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 84 (Operator)

State 146:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 147:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189

	')'	reduce using rule 98 (Operator)
	'..'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 148:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock	(Rule 154)

	VARIABLE_SYMBOL	shift, and go to state 228

State 149:

	Loop -> LoopForEach .	(Rule 152)

	$default	reduce using rule 152 (Loop)

State 150:

	Statement -> OPTIONAL-37 Loop .	(Rule 140)

	$default	reduce using rule 140 (Statement)

State 151:

	Loop -> LoopWhile .	(Rule 153)

	$default	reduce using rule 153 (Loop)

State 152:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 156)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	Operator	go to state 120
	SubExpression	go to state 229
	Expression	go to state 135
	WordScoped	go to state 87
	ArrayReference	go to state 86
	Literal	go to state 97
	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134

State 153:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock	(Rule 155)

	WORD	shift, and go to state 53

	Type	go to state 230

State 154:

	Loop -> LoopFor .	(Rule 151)

	$default	reduce using rule 151 (Loop)

State 155:

	FileHandleOpen -> STDIN_STDOUT_STDERR .	(Rule 202)

	$default	reduce using rule 202 (FileHandleOpen)

State 156:

	Operator -> OP01_OPEN FileHandleOpen . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 86)

	OP21_LIST_COMMA	shift, and go to state 231

State 157:

	FileHandleOpen -> 'my' . 'filehandle_ref' FILEHANDLE_REF_SYMBOL	(Rule 203)

	'filehandle_ref'	shift, and go to state 232

State 158:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-39 OPTIONAL-41	(Rule 150)

	')'	shift, and go to state 233
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 159:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> OP22_LOGICAL_NOT SubExpression .	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 160:

	Operator -> OP01_NAMED . SubExpression	(Rule 84)
	Operator -> LEFT_PAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 85)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayDereferenced	go to state 99
	Variable	go to state 134
	HashReference	go to state 98
	ListElement	go to state 234
	Literal	go to state 97
	TypeInner	go to state 168
	Operator	go to state 120
	SubExpression	go to state 235
	WordScoped	go to state 87
	Expression	go to state 135
	ArrayReference	go to state 86
	HashDereferenced	go to state 115

State 161:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpression -> LEFT_PAREN SubExpression . ')'	(Rule 133)

	')'	shift, and go to state 236
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 162:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 163:

	ListElements -> ListElement . STAR-45	(Rule 175)

	$default	reduce using rule 172 (STAR-45)

	STAR-45	go to state 237

State 164:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 177)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

	')'	reduce using rule 177 (ListElement)
	';'	reduce using rule 177 (ListElement)
	']'	reduce using rule 177 (ListElement)
	OP21_LIST_COMMA	reduce using rule 177 (ListElement)

State 165:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 179)

	'%{'	shift, and go to state 109

	HashDereferenced	go to state 238

State 166:

	OPTIONAL-47 -> ListElements .	(Rule 180)

	$default	reduce using rule 180 (OPTIONAL-47)

State 167:

	ArrayReference -> LEFT_BRACKET OPTIONAL-47 . ']'	(Rule 182)

	']'	shift, and go to state 239

State 168:

	ListElement -> TypeInner . SubExpression	(Rule 178)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	SubExpression	go to state 240
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	Literal	go to state 97
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99

State 169:

	ListElements -> OP01_QW . LEFT_PAREN PLUS-46 ')'	(Rule 176)

	LEFT_PAREN	shift, and go to state 241

State 170:

	Operation -> Expression ';' .	(Rule 82)

	$default	reduce using rule 82 (Operation)

State 171:

	LoopLabel -> WORD .	(Rule 199)

	$default	reduce using rule 199 (LoopLabel)

State 172:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 116)

	';'	shift, and go to state 242

State 173:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> OP10_NAMED_UNARY_STRINGIFY SubExpression .	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189

	')'	reduce using rule 99 (Operator)
	'..'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 174:

	OPTIONAL-33 -> ListElements .	(Rule 111)

	$default	reduce using rule 111 (OPTIONAL-33)

State 175:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-33 . ';'	(Rule 113)

	';'	shift, and go to state 243

State 176:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 196)

	'}'	shift, and go to state 244

State 177:

	HashReference -> LEFT_BRACE . HashEntry STAR-50 '}'	(Rule 194)

	'%{'	shift, and go to state 109
	WORD	shift, and go to state 137

	HashDereferenced	go to state 139
	HashEntry	go to state 140

State 178:

	HashDereferenced -> '%{' Variable . '}'	(Rule 195)

	'}'	shift, and go to state 245

State 179:

	PAREN-36 -> LoopLabel COLON .	(Rule 136)

	$default	reduce using rule 136 (PAREN-36)

State 180:

	Operator -> OP01_CLOSE FileHandleClose .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 181:

	FileHandleClose -> FILEHANDLE_REF_SYMBOL .	(Rule 205)

	$default	reduce using rule 205 (FileHandleClose)

State 182:

	FileHandleClose -> STDIN_STDOUT_STDERR .	(Rule 204)

	$default	reduce using rule 204 (FileHandleClose)

State 183:

	OperatorVoid -> OP01_PRINT_VOID ListElements . ';'	(Rule 114)

	';'	shift, and go to state 246

State 184:

	FileHandlePrint -> STDIN_STDOUT_STDERR .	(Rule 206)

	$default	reduce using rule 206 (FileHandlePrint)

State 185:

	SubExpression -> LEFT_BRACE . '}'	(Rule 132)
	HashReference -> LEFT_BRACE . HashEntry STAR-50 '}'	(Rule 194)
	FileHandlePrint -> LEFT_BRACE . FILEHANDLE_REF_SYMBOL '}'	(Rule 207)

	'%{'	shift, and go to state 109
	'}'	shift, and go to state 138
	FILEHANDLE_REF_SYMBOL	shift, and go to state 247
	WORD	shift, and go to state 137

	HashEntry	go to state 140
	HashDereferenced	go to state 139

State 186:

	OperatorVoid -> OP01_PRINT_VOID FileHandlePrint . ListElements ';'	(Rule 115)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP01_QW	shift, and go to state 169
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Literal	go to state 97
	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134
	ListElement	go to state 163
	ListElements	go to state 248
	HashDereferenced	go to state 115
	Operator	go to state 120
	TypeInner	go to state 168
	SubExpression	go to state 164
	WordScoped	go to state 87
	Expression	go to state 135
	ArrayReference	go to state 86

State 187:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192

	')'	reduce using rule 91 (Operator)
	'..'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP06_REGEX_MATCH	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 188:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 166)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'	(Rule 167)

	VARIABLE_SYMBOL	shift, and go to state 249

State 189:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Literal	go to state 97
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 135
	Operator	go to state 120
	SubExpression	go to state 250

State 190:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 93)

	OP06_REGEX_PATTERN	shift, and go to state 251

State 191:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 103)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	Literal	go to state 97
	ArrayReference	go to state 86
	Expression	go to state 135
	WordScoped	go to state 87
	Operator	go to state 120
	SubExpression	go to state 252
	HashDereferenced	go to state 115

State 192:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 90)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134
	Literal	go to state 97
	Operator	go to state 120
	SubExpression	go to state 253
	Expression	go to state 135
	WordScoped	go to state 87
	ArrayReference	go to state 86
	HashDereferenced	go to state 115

State 193:

	Operator -> SubExpression OP18_TERNARY . Variable COLON Variable	(Rule 107)

	VARIABLE_SYMBOL	shift, and go to state 84

	Variable	go to state 254

State 194:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 106)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Literal	go to state 97
	ArrayDereferenced	go to state 99
	Variable	go to state 134
	HashReference	go to state 98
	HashDereferenced	go to state 115
	SubExpression	go to state 255
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	ArrayReference	go to state 86

State 195:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 95)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	Literal	go to state 97
	ArrayReference	go to state 86
	Operator	go to state 120
	SubExpression	go to state 256
	Expression	go to state 135
	WordScoped	go to state 87
	HashDereferenced	go to state 115

State 196:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 104)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	SubExpression	go to state 257
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	Literal	go to state 97
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99

State 197:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 100)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	SubExpression	go to state 258
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	ArrayReference	go to state 86
	HashDereferenced	go to state 115
	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134
	Literal	go to state 97

State 198:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 102)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99
	Literal	go to state 97
	ArrayReference	go to state 86
	SubExpression	go to state 259
	Operator	go to state 120
	Expression	go to state 135
	WordScoped	go to state 87
	HashDereferenced	go to state 115

State 199:

	Operator -> SubExpression OP12_COMPARE_EQ_NEQ . SubExpression	(Rule 101)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayReference	go to state 86
	SubExpression	go to state 260
	Operator	go to state 120
	Expression	go to state 135
	WordScoped	go to state 87
	HashDereferenced	go to state 115
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	Literal	go to state 97

State 200:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 110)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	Operator	go to state 120
	SubExpression	go to state 261
	Expression	go to state 135
	WordScoped	go to state 87
	Literal	go to state 97
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99

State 201:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 105)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	SubExpression	go to state 262
	Operator	go to state 120
	Expression	go to state 135
	WordScoped	go to state 87
	Literal	go to state 97
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99

State 202:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 94)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	SubExpression	go to state 263
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	ArrayReference	go to state 86
	Literal	go to state 97
	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134

State 203:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 109)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99
	Literal	go to state 97
	ArrayReference	go to state 86
	Expression	go to state 135
	WordScoped	go to state 87
	Operator	go to state 120
	SubExpression	go to state 264
	HashDereferenced	go to state 115

State 204:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Operator	go to state 120
	SubExpression	go to state 265
	Expression	go to state 135
	WordScoped	go to state 87
	ArrayReference	go to state 86
	HashDereferenced	go to state 115
	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134
	Literal	go to state 97

State 205:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties_class = ('	shift, and go to state 267

	'our'	reduce using rule 58 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 58 (OPTIONAL-23)

	OPTIONAL-23	go to state 268
	PropertiesClass	go to state 266

State 206:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-26 ')' ';'	(Rule 65)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 1
	')'	shift, and go to state 270

	Critic	go to state 269

State 207:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 208:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 209:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'if ('	shift, and go to state 96
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 77
	'}'	shift, and go to state 272
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 108
	OP01_OPEN	shift, and go to state 94
	OP01_PRINT_VOID	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 95
	WORD_SCOPED	shift, and go to state 25

	'for my integer'	reduce using rule 138 (OPTIONAL-37)
	'foreach my'	reduce using rule 138 (OPTIONAL-37)
	'while ('	reduce using rule 138 (OPTIONAL-37)

	Conditional	go to state 83
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 105
	OperatorVoid	go to state 78
	Literal	go to state 97
	Variable	go to state 80
	HashReference	go to state 98
	Statement	go to state 100
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 115
	VariableModification	go to state 92
	OPTIONAL-37	go to state 93
	VariableDeclaration	go to state 121
	SubExpression	go to state 119
	Operator	go to state 120
	PAREN-36	go to state 110
	Operation	go to state 271
	LoopLabel	go to state 112

State 210:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 273

State 211:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 201)

	WORD	shift, and go to state 274

State 212:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 213:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrPrompt . ';'	(Rule 168)

	';'	shift, and go to state 275

State 214:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	SubExpressionOrPrompt -> SubExpression .	(Rule 134)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

	';'	reduce using rule 134 (SubExpressionOrPrompt)

State 215:

	SubExpressionOrPrompt -> STDIN_PROMPT .	(Rule 135)

	$default	reduce using rule 135 (SubExpressionOrPrompt)

State 216:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 169)

	';'	shift, and go to state 276
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 217:

	Expression -> Variable OP02_METHOD_THINARROW WORD . LEFT_PAREN OPTIONAL-35 ')'	(Rule 123)

	LEFT_PAREN	shift, and go to state 277

State 218:

	Operator -> OP05_MATH_NEG SubExpression ')' .	(Rule 92)

	$default	reduce using rule 92 (Operator)

State 219:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-48 SubExpression	(Rule 187)

	'my'	shift, and go to state 73

	'%{'	reduce using rule 186 (OPTIONAL-48)
	'@{'	reduce using rule 186 (OPTIONAL-48)
	'undef'	reduce using rule 186 (OPTIONAL-48)
	LEFT_BRACE	reduce using rule 186 (OPTIONAL-48)
	LEFT_BRACKET	reduce using rule 186 (OPTIONAL-48)
	LEFT_PAREN	reduce using rule 186 (OPTIONAL-48)
	LITERAL_NUMBER	reduce using rule 186 (OPTIONAL-48)
	LITERAL_STRING	reduce using rule 186 (OPTIONAL-48)
	OP01_CLOSE	reduce using rule 186 (OPTIONAL-48)
	OP01_NAMED	reduce using rule 186 (OPTIONAL-48)
	OP01_OPEN	reduce using rule 186 (OPTIONAL-48)
	OP03_MATH_INC_DEC	reduce using rule 186 (OPTIONAL-48)
	OP05_LOGICAL_NEG	reduce using rule 186 (OPTIONAL-48)
	OP05_MATH_NEG	reduce using rule 186 (OPTIONAL-48)
	OP10_NAMED_UNARY	reduce using rule 186 (OPTIONAL-48)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 186 (OPTIONAL-48)
	OP22_LOGICAL_NOT	reduce using rule 186 (OPTIONAL-48)
	VARIABLE_SYMBOL	reduce using rule 186 (OPTIONAL-48)
	WORD	reduce using rule 186 (OPTIONAL-48)
	WORD_SCOPED	reduce using rule 186 (OPTIONAL-48)

	OPTIONAL-48	go to state 279
	TypeInner	go to state 278

State 220:

	STAR-50 -> STAR-50 . PAREN-49	(Rule 192)
	HashReference -> LEFT_BRACE HashEntry STAR-50 . '}'	(Rule 194)

	'}'	shift, and go to state 281
	OP21_LIST_COMMA	shift, and go to state 282

	PAREN-49	go to state 280

State 221:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 163)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Literal	go to state 97
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 135
	Operator	go to state 120
	SubExpression	go to state 283

State 222:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 164)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 165)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 285
	WORD_SCOPED	shift, and go to state 25

	ArrayDereferenced	go to state 99
	Variable	go to state 134
	HashReference	go to state 98
	Literal	go to state 97
	WordScoped	go to state 87
	Expression	go to state 135
	SubExpression	go to state 284
	Operator	go to state 120
	ArrayReference	go to state 86
	HashDereferenced	go to state 115

State 223:

	STAR-43 -> STAR-43 VariableRetrieval .	(Rule 160)

	$default	reduce using rule 160 (STAR-43)

State 224:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 184)

	$default	reduce using rule 184 (ArrayDereferenced)

State 225:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 183)

	$default	reduce using rule 183 (ArrayDereferenced)

State 226:

	OPTIONAL-34 -> ListElements .	(Rule 117)

	$default	reduce using rule 117 (OPTIONAL-34)

State 227:

	Expression -> WordScoped LEFT_PAREN OPTIONAL-34 . ')'	(Rule 122)

	')'	shift, and go to state 286

State 228:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock	(Rule 154)

	LEFT_PAREN	shift, and go to state 287

State 229:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 156)

	')'	shift, and go to state 288
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 230:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock	(Rule 155)

	VARIABLE_SYMBOL	shift, and go to state 289

State 231:

	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 86)

	LITERAL_STRING	shift, and go to state 290

State 232:

	FileHandleOpen -> 'my' 'filehandle_ref' . FILEHANDLE_REF_SYMBOL	(Rule 203)

	FILEHANDLE_REF_SYMBOL	shift, and go to state 291

State 233:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-39 OPTIONAL-41	(Rule 150)

	LEFT_BRACE	shift, and go to state 293

	CodeBlock	go to state 292

State 234:

	Operator -> LEFT_PAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 85)

	OP21_LIST_COMMA	shift, and go to state 294

State 235:

	Operator -> OP01_NAMED SubExpression .	(Rule 84)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> SubExpression .	(Rule 177)

	')'	reduce using rule 84 (Operator)
	OP04_MATH_POW	reduce using rule 84 (Operator)
	OP06_REGEX_MATCH	reduce using rule 84 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 84 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 84 (Operator)
	OP08_STRING_CAT	reduce using rule 84 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 84 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 84 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 84 (Operator)
	OP13_BITWISE_AND	reduce using rule 84 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 84 (Operator)
	OP15_LOGICAL_AND	reduce using rule 84 (Operator)
	OP16_LOGICAL_OR	reduce using rule 84 (Operator)
	OP17_LIST_RANGE	reduce using rule 84 (Operator)
	OP18_TERNARY	reduce using rule 84 (Operator)
	OP21_LIST_COMMA	reduce using rule 177 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 84 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 84 (Operator)

State 236:

	SubExpression -> LEFT_PAREN SubExpression ')' .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 237:

	STAR-45 -> STAR-45 . PAREN-44	(Rule 171)
	ListElements -> ListElement STAR-45 .	(Rule 175)

	OP21_LIST_COMMA	shift, and go to state 296

	')'	reduce using rule 175 (ListElements)
	';'	reduce using rule 175 (ListElements)
	']'	reduce using rule 175 (ListElements)

	PAREN-44	go to state 295

State 238:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 179)

	$default	reduce using rule 179 (ListElement)

State 239:

	ArrayReference -> LEFT_BRACKET OPTIONAL-47 ']' .	(Rule 182)

	$default	reduce using rule 182 (ArrayReference)

State 240:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	ListElement -> TypeInner SubExpression .	(Rule 178)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

	')'	reduce using rule 178 (ListElement)
	';'	reduce using rule 178 (ListElement)
	']'	reduce using rule 178 (ListElement)
	OP21_LIST_COMMA	reduce using rule 178 (ListElement)

State 241:

	ListElements -> OP01_QW LEFT_PAREN . PLUS-46 ')'	(Rule 176)

	WORD	shift, and go to state 297

	PLUS-46	go to state 298

State 242:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 243:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-33 ';' .	(Rule 113)

	$default	reduce using rule 113 (OperatorVoid)

State 244:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 196)

	$default	reduce using rule 196 (HashDereferenced)

State 245:

	HashDereferenced -> '%{' Variable '}' .	(Rule 195)

	$default	reduce using rule 195 (HashDereferenced)

State 246:

	OperatorVoid -> OP01_PRINT_VOID ListElements ';' .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 247:

	FileHandlePrint -> LEFT_BRACE FILEHANDLE_REF_SYMBOL . '}'	(Rule 207)

	'}'	shift, and go to state 299

State 248:

	OperatorVoid -> OP01_PRINT_VOID FileHandlePrint ListElements . ';'	(Rule 115)

	';'	shift, and go to state 300

State 249:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 166)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'	(Rule 167)

	';'	shift, and go to state 301
	OP19_VARIABLE_ASSIGN	shift, and go to state 302

State 250:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204

	')'	reduce using rule 97 (Operator)
	'..'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 251:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 252:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 253:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192

	')'	reduce using rule 90 (Operator)
	'..'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP06_REGEX_MATCH	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 254:

	Operator -> SubExpression OP18_TERNARY Variable . COLON Variable	(Rule 107)

	COLON	shift, and go to state 303

State 255:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 256:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202

	')'	reduce using rule 95 (Operator)
	'..'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 257:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 258:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 100 (Operator)
	'..'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 259:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199

	')'	reduce using rule 102 (Operator)
	'..'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 260:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression OP12_COMPARE_EQ_NEQ SubExpression .	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	'..'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 261:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 262:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 263:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190

	')'	reduce using rule 94 (Operator)
	'..'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 264:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 265:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195

	')'	reduce using rule 96 (Operator)
	'..'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 266:

	OPTIONAL-23 -> PropertiesClass .	(Rule 57)

	$default	reduce using rule 57 (OPTIONAL-23)

State 267:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'## no critic qw('	shift, and go to state 1

	Critic	go to state 304

State 268:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 305

State 269:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-26 ')' ';'	(Rule 65)

	'%{'	shift, and go to state 109
	WORD	shift, and go to state 308

	HashDereferenced	go to state 307
	HashEntryTyped	go to state 306

State 270:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 66)

	';'	shift, and go to state 309

State 271:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 272:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 310

State 273:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 311

State 274:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 201)

	OP19_VARIABLE_ASSIGN	shift, and go to state 312

State 275:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';' .	(Rule 168)

	$default	reduce using rule 168 (VariableModification)

State 276:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 169)

	$default	reduce using rule 169 (VariableModification)

State 277:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN . OPTIONAL-35 ')'	(Rule 123)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP01_QW	shift, and go to state 169
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	')'	reduce using rule 120 (OPTIONAL-35)

	ArrayReference	go to state 86
	Operator	go to state 120
	SubExpression	go to state 164
	TypeInner	go to state 168
	Expression	go to state 135
	WordScoped	go to state 87
	HashDereferenced	go to state 115
	ListElements	go to state 314
	Variable	go to state 134
	HashReference	go to state 98
	OPTIONAL-35	go to state 313
	ListElement	go to state 163
	ArrayDereferenced	go to state 99
	Literal	go to state 97

State 278:

	OPTIONAL-48 -> TypeInner .	(Rule 185)

	$default	reduce using rule 185 (OPTIONAL-48)

State 279:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-48 . SubExpression	(Rule 187)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayReference	go to state 86
	SubExpression	go to state 315
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	HashDereferenced	go to state 115
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	Literal	go to state 97

State 280:

	STAR-50 -> STAR-50 PAREN-49 .	(Rule 192)

	$default	reduce using rule 192 (STAR-50)

State 281:

	HashReference -> LEFT_BRACE HashEntry STAR-50 '}' .	(Rule 194)

	$default	reduce using rule 194 (HashReference)

State 282:

	PAREN-49 -> OP21_LIST_COMMA . HashEntry	(Rule 191)

	'%{'	shift, and go to state 109
	WORD	shift, and go to state 137

	HashDereferenced	go to state 139
	HashEntry	go to state 316

State 283:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 163)

	']'	shift, and go to state 317
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 284:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 164)

	'}'	shift, and go to state 318
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 285:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 165)
	WordScoped -> WORD .	(Rule 197)

	'}'	shift, and go to state 319

	LEFT_PAREN	reduce using rule 197 (WordScoped)

State 286:

	Expression -> WordScoped LEFT_PAREN OPTIONAL-34 ')' .	(Rule 122)

	$default	reduce using rule 122 (Expression)

State 287:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN . SubExpression '..' SubExpression ')' CodeBlock	(Rule 154)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 135
	Operator	go to state 120
	SubExpression	go to state 320
	Literal	go to state 97
	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99

State 288:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 156)

	LEFT_BRACE	shift, and go to state 293

	CodeBlock	go to state 321

State 289:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LEFT_PAREN ListElements ')' CodeBlock	(Rule 155)

	LEFT_PAREN	shift, and go to state 322

State 290:

	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 86)

	OP21_LIST_COMMA	shift, and go to state 323

State 291:

	FileHandleOpen -> 'my' 'filehandle_ref' FILEHANDLE_REF_SYMBOL .	(Rule 203)

	$default	reduce using rule 203 (FileHandleOpen)

State 292:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-39 OPTIONAL-41	(Rule 150)

	$default	reduce using rule 146 (STAR-39)

	STAR-39	go to state 324

State 293:

	CodeBlock -> LEFT_BRACE . PLUS-42 '}'	(Rule 159)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'if ('	shift, and go to state 96
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 108
	OP01_OPEN	shift, and go to state 94
	OP01_PRINT_VOID	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 95
	WORD_SCOPED	shift, and go to state 25

	'for my integer'	reduce using rule 138 (OPTIONAL-37)
	'foreach my'	reduce using rule 138 (OPTIONAL-37)
	'while ('	reduce using rule 138 (OPTIONAL-37)

	HashDereferenced	go to state 115
	VariableModification	go to state 92
	OPTIONAL-37	go to state 93
	SubExpression	go to state 119
	Operator	go to state 120
	VariableDeclaration	go to state 121
	PAREN-36	go to state 110
	Operation	go to state 325
	LoopLabel	go to state 112
	Conditional	go to state 83
	PLUS-42	go to state 326
	ArrayReference	go to state 86
	Expression	go to state 105
	WordScoped	go to state 87
	OperatorVoid	go to state 78
	Literal	go to state 97
	HashReference	go to state 98
	Variable	go to state 80
	ArrayDereferenced	go to state 99
	Statement	go to state 100

State 294:

	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 85)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP01_QW	shift, and go to state 169
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 87
	Expression	go to state 135
	SubExpression	go to state 164
	TypeInner	go to state 168
	Operator	go to state 120
	ArrayReference	go to state 86
	ListElements	go to state 327
	HashDereferenced	go to state 115
	ArrayDereferenced	go to state 99
	ListElement	go to state 163
	HashReference	go to state 98
	Variable	go to state 134
	Literal	go to state 97

State 295:

	STAR-45 -> STAR-45 PAREN-44 .	(Rule 171)

	$default	reduce using rule 171 (STAR-45)

State 296:

	PAREN-44 -> OP21_LIST_COMMA . ListElement	(Rule 170)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayDereferenced	go to state 99
	ListElement	go to state 328
	Variable	go to state 134
	HashReference	go to state 98
	Literal	go to state 97
	Expression	go to state 135
	WordScoped	go to state 87
	TypeInner	go to state 168
	Operator	go to state 120
	SubExpression	go to state 164
	ArrayReference	go to state 86
	HashDereferenced	go to state 115

State 297:

	PLUS-46 -> WORD .	(Rule 174)

	$default	reduce using rule 174 (PLUS-46)

State 298:

	PLUS-46 -> PLUS-46 . WORD	(Rule 173)
	ListElements -> OP01_QW LEFT_PAREN PLUS-46 . ')'	(Rule 176)

	')'	shift, and go to state 329
	WORD	shift, and go to state 330

State 299:

	FileHandlePrint -> LEFT_BRACE FILEHANDLE_REF_SYMBOL '}' .	(Rule 207)

	$default	reduce using rule 207 (FileHandlePrint)

State 300:

	OperatorVoid -> OP01_PRINT_VOID FileHandlePrint ListElements ';' .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 301:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 166)

	$default	reduce using rule 166 (VariableDeclaration)

State 302:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrPrompt ';'	(Rule 167)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	STDIN_PROMPT	shift, and go to state 215
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayReference	go to state 86
	Expression	go to state 135
	WordScoped	go to state 87
	Operator	go to state 120
	SubExpression	go to state 214
	HashDereferenced	go to state 115
	SubExpressionOrPrompt	go to state 331
	HashReference	go to state 98
	Variable	go to state 134
	ArrayDereferenced	go to state 99
	Literal	go to state 97

State 303:

	Operator -> SubExpression OP18_TERNARY Variable COLON . Variable	(Rule 107)

	VARIABLE_SYMBOL	shift, and go to state 84

	Variable	go to state 332

State 304:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'%{'	shift, and go to state 109
	WORD	shift, and go to state 308

	HashEntryTyped	go to state 333
	HashDereferenced	go to state 307

State 305:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 334
	LITERAL_NUMBER	shift, and go to state 336

	MethodOrSubroutine	go to state 338
	Method	go to state 337
	Subroutine	go to state 335

State 306:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-26 ')' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 339

State 307:

	HashEntryTyped -> HashDereferenced .	(Rule 190)

	$default	reduce using rule 190 (HashEntryTyped)

State 308:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 189)

	OP20_HASH_FATARROW	shift, and go to state 340

State 309:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 1

	Critic	go to state 341

State 310:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 311:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 344
	OP21_LIST_COMMA	shift, and go to state 343

	PAREN-18	go to state 342

State 312:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 201)

	$default	reduce using rule 201 (TypeInner)

State 313:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-35 . ')'	(Rule 123)

	')'	shift, and go to state 345

State 314:

	OPTIONAL-35 -> ListElements .	(Rule 119)

	$default	reduce using rule 119 (OPTIONAL-35)

State 315:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-48 SubExpression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

	'}'	reduce using rule 187 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 187 (HashEntry)

State 316:

	PAREN-49 -> OP21_LIST_COMMA HashEntry .	(Rule 191)

	$default	reduce using rule 191 (PAREN-49)

State 317:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 163)

	$default	reduce using rule 163 (VariableRetrieval)

State 318:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 164)

	$default	reduce using rule 164 (VariableRetrieval)

State 319:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 165)

	$default	reduce using rule 165 (VariableRetrieval)

State 320:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression . '..' SubExpression ')' CodeBlock	(Rule 154)

	'..'	shift, and go to state 346
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 321:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (LoopWhile)

State 322:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN . ListElements ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 77
	KEYS_OR_VALUES	shift, and go to state 165
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP01_QW	shift, and go to state 169
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Variable	go to state 134
	HashReference	go to state 98
	ListElement	go to state 163
	ArrayDereferenced	go to state 99
	Literal	go to state 97
	ArrayReference	go to state 86
	TypeInner	go to state 168
	SubExpression	go to state 164
	Operator	go to state 120
	Expression	go to state 135
	WordScoped	go to state 87
	HashDereferenced	go to state 115
	ListElements	go to state 347

State 323:

	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 86)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 87
	Expression	go to state 135
	SubExpression	go to state 348
	Operator	go to state 120
	ArrayReference	go to state 86
	HashDereferenced	go to state 115
	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134
	Literal	go to state 97

State 324:

	STAR-39 -> STAR-39 . PAREN-38	(Rule 145)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-39 . OPTIONAL-41	(Rule 150)

	'else'	shift, and go to state 350
	'elsif ('	shift, and go to state 353

	$end	reduce using rule 149 (OPTIONAL-41)
	'%{'	reduce using rule 149 (OPTIONAL-41)
	'@{'	reduce using rule 149 (OPTIONAL-41)
	'for my integer'	reduce using rule 149 (OPTIONAL-41)
	'foreach my'	reduce using rule 149 (OPTIONAL-41)
	'if ('	reduce using rule 149 (OPTIONAL-41)
	'my'	reduce using rule 149 (OPTIONAL-41)
	'undef'	reduce using rule 149 (OPTIONAL-41)
	'while ('	reduce using rule 149 (OPTIONAL-41)
	'}'	reduce using rule 149 (OPTIONAL-41)
	LEFT_BRACE	reduce using rule 149 (OPTIONAL-41)
	LEFT_BRACKET	reduce using rule 149 (OPTIONAL-41)
	LEFT_PAREN	reduce using rule 149 (OPTIONAL-41)
	LITERAL_NUMBER	reduce using rule 149 (OPTIONAL-41)
	LITERAL_STRING	reduce using rule 149 (OPTIONAL-41)
	OP01_CLOSE	reduce using rule 149 (OPTIONAL-41)
	OP01_NAMED	reduce using rule 149 (OPTIONAL-41)
	OP01_NAMED_VOID	reduce using rule 149 (OPTIONAL-41)
	OP01_OPEN	reduce using rule 149 (OPTIONAL-41)
	OP01_PRINT_VOID	reduce using rule 149 (OPTIONAL-41)
	OP03_MATH_INC_DEC	reduce using rule 149 (OPTIONAL-41)
	OP05_LOGICAL_NEG	reduce using rule 149 (OPTIONAL-41)
	OP05_MATH_NEG	reduce using rule 149 (OPTIONAL-41)
	OP10_NAMED_UNARY	reduce using rule 149 (OPTIONAL-41)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 149 (OPTIONAL-41)
	OP19_LOOP_CONTROL	reduce using rule 149 (OPTIONAL-41)
	OP22_LOGICAL_NOT	reduce using rule 149 (OPTIONAL-41)
	VARIABLE_SYMBOL	reduce using rule 149 (OPTIONAL-41)
	WORD	reduce using rule 149 (OPTIONAL-41)
	WORD_SCOPED	reduce using rule 149 (OPTIONAL-41)

	PAREN-40	go to state 349
	OPTIONAL-41	go to state 351
	PAREN-38	go to state 352

State 325:

	PLUS-42 -> Operation .	(Rule 158)

	$default	reduce using rule 158 (PLUS-42)

State 326:

	PLUS-42 -> PLUS-42 . Operation	(Rule 157)
	CodeBlock -> LEFT_BRACE PLUS-42 . '}'	(Rule 159)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'if ('	shift, and go to state 96
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 77
	'}'	shift, and go to state 355
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 108
	OP01_OPEN	shift, and go to state 94
	OP01_PRINT_VOID	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 95
	WORD_SCOPED	shift, and go to state 25

	'for my integer'	reduce using rule 138 (OPTIONAL-37)
	'foreach my'	reduce using rule 138 (OPTIONAL-37)
	'while ('	reduce using rule 138 (OPTIONAL-37)

	OperatorVoid	go to state 78
	Literal	go to state 97
	HashReference	go to state 98
	Variable	go to state 80
	ArrayDereferenced	go to state 99
	Statement	go to state 100
	Conditional	go to state 83
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 105
	PAREN-36	go to state 110
	Operation	go to state 354
	LoopLabel	go to state 112
	HashDereferenced	go to state 115
	VariableModification	go to state 92
	OPTIONAL-37	go to state 93
	Operator	go to state 120
	SubExpression	go to state 119
	VariableDeclaration	go to state 121

State 327:

	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 85)

	')'	shift, and go to state 356

State 328:

	PAREN-44 -> OP21_LIST_COMMA ListElement .	(Rule 170)

	$default	reduce using rule 170 (PAREN-44)

State 329:

	ListElements -> OP01_QW LEFT_PAREN PLUS-46 ')' .	(Rule 176)

	$default	reduce using rule 176 (ListElements)

State 330:

	PLUS-46 -> PLUS-46 WORD .	(Rule 173)

	$default	reduce using rule 173 (PLUS-46)

State 331:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt . ';'	(Rule 167)

	';'	shift, and go to state 357

State 332:

	Operator -> SubExpression OP18_TERNARY Variable COLON Variable .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 333:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-28 ')' ';'	(Rule 70)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 358

State 334:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	TYPE_METHOD	shift, and go to state 359
	WORD	shift, and go to state 53

	Type	go to state 54

State 335:

	MethodOrSubroutine -> Subroutine .	(Rule 81)

	$default	reduce using rule 81 (MethodOrSubroutine)

State 336:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 360

State 337:

	MethodOrSubroutine -> Method .	(Rule 80)

	$default	reduce using rule 80 (MethodOrSubroutine)

State 338:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 339:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 . ')' ';'	(Rule 65)

	')'	shift, and go to state 361
	OP21_LIST_COMMA	shift, and go to state 362

	PAREN-25	go to state 363

State 340:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 189)

	'my'	shift, and go to state 73

	TypeInner	go to state 364

State 341:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 342:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 343:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 365

State 344:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 366

State 345:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-35 ')' .	(Rule 123)

	$default	reduce using rule 123 (Expression)

State 346:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' . SubExpression ')' CodeBlock	(Rule 154)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	Literal	go to state 97
	Variable	go to state 134
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 115
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 135
	SubExpression	go to state 367
	Operator	go to state 120

State 347:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements . ')' CodeBlock	(Rule 155)

	')'	shift, and go to state 368

State 348:

	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 86)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193

	')'	reduce using rule 86 (Operator)
	'..'	reduce using rule 86 (Operator)
	';'	reduce using rule 86 (Operator)
	']'	reduce using rule 86 (Operator)
	'}'	reduce using rule 86 (Operator)
	OP21_LIST_COMMA	reduce using rule 86 (Operator)
	OP23_LOGICAL_AND	reduce using rule 86 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 86 (Operator)

State 349:

	OPTIONAL-41 -> PAREN-40 .	(Rule 148)

	$default	reduce using rule 148 (OPTIONAL-41)

State 350:

	PAREN-40 -> 'else' . CodeBlock	(Rule 147)

	LEFT_BRACE	shift, and go to state 293

	CodeBlock	go to state 369

State 351:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-39 OPTIONAL-41 .	(Rule 150)

	$default	reduce using rule 150 (Conditional)

State 352:

	STAR-39 -> STAR-39 PAREN-38 .	(Rule 145)

	$default	reduce using rule 145 (STAR-39)

State 353:

	PAREN-38 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 144)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134
	Literal	go to state 97
	SubExpression	go to state 370
	Operator	go to state 120
	WordScoped	go to state 87
	Expression	go to state 135
	ArrayReference	go to state 86
	HashDereferenced	go to state 115

State 354:

	PLUS-42 -> PLUS-42 Operation .	(Rule 157)

	$default	reduce using rule 157 (PLUS-42)

State 355:

	CodeBlock -> LEFT_BRACE PLUS-42 '}' .	(Rule 159)

	$default	reduce using rule 159 (CodeBlock)

State 356:

	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 85)

	$default	reduce using rule 85 (Operator)

State 357:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';' .	(Rule 167)

	$default	reduce using rule 167 (VariableDeclaration)

State 358:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 68)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 . ')' ';'	(Rule 70)

	')'	shift, and go to state 371
	OP21_LIST_COMMA	shift, and go to state 373

	PAREN-27	go to state 372

State 359:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	VARIABLE_SYMBOL	shift, and go to state 374

State 360:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 361:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' . ';'	(Rule 65)

	';'	shift, and go to state 375

State 362:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 62)

	'%{'	shift, and go to state 109
	WORD	shift, and go to state 308

	HashDereferenced	go to state 307
	HashEntryTyped	go to state 376

State 363:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 364:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 189)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_OPEN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	ArrayDereferenced	go to state 99
	HashReference	go to state 98
	Variable	go to state 134
	Literal	go to state 97
	WordScoped	go to state 87
	Expression	go to state 135
	SubExpression	go to state 377
	Operator	go to state 120
	ArrayReference	go to state 86
	HashDereferenced	go to state 115

State 365:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 53

	Type	go to state 378

State 366:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 379

State 367:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression . ')' CodeBlock	(Rule 154)

	')'	shift, and go to state 380
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 368:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' . CodeBlock	(Rule 155)

	LEFT_BRACE	shift, and go to state 293

	CodeBlock	go to state 381

State 369:

	PAREN-40 -> 'else' CodeBlock .	(Rule 147)

	$default	reduce using rule 147 (PAREN-40)

State 370:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	PAREN-38 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 144)

	')'	shift, and go to state 382
	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

State 371:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' . ';'	(Rule 70)

	';'	shift, and go to state 383

State 372:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 373:

	PAREN-27 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 67)

	'%{'	shift, and go to state 109
	WORD	shift, and go to state 308

	HashEntryTyped	go to state 384
	HashDereferenced	go to state 307

State 374:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'= sub {'	shift, and go to state 385

State 375:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 376:

	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 377:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 90)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 93)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 94)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 96)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 97)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 100)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 101)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 102)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 103)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 105)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 106)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 107)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 109)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 110)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 189)

	OP04_MATH_POW	shift, and go to state 192
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 202
	OP08_MATH_ADD_SUB	shift, and go to state 195
	OP08_STRING_CAT	shift, and go to state 204
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 197
	OP12_COMPARE_EQ_NEQ	shift, and go to state 199
	OP13_BITWISE_AND	shift, and go to state 198
	OP14_BITWISE_OR_XOR	shift, and go to state 191
	OP15_LOGICAL_AND	shift, and go to state 196
	OP16_LOGICAL_OR	shift, and go to state 201
	OP17_LIST_RANGE	shift, and go to state 194
	OP18_TERNARY	shift, and go to state 193
	OP23_LOGICAL_AND	shift, and go to state 203
	OP24_LOGICAL_OR_XOR	shift, and go to state 200

	')'	reduce using rule 189 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 189 (HashEntryTyped)

State 378:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 386

State 379:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 380:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' . CodeBlock	(Rule 154)

	LEFT_BRACE	shift, and go to state 293

	CodeBlock	go to state 387

State 381:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock .	(Rule 155)

	$default	reduce using rule 155 (LoopForEach)

State 382:

	PAREN-38 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 144)

	LEFT_BRACE	shift, and go to state 293

	CodeBlock	go to state 388

State 383:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';' .	(Rule 70)

	$default	reduce using rule 70 (PropertiesClass)

State 384:

	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 67)

	$default	reduce using rule 67 (PAREN-27)

State 385:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'( my'	shift, and go to state 391

	'%{'	reduce using rule 72 (OPTIONAL-29)
	'@{'	reduce using rule 72 (OPTIONAL-29)
	'for my integer'	reduce using rule 72 (OPTIONAL-29)
	'foreach my'	reduce using rule 72 (OPTIONAL-29)
	'if ('	reduce using rule 72 (OPTIONAL-29)
	'my'	reduce using rule 72 (OPTIONAL-29)
	'undef'	reduce using rule 72 (OPTIONAL-29)
	'while ('	reduce using rule 72 (OPTIONAL-29)
	LEFT_BRACE	reduce using rule 72 (OPTIONAL-29)
	LEFT_BRACKET	reduce using rule 72 (OPTIONAL-29)
	LEFT_PAREN	reduce using rule 72 (OPTIONAL-29)
	LITERAL_NUMBER	reduce using rule 72 (OPTIONAL-29)
	LITERAL_STRING	reduce using rule 72 (OPTIONAL-29)
	OP01_CLOSE	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT_VOID	reduce using rule 72 (OPTIONAL-29)
	OP03_MATH_INC_DEC	reduce using rule 72 (OPTIONAL-29)
	OP05_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	OP05_MATH_NEG	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL	reduce using rule 72 (OPTIONAL-29)
	OP22_LOGICAL_NOT	reduce using rule 72 (OPTIONAL-29)
	VARIABLE_SYMBOL	reduce using rule 72 (OPTIONAL-29)
	WORD	reduce using rule 72 (OPTIONAL-29)
	WORD_SCOPED	reduce using rule 72 (OPTIONAL-29)

	MethodArguments	go to state 389
	OPTIONAL-29	go to state 390

State 386:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 387:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock .	(Rule 154)

	$default	reduce using rule 154 (LoopFor)

State 388:

	PAREN-38 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 144)

	$default	reduce using rule 144 (PAREN-38)

State 389:

	OPTIONAL-29 -> MethodArguments .	(Rule 71)

	$default	reduce using rule 71 (OPTIONAL-29)

State 390:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 . PLUS-30 '}' ';'	(Rule 75)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'if ('	shift, and go to state 96
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 77
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 108
	OP01_OPEN	shift, and go to state 94
	OP01_PRINT_VOID	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 95
	WORD_SCOPED	shift, and go to state 25

	'for my integer'	reduce using rule 138 (OPTIONAL-37)
	'foreach my'	reduce using rule 138 (OPTIONAL-37)
	'while ('	reduce using rule 138 (OPTIONAL-37)

	HashReference	go to state 98
	Variable	go to state 80
	Statement	go to state 100
	ArrayDereferenced	go to state 99
	OperatorVoid	go to state 78
	Literal	go to state 97
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 105
	Conditional	go to state 83
	PLUS-30	go to state 393
	Operation	go to state 392
	LoopLabel	go to state 112
	PAREN-36	go to state 110
	OPTIONAL-37	go to state 93
	VariableDeclaration	go to state 121
	Operator	go to state 120
	SubExpression	go to state 119
	HashDereferenced	go to state 115
	VariableModification	go to state 92

State 391:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	TYPE_CLASS_OR_SELF	shift, and go to state 394

State 392:

	PLUS-30 -> Operation .	(Rule 74)

	$default	reduce using rule 74 (PLUS-30)

State 393:

	PLUS-30 -> PLUS-30 . Operation	(Rule 73)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 . '}' ';'	(Rule 75)

	'%{'	shift, and go to state 109
	'@{'	shift, and go to state 85
	'if ('	shift, and go to state 96
	'my'	shift, and go to state 118
	'undef'	shift, and go to state 77
	'}'	shift, and go to state 396
	LEFT_BRACE	shift, and go to state 82
	LEFT_BRACKET	shift, and go to state 104
	LEFT_PAREN	shift, and go to state 102
	LITERAL_NUMBER	shift, and go to state 79
	LITERAL_STRING	shift, and go to state 88
	OP01_CLOSE	shift, and go to state 113
	OP01_NAMED	shift, and go to state 89
	OP01_NAMED_VOID	shift, and go to state 108
	OP01_OPEN	shift, and go to state 94
	OP01_PRINT_VOID	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 103
	OP05_LOGICAL_NEG	shift, and go to state 117
	OP05_MATH_NEG	shift, and go to state 81
	OP10_NAMED_UNARY	shift, and go to state 91
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 107
	OP19_LOOP_CONTROL	shift, and go to state 106
	OP22_LOGICAL_NOT	shift, and go to state 101
	VARIABLE_SYMBOL	shift, and go to state 84
	WORD	shift, and go to state 95
	WORD_SCOPED	shift, and go to state 25

	'for my integer'	reduce using rule 138 (OPTIONAL-37)
	'foreach my'	reduce using rule 138 (OPTIONAL-37)
	'while ('	reduce using rule 138 (OPTIONAL-37)

	OperatorVoid	go to state 78
	Literal	go to state 97
	Variable	go to state 80
	HashReference	go to state 98
	ArrayDereferenced	go to state 99
	Statement	go to state 100
	Conditional	go to state 83
	ArrayReference	go to state 86
	WordScoped	go to state 87
	Expression	go to state 105
	PAREN-36	go to state 110
	Operation	go to state 395
	LoopLabel	go to state 112
	HashDereferenced	go to state 115
	VariableModification	go to state 92
	OPTIONAL-37	go to state 93
	Operator	go to state 120
	SubExpression	go to state 119
	VariableDeclaration	go to state 121

State 394:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	$default	reduce using rule 78 (STAR-32)

	STAR-32	go to state 397

State 395:

	PLUS-30 -> PLUS-30 Operation .	(Rule 73)

	$default	reduce using rule 73 (PLUS-30)

State 396:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' . ';'	(Rule 75)

	';'	shift, and go to state 398

State 397:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 77)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	')'	shift, and go to state 400
	OP21_LIST_COMMA	shift, and go to state 399

	PAREN-31	go to state 401

State 398:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';' .	(Rule 75)

	$default	reduce using rule 75 (Method)

State 399:

	PAREN-31 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 76)

	'my'	shift, and go to state 402

State 400:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	OP19_VARIABLE_ASSIGN	shift, and go to state 403

State 401:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 77)

	$default	reduce using rule 77 (STAR-32)

State 402:

	PAREN-31 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 76)

	WORD	shift, and go to state 53

	Type	go to state 404

State 403:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 79)

	'@_;'	shift, and go to state 405

State 404:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 76)

	VARIABLE_SYMBOL	shift, and go to state 406

State 405:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 79)

	$default	reduce using rule 79 (MethodArguments)

State 406:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 76)

	$default	reduce using rule 76 (PAREN-31)


Summary:
--------
Number of rules         : 210
Number of terminals     : 87
Number of non-terminals : 101
Number of states        : 407
