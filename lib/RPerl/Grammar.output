Conflicts:
----------
Conflict in state 159 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 159 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 159 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 159 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 159 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 159 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 159 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 159 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 159 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 159 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 159 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 159 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 159 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 159 between rule 100 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 159 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 159 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 169 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 169 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 169 between rule 92 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 169 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 169 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 169 between rule 92 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 169 between rule 92 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 169 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 169 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 169 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 169 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 169 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 169 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 169 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 169 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 169 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 172 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 172 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 172 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 172 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 172 between rule 109 and token OP18_TERNARY resolved as shift.
Conflict in state 172 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 172 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 172 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 172 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 172 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 172 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 172 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 172 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 172 between rule 109 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 172 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 172 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 173 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 173 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 173 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 173 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 173 between rule 99 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 173 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 173 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 173 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 173 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 173 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 173 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 173 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 173 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 173 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 173 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 173 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 247 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 91 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 247 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 247 between rule 91 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 247 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 247 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 247 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 247 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 247 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 247 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 247 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 247 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 248 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 248 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 248 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 248 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 248 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 248 between rule 97 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 248 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 248 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 248 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 248 between rule 97 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 248 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 248 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 248 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 248 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 249 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 249 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 249 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 249 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 249 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 249 between rule 107 and token OP17_LIST_RANGE resolved as error.
Conflict in state 249 between rule 107 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 249 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 249 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 249 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 249 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 249 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 249 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 249 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 249 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 249 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 250 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 250 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 250 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 250 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 250 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 250 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 250 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 250 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 250 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 250 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 250 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 250 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 250 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 250 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 250 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 250 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 251 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 251 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 251 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 251 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 251 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 251 between rule 102 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 251 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 251 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 251 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 251 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 251 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 251 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 251 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 254 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 254 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 254 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 254 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 254 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 254 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 254 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 254 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 254 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 254 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 254 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 254 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 254 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 254 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 254 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 254 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 255 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 255 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 255 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 255 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 255 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 255 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 255 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 255 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 255 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 255 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 255 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 255 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 255 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 255 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 256 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 256 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 256 between rule 98 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 256 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 256 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 256 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 256 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 256 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 256 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 256 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 256 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 256 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 256 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 256 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 257 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 257 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 257 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 257 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 257 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 257 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 257 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 257 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 257 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 257 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 257 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 257 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 257 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 257 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 257 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 258 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 258 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 258 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 258 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 258 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 258 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 258 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 258 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 258 between rule 95 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 258 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 258 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 258 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 258 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 259 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 259 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 259 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 259 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 259 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 259 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 259 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 259 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 259 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 259 between rule 96 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 259 between rule 96 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 259 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 259 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 259 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 259 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 111 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 260 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 260 between rule 111 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 260 between rule 111 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 260 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 260 between rule 111 and token OP18_TERNARY resolved as shift.
Conflict in state 260 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 260 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 260 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 260 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 260 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 260 between rule 111 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 260 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 260 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 260 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 261 between rule 101 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 261 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 261 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 261 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 261 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 261 between rule 101 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 261 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 261 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 261 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 261 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 261 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 261 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 261 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 261 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 261 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 262 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 262 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 262 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 262 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 262 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 262 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 262 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 262 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 262 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 262 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 262 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 262 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 262 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 262 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 262 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 354 between rule 87 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 354 between rule 87 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 354 between rule 87 and token OP18_TERNARY resolved as shift.
Conflict in state 354 between rule 87 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 354 between rule 87 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 354 between rule 87 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 354 between rule 87 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 354 between rule 87 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 354 between rule 87 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 354 between rule 87 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 354 between rule 87 and token OP08_STRING_CAT resolved as shift.
Conflict in state 354 between rule 87 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 354 between rule 87 and token OP04_MATH_POW resolved as shift.
Conflict in state 354 between rule 87 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 354 between rule 87 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 354 between rule 87 and token OP17_LIST_RANGE resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	OPTIONAL-23 -> PropertiesClass
58:	OPTIONAL-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';'
66:	Properties -> 'our %properties = (' ')' ';' Critic
67:	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped
68:	STAR-28 -> STAR-28 PAREN-27
69:	STAR-28 -> /* empty */
70:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';'
71:	OPTIONAL-29 -> MethodArguments
72:	OPTIONAL-29 -> /* empty */
73:	PLUS-30 -> PLUS-30 Operation
74:	PLUS-30 -> Operation
75:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'
76:	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
77:	STAR-32 -> STAR-32 PAREN-31
78:	STAR-32 -> /* empty */
79:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'
80:	MethodOrSubroutine -> Method
81:	MethodOrSubroutine -> Subroutine
82:	Operation -> Expression ';'
83:	Operation -> Statement
84:	OPTIONAL-33 -> ListElements
85:	OPTIONAL-33 -> /* empty */
86:	Operator -> OP01_NAMED LEFT_PAREN OPTIONAL-33 ')'
87:	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA SubExpression OP21_LIST_COMMA SubExpression
88:	Operator -> OP01_CLOSE FileHandleClose
89:	Operator -> OP03_MATH_INC_DEC Variable
90:	Operator -> Variable OP03_MATH_INC_DEC
91:	Operator -> SubExpression OP04_MATH_POW SubExpression
92:	Operator -> OP05_LOGICAL_NEG SubExpression
93:	Operator -> OP05_MATH_NEG SubExpression ')'
94:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
95:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
96:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
97:	Operator -> SubExpression OP08_STRING_CAT SubExpression
98:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
99:	Operator -> OP10_NAMED_UNARY SubExpression
100:	Operator -> OP10_NAMED_UNARY_STRINGIFY SubExpression
101:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
102:	Operator -> SubExpression OP12_COMPARE_EQ_NEQ SubExpression
103:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
104:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
105:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
106:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
107:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
108:	Operator -> SubExpression OP18_TERNARY Variable COLON Variable
109:	Operator -> OP22_LOGICAL_NOT SubExpression
110:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
111:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
112:	OPTIONAL-34 -> ListElements
113:	OPTIONAL-34 -> /* empty */
114:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-34 ';'
115:	OperatorVoid -> OP01_PRINT_VOID ListElements ';'
116:	OperatorVoid -> OP01_PRINT_VOID FileHandlePrint ListElements ';'
117:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
118:	OPTIONAL-35 -> ListElements
119:	OPTIONAL-35 -> /* empty */
120:	OPTIONAL-36 -> ListElements
121:	OPTIONAL-36 -> /* empty */
122:	Expression -> Operator
123:	Expression -> WordScoped LEFT_PAREN OPTIONAL-35 ')'
124:	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-36 ')'
125:	SubExpression -> Expression
126:	SubExpression -> 'undef'
127:	SubExpression -> Literal
128:	SubExpression -> Variable
129:	SubExpression -> ArrayReference
130:	SubExpression -> ArrayDereferenced
131:	SubExpression -> HashReference
132:	SubExpression -> HashDereferenced
133:	SubExpression -> LEFT_BRACE '}'
134:	SubExpression -> LEFT_PAREN SubExpression ')'
135:	SubExpressionOrPrompt -> SubExpression
136:	SubExpressionOrPrompt -> STDIN_PROMPT
137:	PAREN-37 -> LoopLabel COLON
138:	OPTIONAL-38 -> PAREN-37
139:	OPTIONAL-38 -> /* empty */
140:	Statement -> Conditional
141:	Statement -> OPTIONAL-38 Loop
142:	Statement -> OperatorVoid
143:	Statement -> VariableDeclaration
144:	Statement -> VariableModification
145:	PAREN-39 -> 'elsif (' SubExpression ')' CodeBlock
146:	STAR-40 -> STAR-40 PAREN-39
147:	STAR-40 -> /* empty */
148:	PAREN-41 -> 'else' CodeBlock
149:	OPTIONAL-42 -> PAREN-41
150:	OPTIONAL-42 -> /* empty */
151:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-40 OPTIONAL-42
152:	Loop -> LoopFor
153:	Loop -> LoopForEach
154:	Loop -> LoopWhile
155:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock
156:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock
157:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
158:	PLUS-43 -> PLUS-43 Operation
159:	PLUS-43 -> Operation
160:	CodeBlock -> LEFT_BRACE PLUS-43 '}'
161:	STAR-44 -> STAR-44 VariableRetrieval
162:	STAR-44 -> /* empty */
163:	Variable -> VARIABLE_SYMBOL STAR-44
164:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
165:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
166:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
167:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
168:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'
169:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'
170:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
171:	PAREN-45 -> OP21_LIST_COMMA ListElement
172:	STAR-46 -> STAR-46 PAREN-45
173:	STAR-46 -> /* empty */
174:	PLUS-47 -> PLUS-47 WORD
175:	PLUS-47 -> WORD
176:	ListElements -> ListElement STAR-46
177:	ListElements -> OP01_QW LEFT_PAREN PLUS-47 ')'
178:	ListElement -> SubExpression
179:	ListElement -> TypeInner SubExpression
180:	ListElement -> KEYS_OR_VALUES HashDereferenced
181:	OPTIONAL-48 -> ListElements
182:	OPTIONAL-48 -> /* empty */
183:	ArrayReference -> LEFT_BRACKET OPTIONAL-48 ']'
184:	ArrayDereferenced -> '@{' Variable '}'
185:	ArrayDereferenced -> '@{' ArrayReference '}'
186:	OPTIONAL-49 -> TypeInner
187:	OPTIONAL-49 -> /* empty */
188:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-49 SubExpression
189:	HashEntry -> HashDereferenced
190:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
191:	HashEntryTyped -> HashDereferenced
192:	PAREN-50 -> OP21_LIST_COMMA HashEntry
193:	STAR-51 -> STAR-51 PAREN-50
194:	STAR-51 -> /* empty */
195:	HashReference -> LEFT_BRACE HashEntry STAR-51 '}'
196:	HashDereferenced -> '%{' Variable '}'
197:	HashDereferenced -> '%{' HashReference '}'
198:	WordScoped -> WORD
199:	WordScoped -> WORD_SCOPED
200:	LoopLabel -> WORD
201:	Type -> WORD
202:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
203:	FileHandleOpen -> STDIN_STDOUT_STDERR
204:	FileHandleOpen -> 'my' 'filehandle_ref' FILEHANDLE_REF_SYMBOL
205:	FileHandleClose -> STDIN_STDOUT_STDERR
206:	FileHandleClose -> FILEHANDLE_REF_SYMBOL
207:	FileHandlePrint -> STDIN_STDOUT_STDERR
208:	FileHandlePrint -> LEFT_BRACE FILEHANDLE_REF_SYMBOL '}'
209:	Literal -> LITERAL_STRING
210:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 4
	SHEBANG	shift, and go to state 8

	'package'	reduce using rule 20 (OPTIONAL-9)

	CompileUnit	go to state 1
	Program	go to state 5
	PAREN-1	go to state 9
	ModuleHeader	go to state 3
	PLUS-2	go to state 7
	OPTIONAL-9	go to state 2
	Critic	go to state 6

State 1:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 10

State 2:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 11

State 3:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 16

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Module	go to state 15
	STAR-10	go to state 14
	Class	go to state 12
	Package	go to state 13

State 4:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 18

	PLUS-14	go to state 17

State 5:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 6:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 7:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 4

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	ModuleHeader	go to state 3
	PAREN-1	go to state 19
	OPTIONAL-9	go to state 2
	Critic	go to state 6

State 8:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 20
	OPTIONAL-3	go to state 21

State 9:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 10:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 11:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 22

State 12:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 13:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 14:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 4

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 26
	STAR-11	go to state 25

State 15:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 16:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 27

State 17:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 28
	WORD	shift, and go to state 29

State 18:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 19:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 20:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 21:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 30

	Header	go to state 31

State 22:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 32

State 23:

	WordScoped -> WORD_SCOPED .	(Rule 199)

	$default	reduce using rule 199 (WordScoped)

State 24:

	WordScoped -> WORD .	(Rule 198)

	$default	reduce using rule 198 (WordScoped)

State 25:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 35

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 34
	STAR-12	go to state 33

State 26:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 27:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 36

State 28:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 29:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 30:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 37

State 31:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 38

State 32:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 30

	Header	go to state 39

State 33:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 42
	'use constant'	shift, and go to state 40

	PLUS-13	go to state 43
	Constant	go to state 44
	Subroutine	go to state 41

State 34:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 35:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 45

State 36:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 46

State 37:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 47

State 38:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LEFT_BRACE	reduce using rule 11 (STAR-5)
	LEFT_BRACKET	reduce using rule 11 (STAR-5)
	LEFT_PAREN	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	STAR-5	go to state 48
	Critic	go to state 49

State 39:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 40:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 50

State 41:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 42:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 52

	Type	go to state 51

State 43:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 42
	LITERAL_NUMBER	shift, and go to state 53

	Subroutine	go to state 54

State 44:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 45:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 56
	'qw('	shift, and go to state 55

State 46:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 35

	Include	go to state 57

State 47:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 58

State 48:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 35

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LEFT_BRACE	reduce using rule 13 (STAR-6)
	LEFT_BRACKET	reduce using rule 13 (STAR-6)
	LEFT_PAREN	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	STAR-6	go to state 60
	Include	go to state 59

State 49:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 50:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 61

State 51:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 62

State 52:

	Type -> WORD .	(Rule 201)

	$default	reduce using rule 201 (Type)

State 53:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 63

State 54:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 55:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 64

	PLUS-15	go to state 65

State 56:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 57:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 66

State 58:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 67

State 59:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 60:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 40

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LEFT_BRACE	reduce using rule 15 (STAR-7)
	LEFT_BRACKET	reduce using rule 15 (STAR-7)
	LEFT_PAREN	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 69
	STAR-7	go to state 68

State 61:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 71

	TypeInner	go to state 70

State 62:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 72

State 63:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 64:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 65:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 74
	WORD	shift, and go to state 73

State 66:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 4

	'our %properties = ('	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 75
	STAR-21	go to state 76

State 67:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 113
	'our'	shift, and go to state 42
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 117
	OP01_OPEN	shift, and go to state 115
	OP01_PRINT_VOID	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 79
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 111
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 139 (OPTIONAL-38)
	'foreach my'	reduce using rule 139 (OPTIONAL-38)
	'while ('	reduce using rule 139 (OPTIONAL-38)

	Variable	go to state 92
	Operator	go to state 116
	HashReference	go to state 93
	VariableModification	go to state 120
	SubExpression	go to state 119
	Subroutine	go to state 107
	LoopLabel	go to state 106
	Operation	go to state 90
	WordScoped	go to state 86
	ArrayReference	go to state 103
	OperatorVoid	go to state 77
	HashDereferenced	go to state 96
	VariableDeclaration	go to state 95
	Expression	go to state 94
	ArrayDereferenced	go to state 98
	Statement	go to state 97
	OPTIONAL-38	go to state 82
	Literal	go to state 99
	PAREN-37	go to state 81
	PLUS-8	go to state 101
	Conditional	go to state 84

State 69:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 70:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102

	Literal	go to state 122

State 71:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 202)

	WORD	shift, and go to state 52

	Type	go to state 123

State 72:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 126

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LEFT_BRACE	reduce using rule 43 (OPTIONAL-16)
	LEFT_BRACKET	reduce using rule 43 (OPTIONAL-16)
	LEFT_PAREN	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 124
	OPTIONAL-16	go to state 125

State 73:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 74:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 127

State 75:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 76:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 35

	'our %properties = ('	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	STAR-22	go to state 128
	Include	go to state 129

State 77:

	Statement -> OperatorVoid .	(Rule 142)

	$default	reduce using rule 142 (Statement)

State 78:

	SubExpression -> LEFT_BRACE . '}'	(Rule 133)
	HashReference -> LEFT_BRACE . HashEntry STAR-51 '}'	(Rule 195)

	'%{'	shift, and go to state 121
	'}'	shift, and go to state 130
	WORD	shift, and go to state 133

	HashEntry	go to state 131
	HashDereferenced	go to state 132

State 79:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 117)

	WORD	shift, and go to state 135

	LoopLabel	go to state 134

State 80:

	SubExpression -> 'undef' .	(Rule 126)

	$default	reduce using rule 126 (SubExpression)

State 81:

	OPTIONAL-38 -> PAREN-37 .	(Rule 138)

	$default	reduce using rule 138 (OPTIONAL-38)

State 82:

	Statement -> OPTIONAL-38 . Loop	(Rule 141)

	'for my integer'	shift, and go to state 137
	'foreach my'	shift, and go to state 142
	'while ('	shift, and go to state 138

	Loop	go to state 139
	LoopWhile	go to state 136
	LoopFor	go to state 141
	LoopForEach	go to state 140

State 83:

	OperatorVoid -> OP01_PRINT_VOID . ListElements ';'	(Rule 115)
	OperatorVoid -> OP01_PRINT_VOID . FileHandlePrint ListElements ';'	(Rule 116)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 80
	KEYS_OR_VALUES	shift, and go to state 150
	LEFT_BRACE	shift, and go to state 145
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP01_QW	shift, and go to state 144
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	STDIN_STDOUT_STDERR	shift, and go to state 146
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ListElements	go to state 152
	FileHandlePrint	go to state 149
	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 153
	ArrayReference	go to state 103
	Operator	go to state 116
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	ListElement	go to state 147
	HashDereferenced	go to state 96
	Literal	go to state 99
	TypeInner	go to state 143

State 84:

	Statement -> Conditional .	(Rule 140)

	$default	reduce using rule 140 (Statement)

State 85:

	Operator -> OP01_NAMED . LEFT_PAREN OPTIONAL-33 ')'	(Rule 86)

	LEFT_PAREN	shift, and go to state 154

State 86:

	Expression -> WordScoped . LEFT_PAREN OPTIONAL-35 ')'	(Rule 123)

	LEFT_PAREN	shift, and go to state 155

State 87:

	ArrayReference -> LEFT_BRACKET . OPTIONAL-48 ']'	(Rule 183)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 80
	KEYS_OR_VALUES	shift, and go to state 150
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP01_QW	shift, and go to state 144
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	']'	reduce using rule 182 (OPTIONAL-48)

	ListElements	go to state 156
	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 153
	ArrayReference	go to state 103
	Operator	go to state 116
	OPTIONAL-48	go to state 157
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	ListElement	go to state 147
	TypeInner	go to state 143
	Literal	go to state 99

State 88:

	Literal -> LITERAL_NUMBER .	(Rule 210)

	$default	reduce using rule 210 (Literal)

State 89:

	SubExpression -> LEFT_PAREN . SubExpression ')'	(Rule 134)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Operator	go to state 116
	ArrayReference	go to state 103
	HashReference	go to state 93
	SubExpression	go to state 158
	Variable	go to state 148
	WordScoped	go to state 86
	Literal	go to state 99
	Expression	go to state 151
	HashDereferenced	go to state 96
	ArrayDereferenced	go to state 98

State 90:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 91:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . SubExpression	(Rule 100)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 151
	HashDereferenced	go to state 96
	ArrayDereferenced	go to state 98
	Literal	go to state 99
	Variable	go to state 148
	WordScoped	go to state 86
	Operator	go to state 116
	ArrayReference	go to state 103
	SubExpression	go to state 159
	HashReference	go to state 93

State 92:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-36 ')'	(Rule 124)
	SubExpression -> Variable .	(Rule 128)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'	(Rule 169)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 170)

	OP02_METHOD_THINARROW	shift, and go to state 160
	OP03_MATH_INC_DEC	shift, and go to state 163
	OP19_VARIABLE_ASSIGN	shift, and go to state 161
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 162

	OP04_MATH_POW	reduce using rule 128 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 128 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 128 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 128 (SubExpression)
	OP08_STRING_CAT	reduce using rule 128 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 128 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 128 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 128 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 128 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 128 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 128 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 128 (SubExpression)
	OP18_TERNARY	reduce using rule 128 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 128 (SubExpression)

State 93:

	SubExpression -> HashReference .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 94:

	Operation -> Expression . ';'	(Rule 82)
	SubExpression -> Expression .	(Rule 125)

	';'	shift, and go to state 164

	OP04_MATH_POW	reduce using rule 125 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 125 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 125 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 125 (SubExpression)
	OP08_STRING_CAT	reduce using rule 125 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 125 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 125 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 125 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 125 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 125 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 125 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 125 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 125 (SubExpression)
	OP18_TERNARY	reduce using rule 125 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 125 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (SubExpression)

State 95:

	Statement -> VariableDeclaration .	(Rule 143)

	$default	reduce using rule 143 (Statement)

State 96:

	SubExpression -> HashDereferenced .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 97:

	Operation -> Statement .	(Rule 83)

	$default	reduce using rule 83 (Operation)

State 98:

	SubExpression -> ArrayDereferenced .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 99:

	SubExpression -> Literal .	(Rule 127)

	$default	reduce using rule 127 (SubExpression)

State 100:

	Operator -> OP01_CLOSE . FileHandleClose	(Rule 88)

	FILEHANDLE_REF_SYMBOL	shift, and go to state 167
	STDIN_STDOUT_STDERR	shift, and go to state 165

	FileHandleClose	go to state 166

State 101:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 113
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 117
	OP01_OPEN	shift, and go to state 115
	OP01_PRINT_VOID	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 79
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 111
	WORD_SCOPED	shift, and go to state 23

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 139 (OPTIONAL-38)
	'foreach my'	reduce using rule 139 (OPTIONAL-38)
	'while ('	reduce using rule 139 (OPTIONAL-38)

	Expression	go to state 94
	OperatorVoid	go to state 77
	HashDereferenced	go to state 96
	VariableDeclaration	go to state 95
	ArrayDereferenced	go to state 98
	Statement	go to state 97
	Literal	go to state 99
	PAREN-37	go to state 81
	OPTIONAL-38	go to state 82
	Conditional	go to state 84
	WordScoped	go to state 86
	ArrayReference	go to state 103
	LoopLabel	go to state 106
	Operation	go to state 168
	Variable	go to state 92
	Operator	go to state 116
	SubExpression	go to state 119
	HashReference	go to state 93
	VariableModification	go to state 120

State 102:

	Literal -> LITERAL_STRING .	(Rule 209)

	$default	reduce using rule 209 (Literal)

State 103:

	SubExpression -> ArrayReference .	(Rule 129)

	$default	reduce using rule 129 (SubExpression)

State 104:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 92)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 148
	WordScoped	go to state 86
	ArrayReference	go to state 103
	Operator	go to state 116
	HashReference	go to state 93
	SubExpression	go to state 169
	HashDereferenced	go to state 96
	Expression	go to state 151
	ArrayDereferenced	go to state 98
	Literal	go to state 99

State 105:

	Variable -> VARIABLE_SYMBOL . STAR-44	(Rule 163)

	$default	reduce using rule 162 (STAR-44)

	STAR-44	go to state 170

State 106:

	PAREN-37 -> LoopLabel . COLON	(Rule 137)

	COLON	shift, and go to state 171

State 107:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 108:

	Operator -> OP22_LOGICAL_NOT . SubExpression	(Rule 109)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 148
	WordScoped	go to state 86
	ArrayReference	go to state 103
	Operator	go to state 116
	HashReference	go to state 93
	SubExpression	go to state 172
	HashDereferenced	go to state 96
	Expression	go to state 151
	ArrayDereferenced	go to state 98
	Literal	go to state 99

State 109:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 99)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 173
	ArrayReference	go to state 103
	Operator	go to state 116
	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 96
	Expression	go to state 151
	Literal	go to state 99

State 110:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 89)

	VARIABLE_SYMBOL	shift, and go to state 105

	Variable	go to state 174

State 111:

	WordScoped -> WORD .	(Rule 198)
	LoopLabel -> WORD .	(Rule 200)

	COLON	reduce using rule 200 (LoopLabel)
	LEFT_PAREN	reduce using rule 198 (WordScoped)

State 112:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 184)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 185)

	LEFT_BRACKET	shift, and go to state 87
	VARIABLE_SYMBOL	shift, and go to state 105

	ArrayReference	go to state 176
	Variable	go to state 175

State 113:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 167)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'	(Rule 168)

	WORD	shift, and go to state 52

	Type	go to state 177

State 114:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 151)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 178
	Operator	go to state 116
	ArrayReference	go to state 103
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	Literal	go to state 99

State 115:

	Operator -> OP01_OPEN . FileHandleOpen OP21_LIST_COMMA SubExpression OP21_LIST_COMMA SubExpression	(Rule 87)

	'my'	shift, and go to state 181
	STDIN_STDOUT_STDERR	shift, and go to state 179

	FileHandleOpen	go to state 180

State 116:

	Expression -> Operator .	(Rule 122)

	$default	reduce using rule 122 (Expression)

State 117:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-34 ';'	(Rule 114)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 80
	KEYS_OR_VALUES	shift, and go to state 150
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP01_QW	shift, and go to state 144
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	';'	reduce using rule 113 (OPTIONAL-34)

	WordScoped	go to state 86
	ListElements	go to state 182
	Variable	go to state 148
	OPTIONAL-34	go to state 183
	SubExpression	go to state 153
	HashReference	go to state 93
	Operator	go to state 116
	ArrayReference	go to state 103
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	ListElement	go to state 147
	HashDereferenced	go to state 96
	TypeInner	go to state 143
	Literal	go to state 99

State 118:

	Operator -> OP05_MATH_NEG . SubExpression ')'	(Rule 93)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 148
	WordScoped	go to state 86
	ArrayReference	go to state 103
	Operator	go to state 116
	HashReference	go to state 93
	SubExpression	go to state 184
	HashDereferenced	go to state 96
	Expression	go to state 151
	ArrayDereferenced	go to state 98
	Literal	go to state 99

State 119:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 120:

	Statement -> VariableModification .	(Rule 144)

	$default	reduce using rule 144 (Statement)

State 121:

	HashDereferenced -> '%{' . Variable '}'	(Rule 196)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 197)

	LEFT_BRACE	shift, and go to state 201
	VARIABLE_SYMBOL	shift, and go to state 105

	HashReference	go to state 202
	Variable	go to state 203

State 122:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 204

State 123:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 202)

	'$TYPED_'	shift, and go to state 205

State 124:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 125:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 113
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 117
	OP01_OPEN	shift, and go to state 115
	OP01_PRINT_VOID	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 79
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 111
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 139 (OPTIONAL-38)
	'foreach my'	reduce using rule 139 (OPTIONAL-38)
	'while ('	reduce using rule 139 (OPTIONAL-38)

	ArrayReference	go to state 103
	WordScoped	go to state 86
	Conditional	go to state 84
	Literal	go to state 99
	PAREN-37	go to state 81
	OPTIONAL-38	go to state 82
	PLUS-17	go to state 206
	Statement	go to state 97
	ArrayDereferenced	go to state 98
	Expression	go to state 94
	HashDereferenced	go to state 96
	OperatorVoid	go to state 77
	VariableDeclaration	go to state 95
	VariableModification	go to state 120
	SubExpression	go to state 119
	HashReference	go to state 93
	Operator	go to state 116
	Variable	go to state 92
	LoopLabel	go to state 106
	Operation	go to state 207

State 126:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 52

	Type	go to state 208

State 127:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 128:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties = ('	shift, and go to state 211
	'use constant'	shift, and go to state 40

	Constant	go to state 209
	Properties	go to state 210

State 129:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 130:

	SubExpression -> LEFT_BRACE '}' .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 131:

	HashReference -> LEFT_BRACE HashEntry . STAR-51 '}'	(Rule 195)

	$default	reduce using rule 194 (STAR-51)

	STAR-51	go to state 212

State 132:

	HashEntry -> HashDereferenced .	(Rule 189)

	$default	reduce using rule 189 (HashEntry)

State 133:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-49 SubExpression	(Rule 188)

	OP20_HASH_FATARROW	shift, and go to state 213

State 134:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 117)

	';'	shift, and go to state 214

State 135:

	LoopLabel -> WORD .	(Rule 200)

	$default	reduce using rule 200 (LoopLabel)

State 136:

	Loop -> LoopWhile .	(Rule 154)

	$default	reduce using rule 154 (Loop)

State 137:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock	(Rule 155)

	VARIABLE_SYMBOL	shift, and go to state 215

State 138:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 157)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 148
	WordScoped	go to state 86
	Operator	go to state 116
	ArrayReference	go to state 103
	HashReference	go to state 93
	SubExpression	go to state 216
	HashDereferenced	go to state 96
	Expression	go to state 151
	ArrayDereferenced	go to state 98
	Literal	go to state 99

State 139:

	Statement -> OPTIONAL-38 Loop .	(Rule 141)

	$default	reduce using rule 141 (Statement)

State 140:

	Loop -> LoopForEach .	(Rule 153)

	$default	reduce using rule 153 (Loop)

State 141:

	Loop -> LoopFor .	(Rule 152)

	$default	reduce using rule 152 (Loop)

State 142:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock	(Rule 156)

	WORD	shift, and go to state 52

	Type	go to state 217

State 143:

	ListElement -> TypeInner . SubExpression	(Rule 179)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Operator	go to state 116
	ArrayReference	go to state 103
	SubExpression	go to state 218
	HashReference	go to state 93
	Variable	go to state 148
	WordScoped	go to state 86
	Literal	go to state 99
	HashDereferenced	go to state 96
	Expression	go to state 151
	ArrayDereferenced	go to state 98

State 144:

	ListElements -> OP01_QW . LEFT_PAREN PLUS-47 ')'	(Rule 177)

	LEFT_PAREN	shift, and go to state 219

State 145:

	SubExpression -> LEFT_BRACE . '}'	(Rule 133)
	HashReference -> LEFT_BRACE . HashEntry STAR-51 '}'	(Rule 195)
	FileHandlePrint -> LEFT_BRACE . FILEHANDLE_REF_SYMBOL '}'	(Rule 208)

	'%{'	shift, and go to state 121
	'}'	shift, and go to state 130
	FILEHANDLE_REF_SYMBOL	shift, and go to state 220
	WORD	shift, and go to state 133

	HashDereferenced	go to state 132
	HashEntry	go to state 131

State 146:

	FileHandlePrint -> STDIN_STDOUT_STDERR .	(Rule 207)

	$default	reduce using rule 207 (FileHandlePrint)

State 147:

	ListElements -> ListElement . STAR-46	(Rule 176)

	$default	reduce using rule 173 (STAR-46)

	STAR-46	go to state 221

State 148:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-36 ')'	(Rule 124)
	SubExpression -> Variable .	(Rule 128)

	OP02_METHOD_THINARROW	shift, and go to state 160
	OP03_MATH_INC_DEC	shift, and go to state 163

	')'	reduce using rule 128 (SubExpression)
	'..'	reduce using rule 128 (SubExpression)
	';'	reduce using rule 128 (SubExpression)
	']'	reduce using rule 128 (SubExpression)
	'}'	reduce using rule 128 (SubExpression)
	OP04_MATH_POW	reduce using rule 128 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 128 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 128 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 128 (SubExpression)
	OP08_STRING_CAT	reduce using rule 128 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 128 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 128 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 128 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 128 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 128 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 128 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 128 (SubExpression)
	OP18_TERNARY	reduce using rule 128 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 128 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 128 (SubExpression)

State 149:

	OperatorVoid -> OP01_PRINT_VOID FileHandlePrint . ListElements ';'	(Rule 116)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 80
	KEYS_OR_VALUES	shift, and go to state 150
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP01_QW	shift, and go to state 144
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ListElements	go to state 222
	WordScoped	go to state 86
	Variable	go to state 148
	SubExpression	go to state 153
	HashReference	go to state 93
	Operator	go to state 116
	ArrayReference	go to state 103
	ArrayDereferenced	go to state 98
	ListElement	go to state 147
	HashDereferenced	go to state 96
	Expression	go to state 151
	TypeInner	go to state 143
	Literal	go to state 99

State 150:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 180)

	'%{'	shift, and go to state 121

	HashDereferenced	go to state 223

State 151:

	SubExpression -> Expression .	(Rule 125)

	$default	reduce using rule 125 (SubExpression)

State 152:

	OperatorVoid -> OP01_PRINT_VOID ListElements . ';'	(Rule 115)

	';'	shift, and go to state 224

State 153:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> SubExpression .	(Rule 178)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

	')'	reduce using rule 178 (ListElement)
	';'	reduce using rule 178 (ListElement)
	']'	reduce using rule 178 (ListElement)
	OP21_LIST_COMMA	reduce using rule 178 (ListElement)

State 154:

	Operator -> OP01_NAMED LEFT_PAREN . OPTIONAL-33 ')'	(Rule 86)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 80
	KEYS_OR_VALUES	shift, and go to state 150
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP01_QW	shift, and go to state 144
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 85 (OPTIONAL-33)

	HashDereferenced	go to state 96
	ListElement	go to state 147
	Expression	go to state 151
	ArrayDereferenced	go to state 98
	Literal	go to state 99
	TypeInner	go to state 143
	Variable	go to state 148
	OPTIONAL-33	go to state 225
	WordScoped	go to state 86
	ListElements	go to state 226
	Operator	go to state 116
	ArrayReference	go to state 103
	HashReference	go to state 93
	SubExpression	go to state 153

State 155:

	Expression -> WordScoped LEFT_PAREN . OPTIONAL-35 ')'	(Rule 123)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 80
	KEYS_OR_VALUES	shift, and go to state 150
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP01_QW	shift, and go to state 144
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 119 (OPTIONAL-35)

	OPTIONAL-35	go to state 228
	TypeInner	go to state 143
	Literal	go to state 99
	Expression	go to state 151
	HashDereferenced	go to state 96
	ListElement	go to state 147
	ArrayDereferenced	go to state 98
	Operator	go to state 116
	ArrayReference	go to state 103
	HashReference	go to state 93
	SubExpression	go to state 153
	Variable	go to state 148
	WordScoped	go to state 86
	ListElements	go to state 227

State 156:

	OPTIONAL-48 -> ListElements .	(Rule 181)

	$default	reduce using rule 181 (OPTIONAL-48)

State 157:

	ArrayReference -> LEFT_BRACKET OPTIONAL-48 . ']'	(Rule 183)

	']'	shift, and go to state 229

State 158:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	SubExpression -> LEFT_PAREN SubExpression . ')'	(Rule 134)

	')'	shift, and go to state 230
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 159:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY_STRINGIFY SubExpression .	(Rule 100)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194

	')'	reduce using rule 100 (Operator)
	'..'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 160:

	Expression -> Variable OP02_METHOD_THINARROW . WORD LEFT_PAREN OPTIONAL-36 ')'	(Rule 124)

	WORD	shift, and go to state 231

State 161:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrPrompt ';'	(Rule 169)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	STDIN_PROMPT	shift, and go to state 234
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashReference	go to state 93
	SubExpression	go to state 232
	Operator	go to state 116
	ArrayReference	go to state 103
	WordScoped	go to state 86
	Variable	go to state 148
	SubExpressionOrPrompt	go to state 233
	Literal	go to state 99
	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 96
	Expression	go to state 151

State 162:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 170)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashReference	go to state 93
	SubExpression	go to state 235
	Operator	go to state 116
	ArrayReference	go to state 103
	WordScoped	go to state 86
	Variable	go to state 148
	Literal	go to state 99
	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 96
	Expression	go to state 151

State 163:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 164:

	Operation -> Expression ';' .	(Rule 82)

	$default	reduce using rule 82 (Operation)

State 165:

	FileHandleClose -> STDIN_STDOUT_STDERR .	(Rule 205)

	$default	reduce using rule 205 (FileHandleClose)

State 166:

	Operator -> OP01_CLOSE FileHandleClose .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 167:

	FileHandleClose -> FILEHANDLE_REF_SYMBOL .	(Rule 206)

	$default	reduce using rule 206 (FileHandleClose)

State 168:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 169:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 92)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185

	')'	reduce using rule 92 (Operator)
	'..'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP06_REGEX_MATCH	reduce using rule 92 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 170:

	STAR-44 -> STAR-44 . VariableRetrieval	(Rule 161)
	Variable -> VARIABLE_SYMBOL STAR-44 .	(Rule 163)

	OP02_ARRAY_THINARROW	shift, and go to state 236
	OP02_HASH_THINARROW	shift, and go to state 237

	')'	reduce using rule 163 (Variable)
	'..'	reduce using rule 163 (Variable)
	';'	reduce using rule 163 (Variable)
	']'	reduce using rule 163 (Variable)
	'}'	reduce using rule 163 (Variable)
	COLON	reduce using rule 163 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 163 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 163 (Variable)
	OP04_MATH_POW	reduce using rule 163 (Variable)
	OP06_REGEX_MATCH	reduce using rule 163 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 163 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 163 (Variable)
	OP08_STRING_CAT	reduce using rule 163 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 163 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 163 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 163 (Variable)
	OP13_BITWISE_AND	reduce using rule 163 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 163 (Variable)
	OP15_LOGICAL_AND	reduce using rule 163 (Variable)
	OP16_LOGICAL_OR	reduce using rule 163 (Variable)
	OP17_LIST_RANGE	reduce using rule 163 (Variable)
	OP18_TERNARY	reduce using rule 163 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 163 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 163 (Variable)
	OP21_LIST_COMMA	reduce using rule 163 (Variable)
	OP23_LOGICAL_AND	reduce using rule 163 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 163 (Variable)

	VariableRetrieval	go to state 238

State 171:

	PAREN-37 -> LoopLabel COLON .	(Rule 137)

	$default	reduce using rule 137 (PAREN-37)

State 172:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> OP22_LOGICAL_NOT SubExpression .	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 173:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194

	')'	reduce using rule 99 (Operator)
	'..'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 174:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 89)

	$default	reduce using rule 89 (Operator)

State 175:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 184)

	'}'	shift, and go to state 239

State 176:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 185)

	'}'	shift, and go to state 240

State 177:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 167)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'	(Rule 168)

	VARIABLE_SYMBOL	shift, and go to state 241

State 178:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-40 OPTIONAL-42	(Rule 151)

	')'	shift, and go to state 242
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 179:

	FileHandleOpen -> STDIN_STDOUT_STDERR .	(Rule 203)

	$default	reduce using rule 203 (FileHandleOpen)

State 180:

	Operator -> OP01_OPEN FileHandleOpen . OP21_LIST_COMMA SubExpression OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 243

State 181:

	FileHandleOpen -> 'my' . 'filehandle_ref' FILEHANDLE_REF_SYMBOL	(Rule 204)

	'filehandle_ref'	shift, and go to state 244

State 182:

	OPTIONAL-34 -> ListElements .	(Rule 112)

	$default	reduce using rule 112 (OPTIONAL-34)

State 183:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-34 . ';'	(Rule 114)

	';'	shift, and go to state 245

State 184:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_MATH_NEG SubExpression . ')'	(Rule 93)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	')'	shift, and go to state 246
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 185:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 91)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 86
	Variable	go to state 148
	SubExpression	go to state 247
	HashReference	go to state 93
	Operator	go to state 116
	ArrayReference	go to state 103
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	Literal	go to state 99

State 186:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 248
	ArrayReference	go to state 103
	Operator	go to state 116
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	Literal	go to state 99

State 187:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 107)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashReference	go to state 93
	SubExpression	go to state 249
	Operator	go to state 116
	ArrayReference	go to state 103
	WordScoped	go to state 86
	Variable	go to state 148
	Literal	go to state 99
	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 96
	Expression	go to state 151

State 188:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 99
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	HashReference	go to state 93
	SubExpression	go to state 250
	ArrayReference	go to state 103
	Operator	go to state 116
	WordScoped	go to state 86
	Variable	go to state 148

State 189:

	Operator -> SubExpression OP12_COMPARE_EQ_NEQ . SubExpression	(Rule 102)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Operator	go to state 116
	ArrayReference	go to state 103
	SubExpression	go to state 251
	HashReference	go to state 93
	Variable	go to state 148
	WordScoped	go to state 86
	Literal	go to state 99
	HashDereferenced	go to state 96
	Expression	go to state 151
	ArrayDereferenced	go to state 98

State 190:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 94)

	OP06_REGEX_PATTERN	shift, and go to state 252

State 191:

	Operator -> SubExpression OP18_TERNARY . Variable COLON Variable	(Rule 108)

	VARIABLE_SYMBOL	shift, and go to state 105

	Variable	go to state 253

State 192:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 104)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 254
	Operator	go to state 116
	ArrayReference	go to state 103
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	Literal	go to state 99

State 193:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 103)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Operator	go to state 116
	ArrayReference	go to state 103
	HashReference	go to state 93
	SubExpression	go to state 255
	Variable	go to state 148
	WordScoped	go to state 86
	Literal	go to state 99
	Expression	go to state 151
	HashDereferenced	go to state 96
	ArrayDereferenced	go to state 98

State 194:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 98)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 103
	Operator	go to state 116
	SubExpression	go to state 256
	HashReference	go to state 93
	Variable	go to state 148
	WordScoped	go to state 86
	Literal	go to state 99
	Expression	go to state 151
	HashDereferenced	go to state 96
	ArrayDereferenced	go to state 98

State 195:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 257
	Operator	go to state 116
	ArrayReference	go to state 103
	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 96
	Expression	go to state 151
	Literal	go to state 99

State 196:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 95)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 258
	HashReference	go to state 93
	ArrayReference	go to state 103
	Operator	go to state 116
	WordScoped	go to state 86
	Variable	go to state 148
	Literal	go to state 99
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96

State 197:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 96)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 86
	Variable	go to state 148
	SubExpression	go to state 259
	HashReference	go to state 93
	ArrayReference	go to state 103
	Operator	go to state 116
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	Literal	go to state 99

State 198:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 111)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 86
	Variable	go to state 148
	SubExpression	go to state 260
	HashReference	go to state 93
	Operator	go to state 116
	ArrayReference	go to state 103
	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 96
	Expression	go to state 151
	Literal	go to state 99

State 199:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 101)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	Literal	go to state 99
	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 261
	ArrayReference	go to state 103
	Operator	go to state 116

State 200:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 110)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 103
	Operator	go to state 116
	HashReference	go to state 93
	SubExpression	go to state 262
	Variable	go to state 148
	WordScoped	go to state 86
	Literal	go to state 99
	Expression	go to state 151
	HashDereferenced	go to state 96
	ArrayDereferenced	go to state 98

State 201:

	HashReference -> LEFT_BRACE . HashEntry STAR-51 '}'	(Rule 195)

	'%{'	shift, and go to state 121
	WORD	shift, and go to state 133

	HashEntry	go to state 131
	HashDereferenced	go to state 132

State 202:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 197)

	'}'	shift, and go to state 263

State 203:

	HashDereferenced -> '%{' Variable . '}'	(Rule 196)

	'}'	shift, and go to state 264

State 204:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 205:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 202)

	WORD	shift, and go to state 265

State 206:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 113
	'undef'	shift, and go to state 80
	'}'	shift, and go to state 266
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 117
	OP01_OPEN	shift, and go to state 115
	OP01_PRINT_VOID	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 79
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 111
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 139 (OPTIONAL-38)
	'foreach my'	reduce using rule 139 (OPTIONAL-38)
	'while ('	reduce using rule 139 (OPTIONAL-38)

	Operation	go to state 267
	LoopLabel	go to state 106
	VariableModification	go to state 120
	SubExpression	go to state 119
	HashReference	go to state 93
	Operator	go to state 116
	Variable	go to state 92
	Conditional	go to state 84
	OPTIONAL-38	go to state 82
	PAREN-37	go to state 81
	Literal	go to state 99
	ArrayDereferenced	go to state 98
	Statement	go to state 97
	OperatorVoid	go to state 77
	VariableDeclaration	go to state 95
	HashDereferenced	go to state 96
	Expression	go to state 94
	ArrayReference	go to state 103
	WordScoped	go to state 86

State 207:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 208:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 268

State 209:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 210:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties_class = ('	shift, and go to state 269

	'our'	reduce using rule 58 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 58 (OPTIONAL-23)

	OPTIONAL-23	go to state 271
	PropertiesClass	go to state 270

State 211:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-26 ')' ';'	(Rule 65)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 4
	')'	shift, and go to state 273

	Critic	go to state 272

State 212:

	STAR-51 -> STAR-51 . PAREN-50	(Rule 193)
	HashReference -> LEFT_BRACE HashEntry STAR-51 . '}'	(Rule 195)

	'}'	shift, and go to state 276
	OP21_LIST_COMMA	shift, and go to state 275

	PAREN-50	go to state 274

State 213:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-49 SubExpression	(Rule 188)

	'my'	shift, and go to state 71

	'%{'	reduce using rule 187 (OPTIONAL-49)
	'@{'	reduce using rule 187 (OPTIONAL-49)
	'undef'	reduce using rule 187 (OPTIONAL-49)
	LEFT_BRACE	reduce using rule 187 (OPTIONAL-49)
	LEFT_BRACKET	reduce using rule 187 (OPTIONAL-49)
	LEFT_PAREN	reduce using rule 187 (OPTIONAL-49)
	LITERAL_NUMBER	reduce using rule 187 (OPTIONAL-49)
	LITERAL_STRING	reduce using rule 187 (OPTIONAL-49)
	OP01_CLOSE	reduce using rule 187 (OPTIONAL-49)
	OP01_NAMED	reduce using rule 187 (OPTIONAL-49)
	OP01_OPEN	reduce using rule 187 (OPTIONAL-49)
	OP03_MATH_INC_DEC	reduce using rule 187 (OPTIONAL-49)
	OP05_LOGICAL_NEG	reduce using rule 187 (OPTIONAL-49)
	OP05_MATH_NEG	reduce using rule 187 (OPTIONAL-49)
	OP10_NAMED_UNARY	reduce using rule 187 (OPTIONAL-49)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 187 (OPTIONAL-49)
	OP22_LOGICAL_NOT	reduce using rule 187 (OPTIONAL-49)
	VARIABLE_SYMBOL	reduce using rule 187 (OPTIONAL-49)
	WORD	reduce using rule 187 (OPTIONAL-49)
	WORD_SCOPED	reduce using rule 187 (OPTIONAL-49)

	TypeInner	go to state 277
	OPTIONAL-49	go to state 278

State 214:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 215:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock	(Rule 155)

	LEFT_PAREN	shift, and go to state 279

State 216:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 157)

	')'	shift, and go to state 280
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 217:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock	(Rule 156)

	VARIABLE_SYMBOL	shift, and go to state 281

State 218:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> TypeInner SubExpression .	(Rule 179)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

	')'	reduce using rule 179 (ListElement)
	';'	reduce using rule 179 (ListElement)
	']'	reduce using rule 179 (ListElement)
	OP21_LIST_COMMA	reduce using rule 179 (ListElement)

State 219:

	ListElements -> OP01_QW LEFT_PAREN . PLUS-47 ')'	(Rule 177)

	WORD	shift, and go to state 282

	PLUS-47	go to state 283

State 220:

	FileHandlePrint -> LEFT_BRACE FILEHANDLE_REF_SYMBOL . '}'	(Rule 208)

	'}'	shift, and go to state 284

State 221:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 172)
	ListElements -> ListElement STAR-46 .	(Rule 176)

	OP21_LIST_COMMA	shift, and go to state 285

	')'	reduce using rule 176 (ListElements)
	';'	reduce using rule 176 (ListElements)
	']'	reduce using rule 176 (ListElements)

	PAREN-45	go to state 286

State 222:

	OperatorVoid -> OP01_PRINT_VOID FileHandlePrint ListElements . ';'	(Rule 116)

	';'	shift, and go to state 287

State 223:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 180)

	$default	reduce using rule 180 (ListElement)

State 224:

	OperatorVoid -> OP01_PRINT_VOID ListElements ';' .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 225:

	Operator -> OP01_NAMED LEFT_PAREN OPTIONAL-33 . ')'	(Rule 86)

	')'	shift, and go to state 288

State 226:

	OPTIONAL-33 -> ListElements .	(Rule 84)

	$default	reduce using rule 84 (OPTIONAL-33)

State 227:

	OPTIONAL-35 -> ListElements .	(Rule 118)

	$default	reduce using rule 118 (OPTIONAL-35)

State 228:

	Expression -> WordScoped LEFT_PAREN OPTIONAL-35 . ')'	(Rule 123)

	')'	shift, and go to state 289

State 229:

	ArrayReference -> LEFT_BRACKET OPTIONAL-48 ']' .	(Rule 183)

	$default	reduce using rule 183 (ArrayReference)

State 230:

	SubExpression -> LEFT_PAREN SubExpression ')' .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 231:

	Expression -> Variable OP02_METHOD_THINARROW WORD . LEFT_PAREN OPTIONAL-36 ')'	(Rule 124)

	LEFT_PAREN	shift, and go to state 290

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	SubExpressionOrPrompt -> SubExpression .	(Rule 135)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

	';'	reduce using rule 135 (SubExpressionOrPrompt)

State 233:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrPrompt . ';'	(Rule 169)

	';'	shift, and go to state 291

State 234:

	SubExpressionOrPrompt -> STDIN_PROMPT .	(Rule 136)

	$default	reduce using rule 136 (SubExpressionOrPrompt)

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 170)

	';'	shift, and go to state 292
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 236:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 164)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 148
	WordScoped	go to state 86
	Operator	go to state 116
	ArrayReference	go to state 103
	SubExpression	go to state 293
	HashReference	go to state 93
	Expression	go to state 151
	HashDereferenced	go to state 96
	ArrayDereferenced	go to state 98
	Literal	go to state 99

State 237:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 165)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 166)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 295
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 294
	ArrayReference	go to state 103
	Operator	go to state 116
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	Literal	go to state 99

State 238:

	STAR-44 -> STAR-44 VariableRetrieval .	(Rule 161)

	$default	reduce using rule 161 (STAR-44)

State 239:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 184)

	$default	reduce using rule 184 (ArrayDereferenced)

State 240:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 185)

	$default	reduce using rule 185 (ArrayDereferenced)

State 241:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 167)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';'	(Rule 168)

	';'	shift, and go to state 296
	OP19_VARIABLE_ASSIGN	shift, and go to state 297

State 242:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-40 OPTIONAL-42	(Rule 151)

	LEFT_BRACE	shift, and go to state 299

	CodeBlock	go to state 298

State 243:

	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA . SubExpression OP21_LIST_COMMA SubExpression	(Rule 87)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 99
	HashDereferenced	go to state 96
	Expression	go to state 151
	ArrayDereferenced	go to state 98
	Operator	go to state 116
	ArrayReference	go to state 103
	SubExpression	go to state 300
	HashReference	go to state 93
	Variable	go to state 148
	WordScoped	go to state 86

State 244:

	FileHandleOpen -> 'my' 'filehandle_ref' . FILEHANDLE_REF_SYMBOL	(Rule 204)

	FILEHANDLE_REF_SYMBOL	shift, and go to state 301

State 245:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-34 ';' .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 246:

	Operator -> OP05_MATH_NEG SubExpression ')' .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 247:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185

	')'	reduce using rule 91 (Operator)
	'..'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP06_REGEX_MATCH	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 248:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197

	')'	reduce using rule 97 (Operator)
	'..'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP08_STRING_CAT	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 249:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 250:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 251:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression OP12_COMPARE_EQ_NEQ SubExpression .	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	'..'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 252:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 94)

	$default	reduce using rule 94 (Operator)

State 253:

	Operator -> SubExpression OP18_TERNARY Variable . COLON Variable	(Rule 108)

	COLON	shift, and go to state 302

State 254:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 255:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 256:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186

	')'	reduce using rule 98 (Operator)
	'..'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 257:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 258:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190

	')'	reduce using rule 95 (Operator)
	'..'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 259:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196

	')'	reduce using rule 96 (Operator)
	'..'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 260:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 261:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	'..'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 262:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 263:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 197)

	$default	reduce using rule 197 (HashDereferenced)

State 264:

	HashDereferenced -> '%{' Variable '}' .	(Rule 196)

	$default	reduce using rule 196 (HashDereferenced)

State 265:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 202)

	OP19_VARIABLE_ASSIGN	shift, and go to state 303

State 266:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 304

State 267:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 268:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 305

State 269:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 306

State 270:

	OPTIONAL-23 -> PropertiesClass .	(Rule 57)

	$default	reduce using rule 57 (OPTIONAL-23)

State 271:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 307

State 272:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-26 ')' ';'	(Rule 65)

	'%{'	shift, and go to state 121
	WORD	shift, and go to state 310

	HashEntryTyped	go to state 308
	HashDereferenced	go to state 309

State 273:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 66)

	';'	shift, and go to state 311

State 274:

	STAR-51 -> STAR-51 PAREN-50 .	(Rule 193)

	$default	reduce using rule 193 (STAR-51)

State 275:

	PAREN-50 -> OP21_LIST_COMMA . HashEntry	(Rule 192)

	'%{'	shift, and go to state 121
	WORD	shift, and go to state 133

	HashDereferenced	go to state 132
	HashEntry	go to state 312

State 276:

	HashReference -> LEFT_BRACE HashEntry STAR-51 '}' .	(Rule 195)

	$default	reduce using rule 195 (HashReference)

State 277:

	OPTIONAL-49 -> TypeInner .	(Rule 186)

	$default	reduce using rule 186 (OPTIONAL-49)

State 278:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-49 . SubExpression	(Rule 188)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 103
	Operator	go to state 116
	SubExpression	go to state 313
	HashReference	go to state 93
	Variable	go to state 148
	WordScoped	go to state 86
	Literal	go to state 99
	Expression	go to state 151
	HashDereferenced	go to state 96
	ArrayDereferenced	go to state 98

State 279:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN . SubExpression '..' SubExpression ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 103
	Operator	go to state 116
	SubExpression	go to state 314
	HashReference	go to state 93
	Variable	go to state 148
	WordScoped	go to state 86
	Literal	go to state 99
	Expression	go to state 151
	HashDereferenced	go to state 96
	ArrayDereferenced	go to state 98

State 280:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 157)

	LEFT_BRACE	shift, and go to state 299

	CodeBlock	go to state 315

State 281:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LEFT_PAREN ListElements ')' CodeBlock	(Rule 156)

	LEFT_PAREN	shift, and go to state 316

State 282:

	PLUS-47 -> WORD .	(Rule 175)

	$default	reduce using rule 175 (PLUS-47)

State 283:

	PLUS-47 -> PLUS-47 . WORD	(Rule 174)
	ListElements -> OP01_QW LEFT_PAREN PLUS-47 . ')'	(Rule 177)

	')'	shift, and go to state 317
	WORD	shift, and go to state 318

State 284:

	FileHandlePrint -> LEFT_BRACE FILEHANDLE_REF_SYMBOL '}' .	(Rule 208)

	$default	reduce using rule 208 (FileHandlePrint)

State 285:

	PAREN-45 -> OP21_LIST_COMMA . ListElement	(Rule 171)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 80
	KEYS_OR_VALUES	shift, and go to state 150
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashReference	go to state 93
	SubExpression	go to state 153
	ArrayReference	go to state 103
	Operator	go to state 116
	WordScoped	go to state 86
	Variable	go to state 148
	Literal	go to state 99
	TypeInner	go to state 143
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	ListElement	go to state 319

State 286:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 172)

	$default	reduce using rule 172 (STAR-46)

State 287:

	OperatorVoid -> OP01_PRINT_VOID FileHandlePrint ListElements ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 288:

	Operator -> OP01_NAMED LEFT_PAREN OPTIONAL-33 ')' .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 289:

	Expression -> WordScoped LEFT_PAREN OPTIONAL-35 ')' .	(Rule 123)

	$default	reduce using rule 123 (Expression)

State 290:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN . OPTIONAL-36 ')'	(Rule 124)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 80
	KEYS_OR_VALUES	shift, and go to state 150
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP01_QW	shift, and go to state 144
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 121 (OPTIONAL-36)

	Literal	go to state 99
	TypeInner	go to state 143
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96
	ListElement	go to state 147
	SubExpression	go to state 153
	HashReference	go to state 93
	OPTIONAL-36	go to state 320
	ArrayReference	go to state 103
	Operator	go to state 116
	WordScoped	go to state 86
	ListElements	go to state 321
	Variable	go to state 148

State 291:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';' .	(Rule 169)

	$default	reduce using rule 169 (VariableModification)

State 292:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 170)

	$default	reduce using rule 170 (VariableModification)

State 293:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 164)

	']'	shift, and go to state 322
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 294:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 165)

	'}'	shift, and go to state 323
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 295:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 166)
	WordScoped -> WORD .	(Rule 198)

	'}'	shift, and go to state 324

	LEFT_PAREN	reduce using rule 198 (WordScoped)

State 296:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 167)

	$default	reduce using rule 167 (VariableDeclaration)

State 297:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrPrompt ';'	(Rule 168)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	STDIN_PROMPT	shift, and go to state 234
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 148
	WordScoped	go to state 86
	Operator	go to state 116
	ArrayReference	go to state 103
	SubExpression	go to state 232
	HashReference	go to state 93
	HashDereferenced	go to state 96
	Expression	go to state 151
	ArrayDereferenced	go to state 98
	Literal	go to state 99
	SubExpressionOrPrompt	go to state 325

State 298:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-40 OPTIONAL-42	(Rule 151)

	$default	reduce using rule 147 (STAR-40)

	STAR-40	go to state 326

State 299:

	CodeBlock -> LEFT_BRACE . PLUS-43 '}'	(Rule 160)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 113
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 117
	OP01_OPEN	shift, and go to state 115
	OP01_PRINT_VOID	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 79
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 111
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 139 (OPTIONAL-38)
	'foreach my'	reduce using rule 139 (OPTIONAL-38)
	'while ('	reduce using rule 139 (OPTIONAL-38)

	ArrayDereferenced	go to state 98
	Statement	go to state 97
	HashDereferenced	go to state 96
	VariableDeclaration	go to state 95
	OperatorVoid	go to state 77
	Expression	go to state 94
	Conditional	go to state 84
	OPTIONAL-38	go to state 82
	PAREN-37	go to state 81
	Literal	go to state 99
	WordScoped	go to state 86
	ArrayReference	go to state 103
	Operation	go to state 327
	LoopLabel	go to state 106
	PLUS-43	go to state 328
	Variable	go to state 92
	SubExpression	go to state 119
	VariableModification	go to state 120
	HashReference	go to state 93
	Operator	go to state 116

State 300:

	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA SubExpression . OP21_LIST_COMMA SubExpression	(Rule 87)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP21_LIST_COMMA	shift, and go to state 329
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 301:

	FileHandleOpen -> 'my' 'filehandle_ref' FILEHANDLE_REF_SYMBOL .	(Rule 204)

	$default	reduce using rule 204 (FileHandleOpen)

State 302:

	Operator -> SubExpression OP18_TERNARY Variable COLON . Variable	(Rule 108)

	VARIABLE_SYMBOL	shift, and go to state 105

	Variable	go to state 330

State 303:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 202)

	$default	reduce using rule 202 (TypeInner)

State 304:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 305:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 332
	OP21_LIST_COMMA	shift, and go to state 331

	PAREN-18	go to state 333

State 306:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'%{'	shift, and go to state 121
	WORD	shift, and go to state 310

	HashEntryTyped	go to state 334
	HashDereferenced	go to state 309

State 307:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 338
	LITERAL_NUMBER	shift, and go to state 339

	MethodOrSubroutine	go to state 337
	Method	go to state 336
	Subroutine	go to state 335

State 308:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-26 ')' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 340

State 309:

	HashEntryTyped -> HashDereferenced .	(Rule 191)

	$default	reduce using rule 191 (HashEntryTyped)

State 310:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 190)

	OP20_HASH_FATARROW	shift, and go to state 341

State 311:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 342

State 312:

	PAREN-50 -> OP21_LIST_COMMA HashEntry .	(Rule 192)

	$default	reduce using rule 192 (PAREN-50)

State 313:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-49 SubExpression .	(Rule 188)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

	'}'	reduce using rule 188 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 188 (HashEntry)

State 314:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression . '..' SubExpression ')' CodeBlock	(Rule 155)

	'..'	shift, and go to state 343
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 315:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 157)

	$default	reduce using rule 157 (LoopWhile)

State 316:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN . ListElements ')' CodeBlock	(Rule 156)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 80
	KEYS_OR_VALUES	shift, and go to state 150
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP01_QW	shift, and go to state 144
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 151
	ListElement	go to state 147
	HashDereferenced	go to state 96
	ArrayDereferenced	go to state 98
	TypeInner	go to state 143
	Literal	go to state 99
	Variable	go to state 148
	ListElements	go to state 344
	WordScoped	go to state 86
	ArrayReference	go to state 103
	Operator	go to state 116
	HashReference	go to state 93
	SubExpression	go to state 153

State 317:

	ListElements -> OP01_QW LEFT_PAREN PLUS-47 ')' .	(Rule 177)

	$default	reduce using rule 177 (ListElements)

State 318:

	PLUS-47 -> PLUS-47 WORD .	(Rule 174)

	$default	reduce using rule 174 (PLUS-47)

State 319:

	PAREN-45 -> OP21_LIST_COMMA ListElement .	(Rule 171)

	$default	reduce using rule 171 (PAREN-45)

State 320:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-36 . ')'	(Rule 124)

	')'	shift, and go to state 345

State 321:

	OPTIONAL-36 -> ListElements .	(Rule 120)

	$default	reduce using rule 120 (OPTIONAL-36)

State 322:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 164)

	$default	reduce using rule 164 (VariableRetrieval)

State 323:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 165)

	$default	reduce using rule 165 (VariableRetrieval)

State 324:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 166)

	$default	reduce using rule 166 (VariableRetrieval)

State 325:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt . ';'	(Rule 168)

	';'	shift, and go to state 346

State 326:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 146)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-40 . OPTIONAL-42	(Rule 151)

	'else'	shift, and go to state 351
	'elsif ('	shift, and go to state 348

	$end	reduce using rule 150 (OPTIONAL-42)
	'%{'	reduce using rule 150 (OPTIONAL-42)
	'@{'	reduce using rule 150 (OPTIONAL-42)
	'for my integer'	reduce using rule 150 (OPTIONAL-42)
	'foreach my'	reduce using rule 150 (OPTIONAL-42)
	'if ('	reduce using rule 150 (OPTIONAL-42)
	'my'	reduce using rule 150 (OPTIONAL-42)
	'undef'	reduce using rule 150 (OPTIONAL-42)
	'while ('	reduce using rule 150 (OPTIONAL-42)
	'}'	reduce using rule 150 (OPTIONAL-42)
	LEFT_BRACE	reduce using rule 150 (OPTIONAL-42)
	LEFT_BRACKET	reduce using rule 150 (OPTIONAL-42)
	LEFT_PAREN	reduce using rule 150 (OPTIONAL-42)
	LITERAL_NUMBER	reduce using rule 150 (OPTIONAL-42)
	LITERAL_STRING	reduce using rule 150 (OPTIONAL-42)
	OP01_CLOSE	reduce using rule 150 (OPTIONAL-42)
	OP01_NAMED	reduce using rule 150 (OPTIONAL-42)
	OP01_NAMED_VOID	reduce using rule 150 (OPTIONAL-42)
	OP01_OPEN	reduce using rule 150 (OPTIONAL-42)
	OP01_PRINT_VOID	reduce using rule 150 (OPTIONAL-42)
	OP03_MATH_INC_DEC	reduce using rule 150 (OPTIONAL-42)
	OP05_LOGICAL_NEG	reduce using rule 150 (OPTIONAL-42)
	OP05_MATH_NEG	reduce using rule 150 (OPTIONAL-42)
	OP10_NAMED_UNARY	reduce using rule 150 (OPTIONAL-42)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 150 (OPTIONAL-42)
	OP19_LOOP_CONTROL	reduce using rule 150 (OPTIONAL-42)
	OP22_LOGICAL_NOT	reduce using rule 150 (OPTIONAL-42)
	VARIABLE_SYMBOL	reduce using rule 150 (OPTIONAL-42)
	WORD	reduce using rule 150 (OPTIONAL-42)
	WORD_SCOPED	reduce using rule 150 (OPTIONAL-42)

	PAREN-41	go to state 350
	OPTIONAL-42	go to state 349
	PAREN-39	go to state 347

State 327:

	PLUS-43 -> Operation .	(Rule 159)

	$default	reduce using rule 159 (PLUS-43)

State 328:

	PLUS-43 -> PLUS-43 . Operation	(Rule 158)
	CodeBlock -> LEFT_BRACE PLUS-43 . '}'	(Rule 160)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 113
	'undef'	shift, and go to state 80
	'}'	shift, and go to state 353
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 117
	OP01_OPEN	shift, and go to state 115
	OP01_PRINT_VOID	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 79
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 111
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 139 (OPTIONAL-38)
	'foreach my'	reduce using rule 139 (OPTIONAL-38)
	'while ('	reduce using rule 139 (OPTIONAL-38)

	ArrayReference	go to state 103
	WordScoped	go to state 86
	PAREN-37	go to state 81
	Literal	go to state 99
	OPTIONAL-38	go to state 82
	Conditional	go to state 84
	Expression	go to state 94
	HashDereferenced	go to state 96
	VariableDeclaration	go to state 95
	OperatorVoid	go to state 77
	Statement	go to state 97
	ArrayDereferenced	go to state 98
	Operator	go to state 116
	SubExpression	go to state 119
	HashReference	go to state 93
	VariableModification	go to state 120
	Variable	go to state 92
	Operation	go to state 352
	LoopLabel	go to state 106

State 329:

	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA SubExpression OP21_LIST_COMMA . SubExpression	(Rule 87)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 148
	WordScoped	go to state 86
	Operator	go to state 116
	ArrayReference	go to state 103
	HashReference	go to state 93
	SubExpression	go to state 354
	HashDereferenced	go to state 96
	Expression	go to state 151
	ArrayDereferenced	go to state 98
	Literal	go to state 99

State 330:

	Operator -> SubExpression OP18_TERNARY Variable COLON Variable .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 331:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 355

State 332:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 356

State 333:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 334:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-28 ')' ';'	(Rule 70)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 357

State 335:

	MethodOrSubroutine -> Subroutine .	(Rule 81)

	$default	reduce using rule 81 (MethodOrSubroutine)

State 336:

	MethodOrSubroutine -> Method .	(Rule 80)

	$default	reduce using rule 80 (MethodOrSubroutine)

State 337:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 338:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	TYPE_METHOD	shift, and go to state 358
	WORD	shift, and go to state 52

	Type	go to state 51

State 339:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 359

State 340:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 . ')' ';'	(Rule 65)

	')'	shift, and go to state 360
	OP21_LIST_COMMA	shift, and go to state 361

	PAREN-25	go to state 362

State 341:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 190)

	'my'	shift, and go to state 71

	TypeInner	go to state 363

State 342:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 343:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' . SubExpression ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 364
	HashReference	go to state 93
	ArrayReference	go to state 103
	Operator	go to state 116
	WordScoped	go to state 86
	Variable	go to state 148
	Literal	go to state 99
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96

State 344:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements . ')' CodeBlock	(Rule 156)

	')'	shift, and go to state 365

State 345:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-36 ')' .	(Rule 124)

	$default	reduce using rule 124 (Expression)

State 346:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrPrompt ';' .	(Rule 168)

	$default	reduce using rule 168 (VariableDeclaration)

State 347:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 146)

	$default	reduce using rule 146 (STAR-40)

State 348:

	PAREN-39 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 145)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 96
	Expression	go to state 151
	Literal	go to state 99
	WordScoped	go to state 86
	Variable	go to state 148
	HashReference	go to state 93
	SubExpression	go to state 366
	Operator	go to state 116
	ArrayReference	go to state 103

State 349:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-40 OPTIONAL-42 .	(Rule 151)

	$default	reduce using rule 151 (Conditional)

State 350:

	OPTIONAL-42 -> PAREN-41 .	(Rule 149)

	$default	reduce using rule 149 (OPTIONAL-42)

State 351:

	PAREN-41 -> 'else' . CodeBlock	(Rule 148)

	LEFT_BRACE	shift, and go to state 299

	CodeBlock	go to state 367

State 352:

	PLUS-43 -> PLUS-43 Operation .	(Rule 158)

	$default	reduce using rule 158 (PLUS-43)

State 353:

	CodeBlock -> LEFT_BRACE PLUS-43 '}' .	(Rule 160)

	$default	reduce using rule 160 (CodeBlock)

State 354:

	Operator -> OP01_OPEN FileHandleOpen OP21_LIST_COMMA SubExpression OP21_LIST_COMMA SubExpression .	(Rule 87)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191

	')'	reduce using rule 87 (Operator)
	'..'	reduce using rule 87 (Operator)
	';'	reduce using rule 87 (Operator)
	']'	reduce using rule 87 (Operator)
	'}'	reduce using rule 87 (Operator)
	OP21_LIST_COMMA	reduce using rule 87 (Operator)
	OP23_LOGICAL_AND	reduce using rule 87 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 87 (Operator)

State 355:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 52

	Type	go to state 368

State 356:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 369

State 357:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 68)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 . ')' ';'	(Rule 70)

	')'	shift, and go to state 372
	OP21_LIST_COMMA	shift, and go to state 370

	PAREN-27	go to state 371

State 358:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	VARIABLE_SYMBOL	shift, and go to state 373

State 359:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 360:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' . ';'	(Rule 65)

	';'	shift, and go to state 374

State 361:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 62)

	'%{'	shift, and go to state 121
	WORD	shift, and go to state 310

	HashDereferenced	go to state 309
	HashEntryTyped	go to state 375

State 362:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 363:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 190)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_OPEN	shift, and go to state 115
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 376
	HashReference	go to state 93
	Operator	go to state 116
	ArrayReference	go to state 103
	WordScoped	go to state 86
	Variable	go to state 148
	Literal	go to state 99
	ArrayDereferenced	go to state 98
	Expression	go to state 151
	HashDereferenced	go to state 96

State 364:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression . ')' CodeBlock	(Rule 155)

	')'	shift, and go to state 377
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 365:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' . CodeBlock	(Rule 156)

	LEFT_BRACE	shift, and go to state 299

	CodeBlock	go to state 378

State 366:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	PAREN-39 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 145)

	')'	shift, and go to state 379
	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

State 367:

	PAREN-41 -> 'else' CodeBlock .	(Rule 148)

	$default	reduce using rule 148 (PAREN-41)

State 368:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 380

State 369:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 370:

	PAREN-27 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 67)

	'%{'	shift, and go to state 121
	WORD	shift, and go to state 310

	HashDereferenced	go to state 309
	HashEntryTyped	go to state 381

State 371:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 372:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' . ';'	(Rule 70)

	';'	shift, and go to state 382

State 373:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'= sub {'	shift, and go to state 383

State 374:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 375:

	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 376:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 190)

	OP04_MATH_POW	shift, and go to state 185
	OP06_REGEX_MATCH	shift, and go to state 190
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 196
	OP08_MATH_ADD_SUB	shift, and go to state 197
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 194
	OP11_COMPARE_LT_GT	shift, and go to state 199
	OP12_COMPARE_EQ_NEQ	shift, and go to state 189
	OP13_BITWISE_AND	shift, and go to state 193
	OP14_BITWISE_OR_XOR	shift, and go to state 192
	OP15_LOGICAL_AND	shift, and go to state 195
	OP16_LOGICAL_OR	shift, and go to state 188
	OP17_LIST_RANGE	shift, and go to state 187
	OP18_TERNARY	shift, and go to state 191
	OP23_LOGICAL_AND	shift, and go to state 200
	OP24_LOGICAL_OR_XOR	shift, and go to state 198

	')'	reduce using rule 190 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 190 (HashEntryTyped)

State 377:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' . CodeBlock	(Rule 155)

	LEFT_BRACE	shift, and go to state 299

	CodeBlock	go to state 384

State 378:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (LoopForEach)

State 379:

	PAREN-39 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 145)

	LEFT_BRACE	shift, and go to state 299

	CodeBlock	go to state 385

State 380:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 381:

	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 67)

	$default	reduce using rule 67 (PAREN-27)

State 382:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';' .	(Rule 70)

	$default	reduce using rule 70 (PropertiesClass)

State 383:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'( my'	shift, and go to state 386

	'%{'	reduce using rule 72 (OPTIONAL-29)
	'@{'	reduce using rule 72 (OPTIONAL-29)
	'for my integer'	reduce using rule 72 (OPTIONAL-29)
	'foreach my'	reduce using rule 72 (OPTIONAL-29)
	'if ('	reduce using rule 72 (OPTIONAL-29)
	'my'	reduce using rule 72 (OPTIONAL-29)
	'undef'	reduce using rule 72 (OPTIONAL-29)
	'while ('	reduce using rule 72 (OPTIONAL-29)
	LEFT_BRACE	reduce using rule 72 (OPTIONAL-29)
	LEFT_BRACKET	reduce using rule 72 (OPTIONAL-29)
	LEFT_PAREN	reduce using rule 72 (OPTIONAL-29)
	LITERAL_NUMBER	reduce using rule 72 (OPTIONAL-29)
	LITERAL_STRING	reduce using rule 72 (OPTIONAL-29)
	OP01_CLOSE	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT_VOID	reduce using rule 72 (OPTIONAL-29)
	OP03_MATH_INC_DEC	reduce using rule 72 (OPTIONAL-29)
	OP05_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	OP05_MATH_NEG	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL	reduce using rule 72 (OPTIONAL-29)
	OP22_LOGICAL_NOT	reduce using rule 72 (OPTIONAL-29)
	VARIABLE_SYMBOL	reduce using rule 72 (OPTIONAL-29)
	WORD	reduce using rule 72 (OPTIONAL-29)
	WORD_SCOPED	reduce using rule 72 (OPTIONAL-29)

	OPTIONAL-29	go to state 388
	MethodArguments	go to state 387

State 384:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock .	(Rule 155)

	$default	reduce using rule 155 (LoopFor)

State 385:

	PAREN-39 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 145)

	$default	reduce using rule 145 (PAREN-39)

State 386:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	TYPE_CLASS_OR_SELF	shift, and go to state 389

State 387:

	OPTIONAL-29 -> MethodArguments .	(Rule 71)

	$default	reduce using rule 71 (OPTIONAL-29)

State 388:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 . PLUS-30 '}' ';'	(Rule 75)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 113
	'undef'	shift, and go to state 80
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 117
	OP01_OPEN	shift, and go to state 115
	OP01_PRINT_VOID	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 79
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 111
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 139 (OPTIONAL-38)
	'foreach my'	reduce using rule 139 (OPTIONAL-38)
	'while ('	reduce using rule 139 (OPTIONAL-38)

	PLUS-30	go to state 390
	LoopLabel	go to state 106
	Operation	go to state 391
	HashReference	go to state 93
	VariableModification	go to state 120
	SubExpression	go to state 119
	Operator	go to state 116
	Variable	go to state 92
	Conditional	go to state 84
	OPTIONAL-38	go to state 82
	PAREN-37	go to state 81
	Literal	go to state 99
	Statement	go to state 97
	ArrayDereferenced	go to state 98
	OperatorVoid	go to state 77
	VariableDeclaration	go to state 95
	HashDereferenced	go to state 96
	Expression	go to state 94
	ArrayReference	go to state 103
	WordScoped	go to state 86

State 389:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	$default	reduce using rule 78 (STAR-32)

	STAR-32	go to state 392

State 390:

	PLUS-30 -> PLUS-30 . Operation	(Rule 73)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 . '}' ';'	(Rule 75)

	'%{'	shift, and go to state 121
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 113
	'undef'	shift, and go to state 80
	'}'	shift, and go to state 393
	LEFT_BRACE	shift, and go to state 78
	LEFT_BRACKET	shift, and go to state 87
	LEFT_PAREN	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 88
	LITERAL_STRING	shift, and go to state 102
	OP01_CLOSE	shift, and go to state 100
	OP01_NAMED	shift, and go to state 85
	OP01_NAMED_VOID	shift, and go to state 117
	OP01_OPEN	shift, and go to state 115
	OP01_PRINT_VOID	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 110
	OP05_LOGICAL_NEG	shift, and go to state 104
	OP05_MATH_NEG	shift, and go to state 118
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 79
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 111
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 139 (OPTIONAL-38)
	'foreach my'	reduce using rule 139 (OPTIONAL-38)
	'while ('	reduce using rule 139 (OPTIONAL-38)

	WordScoped	go to state 86
	ArrayReference	go to state 103
	HashDereferenced	go to state 96
	OperatorVoid	go to state 77
	VariableDeclaration	go to state 95
	Expression	go to state 94
	ArrayDereferenced	go to state 98
	Statement	go to state 97
	OPTIONAL-38	go to state 82
	Literal	go to state 99
	PAREN-37	go to state 81
	Conditional	go to state 84
	Variable	go to state 92
	Operator	go to state 116
	VariableModification	go to state 120
	HashReference	go to state 93
	SubExpression	go to state 119
	LoopLabel	go to state 106
	Operation	go to state 394

State 391:

	PLUS-30 -> Operation .	(Rule 74)

	$default	reduce using rule 74 (PLUS-30)

State 392:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 77)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	')'	shift, and go to state 397
	OP21_LIST_COMMA	shift, and go to state 396

	PAREN-31	go to state 395

State 393:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' . ';'	(Rule 75)

	';'	shift, and go to state 398

State 394:

	PLUS-30 -> PLUS-30 Operation .	(Rule 73)

	$default	reduce using rule 73 (PLUS-30)

State 395:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 77)

	$default	reduce using rule 77 (STAR-32)

State 396:

	PAREN-31 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 76)

	'my'	shift, and go to state 399

State 397:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	OP19_VARIABLE_ASSIGN	shift, and go to state 400

State 398:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';' .	(Rule 75)

	$default	reduce using rule 75 (Method)

State 399:

	PAREN-31 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 76)

	WORD	shift, and go to state 52

	Type	go to state 401

State 400:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 79)

	'@_;'	shift, and go to state 402

State 401:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 76)

	VARIABLE_SYMBOL	shift, and go to state 403

State 402:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 79)

	$default	reduce using rule 79 (MethodArguments)

State 403:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 76)

	$default	reduce using rule 76 (PAREN-31)


Summary:
--------
Number of rules         : 211
Number of terminals     : 87
Number of non-terminals : 102
Number of states        : 404
