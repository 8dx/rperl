Conflicts:
----------
Conflict in state 92 between rule 114 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 92 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 92 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 92 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 92 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 92 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 92 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 92 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 92 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 92 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 92 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 92 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 92 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 92 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 92 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 92 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 104 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 104 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 104 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 104 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 104 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 104 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 104 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 104 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 104 between rule 106 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 104 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 104 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 104 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 104 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 104 between rule 106 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 104 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 104 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 121 between rule 113 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 121 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 121 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 121 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 121 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 121 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 121 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 121 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 121 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 121 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 121 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 121 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 121 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 121 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 121 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 121 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 144 between rule 123 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 144 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 144 between rule 123 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 144 between rule 123 and token OP18_TERNARY resolved as shift.
Conflict in state 144 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 144 between rule 123 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 144 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 144 between rule 123 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 144 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 144 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 144 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 144 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 144 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 144 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 144 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 144 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 211 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 211 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 211 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 211 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 211 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 211 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 211 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 211 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 211 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 211 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 211 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 211 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 211 between rule 105 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 211 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 211 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 212 between rule 120 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 212 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 212 between rule 120 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 212 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 212 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 212 between rule 120 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 212 between rule 120 and token OP18_TERNARY resolved as reduce.
Conflict in state 212 between rule 120 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 212 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 212 between rule 120 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 212 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 212 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 212 between rule 120 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 212 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 214 between rule 124 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 214 between rule 124 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 214 between rule 124 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 214 between rule 124 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 214 between rule 124 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 214 between rule 124 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 214 between rule 124 and token OP18_TERNARY resolved as shift.
Conflict in state 214 between rule 124 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 124 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 214 between rule 124 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 214 between rule 124 and token OP04_MATH_POW resolved as shift.
Conflict in state 214 between rule 124 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 214 between rule 124 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 214 between rule 124 and token OP08_STRING_CAT resolved as shift.
Conflict in state 214 between rule 124 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 214 between rule 124 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 215 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 215 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 215 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 215 between rule 109 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 215 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 215 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 215 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 215 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 215 between rule 109 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 215 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 215 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 215 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 215 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 216 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 216 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 117 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 216 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 216 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 216 between rule 117 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 216 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 216 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 216 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 216 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 216 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 216 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 216 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 216 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 216 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 217 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 217 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 217 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 217 between rule 119 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 217 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 217 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 217 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 217 between rule 119 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 217 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 217 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 217 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 217 between rule 119 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 217 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 217 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 218 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 218 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 116 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 218 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 218 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 218 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 218 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 218 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 116 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 218 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 218 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 218 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 218 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 218 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 218 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 218 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 219 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 219 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 219 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 219 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 219 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 219 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 219 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 121 and token OP18_TERNARY resolved as reduce.
Conflict in state 219 between rule 121 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 219 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 219 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 219 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 219 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 219 between rule 121 and token OP17_LIST_RANGE resolved as error.
Conflict in state 219 between rule 121 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 219 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 220 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 220 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 220 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 220 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 220 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 220 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 220 between rule 110 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 220 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 220 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 220 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 220 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 220 between rule 110 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 221 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 221 between rule 111 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 221 between rule 111 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 221 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 221 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 221 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 221 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 221 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 221 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 221 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 221 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 221 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 221 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 221 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 221 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 222 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 222 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 222 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 222 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 222 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 222 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 222 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 222 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 222 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 222 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 222 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 222 between rule 112 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 222 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 224 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 224 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 224 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 118 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 224 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 224 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 224 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 224 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 224 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 224 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 224 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 118 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 224 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 224 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 225 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 225 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 225 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 225 between rule 115 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 225 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 225 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 225 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 225 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 225 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 225 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 225 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 225 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 225 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 225 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 226 between rule 125 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 226 between rule 125 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 226 between rule 125 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 226 between rule 125 and token OP18_TERNARY resolved as shift.
Conflict in state 226 between rule 125 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 226 between rule 125 and token OP08_STRING_CAT resolved as shift.
Conflict in state 226 between rule 125 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 226 between rule 125 and token OP04_MATH_POW resolved as shift.
Conflict in state 226 between rule 125 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 226 between rule 125 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 226 between rule 125 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 226 between rule 125 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 226 between rule 125 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 226 between rule 125 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 226 between rule 125 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 226 between rule 125 and token OP07_MATH_MULT_DIV_MOD resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Critic
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Include
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Constant
10:	STAR-4 -> /* empty */
11:	STAR-5 -> STAR-5 Subroutine
12:	STAR-5 -> /* empty */
13:	PLUS-6 -> PLUS-6 Operation
14:	PLUS-6 -> Operation
15:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6
16:	Module -> Package
17:	Module -> Class
18:	STAR-7 -> STAR-7 Critic
19:	STAR-7 -> /* empty */
20:	STAR-8 -> STAR-8 Include
21:	STAR-8 -> /* empty */
22:	STAR-9 -> STAR-9 Constant
23:	STAR-9 -> /* empty */
24:	PLUS-10 -> PLUS-10 Subroutine
25:	PLUS-10 -> Subroutine
26:	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'
27:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
28:	PLUS-11 -> PLUS-11 WORD
29:	PLUS-11 -> WORD
30:	Critic -> '## no critic qw(' PLUS-11 ')'
31:	PLUS-12 -> PLUS-12 WORD
32:	PLUS-12 -> WORD
33:	Include -> 'use' WordScoped ';'
34:	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';'
35:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
36:	OPTIONAL-13 -> TypeInner
37:	OPTIONAL-13 -> /* empty */
38:	OPTIONAL-14 -> TypeInner
39:	OPTIONAL-14 -> /* empty */
40:	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal
41:	STAR-16 -> STAR-16 PAREN-15
42:	STAR-16 -> /* empty */
43:	OPTIONAL-17 -> TypeInner
44:	OPTIONAL-17 -> /* empty */
45:	OPTIONAL-18 -> TypeInner
46:	OPTIONAL-18 -> /* empty */
47:	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal
48:	STAR-20 -> STAR-20 PAREN-19
49:	STAR-20 -> /* empty */
50:	ConstantValue -> Literal
51:	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']'
52:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'
53:	OPTIONAL-21 -> SubroutineArguments
54:	OPTIONAL-21 -> /* empty */
55:	PLUS-22 -> PLUS-22 Operation
56:	PLUS-22 -> Operation
57:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'
58:	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
59:	STAR-24 -> STAR-24 PAREN-23
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 ArgumentCheck
62:	STAR-25 -> /* empty */
63:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25
64:	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
65:	OPTIONAL-27 -> PAREN-26
66:	OPTIONAL-27 -> /* empty */
67:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';'
68:	STAR-28 -> STAR-28 Critic
69:	STAR-28 -> /* empty */
70:	STAR-29 -> STAR-29 Include
71:	STAR-29 -> /* empty */
72:	STAR-30 -> STAR-30 Constant
73:	STAR-30 -> /* empty */
74:	STAR-31 -> STAR-31 Method
75:	STAR-31 -> /* empty */
76:	PLUS-32 -> PLUS-32 Subroutine
77:	PLUS-32 -> Subroutine
78:	PAREN-33 -> PLUS-32 '1;' '1;'
79:	OPTIONAL-34 -> PAREN-33
80:	OPTIONAL-34 -> /* empty */
81:	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34
82:	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped
83:	STAR-36 -> STAR-36 PAREN-35
84:	STAR-36 -> /* empty */
85:	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';'
86:	Properties -> 'our %properties = (' ')' ';'
87:	OPTIONAL-37 -> MethodArguments
88:	OPTIONAL-37 -> /* empty */
89:	PLUS-38 -> PLUS-38 Operation
90:	PLUS-38 -> Operation
91:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'
92:	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
93:	STAR-40 -> STAR-40 PAREN-39
94:	STAR-40 -> /* empty */
95:	STAR-41 -> STAR-41 ArgumentCheck
96:	STAR-41 -> /* empty */
97:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41
98:	Operation -> Expression ';'
99:	Operation -> Statement
100:	OPTIONAL-42 -> ListElements
101:	OPTIONAL-42 -> /* empty */
102:	Operator -> OP01_NAMED '(' OPTIONAL-42 ')'
103:	Operator -> OP03_MATH_INC_DEC Variable
104:	Operator -> Variable OP03_MATH_INC_DEC
105:	Operator -> Expression OP04_MATH_POW Expression
106:	Operator -> OP05_LOGICAL_NEG Expression
107:	Operator -> OP05_MATH_NEG Expression ')'
108:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
109:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
110:	Operator -> Expression OP08_MATH_ADD_SUB Expression
111:	Operator -> Expression OP08_STRING_CAT Expression
112:	Operator -> Expression OP09_BITWISE_SHIFT Expression
113:	Operator -> OP10_NAMED_UNARY Expression
114:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
115:	Operator -> Expression OP11_COMPARE_LT_GT Expression
116:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
117:	Operator -> Expression OP13_BITWISE_AND Expression
118:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
119:	Operator -> Expression OP15_LOGICAL_AND Expression
120:	Operator -> Expression OP16_LOGICAL_OR Expression
121:	Operator -> Expression OP17_LIST_RANGE Expression
122:	Operator -> Expression OP18_TERNARY Variable COLON Variable
123:	Operator -> OP22_LOGICAL_NOT Expression
124:	Operator -> Expression OP23_LOGICAL_AND Expression
125:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
126:	OPTIONAL-43 -> ListElements
127:	OPTIONAL-43 -> /* empty */
128:	OPTIONAL-44 -> ListElements
129:	OPTIONAL-44 -> /* empty */
130:	OPTIONAL-45 -> ListElements
131:	OPTIONAL-45 -> /* empty */
132:	OPTIONAL-46 -> ListElements
133:	OPTIONAL-46 -> /* empty */
134:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';'
135:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';'
136:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';'
137:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';'
138:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
139:	OPTIONAL-47 -> ListElements
140:	OPTIONAL-47 -> /* empty */
141:	OPTIONAL-48 -> ListElements
142:	OPTIONAL-48 -> /* empty */
143:	Expression -> 'undef'
144:	Expression -> Literal
145:	Expression -> Variable
146:	Expression -> ArrayReference
147:	Expression -> ArrayDereferenced
148:	Expression -> HashReference
149:	Expression -> HashDereferenced
150:	Expression -> '{' '}'
151:	Expression -> Operator
152:	Expression -> WordScoped '(' OPTIONAL-47 ')'
153:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'
154:	Expression -> '(' Expression ')'
155:	ExpressionOrStdin -> Expression
156:	ExpressionOrStdin -> '<STDIN>'
157:	PAREN-49 -> LoopLabel COLON
158:	OPTIONAL-50 -> PAREN-49
159:	OPTIONAL-50 -> /* empty */
160:	Statement -> Conditional
161:	Statement -> OPTIONAL-50 Loop
162:	Statement -> OperatorVoid
163:	Statement -> VariableDeclaration
164:	Statement -> VariableModification
165:	PAREN-51 -> 'elsif (' Expression ')' CodeBlock
166:	STAR-52 -> STAR-52 PAREN-51
167:	STAR-52 -> /* empty */
168:	PAREN-53 -> 'else' CodeBlock
169:	OPTIONAL-54 -> PAREN-53
170:	OPTIONAL-54 -> /* empty */
171:	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54
172:	Loop -> LoopFor
173:	Loop -> LoopForEach
174:	Loop -> LoopWhile
175:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
176:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
177:	LoopWhile -> 'while (' Expression ')' CodeBlock
178:	PLUS-55 -> PLUS-55 Operation
179:	PLUS-55 -> Operation
180:	CodeBlock -> '{' PLUS-55 '}'
181:	STAR-56 -> STAR-56 VariableRetrieval
182:	STAR-56 -> /* empty */
183:	Variable -> VARIABLE_SYMBOL STAR-56
184:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
185:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
186:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
187:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
188:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
189:	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
190:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
191:	PAREN-57 -> OP21_LIST_COMMA ListElement
192:	STAR-58 -> STAR-58 PAREN-57
193:	STAR-58 -> /* empty */
194:	PLUS-59 -> PLUS-59 WORD
195:	PLUS-59 -> WORD
196:	ListElements -> ListElement STAR-58
197:	ListElements -> OP01_NAMED_QW '(' PLUS-59 ')'
198:	ListElement -> Expression
199:	ListElement -> TypeInner Expression
200:	ListElement -> KEYS_OR_VALUES HashDereferenced
201:	OPTIONAL-60 -> ListElements
202:	OPTIONAL-60 -> /* empty */
203:	ArrayReference -> '[' OPTIONAL-60 ']'
204:	ArrayDereferenced -> '@{' Variable '}'
205:	ArrayDereferenced -> '@{' ArrayReference '}'
206:	OPTIONAL-61 -> TypeInner
207:	OPTIONAL-61 -> /* empty */
208:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-61 Expression
209:	HashEntry -> HashDereferenced
210:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
211:	HashEntryTyped -> HashDereferenced
212:	PAREN-62 -> OP21_LIST_COMMA HashEntry
213:	STAR-63 -> STAR-63 PAREN-62
214:	STAR-63 -> /* empty */
215:	HashReference -> '{' HashEntry STAR-63 '}'
216:	HashDereferenced -> '%{' Variable '}'
217:	HashDereferenced -> '%{' HashReference '}'
218:	WordScoped -> WORD
219:	WordScoped -> WORD_SCOPED
220:	FileHandle -> '{*' WORD '}'
221:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
222:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
223:	Type -> WORD
224:	LoopLabel -> WORD
225:	Literal -> LITERAL_STRING
226:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 5
	SHEBANG	shift, and go to state 3

	Program	go to state 4
	PLUS-1	go to state 7
	CompileUnit	go to state 6
	Package	go to state 1
	Class	go to state 2
	Module	go to state 8

State 1:

	Module -> Package .	(Rule 16)

	$default	reduce using rule 16 (Module)

State 2:

	Module -> Class .	(Rule 17)

	$default	reduce using rule 17 (Module)

State 3:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use strict;'	shift, and go to state 9

	Header	go to state 10

State 4:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 5:

	Package -> 'package' . WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 13

State 6:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 14

State 7:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 5

	$end	reduce using rule 4 (CompileUnit)

	Module	go to state 15
	Package	go to state 1
	Class	go to state 2

State 8:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 9:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'use warnings;'	shift, and go to state 16

State 10:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 17

State 11:

	WordScoped -> WORD .	(Rule 218)

	$default	reduce using rule 218 (WordScoped)

State 12:

	WordScoped -> WORD_SCOPED .	(Rule 219)

	$default	reduce using rule 219 (WordScoped)

State 13:

	Package -> 'package' WordScoped . ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 18

State 14:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 15:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 16:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'use RPerl;'	shift, and go to state 19

State 17:

	STAR-2 -> STAR-2 . Critic	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'## no critic qw('	shift, and go to state 22

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'use'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL_NUMBER	reduce using rule 8 (STAR-3)
	LITERAL_STRING	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)
	WORD_SCOPED	reduce using rule 8 (STAR-3)

	STAR-3	go to state 21
	Critic	go to state 20

State 18:

	Package -> 'package' WordScoped ';' . Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use strict;'	shift, and go to state 9

	Header	go to state 23

State 19:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'our'	shift, and go to state 24

State 20:

	STAR-2 -> STAR-2 Critic .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 21:

	STAR-3 -> STAR-3 . Include	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use'	shift, and go to state 26

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'use constant'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL_NUMBER	reduce using rule 10 (STAR-4)
	LITERAL_STRING	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)
	WORD_SCOPED	reduce using rule 10 (STAR-4)

	Include	go to state 27
	STAR-4	go to state 25

State 22:

	Critic -> '## no critic qw(' . PLUS-11 ')'	(Rule 30)

	WORD	shift, and go to state 28

	PLUS-11	go to state 29

State 23:

	Package -> 'package' WordScoped ';' Header . STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use parent qw('	shift, and go to state 30

	'## no critic qw('	reduce using rule 19 (STAR-7)
	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)
	'use'	reduce using rule 19 (STAR-7)

	STAR-7	go to state 31

State 24:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 27)

	VERSION_NUMBER_ASSIGN	shift, and go to state 32

State 25:

	STAR-4 -> STAR-4 . Constant	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . STAR-5 PLUS-6	(Rule 15)

	'use constant'	shift, and go to state 34

	'%{'	reduce using rule 12 (STAR-5)
	'('	reduce using rule 12 (STAR-5)
	'@{'	reduce using rule 12 (STAR-5)
	'['	reduce using rule 12 (STAR-5)
	'for my integer'	reduce using rule 12 (STAR-5)
	'foreach my'	reduce using rule 12 (STAR-5)
	'if ('	reduce using rule 12 (STAR-5)
	'my'	reduce using rule 12 (STAR-5)
	'our'	reduce using rule 12 (STAR-5)
	'undef'	reduce using rule 12 (STAR-5)
	'while ('	reduce using rule 12 (STAR-5)
	'{'	reduce using rule 12 (STAR-5)
	LITERAL_NUMBER	reduce using rule 12 (STAR-5)
	LITERAL_STRING	reduce using rule 12 (STAR-5)
	OP01_NAMED	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 12 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 12 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 12 (STAR-5)
	OP05_MATH_NEG	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 12 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 12 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 12 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 12 (STAR-5)
	WORD	reduce using rule 12 (STAR-5)
	WORD_SCOPED	reduce using rule 12 (STAR-5)

	Constant	go to state 35
	STAR-5	go to state 33

State 26:

	Include -> 'use' . WordScoped ';'	(Rule 33)
	Include -> 'use' . WordScoped 'qw(' PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 36

State 27:

	STAR-3 -> STAR-3 Include .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 28:

	PLUS-11 -> WORD .	(Rule 29)

	$default	reduce using rule 29 (PLUS-11)

State 29:

	PLUS-11 -> PLUS-11 . WORD	(Rule 28)
	Critic -> '## no critic qw(' PLUS-11 . ')'	(Rule 30)

	')'	shift, and go to state 38
	WORD	shift, and go to state 37

State 30:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 39

State 31:

	STAR-7 -> STAR-7 . Critic	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-7 . STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'## no critic qw('	shift, and go to state 22

	'our'	reduce using rule 21 (STAR-8)
	'use constant'	reduce using rule 21 (STAR-8)
	'use'	reduce using rule 21 (STAR-8)

	STAR-8	go to state 40
	Critic	go to state 41

State 32:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 27)

	$default	reduce using rule 27 (Header)

State 33:

	STAR-5 -> STAR-5 . Subroutine	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 . PLUS-6	(Rule 15)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'if ('	shift, and go to state 57
	'my'	shift, and go to state 61
	'our'	shift, and go to state 71
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 68
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	VariableDeclaration	go to state 45
	LoopLabel	go to state 47
	WordScoped	go to state 44
	Subroutine	go to state 66
	OPTIONAL-50	go to state 65
	Operation	go to state 64
	ArrayReference	go to state 42
	PAREN-49	go to state 73
	OperatorVoid	go to state 52
	VariableModification	go to state 72
	Variable	go to state 51
	HashDereferenced	go to state 49
	PLUS-6	go to state 69
	ArrayDereferenced	go to state 80
	Operator	go to state 77
	HashReference	go to state 75
	Statement	go to state 56
	Conditional	go to state 60
	Expression	go to state 83
	Literal	go to state 62

State 34:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	WORD	shift, and go to state 85

State 35:

	STAR-4 -> STAR-4 Constant .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 36:

	Include -> 'use' WordScoped . ';'	(Rule 33)
	Include -> 'use' WordScoped . 'qw(' PLUS-12 ')' ';'	(Rule 34)

	';'	shift, and go to state 87
	'qw('	shift, and go to state 86

State 37:

	PLUS-11 -> PLUS-11 WORD .	(Rule 28)

	$default	reduce using rule 28 (PLUS-11)

State 38:

	Critic -> '## no critic qw(' PLUS-11 ')' .	(Rule 30)

	$default	reduce using rule 30 (Critic)

State 39:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped . ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	')'	shift, and go to state 88

State 40:

	STAR-8 -> STAR-8 . Include	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 . STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'use'	shift, and go to state 26

	'our'	reduce using rule 23 (STAR-9)
	'use constant'	reduce using rule 23 (STAR-9)

	Include	go to state 89
	STAR-9	go to state 90

State 41:

	STAR-7 -> STAR-7 Critic .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 42:

	Expression -> ArrayReference .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 43:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 114)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Operator	go to state 77
	HashReference	go to state 75
	ArrayReference	go to state 42
	Variable	go to state 91
	HashDereferenced	go to state 49
	Literal	go to state 62
	Expression	go to state 92

State 44:

	Expression -> WordScoped . '(' OPTIONAL-47 ')'	(Rule 152)

	'('	shift, and go to state 93

State 45:

	Statement -> VariableDeclaration .	(Rule 163)

	$default	reduce using rule 163 (Statement)

State 46:

	ArrayReference -> '[' . OPTIONAL-60 ']'	(Rule 203)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 97
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_QW	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	']'	reduce using rule 202 (OPTIONAL-60)

	HashDereferenced	go to state 49
	Variable	go to state 91
	OPTIONAL-60	go to state 94
	Literal	go to state 62
	Expression	go to state 100
	TypeInner	go to state 98
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	ListElements	go to state 101
	WordScoped	go to state 44
	ListElement	go to state 99
	ArrayReference	go to state 42
	HashReference	go to state 75

State 47:

	PAREN-49 -> LoopLabel . COLON	(Rule 157)

	COLON	shift, and go to state 102

State 48:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 107)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 49
	Variable	go to state 91
	Expression	go to state 103
	Literal	go to state 62
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	ArrayReference	go to state 42
	HashReference	go to state 75

State 49:

	Expression -> HashDereferenced .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 50:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 106)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 49
	Variable	go to state 91
	Literal	go to state 62
	Expression	go to state 104
	Operator	go to state 77
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 42
	HashReference	go to state 75

State 51:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 189)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 190)

	OP02_METHOD_THINARROW	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 107
	OP19_VARIABLE_ASSIGN	shift, and go to state 106
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 108

	';'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 52:

	Statement -> OperatorVoid .	(Rule 162)

	$default	reduce using rule 162 (Statement)

State 53:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-43 ')' ';'	(Rule 134)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 109
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	'{*'	shift, and go to state 110
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_QW	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 127 (OPTIONAL-43)

	HashReference	go to state 75
	ArrayReference	go to state 42
	ListElements	go to state 111
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	ListElement	go to state 99
	Operator	go to state 77
	FileHandle	go to state 112
	Literal	go to state 62
	Expression	go to state 100
	OPTIONAL-43	go to state 113
	TypeInner	go to state 98
	Variable	go to state 91
	HashDereferenced	go to state 49

State 54:

	HashDereferenced -> '%{' . Variable '}'	(Rule 216)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 217)

	'{'	shift, and go to state 114
	VARIABLE_SYMBOL	shift, and go to state 79

	HashReference	go to state 115
	Variable	go to state 116

State 55:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 204)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 205)

	'['	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 79

	ArrayReference	go to state 118
	Variable	go to state 117

State 56:

	Operation -> Statement .	(Rule 99)

	$default	reduce using rule 99 (Operation)

State 57:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 171)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Literal	go to state 62
	Expression	go to state 119
	HashDereferenced	go to state 49
	Variable	go to state 91
	ArrayReference	go to state 42
	HashReference	go to state 75
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44

State 58:

	Expression -> '(' . Expression ')'	(Rule 154)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Literal	go to state 62
	Expression	go to state 120
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77

State 59:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 113)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayReference	go to state 42
	HashReference	go to state 75
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Expression	go to state 121
	Literal	go to state 62
	HashDereferenced	go to state 49
	Variable	go to state 91

State 60:

	Statement -> Conditional .	(Rule 160)

	$default	reduce using rule 160 (Statement)

State 61:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 187)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 188)

	WORD	shift, and go to state 123

	Type	go to state 122

State 62:

	Expression -> Literal .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 63:

	Literal -> LITERAL_NUMBER .	(Rule 226)

	$default	reduce using rule 226 (Literal)

State 64:

	PLUS-6 -> Operation .	(Rule 14)

	$default	reduce using rule 14 (PLUS-6)

State 65:

	Statement -> OPTIONAL-50 . Loop	(Rule 161)

	'for my integer'	shift, and go to state 129
	'foreach my'	shift, and go to state 126
	'while ('	shift, and go to state 130

	LoopFor	go to state 125
	Loop	go to state 128
	LoopForEach	go to state 127
	LoopWhile	go to state 124

State 66:

	STAR-5 -> STAR-5 Subroutine .	(Rule 11)

	$default	reduce using rule 11 (STAR-5)

State 67:

	Expression -> '{' . '}'	(Rule 150)
	HashReference -> '{' . HashEntry STAR-63 '}'	(Rule 215)

	'%{'	shift, and go to state 54
	'}'	shift, and go to state 132
	WORD	shift, and go to state 131

	HashDereferenced	go to state 134
	HashEntry	go to state 133

State 68:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 138)

	WORD	shift, and go to state 135

	LoopLabel	go to state 136

State 69:

	PLUS-6 -> PLUS-6 . Operation	(Rule 13)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6 .	(Rule 15)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'if ('	shift, and go to state 57
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 68
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 12

	$end	reduce using rule 15 (Program)
	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	ArrayReference	go to state 42
	OPTIONAL-50	go to state 65
	Operation	go to state 137
	LoopLabel	go to state 47
	VariableDeclaration	go to state 45
	WordScoped	go to state 44
	HashDereferenced	go to state 49
	OperatorVoid	go to state 52
	PAREN-49	go to state 73
	VariableModification	go to state 72
	Variable	go to state 51
	Statement	go to state 56
	HashReference	go to state 75
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	Expression	go to state 83
	Conditional	go to state 60
	Literal	go to state 62

State 70:

	Literal -> LITERAL_STRING .	(Rule 225)

	$default	reduce using rule 225 (Literal)

State 71:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	WORD	shift, and go to state 123

	Type	go to state 138

State 72:

	Statement -> VariableModification .	(Rule 164)

	$default	reduce using rule 164 (Statement)

State 73:

	OPTIONAL-50 -> PAREN-49 .	(Rule 158)

	$default	reduce using rule 158 (OPTIONAL-50)

State 74:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 103)

	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 139

State 75:

	Expression -> HashReference .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 76:

	Expression -> 'undef' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 77:

	Expression -> Operator .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 78:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-45 ';'	(Rule 136)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 109
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	'{*'	shift, and go to state 110
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_QW	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	';'	reduce using rule 131 (OPTIONAL-45)

	Expression	go to state 100
	Literal	go to state 62
	TypeInner	go to state 98
	OPTIONAL-45	go to state 142
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	ArrayDereferenced	go to state 80
	ListElements	go to state 141
	ListElement	go to state 99
	WordScoped	go to state 44
	Operator	go to state 77
	FileHandle	go to state 140

State 79:

	Variable -> VARIABLE_SYMBOL . STAR-56	(Rule 183)

	$default	reduce using rule 182 (STAR-56)

	STAR-56	go to state 143

State 80:

	Expression -> ArrayDereferenced .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 81:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 123)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 144
	Literal	go to state 62
	HashDereferenced	go to state 49
	Variable	go to state 91
	ArrayReference	go to state 42
	HashReference	go to state 75
	Operator	go to state 77
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80

State 82:

	Operator -> OP01_NAMED . '(' OPTIONAL-42 ')'	(Rule 102)

	'('	shift, and go to state 145

State 83:

	Operation -> Expression . ';'	(Rule 98)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	';'	shift, and go to state 149
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 84:

	WordScoped -> WORD .	(Rule 218)
	LoopLabel -> WORD .	(Rule 224)

	'('	reduce using rule 218 (WordScoped)
	COLON	reduce using rule 224 (LoopLabel)

State 85:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	OP20_HASH_FATARROW	shift, and go to state 163

State 86:

	Include -> 'use' WordScoped 'qw(' . PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 165

	PLUS-12	go to state 164

State 87:

	Include -> 'use' WordScoped ';' .	(Rule 33)

	$default	reduce using rule 33 (Include)

State 88:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' . ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 166

State 89:

	STAR-8 -> STAR-8 Include .	(Rule 20)

	$default	reduce using rule 20 (STAR-8)

State 90:

	STAR-9 -> STAR-9 . Constant	(Rule 22)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 . PLUS-10 '1;' '1;'	(Rule 26)

	'our'	shift, and go to state 71
	'use constant'	shift, and go to state 34

	PLUS-10	go to state 168
	Subroutine	go to state 169
	Constant	go to state 167

State 91:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)

	OP02_METHOD_THINARROW	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 107

	')'	reduce using rule 145 (Expression)
	'..'	reduce using rule 145 (Expression)
	';'	reduce using rule 145 (Expression)
	']'	reduce using rule 145 (Expression)
	'}'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP21_LIST_COMMA	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 92:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 114)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 114 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 93:

	Expression -> WordScoped '(' . OPTIONAL-47 ')'	(Rule 152)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 97
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_QW	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 140 (OPTIONAL-47)

	Operator	go to state 77
	WordScoped	go to state 44
	ListElement	go to state 99
	ArrayDereferenced	go to state 80
	ListElements	go to state 170
	ArrayReference	go to state 42
	OPTIONAL-47	go to state 171
	HashReference	go to state 75
	HashDereferenced	go to state 49
	Variable	go to state 91
	TypeInner	go to state 98
	Expression	go to state 100
	Literal	go to state 62

State 94:

	ArrayReference -> '[' OPTIONAL-60 . ']'	(Rule 203)

	']'	shift, and go to state 172

State 95:

	ListElements -> OP01_NAMED_QW . '(' PLUS-59 ')'	(Rule 197)

	'('	shift, and go to state 173

State 96:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 200)

	'%{'	shift, and go to state 54

	HashDereferenced	go to state 174

State 97:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 222)

	WORD	shift, and go to state 123

	Type	go to state 175

State 98:

	ListElement -> TypeInner . Expression	(Rule 199)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 176
	Literal	go to state 62
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Operator	go to state 77

State 99:

	ListElements -> ListElement . STAR-58	(Rule 196)

	$default	reduce using rule 193 (STAR-58)

	STAR-58	go to state 177

State 100:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> Expression .	(Rule 198)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

	')'	reduce using rule 198 (ListElement)
	';'	reduce using rule 198 (ListElement)
	']'	reduce using rule 198 (ListElement)
	OP21_LIST_COMMA	reduce using rule 198 (ListElement)

State 101:

	OPTIONAL-60 -> ListElements .	(Rule 201)

	$default	reduce using rule 201 (OPTIONAL-60)

State 102:

	PAREN-49 -> LoopLabel COLON .	(Rule 157)

	$default	reduce using rule 157 (PAREN-49)

State 103:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 107)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	')'	shift, and go to state 178
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 104:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP06_REGEX_MATCH	reduce using rule 106 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 106 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 105:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-48 ')'	(Rule 153)

	WORD	shift, and go to state 179

State 106:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 189)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'<STDIN>'	shift, and go to state 181
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 49
	Variable	go to state 91
	Literal	go to state 62
	Expression	go to state 180
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	ExpressionOrStdin	go to state 182
	ArrayReference	go to state 42
	HashReference	go to state 75

State 107:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 108:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 190)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 49
	Variable	go to state 91
	Literal	go to state 62
	Expression	go to state 183
	Operator	go to state 77
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 42
	HashReference	go to state 75

State 109:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 221)
	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 222)

	'filehandle_ref'	shift, and go to state 184
	WORD	shift, and go to state 123

	Type	go to state 175

State 110:

	FileHandle -> '{*' . WORD '}'	(Rule 220)

	WORD	shift, and go to state 185

State 111:

	OPTIONAL-43 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-43)

State 112:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 97
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_QW	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 129 (OPTIONAL-44)

	HashReference	go to state 75
	ArrayReference	go to state 42
	WordScoped	go to state 44
	ListElement	go to state 99
	ListElements	go to state 187
	ArrayDereferenced	go to state 80
	Operator	go to state 77
	TypeInner	go to state 98
	Literal	go to state 62
	Expression	go to state 100
	Variable	go to state 91
	OPTIONAL-44	go to state 186
	HashDereferenced	go to state 49

State 113:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 . ')' ';'	(Rule 134)

	')'	shift, and go to state 188

State 114:

	HashReference -> '{' . HashEntry STAR-63 '}'	(Rule 215)

	'%{'	shift, and go to state 54
	WORD	shift, and go to state 131

	HashEntry	go to state 133
	HashDereferenced	go to state 134

State 115:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 217)

	'}'	shift, and go to state 189

State 116:

	HashDereferenced -> '%{' Variable . '}'	(Rule 216)

	'}'	shift, and go to state 190

State 117:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 204)

	'}'	shift, and go to state 191

State 118:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 205)

	'}'	shift, and go to state 192

State 119:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 171)

	')'	shift, and go to state 193
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 120:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Expression -> '(' Expression . ')'	(Rule 154)

	')'	shift, and go to state 194
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 121:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 122:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 187)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 188)

	VARIABLE_SYMBOL	shift, and go to state 195

State 123:

	Type -> WORD .	(Rule 223)

	$default	reduce using rule 223 (Type)

State 124:

	Loop -> LoopWhile .	(Rule 174)

	$default	reduce using rule 174 (Loop)

State 125:

	Loop -> LoopFor .	(Rule 172)

	$default	reduce using rule 172 (Loop)

State 126:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 176)

	WORD	shift, and go to state 123

	Type	go to state 196

State 127:

	Loop -> LoopForEach .	(Rule 173)

	$default	reduce using rule 173 (Loop)

State 128:

	Statement -> OPTIONAL-50 Loop .	(Rule 161)

	$default	reduce using rule 161 (Statement)

State 129:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 175)

	VARIABLE_SYMBOL	shift, and go to state 197

State 130:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 177)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Literal	go to state 62
	Expression	go to state 198
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77

State 131:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-61 Expression	(Rule 208)

	OP20_HASH_FATARROW	shift, and go to state 199

State 132:

	Expression -> '{' '}' .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 133:

	HashReference -> '{' HashEntry . STAR-63 '}'	(Rule 215)

	$default	reduce using rule 214 (STAR-63)

	STAR-63	go to state 200

State 134:

	HashEntry -> HashDereferenced .	(Rule 209)

	$default	reduce using rule 209 (HashEntry)

State 135:

	LoopLabel -> WORD .	(Rule 224)

	$default	reduce using rule 224 (LoopLabel)

State 136:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 138)

	';'	shift, and go to state 201

State 137:

	PLUS-6 -> PLUS-6 Operation .	(Rule 13)

	$default	reduce using rule 13 (PLUS-6)

State 138:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	VARIABLE_SYMBOL	shift, and go to state 202

State 139:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 140:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 97
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_QW	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	';'	reduce using rule 133 (OPTIONAL-46)

	ListElements	go to state 204
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	ListElement	go to state 99
	Operator	go to state 77
	HashReference	go to state 75
	ArrayReference	go to state 42
	Variable	go to state 91
	HashDereferenced	go to state 49
	OPTIONAL-46	go to state 203
	Expression	go to state 100
	Literal	go to state 62
	TypeInner	go to state 98

State 141:

	OPTIONAL-45 -> ListElements .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-45)

State 142:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 . ';'	(Rule 136)

	';'	shift, and go to state 205

State 143:

	STAR-56 -> STAR-56 . VariableRetrieval	(Rule 181)
	Variable -> VARIABLE_SYMBOL STAR-56 .	(Rule 183)

	OP02_ARRAY_THINARROW	shift, and go to state 207
	OP02_HASH_THINARROW	shift, and go to state 206

	')'	reduce using rule 183 (Variable)
	'..'	reduce using rule 183 (Variable)
	';'	reduce using rule 183 (Variable)
	']'	reduce using rule 183 (Variable)
	'}'	reduce using rule 183 (Variable)
	COLON	reduce using rule 183 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 183 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 183 (Variable)
	OP04_MATH_POW	reduce using rule 183 (Variable)
	OP06_REGEX_MATCH	reduce using rule 183 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 183 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 183 (Variable)
	OP08_STRING_CAT	reduce using rule 183 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 183 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 183 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 183 (Variable)
	OP13_BITWISE_AND	reduce using rule 183 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 183 (Variable)
	OP15_LOGICAL_AND	reduce using rule 183 (Variable)
	OP16_LOGICAL_OR	reduce using rule 183 (Variable)
	OP17_LIST_RANGE	reduce using rule 183 (Variable)
	OP18_TERNARY	reduce using rule 183 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 183 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 183 (Variable)
	OP21_LIST_COMMA	reduce using rule 183 (Variable)
	OP23_LOGICAL_AND	reduce using rule 183 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 183 (Variable)

	VariableRetrieval	go to state 208

State 144:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148

	')'	reduce using rule 123 (Operator)
	'..'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP23_LOGICAL_AND	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 145:

	Operator -> OP01_NAMED '(' . OPTIONAL-42 ')'	(Rule 102)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 97
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_QW	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 101 (OPTIONAL-42)

	Variable	go to state 91
	HashDereferenced	go to state 49
	TypeInner	go to state 98
	Literal	go to state 62
	Expression	go to state 100
	ListElement	go to state 99
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	ListElements	go to state 209
	Operator	go to state 77
	OPTIONAL-42	go to state 210
	HashReference	go to state 75
	ArrayReference	go to state 42

State 146:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 105)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Literal	go to state 62
	Expression	go to state 211
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77

State 147:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 120)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Operator	go to state 77
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 42
	HashReference	go to state 75
	HashDereferenced	go to state 49
	Variable	go to state 91
	Literal	go to state 62
	Expression	go to state 212

State 148:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 213

State 149:

	Operation -> Expression ';' .	(Rule 98)

	$default	reduce using rule 98 (Operation)

State 150:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 124)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Variable	go to state 91
	HashDereferenced	go to state 49
	Expression	go to state 214
	Literal	go to state 62
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77
	HashReference	go to state 75
	ArrayReference	go to state 42

State 151:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 109)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77
	HashReference	go to state 75
	ArrayReference	go to state 42
	Variable	go to state 91
	HashDereferenced	go to state 49
	Literal	go to state 62
	Expression	go to state 215

State 152:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 117)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Literal	go to state 62
	Expression	go to state 216
	HashDereferenced	go to state 49
	Variable	go to state 91
	ArrayReference	go to state 42
	HashReference	go to state 75
	Operator	go to state 77
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80

State 153:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 119)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Variable	go to state 91
	HashDereferenced	go to state 49
	Literal	go to state 62
	Expression	go to state 217
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Operator	go to state 77
	HashReference	go to state 75
	ArrayReference	go to state 42

State 154:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 116)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayReference	go to state 42
	HashReference	go to state 75
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Literal	go to state 62
	Expression	go to state 218
	HashDereferenced	go to state 49
	Variable	go to state 91

State 155:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 121)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashReference	go to state 75
	ArrayReference	go to state 42
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Operator	go to state 77
	Expression	go to state 219
	Literal	go to state 62
	Variable	go to state 91
	HashDereferenced	go to state 49

State 156:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 110)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayReference	go to state 42
	HashReference	go to state 75
	Operator	go to state 77
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Expression	go to state 220
	Literal	go to state 62
	HashDereferenced	go to state 49
	Variable	go to state 91

State 157:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 111)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 49
	Variable	go to state 91
	Literal	go to state 62
	Expression	go to state 221
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	ArrayReference	go to state 42
	HashReference	go to state 75

State 158:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 112)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Operator	go to state 77
	HashReference	go to state 75
	ArrayReference	go to state 42
	Variable	go to state 91
	HashDereferenced	go to state 49
	Literal	go to state 62
	Expression	go to state 222

State 159:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 108)

	'/'	shift, and go to state 223

State 160:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 118)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 224
	Literal	go to state 62
	HashDereferenced	go to state 49
	Variable	go to state 91
	ArrayReference	go to state 42
	HashReference	go to state 75
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44

State 161:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 115)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 225
	Literal	go to state 62
	HashDereferenced	go to state 49
	Variable	go to state 91
	ArrayReference	go to state 42
	HashReference	go to state 75
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44

State 162:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 125)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 226
	Literal	go to state 62
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Operator	go to state 77

State 163:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 35)

	'my'	shift, and go to state 97

	TypeInner	go to state 227

State 164:

	PLUS-12 -> PLUS-12 . WORD	(Rule 31)
	Include -> 'use' WordScoped 'qw(' PLUS-12 . ')' ';'	(Rule 34)

	')'	shift, and go to state 228
	WORD	shift, and go to state 229

State 165:

	PLUS-12 -> WORD .	(Rule 32)

	$default	reduce using rule 32 (PLUS-12)

State 166:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' . Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 26

	Include	go to state 230

State 167:

	STAR-9 -> STAR-9 Constant .	(Rule 22)

	$default	reduce using rule 22 (STAR-9)

State 168:

	PLUS-10 -> PLUS-10 . Subroutine	(Rule 24)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 . '1;' '1;'	(Rule 26)

	'1;'	shift, and go to state 231
	'our'	shift, and go to state 71

	Subroutine	go to state 232

State 169:

	PLUS-10 -> Subroutine .	(Rule 25)

	$default	reduce using rule 25 (PLUS-10)

State 170:

	OPTIONAL-47 -> ListElements .	(Rule 139)

	$default	reduce using rule 139 (OPTIONAL-47)

State 171:

	Expression -> WordScoped '(' OPTIONAL-47 . ')'	(Rule 152)

	')'	shift, and go to state 233

State 172:

	ArrayReference -> '[' OPTIONAL-60 ']' .	(Rule 203)

	$default	reduce using rule 203 (ArrayReference)

State 173:

	ListElements -> OP01_NAMED_QW '(' . PLUS-59 ')'	(Rule 197)

	WORD	shift, and go to state 235

	PLUS-59	go to state 234

State 174:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 200)

	$default	reduce using rule 200 (ListElement)

State 175:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 222)

	'$TYPED_'	shift, and go to state 236

State 176:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> TypeInner Expression .	(Rule 199)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

	')'	reduce using rule 199 (ListElement)
	';'	reduce using rule 199 (ListElement)
	']'	reduce using rule 199 (ListElement)
	OP21_LIST_COMMA	reduce using rule 199 (ListElement)

State 177:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 192)
	ListElements -> ListElement STAR-58 .	(Rule 196)

	OP21_LIST_COMMA	shift, and go to state 237

	')'	reduce using rule 196 (ListElements)
	';'	reduce using rule 196 (ListElements)
	']'	reduce using rule 196 (ListElements)

	PAREN-57	go to state 238

State 178:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 179:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-48 ')'	(Rule 153)

	'('	shift, and go to state 239

State 180:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ExpressionOrStdin -> Expression .	(Rule 155)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

	';'	reduce using rule 155 (ExpressionOrStdin)

State 181:

	ExpressionOrStdin -> '<STDIN>' .	(Rule 156)

	$default	reduce using rule 156 (ExpressionOrStdin)

State 182:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 189)

	';'	shift, and go to state 240

State 183:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 190)

	';'	shift, and go to state 241
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 184:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 221)

	VARIABLE_SYMBOL	shift, and go to state 242

State 185:

	FileHandle -> '{*' WORD . '}'	(Rule 220)

	'}'	shift, and go to state 243

State 186:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 . ')' ';'	(Rule 135)

	')'	shift, and go to state 244

State 187:

	OPTIONAL-44 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-44)

State 188:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' . ';'	(Rule 134)

	';'	shift, and go to state 245

State 189:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 217)

	$default	reduce using rule 217 (HashDereferenced)

State 190:

	HashDereferenced -> '%{' Variable '}' .	(Rule 216)

	$default	reduce using rule 216 (HashDereferenced)

State 191:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 204)

	$default	reduce using rule 204 (ArrayDereferenced)

State 192:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 205)

	$default	reduce using rule 205 (ArrayDereferenced)

State 193:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-52 OPTIONAL-54	(Rule 171)

	'{'	shift, and go to state 247

	CodeBlock	go to state 246

State 194:

	Expression -> '(' Expression ')' .	(Rule 154)

	$default	reduce using rule 154 (Expression)

State 195:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 187)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 188)

	';'	shift, and go to state 248
	OP19_VARIABLE_ASSIGN	shift, and go to state 249

State 196:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 176)

	VARIABLE_SYMBOL	shift, and go to state 250

State 197:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 175)

	'('	shift, and go to state 251

State 198:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 177)

	')'	shift, and go to state 252
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 199:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-61 Expression	(Rule 208)

	'my'	shift, and go to state 97

	'%{'	reduce using rule 207 (OPTIONAL-61)
	'('	reduce using rule 207 (OPTIONAL-61)
	'@{'	reduce using rule 207 (OPTIONAL-61)
	'['	reduce using rule 207 (OPTIONAL-61)
	'undef'	reduce using rule 207 (OPTIONAL-61)
	'{'	reduce using rule 207 (OPTIONAL-61)
	LITERAL_NUMBER	reduce using rule 207 (OPTIONAL-61)
	LITERAL_STRING	reduce using rule 207 (OPTIONAL-61)
	OP01_NAMED	reduce using rule 207 (OPTIONAL-61)
	OP03_MATH_INC_DEC	reduce using rule 207 (OPTIONAL-61)
	OP05_LOGICAL_NEG	reduce using rule 207 (OPTIONAL-61)
	OP05_MATH_NEG	reduce using rule 207 (OPTIONAL-61)
	OP10_NAMED_UNARY	reduce using rule 207 (OPTIONAL-61)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 207 (OPTIONAL-61)
	OP22_LOGICAL_NOT	reduce using rule 207 (OPTIONAL-61)
	VARIABLE_SYMBOL	reduce using rule 207 (OPTIONAL-61)
	WORD	reduce using rule 207 (OPTIONAL-61)
	WORD_SCOPED	reduce using rule 207 (OPTIONAL-61)

	TypeInner	go to state 254
	OPTIONAL-61	go to state 253

State 200:

	STAR-63 -> STAR-63 . PAREN-62	(Rule 213)
	HashReference -> '{' HashEntry STAR-63 . '}'	(Rule 215)

	'}'	shift, and go to state 257
	OP21_LIST_COMMA	shift, and go to state 256

	PAREN-62	go to state 255

State 201:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 138)

	$default	reduce using rule 138 (OperatorVoid)

State 202:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'= sub {'	shift, and go to state 258

State 203:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 . ';'	(Rule 137)

	';'	shift, and go to state 259

State 204:

	OPTIONAL-46 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-46)

State 205:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 206:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 185)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 186)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 261
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 260
	Literal	go to state 62
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Operator	go to state 77

State 207:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 184)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashReference	go to state 75
	ArrayReference	go to state 42
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77
	Expression	go to state 262
	Literal	go to state 62
	Variable	go to state 91
	HashDereferenced	go to state 49

State 208:

	STAR-56 -> STAR-56 VariableRetrieval .	(Rule 181)

	$default	reduce using rule 181 (STAR-56)

State 209:

	OPTIONAL-42 -> ListElements .	(Rule 100)

	$default	reduce using rule 100 (OPTIONAL-42)

State 210:

	Operator -> OP01_NAMED '(' OPTIONAL-42 . ')'	(Rule 102)

	')'	shift, and go to state 263

State 211:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP06_REGEX_MATCH	reduce using rule 105 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 212:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153

	')'	reduce using rule 120 (Operator)
	'..'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP16_LOGICAL_OR	reduce using rule 120 (Operator)
	OP17_LIST_RANGE	reduce using rule 120 (Operator)
	OP18_TERNARY	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP23_LOGICAL_AND	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 213:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 122)

	COLON	shift, and go to state 264

State 214:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148

	')'	reduce using rule 124 (Operator)
	'..'	reduce using rule 124 (Operator)
	';'	reduce using rule 124 (Operator)
	']'	reduce using rule 124 (Operator)
	'}'	reduce using rule 124 (Operator)
	OP21_LIST_COMMA	reduce using rule 124 (Operator)
	OP23_LOGICAL_AND	reduce using rule 124 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 124 (Operator)

State 215:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 109 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 109 (Operator)
	OP08_STRING_CAT	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 216:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP13_BITWISE_AND	reduce using rule 117 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 217:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP15_LOGICAL_AND	reduce using rule 119 (Operator)
	OP16_LOGICAL_OR	reduce using rule 119 (Operator)
	OP17_LIST_RANGE	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 218:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP13_BITWISE_AND	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 219:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 121 (Operator)
	'..'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP18_TERNARY	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 220:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 110 (Operator)
	OP08_STRING_CAT	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 221:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 222:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 223:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 108)

	OP06_REGEX_PATTERN	shift, and go to state 265

State 224:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 118 (Operator)
	OP15_LOGICAL_AND	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 225:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 226:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150

	')'	reduce using rule 125 (Operator)
	'..'	reduce using rule 125 (Operator)
	';'	reduce using rule 125 (Operator)
	']'	reduce using rule 125 (Operator)
	'}'	reduce using rule 125 (Operator)
	OP21_LIST_COMMA	reduce using rule 125 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (Operator)

State 227:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 35)

	'['	shift, and go to state 268
	'{'	shift, and go to state 266
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70

	Literal	go to state 269
	ConstantValue	go to state 267

State 228:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' . ';'	(Rule 34)

	';'	shift, and go to state 270

State 229:

	PLUS-12 -> PLUS-12 WORD .	(Rule 31)

	$default	reduce using rule 31 (PLUS-12)

State 230:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include . STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 271

State 231:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' . '1;'	(Rule 26)

	'1;'	shift, and go to state 272

State 232:

	PLUS-10 -> PLUS-10 Subroutine .	(Rule 24)

	$default	reduce using rule 24 (PLUS-10)

State 233:

	Expression -> WordScoped '(' OPTIONAL-47 ')' .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 234:

	PLUS-59 -> PLUS-59 . WORD	(Rule 194)
	ListElements -> OP01_NAMED_QW '(' PLUS-59 . ')'	(Rule 197)

	')'	shift, and go to state 274
	WORD	shift, and go to state 273

State 235:

	PLUS-59 -> WORD .	(Rule 195)

	$default	reduce using rule 195 (PLUS-59)

State 236:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 222)

	WORD	shift, and go to state 275

State 237:

	PAREN-57 -> OP21_LIST_COMMA . ListElement	(Rule 191)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 97
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	TypeInner	go to state 98
	Literal	go to state 62
	Expression	go to state 100
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	ListElement	go to state 276
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77

State 238:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 192)

	$default	reduce using rule 192 (STAR-58)

State 239:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-48 ')'	(Rule 153)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 97
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_QW	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	')'	reduce using rule 142 (OPTIONAL-48)

	ArrayDereferenced	go to state 80
	ListElements	go to state 277
	ListElement	go to state 99
	WordScoped	go to state 44
	Operator	go to state 77
	HashReference	go to state 75
	OPTIONAL-48	go to state 278
	ArrayReference	go to state 42
	Variable	go to state 91
	HashDereferenced	go to state 49
	Literal	go to state 62
	Expression	go to state 100
	TypeInner	go to state 98

State 240:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 189)

	$default	reduce using rule 189 (VariableModification)

State 241:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 190)

	$default	reduce using rule 190 (VariableModification)

State 242:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 221)

	$default	reduce using rule 221 (FileHandle)

State 243:

	FileHandle -> '{*' WORD '}' .	(Rule 220)

	$default	reduce using rule 220 (FileHandle)

State 244:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' . ';'	(Rule 135)

	';'	shift, and go to state 279

State 245:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 246:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-52 OPTIONAL-54	(Rule 171)

	$default	reduce using rule 167 (STAR-52)

	STAR-52	go to state 280

State 247:

	CodeBlock -> '{' . PLUS-55 '}'	(Rule 180)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'if ('	shift, and go to state 57
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 68
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	ArrayReference	go to state 42
	OPTIONAL-50	go to state 65
	Operation	go to state 281
	VariableDeclaration	go to state 45
	LoopLabel	go to state 47
	WordScoped	go to state 44
	HashDereferenced	go to state 49
	PAREN-49	go to state 73
	OperatorVoid	go to state 52
	VariableModification	go to state 72
	Variable	go to state 51
	Statement	go to state 56
	HashReference	go to state 75
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	PLUS-55	go to state 282
	Literal	go to state 62
	Conditional	go to state 60
	Expression	go to state 83

State 248:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 187)

	$default	reduce using rule 187 (VariableDeclaration)

State 249:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 188)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'<STDIN>'	shift, and go to state 181
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77
	HashReference	go to state 75
	ArrayReference	go to state 42
	ExpressionOrStdin	go to state 283
	Variable	go to state 91
	HashDereferenced	go to state 49
	Literal	go to state 62
	Expression	go to state 180

State 250:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 176)

	'('	shift, and go to state 284

State 251:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 49
	Variable	go to state 91
	Expression	go to state 285
	Literal	go to state 62
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	ArrayReference	go to state 42
	HashReference	go to state 75

State 252:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 177)

	'{'	shift, and go to state 247

	CodeBlock	go to state 286

State 253:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-61 . Expression	(Rule 208)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 287
	Literal	go to state 62
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77

State 254:

	OPTIONAL-61 -> TypeInner .	(Rule 206)

	$default	reduce using rule 206 (OPTIONAL-61)

State 255:

	STAR-63 -> STAR-63 PAREN-62 .	(Rule 213)

	$default	reduce using rule 213 (STAR-63)

State 256:

	PAREN-62 -> OP21_LIST_COMMA . HashEntry	(Rule 212)

	'%{'	shift, and go to state 54
	WORD	shift, and go to state 131

	HashDereferenced	go to state 134
	HashEntry	go to state 288

State 257:

	HashReference -> '{' HashEntry STAR-63 '}' .	(Rule 215)

	$default	reduce using rule 215 (HashReference)

State 258:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'( my'	shift, and go to state 289

	'%{'	reduce using rule 54 (OPTIONAL-21)
	'('	reduce using rule 54 (OPTIONAL-21)
	'@{'	reduce using rule 54 (OPTIONAL-21)
	'['	reduce using rule 54 (OPTIONAL-21)
	'for my integer'	reduce using rule 54 (OPTIONAL-21)
	'foreach my'	reduce using rule 54 (OPTIONAL-21)
	'if ('	reduce using rule 54 (OPTIONAL-21)
	'my'	reduce using rule 54 (OPTIONAL-21)
	'undef'	reduce using rule 54 (OPTIONAL-21)
	'while ('	reduce using rule 54 (OPTIONAL-21)
	'{'	reduce using rule 54 (OPTIONAL-21)
	LITERAL_NUMBER	reduce using rule 54 (OPTIONAL-21)
	LITERAL_STRING	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID_PAREN	reduce using rule 54 (OPTIONAL-21)
	OP03_MATH_INC_DEC	reduce using rule 54 (OPTIONAL-21)
	OP05_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-21)
	OP05_MATH_NEG	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 54 (OPTIONAL-21)
	OP19_LOOP_CONTROL	reduce using rule 54 (OPTIONAL-21)
	OP22_LOGICAL_NOT	reduce using rule 54 (OPTIONAL-21)
	VARIABLE_SYMBOL	reduce using rule 54 (OPTIONAL-21)
	WORD	reduce using rule 54 (OPTIONAL-21)
	WORD_SCOPED	reduce using rule 54 (OPTIONAL-21)

	OPTIONAL-21	go to state 291
	SubroutineArguments	go to state 290

State 259:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';' .	(Rule 137)

	$default	reduce using rule 137 (OperatorVoid)

State 260:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 185)

	'}'	shift, and go to state 292
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 261:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 186)
	WordScoped -> WORD .	(Rule 218)

	'}'	shift, and go to state 293

	'('	reduce using rule 218 (WordScoped)

State 262:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 184)

	']'	shift, and go to state 294
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 263:

	Operator -> OP01_NAMED '(' OPTIONAL-42 ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 264:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 295

State 265:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 108)

	'/'	shift, and go to state 296

State 266:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	WORD	shift, and go to state 297

State 267:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 35)

	';'	shift, and go to state 298

State 268:

	ConstantValue -> '[' . OPTIONAL-13 Literal STAR-16 ']'	(Rule 51)

	'my'	shift, and go to state 97

	LITERAL_NUMBER	reduce using rule 37 (OPTIONAL-13)
	LITERAL_STRING	reduce using rule 37 (OPTIONAL-13)

	OPTIONAL-13	go to state 300
	TypeInner	go to state 299

State 269:

	ConstantValue -> Literal .	(Rule 50)

	$default	reduce using rule 50 (ConstantValue)

State 270:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';' .	(Rule 34)

	$default	reduce using rule 34 (Include)

State 271:

	STAR-28 -> STAR-28 . Critic	(Rule 68)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 . STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'## no critic qw('	shift, and go to state 22

	'our %properties = ('	reduce using rule 71 (STAR-29)
	'use constant'	reduce using rule 71 (STAR-29)
	'use'	reduce using rule 71 (STAR-29)

	STAR-29	go to state 301
	Critic	go to state 302

State 272:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;' .	(Rule 26)

	$default	reduce using rule 26 (Package)

State 273:

	PLUS-59 -> PLUS-59 WORD .	(Rule 194)

	$default	reduce using rule 194 (PLUS-59)

State 274:

	ListElements -> OP01_NAMED_QW '(' PLUS-59 ')' .	(Rule 197)

	$default	reduce using rule 197 (ListElements)

State 275:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 222)

	OP19_VARIABLE_ASSIGN	shift, and go to state 303

State 276:

	PAREN-57 -> OP21_LIST_COMMA ListElement .	(Rule 191)

	$default	reduce using rule 191 (PAREN-57)

State 277:

	OPTIONAL-48 -> ListElements .	(Rule 141)

	$default	reduce using rule 141 (OPTIONAL-48)

State 278:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 . ')'	(Rule 153)

	')'	shift, and go to state 304

State 279:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 280:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 166)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 . OPTIONAL-54	(Rule 171)

	'else'	shift, and go to state 307
	'elsif ('	shift, and go to state 306

	$end	reduce using rule 170 (OPTIONAL-54)
	'%{'	reduce using rule 170 (OPTIONAL-54)
	'('	reduce using rule 170 (OPTIONAL-54)
	'@{'	reduce using rule 170 (OPTIONAL-54)
	'['	reduce using rule 170 (OPTIONAL-54)
	'for my integer'	reduce using rule 170 (OPTIONAL-54)
	'foreach my'	reduce using rule 170 (OPTIONAL-54)
	'if ('	reduce using rule 170 (OPTIONAL-54)
	'my'	reduce using rule 170 (OPTIONAL-54)
	'undef'	reduce using rule 170 (OPTIONAL-54)
	'while ('	reduce using rule 170 (OPTIONAL-54)
	'{'	reduce using rule 170 (OPTIONAL-54)
	'}'	reduce using rule 170 (OPTIONAL-54)
	LITERAL_NUMBER	reduce using rule 170 (OPTIONAL-54)
	LITERAL_STRING	reduce using rule 170 (OPTIONAL-54)
	OP01_NAMED	reduce using rule 170 (OPTIONAL-54)
	OP01_NAMED_VOID	reduce using rule 170 (OPTIONAL-54)
	OP01_NAMED_VOID_PAREN	reduce using rule 170 (OPTIONAL-54)
	OP03_MATH_INC_DEC	reduce using rule 170 (OPTIONAL-54)
	OP05_LOGICAL_NEG	reduce using rule 170 (OPTIONAL-54)
	OP05_MATH_NEG	reduce using rule 170 (OPTIONAL-54)
	OP10_NAMED_UNARY	reduce using rule 170 (OPTIONAL-54)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 170 (OPTIONAL-54)
	OP19_LOOP_CONTROL	reduce using rule 170 (OPTIONAL-54)
	OP22_LOGICAL_NOT	reduce using rule 170 (OPTIONAL-54)
	VARIABLE_SYMBOL	reduce using rule 170 (OPTIONAL-54)
	WORD	reduce using rule 170 (OPTIONAL-54)
	WORD_SCOPED	reduce using rule 170 (OPTIONAL-54)

	PAREN-51	go to state 308
	OPTIONAL-54	go to state 305
	PAREN-53	go to state 309

State 281:

	PLUS-55 -> Operation .	(Rule 179)

	$default	reduce using rule 179 (PLUS-55)

State 282:

	PLUS-55 -> PLUS-55 . Operation	(Rule 178)
	CodeBlock -> '{' PLUS-55 . '}'	(Rule 180)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'if ('	shift, and go to state 57
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	'}'	shift, and go to state 311
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 68
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	Operator	go to state 77
	ArrayDereferenced	go to state 80
	Statement	go to state 56
	HashReference	go to state 75
	Conditional	go to state 60
	Literal	go to state 62
	Expression	go to state 83
	WordScoped	go to state 44
	VariableDeclaration	go to state 45
	LoopLabel	go to state 47
	ArrayReference	go to state 42
	Operation	go to state 310
	OPTIONAL-50	go to state 65
	HashDereferenced	go to state 49
	VariableModification	go to state 72
	Variable	go to state 51
	OperatorVoid	go to state 52
	PAREN-49	go to state 73

State 283:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 188)

	';'	shift, and go to state 312

State 284:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 176)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'my'	shift, and go to state 97
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	KEYS_OR_VALUES	shift, and go to state 96
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_QW	shift, and go to state 95
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 49
	Variable	go to state 91
	TypeInner	go to state 98
	Expression	go to state 100
	Literal	go to state 62
	Operator	go to state 77
	ListElement	go to state 99
	WordScoped	go to state 44
	ListElements	go to state 313
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 42
	HashReference	go to state 75

State 285:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 175)

	'..'	shift, and go to state 314
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 286:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 177)

	$default	reduce using rule 177 (LoopWhile)

State 287:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-61 Expression .	(Rule 208)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

	'}'	reduce using rule 208 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 208 (HashEntry)

State 288:

	PAREN-62 -> OP21_LIST_COMMA HashEntry .	(Rule 212)

	$default	reduce using rule 212 (PAREN-62)

State 289:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	WORD	shift, and go to state 123

	Type	go to state 315

State 290:

	OPTIONAL-21 -> SubroutineArguments .	(Rule 53)

	$default	reduce using rule 53 (OPTIONAL-21)

State 291:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 . PLUS-22 '}' ';'	(Rule 57)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'if ('	shift, and go to state 57
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 68
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	Literal	go to state 62
	Expression	go to state 83
	Conditional	go to state 60
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	HashReference	go to state 75
	Statement	go to state 56
	HashDereferenced	go to state 49
	OperatorVoid	go to state 52
	PAREN-49	go to state 73
	VariableModification	go to state 72
	Variable	go to state 51
	VariableDeclaration	go to state 45
	LoopLabel	go to state 47
	WordScoped	go to state 44
	PLUS-22	go to state 317
	ArrayReference	go to state 42
	OPTIONAL-50	go to state 65
	Operation	go to state 316

State 292:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 185)

	$default	reduce using rule 185 (VariableRetrieval)

State 293:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 186)

	$default	reduce using rule 186 (VariableRetrieval)

State 294:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 184)

	$default	reduce using rule 184 (VariableRetrieval)

State 295:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 122)

	$default	reduce using rule 122 (Operator)

State 296:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 297:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	OP20_HASH_FATARROW	shift, and go to state 318

State 298:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 35)

	$default	reduce using rule 35 (Constant)

State 299:

	OPTIONAL-13 -> TypeInner .	(Rule 36)

	$default	reduce using rule 36 (OPTIONAL-13)

State 300:

	ConstantValue -> '[' OPTIONAL-13 . Literal STAR-16 ']'	(Rule 51)

	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70

	Literal	go to state 319

State 301:

	STAR-29 -> STAR-29 . Include	(Rule 70)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 . STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 26

	'our %properties = ('	reduce using rule 73 (STAR-30)
	'use constant'	reduce using rule 73 (STAR-30)

	Include	go to state 321
	STAR-30	go to state 320

State 302:

	STAR-28 -> STAR-28 Critic .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 303:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 222)

	$default	reduce using rule 222 (TypeInner)

State 304:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')' .	(Rule 153)

	$default	reduce using rule 153 (Expression)

State 305:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54 .	(Rule 171)

	$default	reduce using rule 171 (Conditional)

State 306:

	PAREN-51 -> 'elsif (' . Expression ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	HashDereferenced	go to state 49
	Variable	go to state 91
	Expression	go to state 322
	Literal	go to state 62
	Operator	go to state 77
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	ArrayReference	go to state 42
	HashReference	go to state 75

State 307:

	PAREN-53 -> 'else' . CodeBlock	(Rule 168)

	'{'	shift, and go to state 247

	CodeBlock	go to state 323

State 308:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 166)

	$default	reduce using rule 166 (STAR-52)

State 309:

	OPTIONAL-54 -> PAREN-53 .	(Rule 169)

	$default	reduce using rule 169 (OPTIONAL-54)

State 310:

	PLUS-55 -> PLUS-55 Operation .	(Rule 178)

	$default	reduce using rule 178 (PLUS-55)

State 311:

	CodeBlock -> '{' PLUS-55 '}' .	(Rule 180)

	$default	reduce using rule 180 (CodeBlock)

State 312:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 188)

	$default	reduce using rule 188 (VariableDeclaration)

State 313:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 176)

	')'	shift, and go to state 324

State 314:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Variable	go to state 91
	HashDereferenced	go to state 49
	Expression	go to state 325
	Literal	go to state 62
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77
	HashReference	go to state 75
	ArrayReference	go to state 42

State 315:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	VARIABLE_SYMBOL	shift, and go to state 326

State 316:

	PLUS-22 -> Operation .	(Rule 56)

	$default	reduce using rule 56 (PLUS-22)

State 317:

	PLUS-22 -> PLUS-22 . Operation	(Rule 55)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 . '}' ';'	(Rule 57)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'if ('	shift, and go to state 57
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	'}'	shift, and go to state 328
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 68
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	Expression	go to state 83
	Conditional	go to state 60
	Literal	go to state 62
	HashReference	go to state 75
	Statement	go to state 56
	Operator	go to state 77
	ArrayDereferenced	go to state 80
	HashDereferenced	go to state 49
	OperatorVoid	go to state 52
	PAREN-49	go to state 73
	VariableModification	go to state 72
	Variable	go to state 51
	ArrayReference	go to state 42
	OPTIONAL-50	go to state 65
	Operation	go to state 327
	VariableDeclaration	go to state 45
	LoopLabel	go to state 47
	WordScoped	go to state 44

State 318:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	'my'	shift, and go to state 97

	LITERAL_NUMBER	reduce using rule 44 (OPTIONAL-17)
	LITERAL_STRING	reduce using rule 44 (OPTIONAL-17)

	TypeInner	go to state 329
	OPTIONAL-17	go to state 330

State 319:

	ConstantValue -> '[' OPTIONAL-13 Literal . STAR-16 ']'	(Rule 51)

	$default	reduce using rule 42 (STAR-16)

	STAR-16	go to state 331

State 320:

	STAR-30 -> STAR-30 . Constant	(Rule 72)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 . Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'our %properties = ('	shift, and go to state 334
	'use constant'	shift, and go to state 34

	Constant	go to state 333
	Properties	go to state 332

State 321:

	STAR-29 -> STAR-29 Include .	(Rule 70)

	$default	reduce using rule 70 (STAR-29)

State 322:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	PAREN-51 -> 'elsif (' Expression . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 335
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 323:

	PAREN-53 -> 'else' CodeBlock .	(Rule 168)

	$default	reduce using rule 168 (PAREN-53)

State 324:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 176)

	'{'	shift, and go to state 247

	CodeBlock	go to state 336

State 325:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 175)

	')'	shift, and go to state 337
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 326:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 338

State 327:

	PLUS-22 -> PLUS-22 Operation .	(Rule 55)

	$default	reduce using rule 55 (PLUS-22)

State 328:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' . ';'	(Rule 57)

	';'	shift, and go to state 339

State 329:

	OPTIONAL-17 -> TypeInner .	(Rule 43)

	$default	reduce using rule 43 (OPTIONAL-17)

State 330:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 . Literal STAR-20 '}'	(Rule 52)

	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70

	Literal	go to state 340

State 331:

	STAR-16 -> STAR-16 . PAREN-15	(Rule 41)
	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 . ']'	(Rule 51)

	']'	shift, and go to state 343
	OP21_LIST_COMMA	shift, and go to state 342

	PAREN-15	go to state 341

State 332:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties . STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 75 (STAR-31)

	STAR-31	go to state 344

State 333:

	STAR-30 -> STAR-30 Constant .	(Rule 72)

	$default	reduce using rule 72 (STAR-30)

State 334:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-36 ')' ';'	(Rule 85)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 86)

	'%{'	shift, and go to state 54
	')'	shift, and go to state 345
	WORD	shift, and go to state 347

	HashDereferenced	go to state 348
	HashEntryTyped	go to state 346

State 335:

	PAREN-51 -> 'elsif (' Expression ')' . CodeBlock	(Rule 165)

	'{'	shift, and go to state 247

	CodeBlock	go to state 349

State 336:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 176)

	$default	reduce using rule 176 (LoopForEach)

State 337:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 175)

	'{'	shift, and go to state 247

	CodeBlock	go to state 350

State 338:

	STAR-24 -> STAR-24 . PAREN-23	(Rule 59)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	')'	shift, and go to state 353
	OP21_LIST_COMMA	shift, and go to state 351

	PAREN-23	go to state 352

State 339:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';' .	(Rule 57)

	$default	reduce using rule 57 (Subroutine)

State 340:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal . STAR-20 '}'	(Rule 52)

	$default	reduce using rule 49 (STAR-20)

	STAR-20	go to state 354

State 341:

	STAR-16 -> STAR-16 PAREN-15 .	(Rule 41)

	$default	reduce using rule 41 (STAR-16)

State 342:

	PAREN-15 -> OP21_LIST_COMMA . OPTIONAL-14 Literal	(Rule 40)

	'my'	shift, and go to state 97

	LITERAL_NUMBER	reduce using rule 39 (OPTIONAL-14)
	LITERAL_STRING	reduce using rule 39 (OPTIONAL-14)

	OPTIONAL-14	go to state 356
	TypeInner	go to state 355

State 343:

	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']' .	(Rule 51)

	$default	reduce using rule 51 (ConstantValue)

State 344:

	STAR-31 -> STAR-31 . Method	(Rule 74)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 . '1;' '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 359
	'our'	shift, and go to state 358

	Method	go to state 357

State 345:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 86)

	';'	shift, and go to state 360

State 346:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-36 ')' ';'	(Rule 85)

	$default	reduce using rule 84 (STAR-36)

	STAR-36	go to state 361

State 347:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 210)

	OP20_HASH_FATARROW	shift, and go to state 362

State 348:

	HashEntryTyped -> HashDereferenced .	(Rule 211)

	$default	reduce using rule 211 (HashEntryTyped)

State 349:

	PAREN-51 -> 'elsif (' Expression ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (PAREN-51)

State 350:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 175)

	$default	reduce using rule 175 (LoopFor)

State 351:

	PAREN-23 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 58)

	'my'	shift, and go to state 363

State 352:

	STAR-24 -> STAR-24 PAREN-23 .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 353:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	OP19_VARIABLE_ASSIGN	shift, and go to state 364

State 354:

	STAR-20 -> STAR-20 . PAREN-19	(Rule 48)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 . '}'	(Rule 52)

	'}'	shift, and go to state 366
	OP21_LIST_COMMA	shift, and go to state 365

	PAREN-19	go to state 367

State 355:

	OPTIONAL-14 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-14)

State 356:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 . Literal	(Rule 40)

	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70

	Literal	go to state 368

State 357:

	STAR-31 -> STAR-31 Method .	(Rule 74)

	$default	reduce using rule 74 (STAR-31)

State 358:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	WORD	shift, and go to state 123

	Type	go to state 369

State 359:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' . '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 370

State 360:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 86)

	$default	reduce using rule 86 (Properties)

State 361:

	STAR-36 -> STAR-36 . PAREN-35	(Rule 83)
	Properties -> 'our %properties = (' HashEntryTyped STAR-36 . ')' ';'	(Rule 85)

	')'	shift, and go to state 372
	OP21_LIST_COMMA	shift, and go to state 371

	PAREN-35	go to state 373

State 362:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 210)

	'my'	shift, and go to state 97

	TypeInner	go to state 374

State 363:

	PAREN-23 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 58)

	WORD	shift, and go to state 123

	Type	go to state 375

State 364:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-25	(Rule 63)

	'@_;'	shift, and go to state 376

State 365:

	PAREN-19 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	WORD	shift, and go to state 377

State 366:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}' .	(Rule 52)

	$default	reduce using rule 52 (ConstantValue)

State 367:

	STAR-20 -> STAR-20 PAREN-19 .	(Rule 48)

	$default	reduce using rule 48 (STAR-20)

State 368:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal .	(Rule 40)

	$default	reduce using rule 40 (PAREN-15)

State 369:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	VARIABLE_SYMBOL	shift, and go to state 378

State 370:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' . OPTIONAL-34	(Rule 81)

	'our'	shift, and go to state 71

	$end	reduce using rule 80 (OPTIONAL-34)
	'package'	reduce using rule 80 (OPTIONAL-34)

	OPTIONAL-34	go to state 380
	PLUS-32	go to state 382
	PAREN-33	go to state 379
	Subroutine	go to state 381

State 371:

	PAREN-35 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 82)

	'%{'	shift, and go to state 54
	WORD	shift, and go to state 347

	HashEntryTyped	go to state 383
	HashDereferenced	go to state 348

State 372:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' . ';'	(Rule 85)

	';'	shift, and go to state 384

State 373:

	STAR-36 -> STAR-36 PAREN-35 .	(Rule 83)

	$default	reduce using rule 83 (STAR-36)

State 374:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 210)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Operator	go to state 77
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	ArrayReference	go to state 42
	HashReference	go to state 75
	HashDereferenced	go to state 49
	Variable	go to state 91
	Expression	go to state 385
	Literal	go to state 62

State 375:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 386

State 376:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-25	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 387

State 377:

	PAREN-19 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	OP20_HASH_FATARROW	shift, and go to state 388

State 378:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'= sub {'	shift, and go to state 389

State 379:

	OPTIONAL-34 -> PAREN-33 .	(Rule 79)

	$default	reduce using rule 79 (OPTIONAL-34)

State 380:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34 .	(Rule 81)

	$default	reduce using rule 81 (Class)

State 381:

	PLUS-32 -> Subroutine .	(Rule 77)

	$default	reduce using rule 77 (PLUS-32)

State 382:

	PLUS-32 -> PLUS-32 . Subroutine	(Rule 76)
	PAREN-33 -> PLUS-32 . '1;' '1;'	(Rule 78)

	'1;'	shift, and go to state 391
	'our'	shift, and go to state 71

	Subroutine	go to state 390

State 383:

	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 82)

	$default	reduce using rule 82 (PAREN-35)

State 384:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';' .	(Rule 85)

	$default	reduce using rule 85 (Properties)

State 385:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 210)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

	')'	reduce using rule 210 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 210 (HashEntryTyped)

State 386:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 58)

	$default	reduce using rule 58 (PAREN-23)

State 387:

	STAR-25 -> STAR-25 . ArgumentCheck	(Rule 61)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25 .	(Rule 63)

	CHECK_OR_CHECKTRACE	shift, and go to state 393

	'%{'	reduce using rule 63 (SubroutineArguments)
	'('	reduce using rule 63 (SubroutineArguments)
	'@{'	reduce using rule 63 (SubroutineArguments)
	'['	reduce using rule 63 (SubroutineArguments)
	'for my integer'	reduce using rule 63 (SubroutineArguments)
	'foreach my'	reduce using rule 63 (SubroutineArguments)
	'if ('	reduce using rule 63 (SubroutineArguments)
	'my'	reduce using rule 63 (SubroutineArguments)
	'undef'	reduce using rule 63 (SubroutineArguments)
	'while ('	reduce using rule 63 (SubroutineArguments)
	'{'	reduce using rule 63 (SubroutineArguments)
	LITERAL_NUMBER	reduce using rule 63 (SubroutineArguments)
	LITERAL_STRING	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 63 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 63 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 63 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 63 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 63 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 63 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 63 (SubroutineArguments)
	WORD	reduce using rule 63 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 63 (SubroutineArguments)

	ArgumentCheck	go to state 392

State 388:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-18 Literal	(Rule 47)

	'my'	shift, and go to state 97

	LITERAL_NUMBER	reduce using rule 46 (OPTIONAL-18)
	LITERAL_STRING	reduce using rule 46 (OPTIONAL-18)

	OPTIONAL-18	go to state 394
	TypeInner	go to state 395

State 389:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'( my'	shift, and go to state 397

	'%{'	reduce using rule 88 (OPTIONAL-37)
	'('	reduce using rule 88 (OPTIONAL-37)
	'@{'	reduce using rule 88 (OPTIONAL-37)
	'['	reduce using rule 88 (OPTIONAL-37)
	'for my integer'	reduce using rule 88 (OPTIONAL-37)
	'foreach my'	reduce using rule 88 (OPTIONAL-37)
	'if ('	reduce using rule 88 (OPTIONAL-37)
	'my'	reduce using rule 88 (OPTIONAL-37)
	'undef'	reduce using rule 88 (OPTIONAL-37)
	'while ('	reduce using rule 88 (OPTIONAL-37)
	'{'	reduce using rule 88 (OPTIONAL-37)
	LITERAL_NUMBER	reduce using rule 88 (OPTIONAL-37)
	LITERAL_STRING	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID_PAREN	reduce using rule 88 (OPTIONAL-37)
	OP03_MATH_INC_DEC	reduce using rule 88 (OPTIONAL-37)
	OP05_LOGICAL_NEG	reduce using rule 88 (OPTIONAL-37)
	OP05_MATH_NEG	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 88 (OPTIONAL-37)
	OP19_LOOP_CONTROL	reduce using rule 88 (OPTIONAL-37)
	OP22_LOGICAL_NOT	reduce using rule 88 (OPTIONAL-37)
	VARIABLE_SYMBOL	reduce using rule 88 (OPTIONAL-37)
	WORD	reduce using rule 88 (OPTIONAL-37)
	WORD_SCOPED	reduce using rule 88 (OPTIONAL-37)

	MethodArguments	go to state 398
	OPTIONAL-37	go to state 396

State 390:

	PLUS-32 -> PLUS-32 Subroutine .	(Rule 76)

	$default	reduce using rule 76 (PLUS-32)

State 391:

	PAREN-33 -> PLUS-32 '1;' . '1;'	(Rule 78)

	'1;'	shift, and go to state 399

State 392:

	STAR-25 -> STAR-25 ArgumentCheck .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 393:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'('	shift, and go to state 400

State 394:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 . Literal	(Rule 47)

	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70

	Literal	go to state 401

State 395:

	OPTIONAL-18 -> TypeInner .	(Rule 45)

	$default	reduce using rule 45 (OPTIONAL-18)

State 396:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 . PLUS-38 '}' ';'	(Rule 91)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'if ('	shift, and go to state 57
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 68
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	ArrayDereferenced	go to state 80
	PLUS-38	go to state 403
	Operator	go to state 77
	HashReference	go to state 75
	Statement	go to state 56
	Conditional	go to state 60
	Literal	go to state 62
	Expression	go to state 83
	WordScoped	go to state 44
	LoopLabel	go to state 47
	VariableDeclaration	go to state 45
	Operation	go to state 402
	OPTIONAL-50	go to state 65
	ArrayReference	go to state 42
	VariableModification	go to state 72
	Variable	go to state 51
	PAREN-49	go to state 73
	OperatorVoid	go to state 52
	HashDereferenced	go to state 49

State 397:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	TYPE_CLASS_OR_SELF	shift, and go to state 404

State 398:

	OPTIONAL-37 -> MethodArguments .	(Rule 87)

	$default	reduce using rule 87 (OPTIONAL-37)

State 399:

	PAREN-33 -> PLUS-32 '1;' '1;' .	(Rule 78)

	$default	reduce using rule 78 (PAREN-33)

State 400:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Expression	go to state 405
	Literal	go to state 62
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	ArrayDereferenced	go to state 80
	WordScoped	go to state 44
	Operator	go to state 77

State 401:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal .	(Rule 47)

	$default	reduce using rule 47 (PAREN-19)

State 402:

	PLUS-38 -> Operation .	(Rule 90)

	$default	reduce using rule 90 (PLUS-38)

State 403:

	PLUS-38 -> PLUS-38 . Operation	(Rule 89)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 . '}' ';'	(Rule 91)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'if ('	shift, and go to state 57
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	'}'	shift, and go to state 406
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 53
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 68
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 12

	'for my integer'	reduce using rule 159 (OPTIONAL-50)
	'foreach my'	reduce using rule 159 (OPTIONAL-50)
	'while ('	reduce using rule 159 (OPTIONAL-50)

	ArrayDereferenced	go to state 80
	Operator	go to state 77
	Statement	go to state 56
	HashReference	go to state 75
	Expression	go to state 83
	Literal	go to state 62
	Conditional	go to state 60
	WordScoped	go to state 44
	VariableDeclaration	go to state 45
	LoopLabel	go to state 47
	Operation	go to state 407
	OPTIONAL-50	go to state 65
	ArrayReference	go to state 42
	Variable	go to state 51
	VariableModification	go to state 72
	PAREN-49	go to state 73
	OperatorVoid	go to state 52
	HashDereferenced	go to state 49

State 404:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	$default	reduce using rule 94 (STAR-40)

	STAR-40	go to state 408

State 405:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-27 ')' ';'	(Rule 67)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP21_LIST_COMMA	shift, and go to state 410
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

	')'	reduce using rule 66 (OPTIONAL-27)

	PAREN-26	go to state 411
	OPTIONAL-27	go to state 409

State 406:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' . ';'	(Rule 91)

	';'	shift, and go to state 412

State 407:

	PLUS-38 -> PLUS-38 Operation .	(Rule 89)

	$default	reduce using rule 89 (PLUS-38)

State 408:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 93)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	')'	shift, and go to state 415
	OP21_LIST_COMMA	shift, and go to state 413

	PAREN-39	go to state 414

State 409:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 . ')' ';'	(Rule 67)

	')'	shift, and go to state 416

State 410:

	PAREN-26 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 64)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Literal	go to state 62
	Expression	go to state 417
	Variable	go to state 91
	HashDereferenced	go to state 49
	HashReference	go to state 75
	ArrayReference	go to state 42
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77

State 411:

	OPTIONAL-27 -> PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-27)

State 412:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';' .	(Rule 91)

	$default	reduce using rule 91 (Method)

State 413:

	PAREN-39 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 92)

	'my'	shift, and go to state 418

State 414:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 93)

	$default	reduce using rule 93 (STAR-40)

State 415:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	OP19_VARIABLE_ASSIGN	shift, and go to state 419

State 416:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' . ';'	(Rule 67)

	';'	shift, and go to state 420

State 417:

	PAREN-26 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP21_LIST_COMMA	shift, and go to state 421
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

State 418:

	PAREN-39 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 92)

	WORD	shift, and go to state 123

	Type	go to state 422

State 419:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-41	(Rule 97)

	'@_;'	shift, and go to state 423

State 420:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';' .	(Rule 67)

	$default	reduce using rule 67 (ArgumentCheck)

State 421:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 64)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 58
	'@{'	shift, and go to state 55
	'['	shift, and go to state 46
	'undef'	shift, and go to state 76
	'{'	shift, and go to state 67
	LITERAL_NUMBER	shift, and go to state 63
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 82
	OP03_MATH_INC_DEC	shift, and go to state 74
	OP05_LOGICAL_NEG	shift, and go to state 50
	OP05_MATH_NEG	shift, and go to state 48
	OP10_NAMED_UNARY	shift, and go to state 59
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 11
	WORD_SCOPED	shift, and go to state 12

	Variable	go to state 91
	HashDereferenced	go to state 49
	Literal	go to state 62
	Expression	go to state 424
	WordScoped	go to state 44
	ArrayDereferenced	go to state 80
	Operator	go to state 77
	HashReference	go to state 75
	ArrayReference	go to state 42

State 422:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 92)

	VARIABLE_SYMBOL	shift, and go to state 425

State 423:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-41	(Rule 97)

	$default	reduce using rule 96 (STAR-41)

	STAR-41	go to state 426

State 424:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 159
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 151
	OP08_MATH_ADD_SUB	shift, and go to state 156
	OP08_STRING_CAT	shift, and go to state 157
	OP09_BITWISE_SHIFT	shift, and go to state 158
	OP11_COMPARE_LT_GT	shift, and go to state 161
	OP12_COMPARE_EQ_NEQ	shift, and go to state 154
	OP13_BITWISE_AND	shift, and go to state 152
	OP14_BITWISE_OR_XOR	shift, and go to state 160
	OP15_LOGICAL_AND	shift, and go to state 153
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 155
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 150
	OP24_LOGICAL_OR_XOR	shift, and go to state 162

	')'	reduce using rule 64 (PAREN-26)

State 425:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 92)

	$default	reduce using rule 92 (PAREN-39)

State 426:

	STAR-41 -> STAR-41 . ArgumentCheck	(Rule 95)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41 .	(Rule 97)

	CHECK_OR_CHECKTRACE	shift, and go to state 393

	'%{'	reduce using rule 97 (MethodArguments)
	'('	reduce using rule 97 (MethodArguments)
	'@{'	reduce using rule 97 (MethodArguments)
	'['	reduce using rule 97 (MethodArguments)
	'for my integer'	reduce using rule 97 (MethodArguments)
	'foreach my'	reduce using rule 97 (MethodArguments)
	'if ('	reduce using rule 97 (MethodArguments)
	'my'	reduce using rule 97 (MethodArguments)
	'undef'	reduce using rule 97 (MethodArguments)
	'while ('	reduce using rule 97 (MethodArguments)
	'{'	reduce using rule 97 (MethodArguments)
	LITERAL_NUMBER	reduce using rule 97 (MethodArguments)
	LITERAL_STRING	reduce using rule 97 (MethodArguments)
	OP01_NAMED	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 97 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 97 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 97 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 97 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 97 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 97 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 97 (MethodArguments)
	WORD	reduce using rule 97 (MethodArguments)
	WORD_SCOPED	reduce using rule 97 (MethodArguments)

	ArgumentCheck	go to state 427

State 427:

	STAR-41 -> STAR-41 ArgumentCheck .	(Rule 95)

	$default	reduce using rule 95 (STAR-41)


Summary:
--------
Number of rules         : 227
Number of terminals     : 85
Number of non-terminals : 110
Number of states        : 428
