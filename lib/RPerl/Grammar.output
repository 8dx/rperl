Conflicts:
----------
Conflict in state 115 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 115 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 115 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 115 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 115 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 115 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 115 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 115 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 115 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 115 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 115 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 115 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 115 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 115 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 115 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 115 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 116 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 116 between rule 108 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 116 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 116 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 116 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 116 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 116 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 116 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 116 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 116 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 116 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 116 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 116 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 116 between rule 108 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 116 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 116 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 121 between rule 101 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 121 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 121 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 121 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 121 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 121 between rule 101 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 121 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 121 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 121 between rule 101 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 121 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 121 between rule 101 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 121 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 121 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 121 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 121 between rule 101 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 121 between rule 101 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 136 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 136 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 136 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 136 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 136 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 136 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 136 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 136 between rule 118 and token OP18_TERNARY resolved as shift.
Conflict in state 136 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 136 between rule 118 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 136 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 136 between rule 118 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 136 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 136 between rule 118 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 136 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 136 between rule 118 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 170 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 170 between rule 119 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 170 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 170 between rule 119 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 170 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 170 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 170 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 170 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 170 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 170 between rule 119 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 170 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 170 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 170 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 170 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 170 between rule 119 and token OP18_TERNARY resolved as shift.
Conflict in state 170 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 171 between rule 100 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 171 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 171 between rule 100 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 171 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 171 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 171 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 171 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 171 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 171 between rule 100 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 171 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 171 between rule 100 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 171 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 171 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 171 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 171 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 171 between rule 100 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 173 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 173 between rule 120 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 173 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 173 between rule 120 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 173 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 173 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 173 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 173 between rule 120 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 173 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 173 between rule 120 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 173 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 173 between rule 120 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 173 between rule 120 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 173 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 173 between rule 120 and token OP18_TERNARY resolved as shift.
Conflict in state 173 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 174 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 174 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 174 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 174 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 174 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 174 between rule 110 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 174 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 174 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 174 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 174 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 174 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 174 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 174 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 174 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 174 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 174 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 175 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 175 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 175 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 175 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 175 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 175 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 175 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 175 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 175 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 175 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 175 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 175 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 175 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 175 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 175 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 175 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 176 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 176 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 176 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 176 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 176 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 176 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 176 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 176 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 176 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 176 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 176 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 176 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 176 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 176 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 176 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 176 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 177 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 177 between rule 116 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 177 between rule 116 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 177 between rule 116 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 177 between rule 116 and token OP17_LIST_RANGE resolved as error.
Conflict in state 177 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 177 between rule 116 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 177 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 177 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 177 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 177 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 177 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 177 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 177 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 177 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 177 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 178 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 178 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 178 between rule 113 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 178 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 178 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 178 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 178 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 178 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 178 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 178 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 178 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 178 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 178 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 178 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 178 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 178 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 180 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 180 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 180 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 180 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 180 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 180 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 180 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 180 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 180 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 180 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 180 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 180 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 180 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 180 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 180 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 180 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 181 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 181 between rule 115 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 181 between rule 115 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 181 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 181 between rule 115 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 181 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 181 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 181 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 181 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 181 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 181 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 181 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 181 between rule 115 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 181 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 181 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 182 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 182 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 182 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 182 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 182 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 182 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 182 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 182 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 182 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 182 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 182 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 182 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 182 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 182 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 182 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 182 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 183 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 183 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 183 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 183 between rule 104 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 183 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 183 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 183 between rule 104 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 183 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 183 between rule 104 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 183 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 183 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 183 between rule 104 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 183 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 183 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 183 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 183 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 184 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 184 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 184 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 184 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 184 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 184 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 184 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 184 between rule 114 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 184 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 184 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 184 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 184 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 184 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 184 between rule 114 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 184 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 184 between rule 114 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 185 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 185 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 185 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 185 between rule 107 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 185 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 185 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 185 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 185 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 185 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 185 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 185 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 185 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 185 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 185 between rule 107 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 185 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 185 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Include
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Constant
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Subroutine
10:	STAR-4 -> /* empty */
11:	PLUS-5 -> PLUS-5 Operation
12:	PLUS-5 -> Operation
13:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5
14:	Module -> Package
15:	Module -> Class
16:	STAR-6 -> STAR-6 Include
17:	STAR-6 -> /* empty */
18:	STAR-7 -> STAR-7 Constant
19:	STAR-7 -> /* empty */
20:	PLUS-8 -> PLUS-8 Subroutine
21:	PLUS-8 -> Subroutine
22:	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'
23:	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes
24:	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub
25:	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' ';' '}' ';'
26:	PLUS-9 -> PLUS-9 WORD
27:	PLUS-9 -> WORD
28:	Include -> 'use' WordScoped ';'
29:	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';'
30:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
31:	OPTIONAL-10 -> TypeInner
32:	OPTIONAL-10 -> /* empty */
33:	OPTIONAL-11 -> TypeInner
34:	OPTIONAL-11 -> /* empty */
35:	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL
36:	STAR-13 -> STAR-13 PAREN-12
37:	STAR-13 -> /* empty */
38:	OPTIONAL-14 -> TypeInner
39:	OPTIONAL-14 -> /* empty */
40:	OPTIONAL-15 -> TypeInner
41:	OPTIONAL-15 -> /* empty */
42:	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL
43:	STAR-17 -> STAR-17 PAREN-16
44:	STAR-17 -> /* empty */
45:	ConstantValue -> LITERAL
46:	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']'
47:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'
48:	OPTIONAL-18 -> SubroutineArguments
49:	OPTIONAL-18 -> /* empty */
50:	PLUS-19 -> PLUS-19 Operation
51:	PLUS-19 -> Operation
52:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'
53:	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
54:	STAR-21 -> STAR-21 PAREN-20
55:	STAR-21 -> /* empty */
56:	STAR-22 -> STAR-22 ArgumentCheck
57:	STAR-22 -> /* empty */
58:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22
59:	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
60:	OPTIONAL-24 -> PAREN-23
61:	OPTIONAL-24 -> /* empty */
62:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';'
63:	PLUS-25 -> PLUS-25 WordScoped
64:	PLUS-25 -> WordScoped
65:	STAR-26 -> STAR-26 Include
66:	STAR-26 -> /* empty */
67:	STAR-27 -> STAR-27 Constant
68:	STAR-27 -> /* empty */
69:	STAR-28 -> STAR-28 Method
70:	STAR-28 -> /* empty */
71:	PLUS-29 -> PLUS-29 Subroutine
72:	PLUS-29 -> Subroutine
73:	PAREN-30 -> PLUS-29 '1;1;'
74:	OPTIONAL-31 -> PAREN-30
75:	OPTIONAL-31 -> /* empty */
76:	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31
77:	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped
78:	STAR-33 -> STAR-33 PAREN-32
79:	STAR-33 -> /* empty */
80:	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';'
81:	Properties -> 'our %properties = (' ')' ';'
82:	OPTIONAL-34 -> MethodArguments
83:	OPTIONAL-34 -> /* empty */
84:	PLUS-35 -> PLUS-35 Operation
85:	PLUS-35 -> Operation
86:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'
87:	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
88:	STAR-37 -> STAR-37 PAREN-36
89:	STAR-37 -> /* empty */
90:	STAR-38 -> STAR-38 ArgumentCheck
91:	STAR-38 -> /* empty */
92:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38
93:	Operation -> Expression ';'
94:	Operation -> Statement
95:	OPTIONAL-39 -> ListElements
96:	OPTIONAL-39 -> /* empty */
97:	Operator -> OP01_NAMED '(' OPTIONAL-39 ')'
98:	Operator -> OP03_MATH_INC_DEC Variable
99:	Operator -> Variable OP03_MATH_INC_DEC
100:	Operator -> Expression OP04_MATH_POW Expression
101:	Operator -> OP05_LOGICAL_NEG Expression
102:	Operator -> OP05_MATH_NEG Expression ')'
103:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
104:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
105:	Operator -> Expression OP08_MATH_ADD_SUB Expression
106:	Operator -> Expression OP08_STRING_CAT Expression
107:	Operator -> Expression OP09_BITWISE_SHIFT Expression
108:	Operator -> OP10_NAMED_UNARY Expression
109:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
110:	Operator -> Expression OP11_COMPARE_LT_GT Expression
111:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
112:	Operator -> Expression OP13_BITWISE_AND Expression
113:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
114:	Operator -> Expression OP15_LOGICAL_AND Expression
115:	Operator -> Expression OP16_LOGICAL_OR Expression
116:	Operator -> Expression OP17_LIST_RANGE Expression
117:	Operator -> Expression OP18_TERNARY Variable COLON Variable
118:	Operator -> OP22_LOGICAL_NOT Expression
119:	Operator -> Expression OP23_LOGICAL_AND Expression
120:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
121:	OPTIONAL-40 -> ListElements
122:	OPTIONAL-40 -> /* empty */
123:	OPTIONAL-41 -> ListElements
124:	OPTIONAL-41 -> /* empty */
125:	OPTIONAL-42 -> ListElements
126:	OPTIONAL-42 -> /* empty */
127:	OPTIONAL-43 -> ListElements
128:	OPTIONAL-43 -> /* empty */
129:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';'
130:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';'
131:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';'
132:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';'
133:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
134:	OPTIONAL-44 -> ListElements
135:	OPTIONAL-44 -> /* empty */
136:	OPTIONAL-45 -> ListElements
137:	OPTIONAL-45 -> /* empty */
138:	Expression -> 'undef'
139:	Expression -> LITERAL
140:	Expression -> Variable
141:	Expression -> ArrayReference
142:	Expression -> ArrayDereferenced
143:	Expression -> HashReference
144:	Expression -> HashDereferenced
145:	Expression -> '{' '}'
146:	Expression -> Operator
147:	Expression -> WordScoped '(' OPTIONAL-44 ')'
148:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'
149:	Expression -> '(' Expression ')'
150:	PAREN-46 -> LoopLabel COLON
151:	OPTIONAL-47 -> PAREN-46
152:	OPTIONAL-47 -> /* empty */
153:	Statement -> Conditional
154:	Statement -> OPTIONAL-47 Loop
155:	Statement -> OperatorVoid
156:	Statement -> VariableDeclaration
157:	Statement -> VariableModification
158:	PAREN-48 -> 'elsif (' Expression ')' CodeBlock
159:	STAR-49 -> STAR-49 PAREN-48
160:	STAR-49 -> /* empty */
161:	PAREN-50 -> 'else' CodeBlock
162:	OPTIONAL-51 -> PAREN-50
163:	OPTIONAL-51 -> /* empty */
164:	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51
165:	Loop -> LoopFor
166:	Loop -> LoopForEach
167:	Loop -> LoopWhile
168:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
169:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
170:	LoopWhile -> 'while (' Expression ')' CodeBlock
171:	PLUS-52 -> PLUS-52 Operation
172:	PLUS-52 -> Operation
173:	CodeBlock -> '{' PLUS-52 '}'
174:	STAR-53 -> STAR-53 VariableRetrieval
175:	STAR-53 -> /* empty */
176:	Variable -> VARIABLE_SYMBOL STAR-53
177:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
178:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
179:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
180:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
181:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'
182:	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';'
183:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
184:	PAREN-54 -> OP21_LIST_COMMA ListElement
185:	STAR-55 -> STAR-55 PAREN-54
186:	STAR-55 -> /* empty */
187:	ListElements -> ListElement STAR-55
188:	ListElement -> Expression
189:	ListElement -> TypeInner Expression
190:	ListElement -> KEYS_OR_VALUES HashDereferenced
191:	OPTIONAL-56 -> ListElements
192:	OPTIONAL-56 -> /* empty */
193:	ArrayReference -> '[' OPTIONAL-56 ']'
194:	ArrayDereferenced -> '@{' Variable '}'
195:	ArrayDereferenced -> '@{' ArrayReference '}'
196:	OPTIONAL-57 -> TypeInner
197:	OPTIONAL-57 -> /* empty */
198:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 Expression
199:	HashEntry -> HashDereferenced
200:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
201:	HashEntryTyped -> HashDereferenced
202:	PAREN-58 -> OP21_LIST_COMMA HashEntry
203:	STAR-59 -> STAR-59 PAREN-58
204:	STAR-59 -> /* empty */
205:	HashReference -> '{' HashEntry STAR-59 '}'
206:	HashDereferenced -> '%{' Variable '}'
207:	HashDereferenced -> '%{' HashReference '}'
208:	WordScoped -> WORD
209:	WordScoped -> WORD_SCOPED
210:	FileHandle -> '{*' WORD '}'
211:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
212:	Type -> WORD
213:	LoopLabel -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 8
	SHEBANG	shift, and go to state 1

	PLUS-1	go to state 5
	Class	go to state 6
	Package	go to state 7
	CompileUnit	go to state 2
	Module	go to state 3
	Program	go to state 4

State 1:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use strict;'	shift, and go to state 10

	Header	go to state 9

State 2:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 11

State 3:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 4:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 5:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 8

	$end	reduce using rule 4 (CompileUnit)

	Class	go to state 6
	Package	go to state 7
	Module	go to state 12

State 6:

	Module -> Class .	(Rule 15)

	$default	reduce using rule 15 (Module)

State 7:

	Module -> Package .	(Rule 14)

	$default	reduce using rule 14 (Module)

State 8:

	Package -> 'package' . WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 13

State 9:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 PLUS-5	(Rule 13)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 16

State 10:

	Header -> 'use strict;' . 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	'use warnings;'	shift, and go to state 17

State 11:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 12:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 13:

	Package -> 'package' WordScoped . ';' Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	';'	shift, and go to state 18

State 14:

	WordScoped -> WORD_SCOPED .	(Rule 209)

	$default	reduce using rule 209 (WordScoped)

State 15:

	WordScoped -> WORD .	(Rule 208)

	$default	reduce using rule 208 (WordScoped)

State 16:

	STAR-2 -> STAR-2 . Include	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 PLUS-5	(Rule 13)

	'use'	shift, and go to state 20

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)
	WORD_SCOPED	reduce using rule 8 (STAR-3)

	STAR-3	go to state 19
	Include	go to state 21

State 17:

	Header -> 'use strict;' 'use warnings;' . 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	'our $VERSION ='	shift, and go to state 22

State 18:

	Package -> 'package' WordScoped ';' . Header STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	'use strict;'	shift, and go to state 10

	Header	go to state 23

State 19:

	STAR-3 -> STAR-3 . Constant	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 PLUS-5	(Rule 13)

	'use constant'	shift, and go to state 25

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)
	WORD_SCOPED	reduce using rule 10 (STAR-4)

	Constant	go to state 26
	STAR-4	go to state 24

State 20:

	Include -> 'use' . WordScoped ';'	(Rule 28)
	Include -> 'use' . WordScoped 'qw(' PLUS-9 ')' ';'	(Rule 29)

	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 27

State 21:

	STAR-2 -> STAR-2 Include .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 22:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' . VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	VERSION_NUMBER	shift, and go to state 28

State 23:

	Package -> 'package' WordScoped ';' Header . STAR-6 STAR-7 PLUS-8 '1;1;'	(Rule 22)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	'use parent qw('	shift, and go to state 30

	'our'	reduce using rule 17 (STAR-6)
	'use constant'	reduce using rule 17 (STAR-6)
	'use'	reduce using rule 17 (STAR-6)

	STAR-6	go to state 29

State 24:

	STAR-4 -> STAR-4 . Subroutine	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . PLUS-5	(Rule 13)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 69
	'our'	shift, and go to state 32
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 61
	OP01_NAMED_VOID_PAREN	shift, and go to state 55
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 56
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	Operator	go to state 53
	Conditional	go to state 52
	ArrayReference	go to state 54
	PLUS-5	go to state 57
	Subroutine	go to state 35
	VariableDeclaration	go to state 34
	Statement	go to state 37
	Expression	go to state 39
	WordScoped	go to state 59
	VariableModification	go to state 41
	LoopLabel	go to state 62
	PAREN-46	go to state 42
	Operation	go to state 66
	OperatorVoid	go to state 46
	Variable	go to state 47
	HashReference	go to state 68
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	OPTIONAL-47	go to state 51

State 25:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 30)

	WORD	shift, and go to state 72

State 26:

	STAR-3 -> STAR-3 Constant .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 27:

	Include -> 'use' WordScoped . ';'	(Rule 28)
	Include -> 'use' WordScoped . 'qw(' PLUS-9 ')' ';'	(Rule 29)

	';'	shift, and go to state 73
	'qw('	shift, and go to state 74

State 28:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER . ';' 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	';'	shift, and go to state 75

State 29:

	STAR-6 -> STAR-6 . Include	(Rule 16)
	Package -> 'package' WordScoped ';' Header STAR-6 . STAR-7 PLUS-8 '1;1;'	(Rule 22)

	'use'	shift, and go to state 20

	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)

	Include	go to state 77
	STAR-7	go to state 76

State 30:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	PLUS-25	go to state 79
	WordScoped	go to state 78

State 31:

	Expression -> '{' . '}'	(Rule 145)
	HashReference -> '{' . HashEntry STAR-59 '}'	(Rule 205)

	'%{'	shift, and go to state 67
	'}'	shift, and go to state 81
	WORD	shift, and go to state 82

	HashEntry	go to state 80
	HashDereferenced	go to state 83

State 32:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 52)

	WORD	shift, and go to state 85

	Type	go to state 84

State 33:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 194)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 195)

	'['	shift, and go to state 38
	VARIABLE_SYMBOL	shift, and go to state 70

	Variable	go to state 87
	ArrayReference	go to state 86

State 34:

	Statement -> VariableDeclaration .	(Rule 156)

	$default	reduce using rule 156 (Statement)

State 35:

	STAR-4 -> STAR-4 Subroutine .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 36:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 102)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	ArrayReference	go to state 54
	Operator	go to state 53
	Variable	go to state 88
	HashReference	go to state 68
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	Expression	go to state 89
	ArrayDereferenced	go to state 49

State 37:

	Operation -> Statement .	(Rule 94)

	$default	reduce using rule 94 (Operation)

State 38:

	ArrayReference -> '[' . OPTIONAL-56 ']'	(Rule 193)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	']'	reduce using rule 192 (OPTIONAL-56)

	TypeInner	go to state 94
	Operator	go to state 53
	ArrayReference	go to state 54
	ListElement	go to state 92
	Variable	go to state 88
	HashReference	go to state 68
	OPTIONAL-56	go to state 90
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Expression	go to state 96
	ArrayDereferenced	go to state 49
	ListElements	go to state 95

State 39:

	Operation -> Expression . ';'	(Rule 93)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	';'	shift, and go to state 113
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 40:

	Expression -> '(' . Expression ')'	(Rule 149)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 68
	Variable	go to state 88
	Operator	go to state 53
	ArrayReference	go to state 54
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	Expression	go to state 114
	ArrayDereferenced	go to state 49

State 41:

	Statement -> VariableModification .	(Rule 157)

	$default	reduce using rule 157 (Statement)

State 42:

	OPTIONAL-47 -> PAREN-46 .	(Rule 151)

	$default	reduce using rule 151 (OPTIONAL-47)

State 43:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 109)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ArrayDereferenced	go to state 49
	Expression	go to state 115
	Operator	go to state 53
	ArrayReference	go to state 54
	HashReference	go to state 68
	Variable	go to state 88

State 44:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 108)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 53
	ArrayReference	go to state 54
	HashReference	go to state 68
	Variable	go to state 88
	Expression	go to state 116
	ArrayDereferenced	go to state 49
	WordScoped	go to state 59
	HashDereferenced	go to state 50

State 45:

	WordScoped -> WORD .	(Rule 208)
	LoopLabel -> WORD .	(Rule 213)

	'('	reduce using rule 208 (WordScoped)
	COLON	reduce using rule 213 (LoopLabel)

State 46:

	Statement -> OperatorVoid .	(Rule 155)

	$default	reduce using rule 155 (Statement)

State 47:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 99)
	Expression -> Variable .	(Rule 140)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 148)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 182)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 183)

	OP02_METHOD_THINARROW	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP19_VARIABLE_ASSIGN	shift, and go to state 118
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 119

	';'	reduce using rule 140 (Expression)
	OP04_MATH_POW	reduce using rule 140 (Expression)
	OP06_REGEX_MATCH	reduce using rule 140 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 140 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 140 (Expression)
	OP08_STRING_CAT	reduce using rule 140 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 140 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 140 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 140 (Expression)
	OP13_BITWISE_AND	reduce using rule 140 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 140 (Expression)
	OP15_LOGICAL_AND	reduce using rule 140 (Expression)
	OP16_LOGICAL_OR	reduce using rule 140 (Expression)
	OP17_LIST_RANGE	reduce using rule 140 (Expression)
	OP18_TERNARY	reduce using rule 140 (Expression)
	OP23_LOGICAL_AND	reduce using rule 140 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 140 (Expression)

State 48:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 101)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	ArrayDereferenced	go to state 49
	Expression	go to state 121
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Operator	go to state 53
	ArrayReference	go to state 54
	Variable	go to state 88
	HashReference	go to state 68

State 49:

	Expression -> ArrayDereferenced .	(Rule 142)

	$default	reduce using rule 142 (Expression)

State 50:

	Expression -> HashDereferenced .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 51:

	Statement -> OPTIONAL-47 . Loop	(Rule 154)

	'for my integer'	shift, and go to state 122
	'foreach my'	shift, and go to state 128
	'while ('	shift, and go to state 123

	LoopFor	go to state 126
	LoopWhile	go to state 125
	Loop	go to state 124
	LoopForEach	go to state 127

State 52:

	Statement -> Conditional .	(Rule 153)

	$default	reduce using rule 153 (Statement)

State 53:

	Expression -> Operator .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 54:

	Expression -> ArrayReference .	(Rule 141)

	$default	reduce using rule 141 (Expression)

State 55:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-40 ')' ';'	(Rule 129)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-41 ')' ';'	(Rule 130)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	'{*'	shift, and go to state 130
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 122 (OPTIONAL-40)

	Variable	go to state 88
	HashReference	go to state 68
	TypeInner	go to state 94
	Operator	go to state 53
	ArrayReference	go to state 54
	ListElement	go to state 92
	ListElements	go to state 129
	OPTIONAL-40	go to state 131
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	FileHandle	go to state 132
	Expression	go to state 96
	ArrayDereferenced	go to state 49

State 56:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 133)

	WORD	shift, and go to state 134

	LoopLabel	go to state 133

State 57:

	PLUS-5 -> PLUS-5 . Operation	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 PLUS-5 .	(Rule 13)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 69
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 61
	OP01_NAMED_VOID_PAREN	shift, and go to state 55
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 56
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 14

	$end	reduce using rule 13 (Program)
	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	HashReference	go to state 68
	Variable	go to state 47
	OperatorVoid	go to state 46
	Operation	go to state 135
	PAREN-46	go to state 42
	OPTIONAL-47	go to state 51
	HashDereferenced	go to state 50
	ArrayDereferenced	go to state 49
	Statement	go to state 37
	VariableDeclaration	go to state 34
	Operator	go to state 53
	Conditional	go to state 52
	ArrayReference	go to state 54
	LoopLabel	go to state 62
	VariableModification	go to state 41
	WordScoped	go to state 59
	Expression	go to state 39

State 58:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 118)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 68
	Variable	go to state 88
	Operator	go to state 53
	ArrayReference	go to state 54
	Expression	go to state 136
	ArrayDereferenced	go to state 49
	WordScoped	go to state 59
	HashDereferenced	go to state 50

State 59:

	Expression -> WordScoped . '(' OPTIONAL-44 ')'	(Rule 147)

	'('	shift, and go to state 137

State 60:

	Expression -> LITERAL .	(Rule 139)

	$default	reduce using rule 139 (Expression)

State 61:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-42 ';'	(Rule 131)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-43 ';'	(Rule 132)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	'{*'	shift, and go to state 130
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	';'	reduce using rule 126 (OPTIONAL-42)

	ListElements	go to state 140
	Expression	go to state 96
	ArrayDereferenced	go to state 49
	FileHandle	go to state 138
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	OPTIONAL-42	go to state 139
	Variable	go to state 88
	HashReference	go to state 68
	ArrayReference	go to state 54
	Operator	go to state 53
	ListElement	go to state 92
	TypeInner	go to state 94

State 62:

	PAREN-46 -> LoopLabel . COLON	(Rule 150)

	COLON	shift, and go to state 141

State 63:

	Operator -> OP01_NAMED . '(' OPTIONAL-39 ')'	(Rule 97)

	'('	shift, and go to state 142

State 64:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 164)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 68
	Variable	go to state 88
	ArrayReference	go to state 54
	Operator	go to state 53
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ArrayDereferenced	go to state 49
	Expression	go to state 143

State 65:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 98)

	VARIABLE_SYMBOL	shift, and go to state 70

	Variable	go to state 144

State 66:

	PLUS-5 -> Operation .	(Rule 12)

	$default	reduce using rule 12 (PLUS-5)

State 67:

	HashDereferenced -> '%{' . Variable '}'	(Rule 206)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 207)

	'{'	shift, and go to state 146
	VARIABLE_SYMBOL	shift, and go to state 70

	Variable	go to state 145
	HashReference	go to state 147

State 68:

	Expression -> HashReference .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 69:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 180)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 181)

	WORD	shift, and go to state 85

	Type	go to state 148

State 70:

	Variable -> VARIABLE_SYMBOL . STAR-53	(Rule 176)

	$default	reduce using rule 175 (STAR-53)

	STAR-53	go to state 149

State 71:

	Expression -> 'undef' .	(Rule 138)

	$default	reduce using rule 138 (Expression)

State 72:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 30)

	OP20_HASH_FATARROW	shift, and go to state 150

State 73:

	Include -> 'use' WordScoped ';' .	(Rule 28)

	$default	reduce using rule 28 (Include)

State 74:

	Include -> 'use' WordScoped 'qw(' . PLUS-9 ')' ';'	(Rule 29)

	WORD	shift, and go to state 152

	PLUS-9	go to state 151

State 75:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' . 'use Carp;' 'use RPerl;' OpsTypes	(Rule 23)

	'use Carp;'	shift, and go to state 153

State 76:

	STAR-7 -> STAR-7 . Constant	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 . PLUS-8 '1;1;'	(Rule 22)

	'our'	shift, and go to state 32
	'use constant'	shift, and go to state 25

	Subroutine	go to state 156
	Constant	go to state 155
	PLUS-8	go to state 154

State 77:

	STAR-6 -> STAR-6 Include .	(Rule 16)

	$default	reduce using rule 16 (STAR-6)

State 78:

	PLUS-25 -> WordScoped .	(Rule 64)

	$default	reduce using rule 64 (PLUS-25)

State 79:

	PLUS-25 -> PLUS-25 . WordScoped	(Rule 63)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 . ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	')'	shift, and go to state 157
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 158

State 80:

	HashReference -> '{' HashEntry . STAR-59 '}'	(Rule 205)

	$default	reduce using rule 204 (STAR-59)

	STAR-59	go to state 159

State 81:

	Expression -> '{' '}' .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 82:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-57 Expression	(Rule 198)

	OP20_HASH_FATARROW	shift, and go to state 160

State 83:

	HashEntry -> HashDereferenced .	(Rule 199)

	$default	reduce using rule 199 (HashEntry)

State 84:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 52)

	VARIABLE_SYMBOL	shift, and go to state 161

State 85:

	Type -> WORD .	(Rule 212)

	$default	reduce using rule 212 (Type)

State 86:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 195)

	'}'	shift, and go to state 162

State 87:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 194)

	'}'	shift, and go to state 163

State 88:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 99)
	Expression -> Variable .	(Rule 140)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 148)

	OP02_METHOD_THINARROW	shift, and go to state 120
	OP03_MATH_INC_DEC	shift, and go to state 117

	')'	reduce using rule 140 (Expression)
	'..'	reduce using rule 140 (Expression)
	';'	reduce using rule 140 (Expression)
	']'	reduce using rule 140 (Expression)
	'}'	reduce using rule 140 (Expression)
	OP04_MATH_POW	reduce using rule 140 (Expression)
	OP06_REGEX_MATCH	reduce using rule 140 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 140 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 140 (Expression)
	OP08_STRING_CAT	reduce using rule 140 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 140 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 140 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 140 (Expression)
	OP13_BITWISE_AND	reduce using rule 140 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 140 (Expression)
	OP15_LOGICAL_AND	reduce using rule 140 (Expression)
	OP16_LOGICAL_OR	reduce using rule 140 (Expression)
	OP17_LIST_RANGE	reduce using rule 140 (Expression)
	OP18_TERNARY	reduce using rule 140 (Expression)
	OP21_LIST_COMMA	reduce using rule 140 (Expression)
	OP23_LOGICAL_AND	reduce using rule 140 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 140 (Expression)

State 89:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 102)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	')'	shift, and go to state 164
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 90:

	ArrayReference -> '[' OPTIONAL-56 . ']'	(Rule 193)

	']'	shift, and go to state 165

State 91:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	WORD	shift, and go to state 85

	Type	go to state 166

State 92:

	ListElements -> ListElement . STAR-55	(Rule 187)

	$default	reduce using rule 186 (STAR-55)

	STAR-55	go to state 167

State 93:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 190)

	'%{'	shift, and go to state 67

	HashDereferenced	go to state 168

State 94:

	ListElement -> TypeInner . Expression	(Rule 189)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 169
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ArrayReference	go to state 54
	Operator	go to state 53
	HashReference	go to state 68
	Variable	go to state 88

State 95:

	OPTIONAL-56 -> ListElements .	(Rule 191)

	$default	reduce using rule 191 (OPTIONAL-56)

State 96:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	ListElement -> Expression .	(Rule 188)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

	')'	reduce using rule 188 (ListElement)
	';'	reduce using rule 188 (ListElement)
	']'	reduce using rule 188 (ListElement)
	OP21_LIST_COMMA	reduce using rule 188 (ListElement)

State 97:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 119)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 53
	ArrayReference	go to state 54
	Variable	go to state 88
	HashReference	go to state 68
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ArrayDereferenced	go to state 49
	Expression	go to state 170

State 98:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 100)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 53
	ArrayReference	go to state 54
	HashReference	go to state 68
	Variable	go to state 88
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	Expression	go to state 171
	ArrayDereferenced	go to state 49

State 99:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 103)

	'/'	shift, and go to state 172

State 100:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 120)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 173
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Operator	go to state 53
	ArrayReference	go to state 54
	Variable	go to state 88
	HashReference	go to state 68

State 101:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 110)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Expression	go to state 174
	ArrayDereferenced	go to state 49
	ArrayReference	go to state 54
	Operator	go to state 53
	HashReference	go to state 68
	Variable	go to state 88

State 102:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 111)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 53
	ArrayReference	go to state 54
	Variable	go to state 88
	HashReference	go to state 68
	Expression	go to state 175
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59

State 103:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 112)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 176
	ArrayDereferenced	go to state 49
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	Variable	go to state 88
	HashReference	go to state 68
	ArrayReference	go to state 54
	Operator	go to state 53

State 104:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 116)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 68
	Variable	go to state 88
	Operator	go to state 53
	ArrayReference	go to state 54
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	Expression	go to state 177
	ArrayDereferenced	go to state 49

State 105:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 113)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ArrayDereferenced	go to state 49
	Expression	go to state 178
	ArrayReference	go to state 54
	Operator	go to state 53
	HashReference	go to state 68
	Variable	go to state 88

State 106:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 117)

	VARIABLE_SYMBOL	shift, and go to state 70

	Variable	go to state 179

State 107:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 105)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	ArrayDereferenced	go to state 49
	Expression	go to state 180
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	HashReference	go to state 68
	Variable	go to state 88
	Operator	go to state 53
	ArrayReference	go to state 54

State 108:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 115)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 88
	HashReference	go to state 68
	Operator	go to state 53
	ArrayReference	go to state 54
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	ArrayDereferenced	go to state 49
	Expression	go to state 181

State 109:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 106)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	ArrayDereferenced	go to state 49
	Expression	go to state 182
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Variable	go to state 88
	HashReference	go to state 68
	Operator	go to state 53
	ArrayReference	go to state 54

State 110:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 104)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 53
	ArrayReference	go to state 54
	HashReference	go to state 68
	Variable	go to state 88
	Expression	go to state 183
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59

State 111:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 114)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 53
	ArrayReference	go to state 54
	Variable	go to state 88
	HashReference	go to state 68
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ArrayDereferenced	go to state 49
	Expression	go to state 184

State 112:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 107)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 185
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Operator	go to state 53
	ArrayReference	go to state 54
	HashReference	go to state 68
	Variable	go to state 88

State 113:

	Operation -> Expression ';' .	(Rule 93)

	$default	reduce using rule 93 (Operation)

State 114:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	Expression -> '(' Expression . ')'	(Rule 149)

	')'	shift, and go to state 186
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 115:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 109)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 116:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 108)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 108 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 108 (Operator)
	OP13_BITWISE_AND	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 117:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 99)

	$default	reduce using rule 99 (Operator)

State 118:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 182)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 88
	HashReference	go to state 68
	Operator	go to state 53
	ArrayReference	go to state 54
	ArrayDereferenced	go to state 49
	Expression	go to state 187
	HashDereferenced	go to state 50
	WordScoped	go to state 59

State 119:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 183)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 188
	ArrayDereferenced	go to state 49
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	Operator	go to state 53
	ArrayReference	go to state 54
	Variable	go to state 88
	HashReference	go to state 68

State 120:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-45 ')'	(Rule 148)

	WORD	shift, and go to state 189

State 121:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 101)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98

	')'	reduce using rule 101 (Operator)
	'..'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP06_REGEX_MATCH	reduce using rule 101 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 101 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 101 (Operator)
	OP08_STRING_CAT	reduce using rule 101 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 101 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 122:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 168)

	VARIABLE_SYMBOL	shift, and go to state 190

State 123:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 170)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 53
	ArrayReference	go to state 54
	HashReference	go to state 68
	Variable	go to state 88
	ArrayDereferenced	go to state 49
	Expression	go to state 191
	HashDereferenced	go to state 50
	WordScoped	go to state 59

State 124:

	Statement -> OPTIONAL-47 Loop .	(Rule 154)

	$default	reduce using rule 154 (Statement)

State 125:

	Loop -> LoopWhile .	(Rule 167)

	$default	reduce using rule 167 (Loop)

State 126:

	Loop -> LoopFor .	(Rule 165)

	$default	reduce using rule 165 (Loop)

State 127:

	Loop -> LoopForEach .	(Rule 166)

	$default	reduce using rule 166 (Loop)

State 128:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 169)

	WORD	shift, and go to state 85

	Type	go to state 192

State 129:

	OPTIONAL-40 -> ListElements .	(Rule 121)

	$default	reduce using rule 121 (OPTIONAL-40)

State 130:

	FileHandle -> '{*' . WORD '}'	(Rule 210)

	WORD	shift, and go to state 193

State 131:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 . ')' ';'	(Rule 129)

	')'	shift, and go to state 194

State 132:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-41 ')' ';'	(Rule 130)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 124 (OPTIONAL-41)

	ListElement	go to state 92
	Operator	go to state 53
	ArrayReference	go to state 54
	TypeInner	go to state 94
	HashReference	go to state 68
	Variable	go to state 88
	Expression	go to state 96
	ArrayDereferenced	go to state 49
	OPTIONAL-41	go to state 196
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	ListElements	go to state 195

State 133:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 133)

	';'	shift, and go to state 197

State 134:

	LoopLabel -> WORD .	(Rule 213)

	$default	reduce using rule 213 (LoopLabel)

State 135:

	PLUS-5 -> PLUS-5 Operation .	(Rule 11)

	$default	reduce using rule 11 (PLUS-5)

State 136:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 118)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 137:

	Expression -> WordScoped '(' . OPTIONAL-44 ')'	(Rule 147)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 135 (OPTIONAL-44)

	Expression	go to state 96
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	OPTIONAL-44	go to state 198
	ListElements	go to state 199
	Operator	go to state 53
	ArrayReference	go to state 54
	ListElement	go to state 92
	TypeInner	go to state 94
	Variable	go to state 88
	HashReference	go to state 68

State 138:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-43 ';'	(Rule 132)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	';'	reduce using rule 128 (OPTIONAL-43)

	ListElements	go to state 201
	Expression	go to state 96
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	HashReference	go to state 68
	Variable	go to state 88
	ListElement	go to state 92
	OPTIONAL-43	go to state 200
	Operator	go to state 53
	ArrayReference	go to state 54
	TypeInner	go to state 94

State 139:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 . ';'	(Rule 131)

	';'	shift, and go to state 202

State 140:

	OPTIONAL-42 -> ListElements .	(Rule 125)

	$default	reduce using rule 125 (OPTIONAL-42)

State 141:

	PAREN-46 -> LoopLabel COLON .	(Rule 150)

	$default	reduce using rule 150 (PAREN-46)

State 142:

	Operator -> OP01_NAMED '(' . OPTIONAL-39 ')'	(Rule 97)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 96 (OPTIONAL-39)

	ListElements	go to state 204
	Expression	go to state 96
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	HashReference	go to state 68
	Variable	go to state 88
	ListElement	go to state 92
	Operator	go to state 53
	ArrayReference	go to state 54
	TypeInner	go to state 94
	OPTIONAL-39	go to state 203

State 143:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 164)

	')'	shift, and go to state 205
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 144:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 98)

	$default	reduce using rule 98 (Operator)

State 145:

	HashDereferenced -> '%{' Variable . '}'	(Rule 206)

	'}'	shift, and go to state 206

State 146:

	HashReference -> '{' . HashEntry STAR-59 '}'	(Rule 205)

	'%{'	shift, and go to state 67
	WORD	shift, and go to state 82

	HashDereferenced	go to state 83
	HashEntry	go to state 80

State 147:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 207)

	'}'	shift, and go to state 207

State 148:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 180)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 181)

	VARIABLE_SYMBOL	shift, and go to state 208

State 149:

	STAR-53 -> STAR-53 . VariableRetrieval	(Rule 174)
	Variable -> VARIABLE_SYMBOL STAR-53 .	(Rule 176)

	OP02_ARRAY_THINARROW	shift, and go to state 209
	OP02_HASH_THINARROW	shift, and go to state 210

	')'	reduce using rule 176 (Variable)
	'..'	reduce using rule 176 (Variable)
	';'	reduce using rule 176 (Variable)
	']'	reduce using rule 176 (Variable)
	'}'	reduce using rule 176 (Variable)
	COLON	reduce using rule 176 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 176 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 176 (Variable)
	OP04_MATH_POW	reduce using rule 176 (Variable)
	OP06_REGEX_MATCH	reduce using rule 176 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 176 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 176 (Variable)
	OP08_STRING_CAT	reduce using rule 176 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 176 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 176 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 176 (Variable)
	OP13_BITWISE_AND	reduce using rule 176 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 176 (Variable)
	OP15_LOGICAL_AND	reduce using rule 176 (Variable)
	OP16_LOGICAL_OR	reduce using rule 176 (Variable)
	OP17_LIST_RANGE	reduce using rule 176 (Variable)
	OP18_TERNARY	reduce using rule 176 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 176 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 176 (Variable)
	OP21_LIST_COMMA	reduce using rule 176 (Variable)
	OP23_LOGICAL_AND	reduce using rule 176 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 176 (Variable)

	VariableRetrieval	go to state 211

State 150:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 30)

	'my'	shift, and go to state 91

	TypeInner	go to state 212

State 151:

	PLUS-9 -> PLUS-9 . WORD	(Rule 26)
	Include -> 'use' WordScoped 'qw(' PLUS-9 . ')' ';'	(Rule 29)

	')'	shift, and go to state 213
	WORD	shift, and go to state 214

State 152:

	PLUS-9 -> WORD .	(Rule 27)

	$default	reduce using rule 27 (PLUS-9)

State 153:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' . 'use RPerl;' OpsTypes	(Rule 23)

	'use RPerl;'	shift, and go to state 215

State 154:

	PLUS-8 -> PLUS-8 . Subroutine	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 . '1;1;'	(Rule 22)

	'1;1;'	shift, and go to state 217
	'our'	shift, and go to state 32

	Subroutine	go to state 216

State 155:

	STAR-7 -> STAR-7 Constant .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 156:

	PLUS-8 -> Subroutine .	(Rule 21)

	$default	reduce using rule 21 (PLUS-8)

State 157:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' . ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	';'	shift, and go to state 218

State 158:

	PLUS-25 -> PLUS-25 WordScoped .	(Rule 63)

	$default	reduce using rule 63 (PLUS-25)

State 159:

	STAR-59 -> STAR-59 . PAREN-58	(Rule 203)
	HashReference -> '{' HashEntry STAR-59 . '}'	(Rule 205)

	'}'	shift, and go to state 220
	OP21_LIST_COMMA	shift, and go to state 219

	PAREN-58	go to state 221

State 160:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-57 Expression	(Rule 198)

	'my'	shift, and go to state 91

	'%{'	reduce using rule 197 (OPTIONAL-57)
	'('	reduce using rule 197 (OPTIONAL-57)
	'@{'	reduce using rule 197 (OPTIONAL-57)
	'['	reduce using rule 197 (OPTIONAL-57)
	'undef'	reduce using rule 197 (OPTIONAL-57)
	'{'	reduce using rule 197 (OPTIONAL-57)
	LITERAL	reduce using rule 197 (OPTIONAL-57)
	OP01_NAMED	reduce using rule 197 (OPTIONAL-57)
	OP03_MATH_INC_DEC	reduce using rule 197 (OPTIONAL-57)
	OP05_LOGICAL_NEG	reduce using rule 197 (OPTIONAL-57)
	OP05_MATH_NEG	reduce using rule 197 (OPTIONAL-57)
	OP10_NAMED_UNARY	reduce using rule 197 (OPTIONAL-57)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 197 (OPTIONAL-57)
	OP22_LOGICAL_NOT	reduce using rule 197 (OPTIONAL-57)
	VARIABLE_SYMBOL	reduce using rule 197 (OPTIONAL-57)
	WORD	reduce using rule 197 (OPTIONAL-57)
	WORD_SCOPED	reduce using rule 197 (OPTIONAL-57)

	OPTIONAL-57	go to state 223
	TypeInner	go to state 222

State 161:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-18 PLUS-19 '}' ';'	(Rule 52)

	'= sub {'	shift, and go to state 224

State 162:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 195)

	$default	reduce using rule 195 (ArrayDereferenced)

State 163:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 194)

	$default	reduce using rule 194 (ArrayDereferenced)

State 164:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 165:

	ArrayReference -> '[' OPTIONAL-56 ']' .	(Rule 193)

	$default	reduce using rule 193 (ArrayReference)

State 166:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	'$TYPED_'	shift, and go to state 225

State 167:

	STAR-55 -> STAR-55 . PAREN-54	(Rule 185)
	ListElements -> ListElement STAR-55 .	(Rule 187)

	OP21_LIST_COMMA	shift, and go to state 227

	')'	reduce using rule 187 (ListElements)
	';'	reduce using rule 187 (ListElements)
	']'	reduce using rule 187 (ListElements)

	PAREN-54	go to state 226

State 168:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 190)

	$default	reduce using rule 190 (ListElement)

State 169:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	ListElement -> TypeInner Expression .	(Rule 189)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

	')'	reduce using rule 189 (ListElement)
	';'	reduce using rule 189 (ListElement)
	']'	reduce using rule 189 (ListElement)
	OP21_LIST_COMMA	reduce using rule 189 (ListElement)

State 170:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 171:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98

	')'	reduce using rule 100 (Operator)
	'..'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP06_REGEX_MATCH	reduce using rule 100 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 100 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 100 (Operator)
	OP08_STRING_CAT	reduce using rule 100 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 172:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 103)

	OP06_REGEX_PATTERN	shift, and go to state 228

State 173:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97

	')'	reduce using rule 120 (Operator)
	'..'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 174:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 175:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 176:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 177:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 178:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 179:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 117)

	COLON	shift, and go to state 229

State 180:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 181:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 182:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 183:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 104 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 104 (Operator)
	OP08_STRING_CAT	reduce using rule 104 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 104 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 104 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 184:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 185:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 107 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 186:

	Expression -> '(' Expression ')' .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 187:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 182)

	';'	shift, and go to state 230
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 188:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 183)

	';'	shift, and go to state 231
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 189:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-45 ')'	(Rule 148)

	'('	shift, and go to state 232

State 190:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 168)

	'('	shift, and go to state 233

State 191:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 170)

	')'	shift, and go to state 234
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 192:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 169)

	VARIABLE_SYMBOL	shift, and go to state 235

State 193:

	FileHandle -> '{*' WORD . '}'	(Rule 210)

	'}'	shift, and go to state 236

State 194:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' . ';'	(Rule 129)

	';'	shift, and go to state 237

State 195:

	OPTIONAL-41 -> ListElements .	(Rule 123)

	$default	reduce using rule 123 (OPTIONAL-41)

State 196:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 . ')' ';'	(Rule 130)

	')'	shift, and go to state 238

State 197:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 133)

	$default	reduce using rule 133 (OperatorVoid)

State 198:

	Expression -> WordScoped '(' OPTIONAL-44 . ')'	(Rule 147)

	')'	shift, and go to state 239

State 199:

	OPTIONAL-44 -> ListElements .	(Rule 134)

	$default	reduce using rule 134 (OPTIONAL-44)

State 200:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 . ';'	(Rule 132)

	';'	shift, and go to state 240

State 201:

	OPTIONAL-43 -> ListElements .	(Rule 127)

	$default	reduce using rule 127 (OPTIONAL-43)

State 202:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';' .	(Rule 131)

	$default	reduce using rule 131 (OperatorVoid)

State 203:

	Operator -> OP01_NAMED '(' OPTIONAL-39 . ')'	(Rule 97)

	')'	shift, and go to state 241

State 204:

	OPTIONAL-39 -> ListElements .	(Rule 95)

	$default	reduce using rule 95 (OPTIONAL-39)

State 205:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-49 OPTIONAL-51	(Rule 164)

	'{'	shift, and go to state 243

	CodeBlock	go to state 242

State 206:

	HashDereferenced -> '%{' Variable '}' .	(Rule 206)

	$default	reduce using rule 206 (HashDereferenced)

State 207:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 207)

	$default	reduce using rule 207 (HashDereferenced)

State 208:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 180)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 181)

	';'	shift, and go to state 245
	OP19_VARIABLE_ASSIGN	shift, and go to state 244

State 209:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 177)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 53
	ArrayReference	go to state 54
	Variable	go to state 88
	HashReference	go to state 68
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ArrayDereferenced	go to state 49
	Expression	go to state 246

State 210:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 178)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 179)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 247
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 248
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Variable	go to state 88
	HashReference	go to state 68
	ArrayReference	go to state 54
	Operator	go to state 53

State 211:

	STAR-53 -> STAR-53 VariableRetrieval .	(Rule 174)

	$default	reduce using rule 174 (STAR-53)

State 212:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 30)

	'['	shift, and go to state 250
	'{'	shift, and go to state 249
	LITERAL	shift, and go to state 251

	ConstantValue	go to state 252

State 213:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' . ';'	(Rule 29)

	';'	shift, and go to state 253

State 214:

	PLUS-9 -> PLUS-9 WORD .	(Rule 26)

	$default	reduce using rule 26 (PLUS-9)

State 215:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' . OpsTypes	(Rule 23)

	'our'	shift, and go to state 254

	OpsTypes	go to state 255

State 216:

	PLUS-8 -> PLUS-8 Subroutine .	(Rule 20)

	$default	reduce using rule 20 (PLUS-8)

State 217:

	Package -> 'package' WordScoped ';' Header STAR-6 STAR-7 PLUS-8 '1;1;' .	(Rule 22)

	$default	reduce using rule 22 (Package)

State 218:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' . STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	$default	reduce using rule 66 (STAR-26)

	STAR-26	go to state 256

State 219:

	PAREN-58 -> OP21_LIST_COMMA . HashEntry	(Rule 202)

	'%{'	shift, and go to state 67
	WORD	shift, and go to state 82

	HashEntry	go to state 257
	HashDereferenced	go to state 83

State 220:

	HashReference -> '{' HashEntry STAR-59 '}' .	(Rule 205)

	$default	reduce using rule 205 (HashReference)

State 221:

	STAR-59 -> STAR-59 PAREN-58 .	(Rule 203)

	$default	reduce using rule 203 (STAR-59)

State 222:

	OPTIONAL-57 -> TypeInner .	(Rule 196)

	$default	reduce using rule 196 (OPTIONAL-57)

State 223:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 . Expression	(Rule 198)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 258
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Variable	go to state 88
	HashReference	go to state 68
	ArrayReference	go to state 54
	Operator	go to state 53

State 224:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-18 PLUS-19 '}' ';'	(Rule 52)

	'( my'	shift, and go to state 261

	'%{'	reduce using rule 49 (OPTIONAL-18)
	'('	reduce using rule 49 (OPTIONAL-18)
	'@{'	reduce using rule 49 (OPTIONAL-18)
	'['	reduce using rule 49 (OPTIONAL-18)
	'for my integer'	reduce using rule 49 (OPTIONAL-18)
	'foreach my'	reduce using rule 49 (OPTIONAL-18)
	'if ('	reduce using rule 49 (OPTIONAL-18)
	'my'	reduce using rule 49 (OPTIONAL-18)
	'undef'	reduce using rule 49 (OPTIONAL-18)
	'while ('	reduce using rule 49 (OPTIONAL-18)
	'{'	reduce using rule 49 (OPTIONAL-18)
	LITERAL	reduce using rule 49 (OPTIONAL-18)
	OP01_NAMED	reduce using rule 49 (OPTIONAL-18)
	OP01_NAMED_VOID	reduce using rule 49 (OPTIONAL-18)
	OP01_NAMED_VOID_PAREN	reduce using rule 49 (OPTIONAL-18)
	OP03_MATH_INC_DEC	reduce using rule 49 (OPTIONAL-18)
	OP05_LOGICAL_NEG	reduce using rule 49 (OPTIONAL-18)
	OP05_MATH_NEG	reduce using rule 49 (OPTIONAL-18)
	OP10_NAMED_UNARY	reduce using rule 49 (OPTIONAL-18)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 49 (OPTIONAL-18)
	OP19_LOOP_CONTROL	reduce using rule 49 (OPTIONAL-18)
	OP22_LOGICAL_NOT	reduce using rule 49 (OPTIONAL-18)
	VARIABLE_SYMBOL	reduce using rule 49 (OPTIONAL-18)
	WORD	reduce using rule 49 (OPTIONAL-18)
	WORD_SCOPED	reduce using rule 49 (OPTIONAL-18)

	OPTIONAL-18	go to state 259
	SubroutineArguments	go to state 260

State 225:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	WORD	shift, and go to state 262

State 226:

	STAR-55 -> STAR-55 PAREN-54 .	(Rule 185)

	$default	reduce using rule 185 (STAR-55)

State 227:

	PAREN-54 -> OP21_LIST_COMMA . ListElement	(Rule 184)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Expression	go to state 96
	ArrayDereferenced	go to state 49
	WordScoped	go to state 59
	HashDereferenced	go to state 50
	HashReference	go to state 68
	Variable	go to state 88
	ListElement	go to state 263
	ArrayReference	go to state 54
	Operator	go to state 53
	TypeInner	go to state 94

State 228:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 103)

	'/'	shift, and go to state 264

State 229:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 117)

	VARIABLE_SYMBOL	shift, and go to state 70

	Variable	go to state 265

State 230:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 182)

	$default	reduce using rule 182 (VariableModification)

State 231:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 183)

	$default	reduce using rule 183 (VariableModification)

State 232:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-45 ')'	(Rule 148)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	')'	reduce using rule 137 (OPTIONAL-45)

	Variable	go to state 88
	HashReference	go to state 68
	ArrayReference	go to state 54
	Operator	go to state 53
	ListElement	go to state 92
	TypeInner	go to state 94
	ListElements	go to state 267
	OPTIONAL-45	go to state 266
	Expression	go to state 96
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	WordScoped	go to state 59

State 233:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 168)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Operator	go to state 53
	ArrayReference	go to state 54
	HashReference	go to state 68
	Variable	go to state 88
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ArrayDereferenced	go to state 49
	Expression	go to state 268

State 234:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 170)

	'{'	shift, and go to state 243

	CodeBlock	go to state 269

State 235:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 169)

	'('	shift, and go to state 270

State 236:

	FileHandle -> '{*' WORD '}' .	(Rule 210)

	$default	reduce using rule 210 (FileHandle)

State 237:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';' .	(Rule 129)

	$default	reduce using rule 129 (OperatorVoid)

State 238:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' . ';'	(Rule 130)

	';'	shift, and go to state 271

State 239:

	Expression -> WordScoped '(' OPTIONAL-44 ')' .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 240:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-43 ';' .	(Rule 132)

	$default	reduce using rule 132 (OperatorVoid)

State 241:

	Operator -> OP01_NAMED '(' OPTIONAL-39 ')' .	(Rule 97)

	$default	reduce using rule 97 (Operator)

State 242:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-49 OPTIONAL-51	(Rule 164)

	$default	reduce using rule 160 (STAR-49)

	STAR-49	go to state 272

State 243:

	CodeBlock -> '{' . PLUS-52 '}'	(Rule 173)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 69
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 61
	OP01_NAMED_VOID_PAREN	shift, and go to state 55
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 56
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	VariableDeclaration	go to state 34
	Statement	go to state 37
	Operator	go to state 53
	Conditional	go to state 52
	ArrayReference	go to state 54
	VariableModification	go to state 41
	PLUS-52	go to state 273
	LoopLabel	go to state 62
	Expression	go to state 39
	WordScoped	go to state 59
	OperatorVoid	go to state 46
	Variable	go to state 47
	HashReference	go to state 68
	PAREN-46	go to state 42
	Operation	go to state 274
	OPTIONAL-47	go to state 51
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50

State 244:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 181)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ArrayDereferenced	go to state 49
	Expression	go to state 275
	HashReference	go to state 68
	Variable	go to state 88
	Operator	go to state 53
	ArrayReference	go to state 54

State 245:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 180)

	$default	reduce using rule 180 (VariableDeclaration)

State 246:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 177)

	']'	shift, and go to state 276
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 247:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 179)
	WordScoped -> WORD .	(Rule 208)

	'}'	shift, and go to state 277

	'('	reduce using rule 208 (WordScoped)

State 248:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 178)

	'}'	shift, and go to state 278
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 249:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 47)

	WORD	shift, and go to state 279

State 250:

	ConstantValue -> '[' . OPTIONAL-10 LITERAL STAR-13 ']'	(Rule 46)

	'my'	shift, and go to state 91

	LITERAL	reduce using rule 32 (OPTIONAL-10)

	TypeInner	go to state 281
	OPTIONAL-10	go to state 280

State 251:

	ConstantValue -> LITERAL .	(Rule 45)

	$default	reduce using rule 45 (ConstantValue)

State 252:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 30)

	';'	shift, and go to state 282

State 253:

	Include -> 'use' WordScoped 'qw(' PLUS-9 ')' ';' .	(Rule 29)

	$default	reduce using rule 29 (Include)

State 254:

	OpsTypes -> 'our' . Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	WORD	shift, and go to state 85

	Type	go to state 283

State 255:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' OpsTypes .	(Rule 23)

	$default	reduce using rule 23 (Header)

State 256:

	STAR-26 -> STAR-26 . Include	(Rule 65)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 . STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	'use'	shift, and go to state 20

	'our %properties = ('	reduce using rule 68 (STAR-27)
	'use constant'	reduce using rule 68 (STAR-27)

	Include	go to state 284
	STAR-27	go to state 285

State 257:

	PAREN-58 -> OP21_LIST_COMMA HashEntry .	(Rule 202)

	$default	reduce using rule 202 (PAREN-58)

State 258:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-57 Expression .	(Rule 198)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

	'}'	reduce using rule 198 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 198 (HashEntry)

State 259:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 . PLUS-19 '}' ';'	(Rule 52)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 69
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 61
	OP01_NAMED_VOID_PAREN	shift, and go to state 55
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 56
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	OperatorVoid	go to state 46
	Variable	go to state 47
	PLUS-19	go to state 286
	HashReference	go to state 68
	PAREN-46	go to state 42
	Operation	go to state 287
	OPTIONAL-47	go to state 51
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	VariableDeclaration	go to state 34
	Statement	go to state 37
	Conditional	go to state 52
	Operator	go to state 53
	ArrayReference	go to state 54
	VariableModification	go to state 41
	LoopLabel	go to state 62
	Expression	go to state 39
	WordScoped	go to state 59

State 260:

	OPTIONAL-18 -> SubroutineArguments .	(Rule 48)

	$default	reduce using rule 48 (OPTIONAL-18)

State 261:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	WORD	shift, and go to state 85

	Type	go to state 288

State 262:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 211)

	OP19_VARIABLE_ASSIGN	shift, and go to state 289

State 263:

	PAREN-54 -> OP21_LIST_COMMA ListElement .	(Rule 184)

	$default	reduce using rule 184 (PAREN-54)

State 264:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 265:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 117)

	$default	reduce using rule 117 (Operator)

State 266:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 . ')'	(Rule 148)

	')'	shift, and go to state 290

State 267:

	OPTIONAL-45 -> ListElements .	(Rule 136)

	$default	reduce using rule 136 (OPTIONAL-45)

State 268:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 168)

	'..'	shift, and go to state 291
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 269:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 170)

	$default	reduce using rule 170 (LoopWhile)

State 270:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 169)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'my'	shift, and go to state 91
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	KEYS_OR_VALUES	shift, and go to state 93
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	ArrayDereferenced	go to state 49
	Expression	go to state 96
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	ListElements	go to state 292
	ListElement	go to state 92
	ArrayReference	go to state 54
	Operator	go to state 53
	TypeInner	go to state 94
	HashReference	go to state 68
	Variable	go to state 88

State 271:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-41 ')' ';' .	(Rule 130)

	$default	reduce using rule 130 (OperatorVoid)

State 272:

	STAR-49 -> STAR-49 . PAREN-48	(Rule 159)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 . OPTIONAL-51	(Rule 164)

	'else'	shift, and go to state 294
	'elsif ('	shift, and go to state 295

	$end	reduce using rule 163 (OPTIONAL-51)
	'%{'	reduce using rule 163 (OPTIONAL-51)
	'('	reduce using rule 163 (OPTIONAL-51)
	'@{'	reduce using rule 163 (OPTIONAL-51)
	'['	reduce using rule 163 (OPTIONAL-51)
	'for my integer'	reduce using rule 163 (OPTIONAL-51)
	'foreach my'	reduce using rule 163 (OPTIONAL-51)
	'if ('	reduce using rule 163 (OPTIONAL-51)
	'my'	reduce using rule 163 (OPTIONAL-51)
	'undef'	reduce using rule 163 (OPTIONAL-51)
	'while ('	reduce using rule 163 (OPTIONAL-51)
	'{'	reduce using rule 163 (OPTIONAL-51)
	'}'	reduce using rule 163 (OPTIONAL-51)
	LITERAL	reduce using rule 163 (OPTIONAL-51)
	OP01_NAMED	reduce using rule 163 (OPTIONAL-51)
	OP01_NAMED_VOID	reduce using rule 163 (OPTIONAL-51)
	OP01_NAMED_VOID_PAREN	reduce using rule 163 (OPTIONAL-51)
	OP03_MATH_INC_DEC	reduce using rule 163 (OPTIONAL-51)
	OP05_LOGICAL_NEG	reduce using rule 163 (OPTIONAL-51)
	OP05_MATH_NEG	reduce using rule 163 (OPTIONAL-51)
	OP10_NAMED_UNARY	reduce using rule 163 (OPTIONAL-51)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 163 (OPTIONAL-51)
	OP19_LOOP_CONTROL	reduce using rule 163 (OPTIONAL-51)
	OP22_LOGICAL_NOT	reduce using rule 163 (OPTIONAL-51)
	VARIABLE_SYMBOL	reduce using rule 163 (OPTIONAL-51)
	WORD	reduce using rule 163 (OPTIONAL-51)
	WORD_SCOPED	reduce using rule 163 (OPTIONAL-51)

	OPTIONAL-51	go to state 293
	PAREN-48	go to state 297
	PAREN-50	go to state 296

State 273:

	PLUS-52 -> PLUS-52 . Operation	(Rule 171)
	CodeBlock -> '{' PLUS-52 . '}'	(Rule 173)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 69
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	'}'	shift, and go to state 299
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 61
	OP01_NAMED_VOID_PAREN	shift, and go to state 55
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 56
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	HashDereferenced	go to state 50
	ArrayDereferenced	go to state 49
	OPTIONAL-47	go to state 51
	Operation	go to state 298
	PAREN-46	go to state 42
	Variable	go to state 47
	HashReference	go to state 68
	OperatorVoid	go to state 46
	WordScoped	go to state 59
	Expression	go to state 39
	VariableModification	go to state 41
	LoopLabel	go to state 62
	Operator	go to state 53
	ArrayReference	go to state 54
	Conditional	go to state 52
	Statement	go to state 37
	VariableDeclaration	go to state 34

State 274:

	PLUS-52 -> Operation .	(Rule 172)

	$default	reduce using rule 172 (PLUS-52)

State 275:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 181)

	';'	shift, and go to state 300
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 276:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 177)

	$default	reduce using rule 177 (VariableRetrieval)

State 277:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 179)

	$default	reduce using rule 179 (VariableRetrieval)

State 278:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 178)

	$default	reduce using rule 178 (VariableRetrieval)

State 279:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 47)

	OP20_HASH_FATARROW	shift, and go to state 301

State 280:

	ConstantValue -> '[' OPTIONAL-10 . LITERAL STAR-13 ']'	(Rule 46)

	LITERAL	shift, and go to state 302

State 281:

	OPTIONAL-10 -> TypeInner .	(Rule 31)

	$default	reduce using rule 31 (OPTIONAL-10)

State 282:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 30)

	$default	reduce using rule 30 (Constant)

State 283:

	OpsTypes -> 'our' Type . OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	OPS_TYPES_ID	shift, and go to state 303

State 284:

	STAR-26 -> STAR-26 Include .	(Rule 65)

	$default	reduce using rule 65 (STAR-26)

State 285:

	STAR-27 -> STAR-27 . Constant	(Rule 67)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 . Properties STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	'our %properties = ('	shift, and go to state 306
	'use constant'	shift, and go to state 25

	Properties	go to state 304
	Constant	go to state 305

State 286:

	PLUS-19 -> PLUS-19 . Operation	(Rule 50)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 . '}' ';'	(Rule 52)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 69
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	'}'	shift, and go to state 308
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 61
	OP01_NAMED_VOID_PAREN	shift, and go to state 55
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 56
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	PAREN-46	go to state 42
	Operation	go to state 307
	OperatorVoid	go to state 46
	HashReference	go to state 68
	Variable	go to state 47
	ArrayDereferenced	go to state 49
	HashDereferenced	go to state 50
	OPTIONAL-47	go to state 51
	Operator	go to state 53
	Conditional	go to state 52
	ArrayReference	go to state 54
	VariableDeclaration	go to state 34
	Statement	go to state 37
	Expression	go to state 39
	WordScoped	go to state 59
	LoopLabel	go to state 62
	VariableModification	go to state 41

State 287:

	PLUS-19 -> Operation .	(Rule 51)

	$default	reduce using rule 51 (PLUS-19)

State 288:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 309

State 289:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 211)

	$default	reduce using rule 211 (TypeInner)

State 290:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')' .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 291:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 168)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Expression	go to state 310
	ArrayDereferenced	go to state 49
	HashReference	go to state 68
	Variable	go to state 88
	ArrayReference	go to state 54
	Operator	go to state 53

State 292:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 169)

	')'	shift, and go to state 311

State 293:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51 .	(Rule 164)

	$default	reduce using rule 164 (Conditional)

State 294:

	PAREN-50 -> 'else' . CodeBlock	(Rule 161)

	'{'	shift, and go to state 243

	CodeBlock	go to state 312

State 295:

	PAREN-48 -> 'elsif (' . Expression ')' CodeBlock	(Rule 158)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	Variable	go to state 88
	HashReference	go to state 68
	Operator	go to state 53
	ArrayReference	go to state 54
	ArrayDereferenced	go to state 49
	Expression	go to state 313
	HashDereferenced	go to state 50
	WordScoped	go to state 59

State 296:

	OPTIONAL-51 -> PAREN-50 .	(Rule 162)

	$default	reduce using rule 162 (OPTIONAL-51)

State 297:

	STAR-49 -> STAR-49 PAREN-48 .	(Rule 159)

	$default	reduce using rule 159 (STAR-49)

State 298:

	PLUS-52 -> PLUS-52 Operation .	(Rule 171)

	$default	reduce using rule 171 (PLUS-52)

State 299:

	CodeBlock -> '{' PLUS-52 '}' .	(Rule 173)

	$default	reduce using rule 173 (CodeBlock)

State 300:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 181)

	$default	reduce using rule 181 (VariableDeclaration)

State 301:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-14 LITERAL STAR-17 '}'	(Rule 47)

	'my'	shift, and go to state 91

	LITERAL	reduce using rule 39 (OPTIONAL-14)

	OPTIONAL-14	go to state 314
	TypeInner	go to state 315

State 302:

	ConstantValue -> '[' OPTIONAL-10 LITERAL . STAR-13 ']'	(Rule 46)

	$default	reduce using rule 37 (STAR-13)

	STAR-13	go to state 316

State 303:

	OpsTypes -> 'our' Type OPS_TYPES_ID . OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	OP19_VARIABLE_ASSIGN	shift, and go to state 317

State 304:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties . STAR-28 '1;1;' OPTIONAL-31	(Rule 76)

	$default	reduce using rule 70 (STAR-28)

	STAR-28	go to state 318

State 305:

	STAR-27 -> STAR-27 Constant .	(Rule 67)

	$default	reduce using rule 67 (STAR-27)

State 306:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-33 ')' ';'	(Rule 80)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 81)

	'%{'	shift, and go to state 67
	')'	shift, and go to state 321
	WORD	shift, and go to state 320

	HashEntryTyped	go to state 322
	HashDereferenced	go to state 319

State 307:

	PLUS-19 -> PLUS-19 Operation .	(Rule 50)

	$default	reduce using rule 50 (PLUS-19)

State 308:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' . ';'	(Rule 52)

	';'	shift, and go to state 323

State 309:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	$default	reduce using rule 55 (STAR-21)

	STAR-21	go to state 324

State 310:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 168)

	')'	shift, and go to state 325
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 311:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 169)

	'{'	shift, and go to state 243

	CodeBlock	go to state 326

State 312:

	PAREN-50 -> 'else' CodeBlock .	(Rule 161)

	$default	reduce using rule 161 (PAREN-50)

State 313:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	PAREN-48 -> 'elsif (' Expression . ')' CodeBlock	(Rule 158)

	')'	shift, and go to state 327
	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 314:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 . LITERAL STAR-17 '}'	(Rule 47)

	LITERAL	shift, and go to state 328

State 315:

	OPTIONAL-14 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-14)

State 316:

	STAR-13 -> STAR-13 . PAREN-12	(Rule 36)
	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 . ']'	(Rule 46)

	']'	shift, and go to state 331
	OP21_LIST_COMMA	shift, and go to state 330

	PAREN-12	go to state 329

State 317:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN . LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	LITERAL	shift, and go to state 332

State 318:

	STAR-28 -> STAR-28 . Method	(Rule 69)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 . '1;1;' OPTIONAL-31	(Rule 76)

	'1;1;'	shift, and go to state 334
	'our'	shift, and go to state 333

	Method	go to state 335

State 319:

	HashEntryTyped -> HashDereferenced .	(Rule 201)

	$default	reduce using rule 201 (HashEntryTyped)

State 320:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 200)

	OP20_HASH_FATARROW	shift, and go to state 336

State 321:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 81)

	';'	shift, and go to state 337

State 322:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-33 ')' ';'	(Rule 80)

	$default	reduce using rule 79 (STAR-33)

	STAR-33	go to state 338

State 323:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-18 PLUS-19 '}' ';' .	(Rule 52)

	$default	reduce using rule 52 (Subroutine)

State 324:

	STAR-21 -> STAR-21 . PAREN-20	(Rule 54)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	')'	shift, and go to state 341
	OP21_LIST_COMMA	shift, and go to state 340

	PAREN-20	go to state 339

State 325:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 168)

	'{'	shift, and go to state 243

	CodeBlock	go to state 342

State 326:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 169)

	$default	reduce using rule 169 (LoopForEach)

State 327:

	PAREN-48 -> 'elsif (' Expression ')' . CodeBlock	(Rule 158)

	'{'	shift, and go to state 243

	CodeBlock	go to state 343

State 328:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL . STAR-17 '}'	(Rule 47)

	$default	reduce using rule 44 (STAR-17)

	STAR-17	go to state 344

State 329:

	STAR-13 -> STAR-13 PAREN-12 .	(Rule 36)

	$default	reduce using rule 36 (STAR-13)

State 330:

	PAREN-12 -> OP21_LIST_COMMA . OPTIONAL-11 LITERAL	(Rule 35)

	'my'	shift, and go to state 91

	LITERAL	reduce using rule 34 (OPTIONAL-11)

	OPTIONAL-11	go to state 346
	TypeInner	go to state 345

State 331:

	ConstantValue -> '[' OPTIONAL-10 LITERAL STAR-13 ']' .	(Rule 46)

	$default	reduce using rule 46 (ConstantValue)

State 332:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL . ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	';'	shift, and go to state 347

State 333:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 86)

	WORD	shift, and go to state 85

	Type	go to state 348

State 334:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' . OPTIONAL-31	(Rule 76)

	'our'	shift, and go to state 32

	$end	reduce using rule 75 (OPTIONAL-31)
	'package'	reduce using rule 75 (OPTIONAL-31)

	PAREN-30	go to state 349
	Subroutine	go to state 352
	PLUS-29	go to state 351
	OPTIONAL-31	go to state 350

State 335:

	STAR-28 -> STAR-28 Method .	(Rule 69)

	$default	reduce using rule 69 (STAR-28)

State 336:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 200)

	'my'	shift, and go to state 91

	TypeInner	go to state 353

State 337:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 81)

	$default	reduce using rule 81 (Properties)

State 338:

	STAR-33 -> STAR-33 . PAREN-32	(Rule 78)
	Properties -> 'our %properties = (' HashEntryTyped STAR-33 . ')' ';'	(Rule 80)

	')'	shift, and go to state 354
	OP21_LIST_COMMA	shift, and go to state 355

	PAREN-32	go to state 356

State 339:

	STAR-21 -> STAR-21 PAREN-20 .	(Rule 54)

	$default	reduce using rule 54 (STAR-21)

State 340:

	PAREN-20 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 53)

	'my'	shift, and go to state 357

State 341:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-22	(Rule 58)

	OP19_VARIABLE_ASSIGN	shift, and go to state 358

State 342:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 168)

	$default	reduce using rule 168 (LoopFor)

State 343:

	PAREN-48 -> 'elsif (' Expression ')' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (PAREN-48)

State 344:

	STAR-17 -> STAR-17 . PAREN-16	(Rule 43)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 . '}'	(Rule 47)

	'}'	shift, and go to state 361
	OP21_LIST_COMMA	shift, and go to state 359

	PAREN-16	go to state 360

State 345:

	OPTIONAL-11 -> TypeInner .	(Rule 33)

	$default	reduce using rule 33 (OPTIONAL-11)

State 346:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 . LITERAL	(Rule 35)

	LITERAL	shift, and go to state 362

State 347:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' . 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	'our'	shift, and go to state 363

State 348:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 86)

	VARIABLE_SYMBOL	shift, and go to state 364

State 349:

	OPTIONAL-31 -> PAREN-30 .	(Rule 74)

	$default	reduce using rule 74 (OPTIONAL-31)

State 350:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-25 ')' ';' STAR-26 STAR-27 Properties STAR-28 '1;1;' OPTIONAL-31 .	(Rule 76)

	$default	reduce using rule 76 (Class)

State 351:

	PLUS-29 -> PLUS-29 . Subroutine	(Rule 71)
	PAREN-30 -> PLUS-29 . '1;1;'	(Rule 73)

	'1;1;'	shift, and go to state 365
	'our'	shift, and go to state 32

	Subroutine	go to state 366

State 352:

	PLUS-29 -> Subroutine .	(Rule 72)

	$default	reduce using rule 72 (PLUS-29)

State 353:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 200)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 59
	HashDereferenced	go to state 50
	Expression	go to state 367
	ArrayDereferenced	go to state 49
	ArrayReference	go to state 54
	Operator	go to state 53
	Variable	go to state 88
	HashReference	go to state 68

State 354:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' . ';'	(Rule 80)

	';'	shift, and go to state 368

State 355:

	PAREN-32 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 77)

	'%{'	shift, and go to state 67
	WORD	shift, and go to state 320

	HashEntryTyped	go to state 369
	HashDereferenced	go to state 319

State 356:

	STAR-33 -> STAR-33 PAREN-32 .	(Rule 78)

	$default	reduce using rule 78 (STAR-33)

State 357:

	PAREN-20 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 53)

	WORD	shift, and go to state 85

	Type	go to state 370

State 358:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-22	(Rule 58)

	'@_;'	shift, and go to state 371

State 359:

	PAREN-16 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 42)

	WORD	shift, and go to state 372

State 360:

	STAR-17 -> STAR-17 PAREN-16 .	(Rule 43)

	$default	reduce using rule 43 (STAR-17)

State 361:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-14 LITERAL STAR-17 '}' .	(Rule 47)

	$default	reduce using rule 47 (ConstantValue)

State 362:

	PAREN-12 -> OP21_LIST_COMMA OPTIONAL-11 LITERAL .	(Rule 35)

	$default	reduce using rule 35 (PAREN-12)

State 363:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' . Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	WORD	shift, and go to state 85

	Type	go to state 373

State 364:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-34 PLUS-35 '}' ';'	(Rule 86)

	'= sub {'	shift, and go to state 374

State 365:

	PAREN-30 -> PLUS-29 '1;1;' .	(Rule 73)

	$default	reduce using rule 73 (PAREN-30)

State 366:

	PLUS-29 -> PLUS-29 Subroutine .	(Rule 71)

	$default	reduce using rule 71 (PLUS-29)

State 367:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 200)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

	')'	reduce using rule 200 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 200 (HashEntryTyped)

State 368:

	Properties -> 'our %properties = (' HashEntryTyped STAR-33 ')' ';' .	(Rule 80)

	$default	reduce using rule 80 (Properties)

State 369:

	PAREN-32 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 77)

	$default	reduce using rule 77 (PAREN-32)

State 370:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 53)

	VARIABLE_SYMBOL	shift, and go to state 375

State 371:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-22	(Rule 58)

	$default	reduce using rule 57 (STAR-22)

	STAR-22	go to state 376

State 372:

	PAREN-16 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-15 LITERAL	(Rule 42)

	OP20_HASH_FATARROW	shift, and go to state 377

State 373:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type . OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	OPS_SUB	shift, and go to state 378

State 374:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-34 PLUS-35 '}' ';'	(Rule 86)

	'( my'	shift, and go to state 379

	'%{'	reduce using rule 83 (OPTIONAL-34)
	'('	reduce using rule 83 (OPTIONAL-34)
	'@{'	reduce using rule 83 (OPTIONAL-34)
	'['	reduce using rule 83 (OPTIONAL-34)
	'for my integer'	reduce using rule 83 (OPTIONAL-34)
	'foreach my'	reduce using rule 83 (OPTIONAL-34)
	'if ('	reduce using rule 83 (OPTIONAL-34)
	'my'	reduce using rule 83 (OPTIONAL-34)
	'undef'	reduce using rule 83 (OPTIONAL-34)
	'while ('	reduce using rule 83 (OPTIONAL-34)
	'{'	reduce using rule 83 (OPTIONAL-34)
	LITERAL	reduce using rule 83 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 83 (OPTIONAL-34)
	OP01_NAMED_VOID	reduce using rule 83 (OPTIONAL-34)
	OP01_NAMED_VOID_PAREN	reduce using rule 83 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 83 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 83 (OPTIONAL-34)
	OP05_MATH_NEG	reduce using rule 83 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 83 (OPTIONAL-34)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 83 (OPTIONAL-34)
	OP19_LOOP_CONTROL	reduce using rule 83 (OPTIONAL-34)
	OP22_LOGICAL_NOT	reduce using rule 83 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 83 (OPTIONAL-34)
	WORD	reduce using rule 83 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 83 (OPTIONAL-34)

	MethodArguments	go to state 381
	OPTIONAL-34	go to state 380

State 375:

	PAREN-20 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 53)

	$default	reduce using rule 53 (PAREN-20)

State 376:

	STAR-22 -> STAR-22 . ArgumentCheck	(Rule 56)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-21 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-22 .	(Rule 58)

	CHECK_OR_CHECKTRACE	shift, and go to state 383

	'%{'	reduce using rule 58 (SubroutineArguments)
	'('	reduce using rule 58 (SubroutineArguments)
	'@{'	reduce using rule 58 (SubroutineArguments)
	'['	reduce using rule 58 (SubroutineArguments)
	'for my integer'	reduce using rule 58 (SubroutineArguments)
	'foreach my'	reduce using rule 58 (SubroutineArguments)
	'if ('	reduce using rule 58 (SubroutineArguments)
	'my'	reduce using rule 58 (SubroutineArguments)
	'undef'	reduce using rule 58 (SubroutineArguments)
	'while ('	reduce using rule 58 (SubroutineArguments)
	'{'	reduce using rule 58 (SubroutineArguments)
	LITERAL	reduce using rule 58 (SubroutineArguments)
	OP01_NAMED	reduce using rule 58 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 58 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 58 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 58 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 58 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 58 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 58 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 58 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 58 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 58 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 58 (SubroutineArguments)
	WORD	reduce using rule 58 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 58 (SubroutineArguments)

	ArgumentCheck	go to state 382

State 377:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-15 LITERAL	(Rule 42)

	'my'	shift, and go to state 91

	LITERAL	reduce using rule 41 (OPTIONAL-15)

	TypeInner	go to state 385
	OPTIONAL-15	go to state 384

State 378:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB . OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	'= sub {'	shift, and go to state 387

	OpsTypesSub	go to state 386

State 379:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 92)

	TYPE_CLASS_OR_SELF	shift, and go to state 388

State 380:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 . PLUS-35 '}' ';'	(Rule 86)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 69
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 61
	OP01_NAMED_VOID_PAREN	shift, and go to state 55
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 56
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	Variable	go to state 47
	HashReference	go to state 68
	OperatorVoid	go to state 46
	Operation	go to state 390
	PAREN-46	go to state 42
	OPTIONAL-47	go to state 51
	HashDereferenced	go to state 50
	ArrayDereferenced	go to state 49
	Statement	go to state 37
	VariableDeclaration	go to state 34
	PLUS-35	go to state 389
	Operator	go to state 53
	Conditional	go to state 52
	ArrayReference	go to state 54
	VariableModification	go to state 41
	LoopLabel	go to state 62
	WordScoped	go to state 59
	Expression	go to state 39

State 381:

	OPTIONAL-34 -> MethodArguments .	(Rule 82)

	$default	reduce using rule 82 (OPTIONAL-34)

State 382:

	STAR-22 -> STAR-22 ArgumentCheck .	(Rule 56)

	$default	reduce using rule 56 (STAR-22)

State 383:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-24 ')' ';'	(Rule 62)

	'('	shift, and go to state 391

State 384:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 . LITERAL	(Rule 42)

	LITERAL	shift, and go to state 392

State 385:

	OPTIONAL-15 -> TypeInner .	(Rule 40)

	$default	reduce using rule 40 (OPTIONAL-15)

State 386:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub . 'our' Type TYPES_SUB OpsTypesSub	(Rule 24)

	'our'	shift, and go to state 393

State 387:

	OpsTypesSub -> '= sub {' . OP01_NAMED_VOID_PAREN LITERAL ')' ';' '}' ';'	(Rule 25)

	OP01_NAMED_VOID_PAREN	shift, and go to state 394

State 388:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 92)

	$default	reduce using rule 89 (STAR-37)

	STAR-37	go to state 395

State 389:

	PLUS-35 -> PLUS-35 . Operation	(Rule 84)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 . '}' ';'	(Rule 86)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'if ('	shift, and go to state 64
	'my'	shift, and go to state 69
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	'}'	shift, and go to state 396
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 61
	OP01_NAMED_VOID_PAREN	shift, and go to state 55
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP19_LOOP_CONTROL	shift, and go to state 56
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 45
	WORD_SCOPED	shift, and go to state 14

	'for my integer'	reduce using rule 152 (OPTIONAL-47)
	'foreach my'	reduce using rule 152 (OPTIONAL-47)
	'while ('	reduce using rule 152 (OPTIONAL-47)

	Variable	go to state 47
	HashReference	go to state 68
	OperatorVoid	go to state 46
	Operation	go to state 397
	PAREN-46	go to state 42
	OPTIONAL-47	go to state 51
	HashDereferenced	go to state 50
	ArrayDereferenced	go to state 49
	Statement	go to state 37
	VariableDeclaration	go to state 34
	ArrayReference	go to state 54
	Operator	go to state 53
	Conditional	go to state 52
	VariableModification	go to state 41
	LoopLabel	go to state 62
	WordScoped	go to state 59
	Expression	go to state 39

State 390:

	PLUS-35 -> Operation .	(Rule 85)

	$default	reduce using rule 85 (PLUS-35)

State 391:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-24 ')' ';'	(Rule 62)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	ArrayReference	go to state 54
	Operator	go to state 53
	HashReference	go to state 68
	Variable	go to state 88
	HashDereferenced	go to state 50
	WordScoped	go to state 59
	Expression	go to state 398
	ArrayDereferenced	go to state 49

State 392:

	PAREN-16 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-15 LITERAL .	(Rule 42)

	$default	reduce using rule 42 (PAREN-16)

State 393:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' . Type TYPES_SUB OpsTypesSub	(Rule 24)

	WORD	shift, and go to state 85

	Type	go to state 399

State 394:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN . LITERAL ')' ';' '}' ';'	(Rule 25)

	LITERAL	shift, and go to state 400

State 395:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 88)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 92)

	')'	shift, and go to state 402
	OP21_LIST_COMMA	shift, and go to state 403

	PAREN-36	go to state 401

State 396:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' . ';'	(Rule 86)

	';'	shift, and go to state 404

State 397:

	PLUS-35 -> PLUS-35 Operation .	(Rule 84)

	$default	reduce using rule 84 (PLUS-35)

State 398:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-24 ')' ';'	(Rule 62)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP21_LIST_COMMA	shift, and go to state 406
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

	')'	reduce using rule 61 (OPTIONAL-24)

	PAREN-23	go to state 407
	OPTIONAL-24	go to state 405

State 399:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type . TYPES_SUB OpsTypesSub	(Rule 24)

	TYPES_SUB	shift, and go to state 408

State 400:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL . ')' ';' '}' ';'	(Rule 25)

	')'	shift, and go to state 409

State 401:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 88)

	$default	reduce using rule 88 (STAR-37)

State 402:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-38	(Rule 92)

	OP19_VARIABLE_ASSIGN	shift, and go to state 410

State 403:

	PAREN-36 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 87)

	'my'	shift, and go to state 411

State 404:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-34 PLUS-35 '}' ';' .	(Rule 86)

	$default	reduce using rule 86 (Method)

State 405:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 . ')' ';'	(Rule 62)

	')'	shift, and go to state 412

State 406:

	PAREN-23 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 59)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	HashReference	go to state 68
	Variable	go to state 88
	Operator	go to state 53
	ArrayReference	go to state 54
	ArrayDereferenced	go to state 49
	Expression	go to state 413
	WordScoped	go to state 59
	HashDereferenced	go to state 50

State 407:

	OPTIONAL-24 -> PAREN-23 .	(Rule 60)

	$default	reduce using rule 60 (OPTIONAL-24)

State 408:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB . OpsTypesSub	(Rule 24)

	'= sub {'	shift, and go to state 387

	OpsTypesSub	go to state 414

State 409:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' . ';' '}' ';'	(Rule 25)

	';'	shift, and go to state 415

State 410:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-38	(Rule 92)

	'@_;'	shift, and go to state 416

State 411:

	PAREN-36 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 87)

	WORD	shift, and go to state 85

	Type	go to state 417

State 412:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' . ';'	(Rule 62)

	';'	shift, and go to state 418

State 413:

	PAREN-23 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 59)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP21_LIST_COMMA	shift, and go to state 419
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

State 414:

	OpsTypes -> 'our' Type OPS_TYPES_ID OP19_VARIABLE_ASSIGN LITERAL ';' 'our' Type OPS_SUB OpsTypesSub 'our' Type TYPES_SUB OpsTypesSub .	(Rule 24)

	$default	reduce using rule 24 (OpsTypes)

State 415:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' ';' . '}' ';'	(Rule 25)

	'}'	shift, and go to state 420

State 416:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-38	(Rule 92)

	$default	reduce using rule 91 (STAR-38)

	STAR-38	go to state 421

State 417:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 87)

	VARIABLE_SYMBOL	shift, and go to state 422

State 418:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-24 ')' ';' .	(Rule 62)

	$default	reduce using rule 62 (ArgumentCheck)

State 419:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 59)

	'%{'	shift, and go to state 67
	'('	shift, and go to state 40
	'@{'	shift, and go to state 33
	'['	shift, and go to state 38
	'undef'	shift, and go to state 71
	'{'	shift, and go to state 31
	LITERAL	shift, and go to state 60
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 65
	OP05_LOGICAL_NEG	shift, and go to state 48
	OP05_MATH_NEG	shift, and go to state 36
	OP10_NAMED_UNARY	shift, and go to state 44
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 43
	OP22_LOGICAL_NOT	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 70
	WORD	shift, and go to state 15
	WORD_SCOPED	shift, and go to state 14

	WordScoped	go to state 59
	HashDereferenced	go to state 50
	Expression	go to state 423
	ArrayDereferenced	go to state 49
	Variable	go to state 88
	HashReference	go to state 68
	ArrayReference	go to state 54
	Operator	go to state 53

State 420:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' ';' '}' . ';'	(Rule 25)

	';'	shift, and go to state 424

State 421:

	STAR-38 -> STAR-38 . ArgumentCheck	(Rule 90)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-37 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-38 .	(Rule 92)

	CHECK_OR_CHECKTRACE	shift, and go to state 383

	'%{'	reduce using rule 92 (MethodArguments)
	'('	reduce using rule 92 (MethodArguments)
	'@{'	reduce using rule 92 (MethodArguments)
	'['	reduce using rule 92 (MethodArguments)
	'for my integer'	reduce using rule 92 (MethodArguments)
	'foreach my'	reduce using rule 92 (MethodArguments)
	'if ('	reduce using rule 92 (MethodArguments)
	'my'	reduce using rule 92 (MethodArguments)
	'undef'	reduce using rule 92 (MethodArguments)
	'while ('	reduce using rule 92 (MethodArguments)
	'{'	reduce using rule 92 (MethodArguments)
	LITERAL	reduce using rule 92 (MethodArguments)
	OP01_NAMED	reduce using rule 92 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 92 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 92 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 92 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 92 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 92 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 92 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 92 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 92 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 92 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 92 (MethodArguments)
	WORD	reduce using rule 92 (MethodArguments)
	WORD_SCOPED	reduce using rule 92 (MethodArguments)

	ArgumentCheck	go to state 425

State 422:

	PAREN-36 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 87)

	$default	reduce using rule 87 (PAREN-36)

State 423:

	PAREN-23 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 59)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 100)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 103)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 104)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 105)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 106)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 107)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 110)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 111)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 112)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 113)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 115)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 116)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 117)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 120)

	OP04_MATH_POW	shift, and go to state 98
	OP06_REGEX_MATCH	shift, and go to state 99
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 110
	OP08_MATH_ADD_SUB	shift, and go to state 107
	OP08_STRING_CAT	shift, and go to state 109
	OP09_BITWISE_SHIFT	shift, and go to state 112
	OP11_COMPARE_LT_GT	shift, and go to state 101
	OP12_COMPARE_EQ_NEQ	shift, and go to state 102
	OP13_BITWISE_AND	shift, and go to state 103
	OP14_BITWISE_OR_XOR	shift, and go to state 105
	OP15_LOGICAL_AND	shift, and go to state 111
	OP16_LOGICAL_OR	shift, and go to state 108
	OP17_LIST_RANGE	shift, and go to state 104
	OP18_TERNARY	shift, and go to state 106
	OP23_LOGICAL_AND	shift, and go to state 97
	OP24_LOGICAL_OR_XOR	shift, and go to state 100

	')'	reduce using rule 59 (PAREN-23)

State 424:

	OpsTypesSub -> '= sub {' OP01_NAMED_VOID_PAREN LITERAL ')' ';' '}' ';' .	(Rule 25)

	$default	reduce using rule 25 (OpsTypesSub)

State 425:

	STAR-38 -> STAR-38 ArgumentCheck .	(Rule 90)

	$default	reduce using rule 90 (STAR-38)


Summary:
--------
Number of rules         : 214
Number of terminals     : 85
Number of non-terminals : 105
Number of states        : 426
