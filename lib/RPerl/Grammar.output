Conflicts:
----------
Conflict in state 131 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 131 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 131 between rule 99 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 131 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 131 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 131 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 131 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 131 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 131 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 131 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 131 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 131 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 131 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 131 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 131 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 131 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 156 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 156 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 156 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 156 between rule 109 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 156 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 156 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 156 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 156 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 156 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 156 between rule 109 and token OP18_TERNARY resolved as shift.
Conflict in state 156 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 156 between rule 109 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 156 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 156 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 156 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 156 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 171 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 171 between rule 85 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 171 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 171 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 171 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 171 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 171 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 171 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 171 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 171 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 171 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 171 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 171 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 171 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 171 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 171 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 186 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 186 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 186 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 186 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 186 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 186 between rule 100 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 186 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 186 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 186 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 186 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 186 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 186 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 186 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 186 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 191 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 191 between rule 92 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 191 between rule 92 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 191 between rule 92 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 191 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 191 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 191 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 191 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 191 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 191 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 191 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 191 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 191 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 191 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 213 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 213 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 213 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 213 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 213 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 213 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 213 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 213 between rule 107 and token OP17_LIST_RANGE resolved as error.
Conflict in state 213 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 213 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 213 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 213 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 213 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 213 between rule 107 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 214 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 214 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 214 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 214 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 214 between rule 95 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 214 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 214 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 214 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 214 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 214 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 214 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 214 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 214 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 214 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 215 between rule 97 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 215 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 215 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 215 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 215 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 215 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 215 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 215 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 215 between rule 97 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 215 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 215 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 215 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 215 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 215 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 216 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 216 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 216 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 216 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 216 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 216 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 216 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 216 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 216 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 216 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 216 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 216 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 216 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 216 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 218 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 218 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 218 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 218 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 218 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 218 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 218 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 218 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 218 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 218 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 218 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 218 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 218 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 218 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 219 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 219 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 219 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 219 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 219 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 219 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 219 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 219 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 219 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 219 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 219 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 219 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 219 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 219 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 219 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 220 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 220 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 220 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 220 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 220 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 220 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 220 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 220 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 220 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 220 between rule 91 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 220 between rule 91 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 220 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 221 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 221 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 221 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 221 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 221 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 221 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 221 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 221 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 221 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 221 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 221 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 98 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 221 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 221 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 221 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 222 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 222 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 101 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 222 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 222 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 222 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 222 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 222 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 222 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 222 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 222 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 222 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 222 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 222 between rule 101 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 222 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 223 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 223 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 223 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 223 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 223 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 223 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 223 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 223 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 223 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 223 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 223 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 223 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 223 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 223 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 223 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 224 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 224 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 224 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 224 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 224 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 224 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 224 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 224 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 224 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 224 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 224 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 224 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 225 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 225 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 225 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 225 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 225 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 225 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 225 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 225 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 225 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 225 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 225 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 225 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 225 between rule 96 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 225 between rule 96 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 227 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 227 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 227 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 227 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 227 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 227 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 227 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 227 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 227 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 227 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 227 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 227 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 227 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 227 between rule 102 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 228 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 228 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 228 between rule 111 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 228 between rule 111 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 228 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 228 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 228 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 228 between rule 111 and token OP18_TERNARY resolved as shift.
Conflict in state 228 between rule 111 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 228 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 228 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 228 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 228 between rule 111 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 228 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 228 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 228 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 257 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 257 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 257 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 257 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 257 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 257 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 257 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 257 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 257 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 257 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 257 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 257 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 257 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 257 between rule 85 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 378 between rule 87 and token OP04_MATH_POW resolved as shift.
Conflict in state 378 between rule 87 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 378 between rule 87 and token OP08_STRING_CAT resolved as shift.
Conflict in state 378 between rule 87 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 378 between rule 87 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 378 between rule 87 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 378 between rule 87 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 378 between rule 87 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 378 between rule 87 and token OP18_TERNARY resolved as shift.
Conflict in state 378 between rule 87 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 378 between rule 87 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 378 between rule 87 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 378 between rule 87 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 378 between rule 87 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 378 between rule 87 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 378 between rule 87 and token OP24_LOGICAL_OR_XOR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	OPTIONAL-23 -> PropertiesClass
58:	OPTIONAL-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';'
66:	Properties -> 'our %properties = (' ')' ';' Critic
67:	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped
68:	STAR-28 -> STAR-28 PAREN-27
69:	STAR-28 -> /* empty */
70:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';'
71:	OPTIONAL-29 -> MethodArguments
72:	OPTIONAL-29 -> /* empty */
73:	PLUS-30 -> PLUS-30 Operation
74:	PLUS-30 -> Operation
75:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'
76:	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
77:	STAR-32 -> STAR-32 PAREN-31
78:	STAR-32 -> /* empty */
79:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'
80:	MethodOrSubroutine -> Method
81:	MethodOrSubroutine -> Subroutine
82:	Operation -> Expression ';'
83:	Operation -> Statement
84:	Operator -> LEFT_PAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
85:	Operator -> OP01_NAMED SubExpression
86:	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
87:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
88:	Operator -> OP01_CLOSE FH_REF_SYMBOL
89:	Operator -> OP03_MATH_INC_DEC Variable
90:	Operator -> Variable OP03_MATH_INC_DEC
91:	Operator -> SubExpression OP04_MATH_POW SubExpression
92:	Operator -> OP05_LOGICAL_NEG SubExpression
93:	Operator -> OP05_MATH_NEG SubExpression ')'
94:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
95:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
96:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
97:	Operator -> SubExpression OP08_STRING_CAT SubExpression
98:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
99:	Operator -> OP10_NAMED_UNARY SubExpression
100:	Operator -> OP10_NAMED_UNARY_STRINGIFY SubExpression
101:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
102:	Operator -> SubExpression OP12_COMPARE_EQ_NEQ SubExpression
103:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
104:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
105:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
106:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
107:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
108:	Operator -> SubExpression OP18_TERNARY Variable COLON Variable
109:	Operator -> OP22_LOGICAL_NOT SubExpression
110:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
111:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
112:	PAREN-33 -> STDOUT_STDERR
113:	OPTIONAL-34 -> PAREN-33
114:	OPTIONAL-34 -> /* empty */
115:	OPTIONAL-35 -> ListElements
116:	OPTIONAL-35 -> /* empty */
117:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
118:	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';'
119:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';'
120:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
121:	OPTIONAL-36 -> ListElements
122:	OPTIONAL-36 -> /* empty */
123:	OPTIONAL-37 -> ListElements
124:	OPTIONAL-37 -> /* empty */
125:	Expression -> Operator
126:	Expression -> WordScoped LEFT_PAREN OPTIONAL-36 ')'
127:	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 ')'
128:	SubExpression -> Expression
129:	SubExpression -> 'undef'
130:	SubExpression -> Literal
131:	SubExpression -> Variable
132:	SubExpression -> ArrayReference
133:	SubExpression -> ArrayDereferenced
134:	SubExpression -> HashReference
135:	SubExpression -> HashDereferenced
136:	SubExpression -> LEFT_BRACE '}'
137:	SubExpression -> LEFT_PAREN SubExpression ')'
138:	SubExpressionOrStdin -> SubExpression
139:	SubExpressionOrStdin -> STDIN
140:	PAREN-38 -> LoopLabel COLON
141:	OPTIONAL-39 -> PAREN-38
142:	OPTIONAL-39 -> /* empty */
143:	Statement -> Conditional
144:	Statement -> OPTIONAL-39 Loop
145:	Statement -> OperatorVoid
146:	Statement -> VariableDeclaration
147:	Statement -> VariableModification
148:	PAREN-40 -> 'elsif (' SubExpression ')' CodeBlock
149:	STAR-41 -> STAR-41 PAREN-40
150:	STAR-41 -> /* empty */
151:	PAREN-42 -> 'else' CodeBlock
152:	OPTIONAL-43 -> PAREN-42
153:	OPTIONAL-43 -> /* empty */
154:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 OPTIONAL-43
155:	Loop -> LoopFor
156:	Loop -> LoopForEach
157:	Loop -> LoopWhile
158:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock
159:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock
160:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
161:	PLUS-44 -> PLUS-44 Operation
162:	PLUS-44 -> Operation
163:	CodeBlock -> LEFT_BRACE PLUS-44 '}'
164:	STAR-45 -> STAR-45 VariableRetrieval
165:	STAR-45 -> /* empty */
166:	Variable -> VARIABLE_SYMBOL STAR-45
167:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
168:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
169:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
170:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
171:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
172:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
173:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
174:	PAREN-46 -> OP21_LIST_COMMA ListElement
175:	STAR-47 -> STAR-47 PAREN-46
176:	STAR-47 -> /* empty */
177:	PLUS-48 -> PLUS-48 WORD
178:	PLUS-48 -> WORD
179:	ListElements -> ListElement STAR-47
180:	ListElements -> OP01_QW LEFT_PAREN PLUS-48 ')'
181:	ListElement -> SubExpression
182:	ListElement -> TypeInner SubExpression
183:	ListElement -> KEYS_OR_VALUES HashDereferenced
184:	OPTIONAL-49 -> ListElements
185:	OPTIONAL-49 -> /* empty */
186:	ArrayReference -> LEFT_BRACKET OPTIONAL-49 ']'
187:	ArrayDereferenced -> '@{' Variable '}'
188:	ArrayDereferenced -> '@{' ArrayReference '}'
189:	OPTIONAL-50 -> TypeInner
190:	OPTIONAL-50 -> /* empty */
191:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 SubExpression
192:	HashEntry -> HashDereferenced
193:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
194:	HashEntryTyped -> HashDereferenced
195:	PAREN-51 -> OP21_LIST_COMMA HashEntry
196:	STAR-52 -> STAR-52 PAREN-51
197:	STAR-52 -> /* empty */
198:	HashReference -> LEFT_BRACE HashEntry STAR-52 '}'
199:	HashDereferenced -> '%{' Variable '}'
200:	HashDereferenced -> '%{' HashReference '}'
201:	WordScoped -> WORD
202:	WordScoped -> WORD_SCOPED
203:	LoopLabel -> WORD
204:	Type -> WORD
205:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
206:	Literal -> LITERAL_STRING
207:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 4
	SHEBANG	shift, and go to state 7

	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 6
	CompileUnit	go to state 5
	OPTIONAL-9	go to state 9
	PAREN-1	go to state 8
	Program	go to state 3
	ModuleHeader	go to state 2
	PLUS-2	go to state 1

State 1:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 4

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 6
	OPTIONAL-9	go to state 9
	PAREN-1	go to state 10
	ModuleHeader	go to state 2

State 2:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 12

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Module	go to state 15
	Package	go to state 14
	Class	go to state 11
	STAR-10	go to state 13

State 3:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 4:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 17

	PLUS-14	go to state 16

State 5:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 18

State 6:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 7:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 20
	Critic	go to state 19

State 8:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 9:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 21

State 10:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 11:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 12:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 23

State 13:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 4

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	STAR-11	go to state 26
	Critic	go to state 25

State 14:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 15:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 16:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 28
	WORD	shift, and go to state 27

State 17:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 18:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 19:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 20:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 29

	Header	go to state 30

State 21:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 31

State 22:

	WordScoped -> WORD_SCOPED .	(Rule 202)

	$default	reduce using rule 202 (WordScoped)

State 23:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 32

State 24:

	WordScoped -> WORD .	(Rule 201)

	$default	reduce using rule 201 (WordScoped)

State 25:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 26:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 35

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 34
	Include	go to state 33

State 27:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 28:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 29:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 36

State 30:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 37

State 31:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 38

State 32:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 39

State 33:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 34:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 43
	'use constant'	shift, and go to state 41

	PLUS-13	go to state 44
	Constant	go to state 42
	Subroutine	go to state 40

State 35:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 45

State 36:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 46

State 37:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LEFT_BRACE	reduce using rule 11 (STAR-5)
	LEFT_BRACKET	reduce using rule 11 (STAR-5)
	LEFT_PAREN	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 47
	STAR-5	go to state 48

State 38:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 29

	Header	go to state 49

State 39:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 35

	Include	go to state 50

State 40:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 41:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 51

State 42:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 43:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 53

	Type	go to state 52

State 44:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 43
	LITERAL_NUMBER	shift, and go to state 54

	Subroutine	go to state 55

State 45:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 57
	'qw('	shift, and go to state 56

State 46:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 58

State 47:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 48:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 35

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LEFT_BRACE	reduce using rule 13 (STAR-6)
	LEFT_BRACKET	reduce using rule 13 (STAR-6)
	LEFT_PAREN	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	Include	go to state 59
	STAR-6	go to state 60

State 49:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 50:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 61

State 51:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 62

State 52:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 63

State 53:

	Type -> WORD .	(Rule 204)

	$default	reduce using rule 204 (Type)

State 54:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 64

State 55:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 56:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 65

	PLUS-15	go to state 66

State 57:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 58:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 67

State 59:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 60:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 41

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LEFT_BRACE	reduce using rule 15 (STAR-7)
	LEFT_BRACKET	reduce using rule 15 (STAR-7)
	LEFT_PAREN	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	STAR-7	go to state 68
	Constant	go to state 69

State 61:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 4

	'our %properties = ('	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 71
	STAR-21	go to state 70

State 62:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 73

	TypeInner	go to state 72

State 63:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 74

State 64:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 65:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 66:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 75
	WORD	shift, and go to state 76

State 67:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 90
	'my'	shift, and go to state 82
	'our'	shift, and go to state 43
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_NAMED_VOID	shift, and go to state 94
	OP01_OPEN	shift, and go to state 88
	OP01_PRINT	shift, and go to state 106
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 103
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 110
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 142 (OPTIONAL-39)
	'foreach my'	reduce using rule 142 (OPTIONAL-39)
	'while ('	reduce using rule 142 (OPTIONAL-39)

	Literal	go to state 87
	PAREN-38	go to state 117
	WordScoped	go to state 115
	HashReference	go to state 116
	PLUS-8	go to state 118
	Expression	go to state 91
	Operation	go to state 119
	Subroutine	go to state 85
	HashDereferenced	go to state 113
	SubExpression	go to state 86
	OPTIONAL-39	go to state 104
	LoopLabel	go to state 83
	Statement	go to state 107
	Conditional	go to state 93
	Variable	go to state 92
	Operator	go to state 77
	OperatorVoid	go to state 97
	ArrayReference	go to state 80
	VariableDeclaration	go to state 99
	ArrayDereferenced	go to state 98
	VariableModification	go to state 101

State 69:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 70:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 35

	'our %properties = ('	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	STAR-22	go to state 122
	Include	go to state 123

State 71:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 72:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114

	Literal	go to state 124

State 73:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 205)

	WORD	shift, and go to state 53

	Type	go to state 125

State 74:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 127

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LEFT_BRACE	reduce using rule 43 (OPTIONAL-16)
	LEFT_BRACKET	reduce using rule 43 (OPTIONAL-16)
	LEFT_PAREN	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	OPTIONAL-16	go to state 126
	SubroutineArguments	go to state 128

State 75:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 129

State 76:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 77:

	Expression -> Operator .	(Rule 125)

	$default	reduce using rule 125 (Expression)

State 78:

	Literal -> LITERAL_NUMBER .	(Rule 207)

	$default	reduce using rule 207 (Literal)

State 79:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 99)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Operator	go to state 77
	HashDereferenced	go to state 113
	SubExpression	go to state 131
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116

State 80:

	SubExpression -> ArrayReference .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 81:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 88)

	FH_REF_SYMBOL	shift, and go to state 133

State 82:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 170)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 171)

	WORD	shift, and go to state 53

	Type	go to state 134

State 83:

	PAREN-38 -> LoopLabel . COLON	(Rule 140)

	COLON	shift, and go to state 135

State 84:

	HashDereferenced -> '%{' . Variable '}'	(Rule 199)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 200)

	LEFT_BRACE	shift, and go to state 138
	VARIABLE_SYMBOL	shift, and go to state 102

	Variable	go to state 137
	HashReference	go to state 136

State 85:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 86:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 87:

	SubExpression -> Literal .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 88:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'my'	shift, and go to state 155

State 89:

	Operator -> OP22_LOGICAL_NOT . SubExpression	(Rule 109)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 130
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Operator	go to state 77
	HashDereferenced	go to state 113
	SubExpression	go to state 156
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116
	Expression	go to state 132

State 90:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-41 OPTIONAL-43	(Rule 154)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	HashDereferenced	go to state 113
	SubExpression	go to state 157
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115

State 91:

	Operation -> Expression . ';'	(Rule 82)
	SubExpression -> Expression .	(Rule 128)

	';'	shift, and go to state 158

	OP04_MATH_POW	reduce using rule 128 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 128 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 128 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 128 (SubExpression)
	OP08_STRING_CAT	reduce using rule 128 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 128 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 128 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 128 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 128 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 128 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 128 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 128 (SubExpression)
	OP18_TERNARY	reduce using rule 128 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 128 (SubExpression)

State 92:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 ')'	(Rule 127)
	SubExpression -> Variable .	(Rule 131)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 172)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 173)

	OP02_METHOD_THINARROW	shift, and go to state 160
	OP03_MATH_INC_DEC	shift, and go to state 161
	OP19_VARIABLE_ASSIGN	shift, and go to state 159
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 162

	OP04_MATH_POW	reduce using rule 131 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 131 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 131 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 131 (SubExpression)
	OP08_STRING_CAT	reduce using rule 131 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 131 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 131 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 131 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 131 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 131 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 131 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 131 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 131 (SubExpression)
	OP18_TERNARY	reduce using rule 131 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 131 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 131 (SubExpression)

State 93:

	Statement -> Conditional .	(Rule 143)

	$default	reduce using rule 143 (Statement)

State 94:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-35 ';'	(Rule 119)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	';'	reduce using rule 116 (OPTIONAL-35)

	Expression	go to state 132
	Literal	go to state 87
	WordScoped	go to state 115
	TypeInner	go to state 164
	HashReference	go to state 116
	ArrayReference	go to state 80
	ListElements	go to state 169
	ArrayDereferenced	go to state 98
	Operator	go to state 77
	ListElement	go to state 166
	SubExpression	go to state 168
	HashDereferenced	go to state 113
	OPTIONAL-35	go to state 165
	Variable	go to state 130

State 95:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 89)

	VARIABLE_SYMBOL	shift, and go to state 102

	Variable	go to state 170

State 96:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 132
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	HashDereferenced	go to state 113
	SubExpression	go to state 171
	Variable	go to state 130

State 97:

	Statement -> OperatorVoid .	(Rule 145)

	$default	reduce using rule 145 (Statement)

State 98:

	SubExpression -> ArrayDereferenced .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 99:

	Statement -> VariableDeclaration .	(Rule 146)

	$default	reduce using rule 146 (Statement)

State 100:

	SubExpression -> LEFT_BRACE . '}'	(Rule 136)
	HashReference -> LEFT_BRACE . HashEntry STAR-52 '}'	(Rule 198)

	'%{'	shift, and go to state 84
	'}'	shift, and go to state 172
	WORD	shift, and go to state 174

	HashEntry	go to state 173
	HashDereferenced	go to state 175

State 101:

	Statement -> VariableModification .	(Rule 147)

	$default	reduce using rule 147 (Statement)

State 102:

	Variable -> VARIABLE_SYMBOL . STAR-45	(Rule 166)

	$default	reduce using rule 165 (STAR-45)

	STAR-45	go to state 176

State 103:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 120)

	WORD	shift, and go to state 177

	LoopLabel	go to state 178

State 104:

	Statement -> OPTIONAL-39 . Loop	(Rule 144)

	'for my integer'	shift, and go to state 185
	'foreach my'	shift, and go to state 183
	'while ('	shift, and go to state 179

	Loop	go to state 182
	LoopWhile	go to state 184
	LoopFor	go to state 181
	LoopForEach	go to state 180

State 105:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . SubExpression	(Rule 100)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Operator	go to state 77
	HashDereferenced	go to state 113
	SubExpression	go to state 186
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116

State 106:

	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 117)
	OperatorVoid -> OP01_PRINT . OPTIONAL-34 ListElements ';'	(Rule 118)

	FH_REF_SYMBOL_BRACES	shift, and go to state 190
	STDOUT_STDERR	shift, and go to state 188

	'%{'	reduce using rule 114 (OPTIONAL-34)
	'@{'	reduce using rule 114 (OPTIONAL-34)
	'my'	reduce using rule 114 (OPTIONAL-34)
	'undef'	reduce using rule 114 (OPTIONAL-34)
	KEYS_OR_VALUES	reduce using rule 114 (OPTIONAL-34)
	LEFT_BRACE	reduce using rule 114 (OPTIONAL-34)
	LEFT_BRACKET	reduce using rule 114 (OPTIONAL-34)
	LEFT_PAREN	reduce using rule 114 (OPTIONAL-34)
	LITERAL_NUMBER	reduce using rule 114 (OPTIONAL-34)
	LITERAL_STRING	reduce using rule 114 (OPTIONAL-34)
	OP01_CLOSE	reduce using rule 114 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 114 (OPTIONAL-34)
	OP01_OPEN	reduce using rule 114 (OPTIONAL-34)
	OP01_QW	reduce using rule 114 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 114 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 114 (OPTIONAL-34)
	OP05_MATH_NEG	reduce using rule 114 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 114 (OPTIONAL-34)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 114 (OPTIONAL-34)
	OP22_LOGICAL_NOT	reduce using rule 114 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 114 (OPTIONAL-34)
	WORD	reduce using rule 114 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 114 (OPTIONAL-34)

	PAREN-33	go to state 189
	OPTIONAL-34	go to state 187

State 107:

	Operation -> Statement .	(Rule 83)

	$default	reduce using rule 83 (Operation)

State 108:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 92)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	SubExpression	go to state 191
	HashDereferenced	go to state 113
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Variable	go to state 130
	Expression	go to state 132
	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87

State 109:

	SubExpression -> 'undef' .	(Rule 129)

	$default	reduce using rule 129 (SubExpression)

State 110:

	WordScoped -> WORD .	(Rule 201)
	LoopLabel -> WORD .	(Rule 203)

	COLON	reduce using rule 203 (LoopLabel)
	LEFT_PAREN	reduce using rule 201 (WordScoped)

State 111:

	ArrayReference -> LEFT_BRACKET . OPTIONAL-49 ']'	(Rule 186)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	']'	reduce using rule 185 (OPTIONAL-49)

	Variable	go to state 130
	SubExpression	go to state 168
	ListElement	go to state 166
	HashDereferenced	go to state 113
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	ListElements	go to state 192
	Operator	go to state 77
	OPTIONAL-49	go to state 193
	TypeInner	go to state 164
	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87
	Expression	go to state 132

State 112:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 187)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 188)

	LEFT_BRACKET	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 102

	ArrayReference	go to state 195
	Variable	go to state 194

State 113:

	SubExpression -> HashDereferenced .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 114:

	Literal -> LITERAL_STRING .	(Rule 206)

	$default	reduce using rule 206 (Literal)

State 115:

	Expression -> WordScoped . LEFT_PAREN OPTIONAL-36 ')'	(Rule 126)

	LEFT_PAREN	shift, and go to state 196

State 116:

	SubExpression -> HashReference .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 117:

	OPTIONAL-39 -> PAREN-38 .	(Rule 141)

	$default	reduce using rule 141 (OPTIONAL-39)

State 118:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 90
	'my'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_NAMED_VOID	shift, and go to state 94
	OP01_OPEN	shift, and go to state 88
	OP01_PRINT	shift, and go to state 106
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 103
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 110
	WORD_SCOPED	shift, and go to state 22

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 142 (OPTIONAL-39)
	'foreach my'	reduce using rule 142 (OPTIONAL-39)
	'while ('	reduce using rule 142 (OPTIONAL-39)

	Statement	go to state 107
	LoopLabel	go to state 83
	OPTIONAL-39	go to state 104
	VariableModification	go to state 101
	VariableDeclaration	go to state 99
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	OperatorVoid	go to state 97
	Operator	go to state 77
	Conditional	go to state 93
	Variable	go to state 92
	Operation	go to state 197
	Expression	go to state 91
	PAREN-38	go to state 117
	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87
	SubExpression	go to state 86
	HashDereferenced	go to state 113

State 119:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 120:

	Operator -> LEFT_PAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)
	Operator -> LEFT_PAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)
	SubExpression -> LEFT_PAREN . SubExpression ')'	(Rule 137)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 198
	OP01_OPEN	shift, and go to state 88
	OP01_PRINT	shift, and go to state 199
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 130
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	HashDereferenced	go to state 113
	SubExpression	go to state 200
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115
	Expression	go to state 132

State 121:

	Operator -> OP05_MATH_NEG . SubExpression ')'	(Rule 93)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	Expression	go to state 132
	Variable	go to state 130
	HashDereferenced	go to state 113
	SubExpression	go to state 201
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77

State 122:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties = ('	shift, and go to state 203
	'use constant'	shift, and go to state 41

	Constant	go to state 204
	Properties	go to state 202

State 123:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 124:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 205

State 125:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 205)

	'$TYPED_'	shift, and go to state 206

State 126:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 90
	'my'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_NAMED_VOID	shift, and go to state 94
	OP01_OPEN	shift, and go to state 88
	OP01_PRINT	shift, and go to state 106
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 103
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 110
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 142 (OPTIONAL-39)
	'foreach my'	reduce using rule 142 (OPTIONAL-39)
	'while ('	reduce using rule 142 (OPTIONAL-39)

	OPTIONAL-39	go to state 104
	Statement	go to state 107
	LoopLabel	go to state 83
	Conditional	go to state 93
	Variable	go to state 92
	VariableModification	go to state 101
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	VariableDeclaration	go to state 99
	Operator	go to state 77
	OperatorVoid	go to state 97
	PAREN-38	go to state 117
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	Operation	go to state 208
	Expression	go to state 91
	SubExpression	go to state 86
	HashDereferenced	go to state 113
	PLUS-17	go to state 207

State 127:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 53

	Type	go to state 209

State 128:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 129:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 130:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 ')'	(Rule 127)
	SubExpression -> Variable .	(Rule 131)

	OP02_METHOD_THINARROW	shift, and go to state 160
	OP03_MATH_INC_DEC	shift, and go to state 161

	')'	reduce using rule 131 (SubExpression)
	'..'	reduce using rule 131 (SubExpression)
	';'	reduce using rule 131 (SubExpression)
	']'	reduce using rule 131 (SubExpression)
	'}'	reduce using rule 131 (SubExpression)
	OP04_MATH_POW	reduce using rule 131 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 131 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 131 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 131 (SubExpression)
	OP08_STRING_CAT	reduce using rule 131 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 131 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 131 (SubExpression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 131 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 131 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 131 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 131 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 131 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 131 (SubExpression)
	OP18_TERNARY	reduce using rule 131 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 131 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 131 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 131 (SubExpression)

State 131:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147

	')'	reduce using rule 99 (Operator)
	'..'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 132:

	SubExpression -> Expression .	(Rule 128)

	$default	reduce using rule 128 (SubExpression)

State 133:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 134:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 170)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 171)

	VARIABLE_SYMBOL	shift, and go to state 210

State 135:

	PAREN-38 -> LoopLabel COLON .	(Rule 140)

	$default	reduce using rule 140 (PAREN-38)

State 136:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 200)

	'}'	shift, and go to state 211

State 137:

	HashDereferenced -> '%{' Variable . '}'	(Rule 199)

	'}'	shift, and go to state 212

State 138:

	HashReference -> LEFT_BRACE . HashEntry STAR-52 '}'	(Rule 198)

	'%{'	shift, and go to state 84
	WORD	shift, and go to state 174

	HashEntry	go to state 173
	HashDereferenced	go to state 175

State 139:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 107)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 113
	SubExpression	go to state 213
	Operator	go to state 77
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Variable	go to state 130
	Expression	go to state 132
	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87

State 140:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 95)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	SubExpression	go to state 214
	HashDereferenced	go to state 113
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	Variable	go to state 130
	Expression	go to state 132
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87

State 141:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115
	Expression	go to state 132
	Variable	go to state 130
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	SubExpression	go to state 215
	HashDereferenced	go to state 113

State 142:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 110)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 132
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	HashDereferenced	go to state 113
	SubExpression	go to state 216
	Variable	go to state 130

State 143:

	Operator -> SubExpression OP18_TERNARY . Variable COLON Variable	(Rule 108)

	VARIABLE_SYMBOL	shift, and go to state 102

	Variable	go to state 217

State 144:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87
	Expression	go to state 132
	Variable	go to state 130
	SubExpression	go to state 218
	HashDereferenced	go to state 113
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Operator	go to state 77

State 145:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 103)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 130
	SubExpression	go to state 219
	HashDereferenced	go to state 113
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	Expression	go to state 132

State 146:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 91)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 77
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 113
	SubExpression	go to state 220
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116

State 147:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 98)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87
	Expression	go to state 132
	Variable	go to state 130
	HashDereferenced	go to state 113
	SubExpression	go to state 221
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77

State 148:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 101)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	HashDereferenced	go to state 113
	SubExpression	go to state 222
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116

State 149:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 104)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 132
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	HashDereferenced	go to state 113
	SubExpression	go to state 223
	Operator	go to state 77
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Variable	go to state 130

State 150:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116
	Expression	go to state 132
	Variable	go to state 130
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	SubExpression	go to state 224
	HashDereferenced	go to state 113

State 151:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 96)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116
	Expression	go to state 132
	Variable	go to state 130
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	SubExpression	go to state 225
	HashDereferenced	go to state 113

State 152:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 94)

	OP06_REGEX_PATTERN	shift, and go to state 226

State 153:

	Operator -> SubExpression OP12_COMPARE_EQ_NEQ . SubExpression	(Rule 102)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 132
	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87
	HashDereferenced	go to state 113
	SubExpression	go to state 227
	Operator	go to state 77
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Variable	go to state 130

State 154:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 111)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Operator	go to state 77
	HashDereferenced	go to state 113
	SubExpression	go to state 228
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116

State 155:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'filehandle_ref'	shift, and go to state 229

State 156:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> OP22_LOGICAL_NOT SubExpression .	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 157:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-41 OPTIONAL-43	(Rule 154)

	')'	shift, and go to state 230
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 158:

	Operation -> Expression ';' .	(Rule 82)

	$default	reduce using rule 82 (Operation)

State 159:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 172)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	STDIN	shift, and go to state 231
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	SubExpression	go to state 232
	HashDereferenced	go to state 113
	SubExpressionOrStdin	go to state 233
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116

State 160:

	Expression -> Variable OP02_METHOD_THINARROW . WORD LEFT_PAREN OPTIONAL-37 ')'	(Rule 127)

	WORD	shift, and go to state 234

State 161:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 162:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 173)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 77
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 113
	SubExpression	go to state 235
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115

State 163:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 183)

	'%{'	shift, and go to state 84

	HashDereferenced	go to state 236

State 164:

	ListElement -> TypeInner . SubExpression	(Rule 182)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 130
	HashDereferenced	go to state 113
	SubExpression	go to state 237
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	Expression	go to state 132

State 165:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 . ';'	(Rule 119)

	';'	shift, and go to state 238

State 166:

	ListElements -> ListElement . STAR-47	(Rule 179)

	$default	reduce using rule 176 (STAR-47)

	STAR-47	go to state 239

State 167:

	ListElements -> OP01_QW . LEFT_PAREN PLUS-48 ')'	(Rule 180)

	LEFT_PAREN	shift, and go to state 240

State 168:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> SubExpression .	(Rule 181)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

	')'	reduce using rule 181 (ListElement)
	';'	reduce using rule 181 (ListElement)
	']'	reduce using rule 181 (ListElement)
	OP21_LIST_COMMA	reduce using rule 181 (ListElement)

State 169:

	OPTIONAL-35 -> ListElements .	(Rule 115)

	$default	reduce using rule 115 (OPTIONAL-35)

State 170:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 89)

	$default	reduce using rule 89 (Operator)

State 171:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	')'	reduce using rule 85 (Operator)
	'..'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 172:

	SubExpression -> LEFT_BRACE '}' .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 173:

	HashReference -> LEFT_BRACE HashEntry . STAR-52 '}'	(Rule 198)

	$default	reduce using rule 197 (STAR-52)

	STAR-52	go to state 241

State 174:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-50 SubExpression	(Rule 191)

	OP20_HASH_FATARROW	shift, and go to state 242

State 175:

	HashEntry -> HashDereferenced .	(Rule 192)

	$default	reduce using rule 192 (HashEntry)

State 176:

	STAR-45 -> STAR-45 . VariableRetrieval	(Rule 164)
	Variable -> VARIABLE_SYMBOL STAR-45 .	(Rule 166)

	OP02_ARRAY_THINARROW	shift, and go to state 244
	OP02_HASH_THINARROW	shift, and go to state 243

	')'	reduce using rule 166 (Variable)
	'..'	reduce using rule 166 (Variable)
	';'	reduce using rule 166 (Variable)
	']'	reduce using rule 166 (Variable)
	'}'	reduce using rule 166 (Variable)
	COLON	reduce using rule 166 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 166 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 166 (Variable)
	OP04_MATH_POW	reduce using rule 166 (Variable)
	OP06_REGEX_MATCH	reduce using rule 166 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 166 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 166 (Variable)
	OP08_STRING_CAT	reduce using rule 166 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 166 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 166 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 166 (Variable)
	OP13_BITWISE_AND	reduce using rule 166 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 166 (Variable)
	OP15_LOGICAL_AND	reduce using rule 166 (Variable)
	OP16_LOGICAL_OR	reduce using rule 166 (Variable)
	OP17_LIST_RANGE	reduce using rule 166 (Variable)
	OP18_TERNARY	reduce using rule 166 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 166 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 166 (Variable)
	OP21_LIST_COMMA	reduce using rule 166 (Variable)
	OP23_LOGICAL_AND	reduce using rule 166 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 166 (Variable)

	VariableRetrieval	go to state 245

State 177:

	LoopLabel -> WORD .	(Rule 203)

	$default	reduce using rule 203 (LoopLabel)

State 178:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 120)

	';'	shift, and go to state 246

State 179:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 160)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 132
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	HashDereferenced	go to state 113
	SubExpression	go to state 247
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Operator	go to state 77
	Variable	go to state 130

State 180:

	Loop -> LoopForEach .	(Rule 156)

	$default	reduce using rule 156 (Loop)

State 181:

	Loop -> LoopFor .	(Rule 155)

	$default	reduce using rule 155 (Loop)

State 182:

	Statement -> OPTIONAL-39 Loop .	(Rule 144)

	$default	reduce using rule 144 (Statement)

State 183:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock	(Rule 159)

	WORD	shift, and go to state 53

	Type	go to state 248

State 184:

	Loop -> LoopWhile .	(Rule 157)

	$default	reduce using rule 157 (Loop)

State 185:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock	(Rule 158)

	VARIABLE_SYMBOL	shift, and go to state 249

State 186:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY_STRINGIFY SubExpression .	(Rule 100)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147

	')'	reduce using rule 100 (Operator)
	'..'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 187:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 . ListElements ';'	(Rule 118)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 130
	ListElement	go to state 166
	SubExpression	go to state 168
	HashDereferenced	go to state 113
	ListElements	go to state 250
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Operator	go to state 77
	TypeInner	go to state 164
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	Expression	go to state 132

State 188:

	PAREN-33 -> STDOUT_STDERR .	(Rule 112)

	$default	reduce using rule 112 (PAREN-33)

State 189:

	OPTIONAL-34 -> PAREN-33 .	(Rule 113)

	$default	reduce using rule 113 (OPTIONAL-34)

State 190:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 117)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 132
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115
	TypeInner	go to state 164
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	ListElements	go to state 251
	Operator	go to state 77
	ListElement	go to state 166
	SubExpression	go to state 168
	HashDereferenced	go to state 113
	Variable	go to state 130

State 191:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 92)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146

	')'	reduce using rule 92 (Operator)
	'..'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP06_REGEX_MATCH	reduce using rule 92 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 192:

	OPTIONAL-49 -> ListElements .	(Rule 184)

	$default	reduce using rule 184 (OPTIONAL-49)

State 193:

	ArrayReference -> LEFT_BRACKET OPTIONAL-49 . ']'	(Rule 186)

	']'	shift, and go to state 252

State 194:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 187)

	'}'	shift, and go to state 253

State 195:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 188)

	'}'	shift, and go to state 254

State 196:

	Expression -> WordScoped LEFT_PAREN . OPTIONAL-36 ')'	(Rule 126)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 122 (OPTIONAL-36)

	Variable	go to state 130
	OPTIONAL-36	go to state 255
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ListElements	go to state 256
	ArrayReference	go to state 80
	ListElement	go to state 166
	HashDereferenced	go to state 113
	SubExpression	go to state 168
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115
	TypeInner	go to state 164
	Expression	go to state 132

State 197:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 198:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	Operator -> LEFT_PAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 77
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	HashDereferenced	go to state 113
	ListElement	go to state 258
	SubExpression	go to state 257
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115
	TypeInner	go to state 164

State 199:

	Operator -> LEFT_PAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)

	FH_REF_SYMBOL_BRACES	shift, and go to state 259

State 200:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	SubExpression -> LEFT_PAREN SubExpression . ')'	(Rule 137)

	')'	shift, and go to state 260
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 201:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_MATH_NEG SubExpression . ')'	(Rule 93)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	')'	shift, and go to state 261
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 202:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties_class = ('	shift, and go to state 262

	'our'	reduce using rule 58 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 58 (OPTIONAL-23)

	PropertiesClass	go to state 264
	OPTIONAL-23	go to state 263

State 203:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-26 ')' ';'	(Rule 65)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 4
	')'	shift, and go to state 265

	Critic	go to state 266

State 204:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 205:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 206:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 205)

	WORD	shift, and go to state 267

State 207:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 90
	'my'	shift, and go to state 82
	'undef'	shift, and go to state 109
	'}'	shift, and go to state 268
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_NAMED_VOID	shift, and go to state 94
	OP01_OPEN	shift, and go to state 88
	OP01_PRINT	shift, and go to state 106
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 103
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 110
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 142 (OPTIONAL-39)
	'foreach my'	reduce using rule 142 (OPTIONAL-39)
	'while ('	reduce using rule 142 (OPTIONAL-39)

	SubExpression	go to state 86
	HashDereferenced	go to state 113
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115
	PAREN-38	go to state 117
	Expression	go to state 91
	Operation	go to state 269
	Conditional	go to state 93
	Variable	go to state 92
	Operator	go to state 77
	OperatorVoid	go to state 97
	VariableDeclaration	go to state 99
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	VariableModification	go to state 101
	OPTIONAL-39	go to state 104
	LoopLabel	go to state 83
	Statement	go to state 107

State 208:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 209:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 270

State 210:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 170)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 171)

	';'	shift, and go to state 271
	OP19_VARIABLE_ASSIGN	shift, and go to state 272

State 211:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 200)

	$default	reduce using rule 200 (HashDereferenced)

State 212:

	HashDereferenced -> '%{' Variable '}' .	(Rule 199)

	$default	reduce using rule 199 (HashDereferenced)

State 213:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 214:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152

	')'	reduce using rule 95 (Operator)
	'..'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 215:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151

	')'	reduce using rule 97 (Operator)
	'..'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP08_STRING_CAT	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 216:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 217:

	Operator -> SubExpression OP18_TERNARY Variable . COLON Variable	(Rule 108)

	COLON	shift, and go to state 273

State 218:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 219:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 220:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146

	')'	reduce using rule 91 (Operator)
	'..'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP06_REGEX_MATCH	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 221:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141

	')'	reduce using rule 98 (Operator)
	'..'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 222:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	'..'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 224:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 225:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140

	')'	reduce using rule 96 (Operator)
	'..'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 226:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 94)

	$default	reduce using rule 94 (Operator)

State 227:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression OP12_COMPARE_EQ_NEQ SubExpression .	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	'..'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 228:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 229:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	FH_REF_SYMBOL	shift, and go to state 274

State 230:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-41 OPTIONAL-43	(Rule 154)

	LEFT_BRACE	shift, and go to state 275

	CodeBlock	go to state 276

State 231:

	SubExpressionOrStdin -> STDIN .	(Rule 139)

	$default	reduce using rule 139 (SubExpressionOrStdin)

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	SubExpressionOrStdin -> SubExpression .	(Rule 138)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

	';'	reduce using rule 138 (SubExpressionOrStdin)

State 233:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 172)

	';'	shift, and go to state 277

State 234:

	Expression -> Variable OP02_METHOD_THINARROW WORD . LEFT_PAREN OPTIONAL-37 ')'	(Rule 127)

	LEFT_PAREN	shift, and go to state 278

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 173)

	';'	shift, and go to state 279
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 236:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 183)

	$default	reduce using rule 183 (ListElement)

State 237:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> TypeInner SubExpression .	(Rule 182)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

	')'	reduce using rule 182 (ListElement)
	';'	reduce using rule 182 (ListElement)
	']'	reduce using rule 182 (ListElement)
	OP21_LIST_COMMA	reduce using rule 182 (ListElement)

State 238:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';' .	(Rule 119)

	$default	reduce using rule 119 (OperatorVoid)

State 239:

	STAR-47 -> STAR-47 . PAREN-46	(Rule 175)
	ListElements -> ListElement STAR-47 .	(Rule 179)

	OP21_LIST_COMMA	shift, and go to state 281

	')'	reduce using rule 179 (ListElements)
	';'	reduce using rule 179 (ListElements)
	']'	reduce using rule 179 (ListElements)

	PAREN-46	go to state 280

State 240:

	ListElements -> OP01_QW LEFT_PAREN . PLUS-48 ')'	(Rule 180)

	WORD	shift, and go to state 283

	PLUS-48	go to state 282

State 241:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 196)
	HashReference -> LEFT_BRACE HashEntry STAR-52 . '}'	(Rule 198)

	'}'	shift, and go to state 285
	OP21_LIST_COMMA	shift, and go to state 286

	PAREN-51	go to state 284

State 242:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-50 SubExpression	(Rule 191)

	'my'	shift, and go to state 73

	'%{'	reduce using rule 190 (OPTIONAL-50)
	'@{'	reduce using rule 190 (OPTIONAL-50)
	'undef'	reduce using rule 190 (OPTIONAL-50)
	LEFT_BRACE	reduce using rule 190 (OPTIONAL-50)
	LEFT_BRACKET	reduce using rule 190 (OPTIONAL-50)
	LEFT_PAREN	reduce using rule 190 (OPTIONAL-50)
	LITERAL_NUMBER	reduce using rule 190 (OPTIONAL-50)
	LITERAL_STRING	reduce using rule 190 (OPTIONAL-50)
	OP01_CLOSE	reduce using rule 190 (OPTIONAL-50)
	OP01_NAMED	reduce using rule 190 (OPTIONAL-50)
	OP01_OPEN	reduce using rule 190 (OPTIONAL-50)
	OP03_MATH_INC_DEC	reduce using rule 190 (OPTIONAL-50)
	OP05_LOGICAL_NEG	reduce using rule 190 (OPTIONAL-50)
	OP05_MATH_NEG	reduce using rule 190 (OPTIONAL-50)
	OP10_NAMED_UNARY	reduce using rule 190 (OPTIONAL-50)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 190 (OPTIONAL-50)
	OP22_LOGICAL_NOT	reduce using rule 190 (OPTIONAL-50)
	VARIABLE_SYMBOL	reduce using rule 190 (OPTIONAL-50)
	WORD	reduce using rule 190 (OPTIONAL-50)
	WORD_SCOPED	reduce using rule 190 (OPTIONAL-50)

	OPTIONAL-50	go to state 288
	TypeInner	go to state 287

State 243:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 168)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 169)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 290
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	SubExpression	go to state 289
	HashDereferenced	go to state 113
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115

State 244:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 167)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	SubExpression	go to state 291
	HashDereferenced	go to state 113
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Variable	go to state 130
	Expression	go to state 132
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87

State 245:

	STAR-45 -> STAR-45 VariableRetrieval .	(Rule 164)

	$default	reduce using rule 164 (STAR-45)

State 246:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 247:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 160)

	')'	shift, and go to state 292
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 248:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock	(Rule 159)

	VARIABLE_SYMBOL	shift, and go to state 293

State 249:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock	(Rule 158)

	LEFT_PAREN	shift, and go to state 294

State 250:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements . ';'	(Rule 118)

	';'	shift, and go to state 295

State 251:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 117)

	';'	shift, and go to state 296

State 252:

	ArrayReference -> LEFT_BRACKET OPTIONAL-49 ']' .	(Rule 186)

	$default	reduce using rule 186 (ArrayReference)

State 253:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 187)

	$default	reduce using rule 187 (ArrayDereferenced)

State 254:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 188)

	$default	reduce using rule 188 (ArrayDereferenced)

State 255:

	Expression -> WordScoped LEFT_PAREN OPTIONAL-36 . ')'	(Rule 126)

	')'	shift, and go to state 297

State 256:

	OPTIONAL-36 -> ListElements .	(Rule 121)

	$default	reduce using rule 121 (OPTIONAL-36)

State 257:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	ListElement -> SubExpression .	(Rule 181)

	')'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 181 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 258:

	Operator -> LEFT_PAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 86)

	OP21_LIST_COMMA	shift, and go to state 298

State 259:

	Operator -> LEFT_PAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 116
	WordScoped	go to state 115
	TypeInner	go to state 164
	Literal	go to state 87
	Expression	go to state 132
	Variable	go to state 130
	ListElement	go to state 166
	HashDereferenced	go to state 113
	SubExpression	go to state 168
	ArrayDereferenced	go to state 98
	ListElements	go to state 299
	ArrayReference	go to state 80
	Operator	go to state 77

State 260:

	SubExpression -> LEFT_PAREN SubExpression ')' .	(Rule 137)

	$default	reduce using rule 137 (SubExpression)

State 261:

	Operator -> OP05_MATH_NEG SubExpression ')' .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 262:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 300

State 263:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 301

State 264:

	OPTIONAL-23 -> PropertiesClass .	(Rule 57)

	$default	reduce using rule 57 (OPTIONAL-23)

State 265:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 66)

	';'	shift, and go to state 302

State 266:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-26 ')' ';'	(Rule 65)

	'%{'	shift, and go to state 84
	WORD	shift, and go to state 303

	HashEntryTyped	go to state 305
	HashDereferenced	go to state 304

State 267:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 205)

	OP19_VARIABLE_ASSIGN	shift, and go to state 306

State 268:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 307

State 269:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 270:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 308

State 271:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 170)

	$default	reduce using rule 170 (VariableDeclaration)

State 272:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 171)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	STDIN	shift, and go to state 231
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	SubExpression	go to state 232
	HashDereferenced	go to state 113
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	Variable	go to state 130
	SubExpressionOrStdin	go to state 309
	Expression	go to state 132
	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87

State 273:

	Operator -> SubExpression OP18_TERNARY Variable COLON . Variable	(Rule 108)

	VARIABLE_SYMBOL	shift, and go to state 102

	Variable	go to state 310

State 274:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 311

State 275:

	CodeBlock -> LEFT_BRACE . PLUS-44 '}'	(Rule 163)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 90
	'my'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_NAMED_VOID	shift, and go to state 94
	OP01_OPEN	shift, and go to state 88
	OP01_PRINT	shift, and go to state 106
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 103
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 110
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 142 (OPTIONAL-39)
	'foreach my'	reduce using rule 142 (OPTIONAL-39)
	'while ('	reduce using rule 142 (OPTIONAL-39)

	Statement	go to state 107
	LoopLabel	go to state 83
	OPTIONAL-39	go to state 104
	PLUS-44	go to state 312
	VariableModification	go to state 101
	Operator	go to state 77
	OperatorVoid	go to state 97
	VariableDeclaration	go to state 99
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Conditional	go to state 93
	Variable	go to state 92
	Expression	go to state 91
	Operation	go to state 313
	PAREN-38	go to state 117
	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87
	SubExpression	go to state 86
	HashDereferenced	go to state 113

State 276:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-41 OPTIONAL-43	(Rule 154)

	$default	reduce using rule 150 (STAR-41)

	STAR-41	go to state 314

State 277:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 172)

	$default	reduce using rule 172 (VariableModification)

State 278:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN . OPTIONAL-37 ')'	(Rule 127)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 124 (OPTIONAL-37)

	Expression	go to state 132
	OPTIONAL-37	go to state 316
	Literal	go to state 87
	WordScoped	go to state 115
	HashReference	go to state 116
	TypeInner	go to state 164
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ListElements	go to state 315
	ArrayReference	go to state 80
	HashDereferenced	go to state 113
	SubExpression	go to state 168
	ListElement	go to state 166
	Variable	go to state 130

State 279:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 173)

	$default	reduce using rule 173 (VariableModification)

State 280:

	STAR-47 -> STAR-47 PAREN-46 .	(Rule 175)

	$default	reduce using rule 175 (STAR-47)

State 281:

	PAREN-46 -> OP21_LIST_COMMA . ListElement	(Rule 174)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 87
	TypeInner	go to state 164
	WordScoped	go to state 115
	HashReference	go to state 116
	Expression	go to state 132
	Variable	go to state 130
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Operator	go to state 77
	ListElement	go to state 317
	HashDereferenced	go to state 113
	SubExpression	go to state 168

State 282:

	PLUS-48 -> PLUS-48 . WORD	(Rule 177)
	ListElements -> OP01_QW LEFT_PAREN PLUS-48 . ')'	(Rule 180)

	')'	shift, and go to state 319
	WORD	shift, and go to state 318

State 283:

	PLUS-48 -> WORD .	(Rule 178)

	$default	reduce using rule 178 (PLUS-48)

State 284:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 196)

	$default	reduce using rule 196 (STAR-52)

State 285:

	HashReference -> LEFT_BRACE HashEntry STAR-52 '}' .	(Rule 198)

	$default	reduce using rule 198 (HashReference)

State 286:

	PAREN-51 -> OP21_LIST_COMMA . HashEntry	(Rule 195)

	'%{'	shift, and go to state 84
	WORD	shift, and go to state 174

	HashEntry	go to state 320
	HashDereferenced	go to state 175

State 287:

	OPTIONAL-50 -> TypeInner .	(Rule 189)

	$default	reduce using rule 189 (OPTIONAL-50)

State 288:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 . SubExpression	(Rule 191)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 132
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	SubExpression	go to state 321
	HashDereferenced	go to state 113
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	Variable	go to state 130

State 289:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 168)

	'}'	shift, and go to state 322
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 290:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 169)
	WordScoped -> WORD .	(Rule 201)

	'}'	shift, and go to state 323

	LEFT_PAREN	reduce using rule 201 (WordScoped)

State 291:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 167)

	']'	shift, and go to state 324
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 292:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 160)

	LEFT_BRACE	shift, and go to state 275

	CodeBlock	go to state 325

State 293:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LEFT_PAREN ListElements ')' CodeBlock	(Rule 159)

	LEFT_PAREN	shift, and go to state 326

State 294:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN . SubExpression '..' SubExpression ')' CodeBlock	(Rule 158)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 113
	SubExpression	go to state 327
	Operator	go to state 77
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Variable	go to state 130
	Expression	go to state 132
	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87

State 295:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';' .	(Rule 118)

	$default	reduce using rule 118 (OperatorVoid)

State 296:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 117)

	$default	reduce using rule 117 (OperatorVoid)

State 297:

	Expression -> WordScoped LEFT_PAREN OPTIONAL-36 ')' .	(Rule 126)

	$default	reduce using rule 126 (Expression)

State 298:

	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115
	TypeInner	go to state 164
	Expression	go to state 132
	Variable	go to state 130
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ListElements	go to state 328
	ArrayReference	go to state 80
	SubExpression	go to state 168
	HashDereferenced	go to state 113
	ListElement	go to state 166

State 299:

	Operator -> LEFT_PAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 84)

	')'	shift, and go to state 329

State 300:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'%{'	shift, and go to state 84
	WORD	shift, and go to state 303

	HashEntryTyped	go to state 330
	HashDereferenced	go to state 304

State 301:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 332
	LITERAL_NUMBER	shift, and go to state 334

	MethodOrSubroutine	go to state 331
	Method	go to state 333
	Subroutine	go to state 335

State 302:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 336

State 303:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 193)

	OP20_HASH_FATARROW	shift, and go to state 337

State 304:

	HashEntryTyped -> HashDereferenced .	(Rule 194)

	$default	reduce using rule 194 (HashEntryTyped)

State 305:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-26 ')' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 338

State 306:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 205)

	$default	reduce using rule 205 (TypeInner)

State 307:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 308:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 341
	OP21_LIST_COMMA	shift, and go to state 340

	PAREN-18	go to state 339

State 309:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 171)

	';'	shift, and go to state 342

State 310:

	Operator -> SubExpression OP18_TERNARY Variable COLON Variable .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 311:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	LITERAL_STRING	shift, and go to state 343

State 312:

	PLUS-44 -> PLUS-44 . Operation	(Rule 161)
	CodeBlock -> LEFT_BRACE PLUS-44 . '}'	(Rule 163)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 90
	'my'	shift, and go to state 82
	'undef'	shift, and go to state 109
	'}'	shift, and go to state 344
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_NAMED_VOID	shift, and go to state 94
	OP01_OPEN	shift, and go to state 88
	OP01_PRINT	shift, and go to state 106
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 103
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 110
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 142 (OPTIONAL-39)
	'foreach my'	reduce using rule 142 (OPTIONAL-39)
	'while ('	reduce using rule 142 (OPTIONAL-39)

	PAREN-38	go to state 117
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	Operation	go to state 345
	Expression	go to state 91
	SubExpression	go to state 86
	HashDereferenced	go to state 113
	OPTIONAL-39	go to state 104
	Statement	go to state 107
	LoopLabel	go to state 83
	Variable	go to state 92
	Conditional	go to state 93
	VariableModification	go to state 101
	VariableDeclaration	go to state 99
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	OperatorVoid	go to state 97
	Operator	go to state 77

State 313:

	PLUS-44 -> Operation .	(Rule 162)

	$default	reduce using rule 162 (PLUS-44)

State 314:

	STAR-41 -> STAR-41 . PAREN-40	(Rule 149)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 . OPTIONAL-43	(Rule 154)

	'else'	shift, and go to state 348
	'elsif ('	shift, and go to state 350

	$end	reduce using rule 153 (OPTIONAL-43)
	'%{'	reduce using rule 153 (OPTIONAL-43)
	'@{'	reduce using rule 153 (OPTIONAL-43)
	'for my integer'	reduce using rule 153 (OPTIONAL-43)
	'foreach my'	reduce using rule 153 (OPTIONAL-43)
	'if ('	reduce using rule 153 (OPTIONAL-43)
	'my'	reduce using rule 153 (OPTIONAL-43)
	'undef'	reduce using rule 153 (OPTIONAL-43)
	'while ('	reduce using rule 153 (OPTIONAL-43)
	'}'	reduce using rule 153 (OPTIONAL-43)
	LEFT_BRACE	reduce using rule 153 (OPTIONAL-43)
	LEFT_BRACKET	reduce using rule 153 (OPTIONAL-43)
	LEFT_PAREN	reduce using rule 153 (OPTIONAL-43)
	LITERAL_NUMBER	reduce using rule 153 (OPTIONAL-43)
	LITERAL_STRING	reduce using rule 153 (OPTIONAL-43)
	OP01_CLOSE	reduce using rule 153 (OPTIONAL-43)
	OP01_NAMED	reduce using rule 153 (OPTIONAL-43)
	OP01_NAMED_VOID	reduce using rule 153 (OPTIONAL-43)
	OP01_OPEN	reduce using rule 153 (OPTIONAL-43)
	OP01_PRINT	reduce using rule 153 (OPTIONAL-43)
	OP03_MATH_INC_DEC	reduce using rule 153 (OPTIONAL-43)
	OP05_LOGICAL_NEG	reduce using rule 153 (OPTIONAL-43)
	OP05_MATH_NEG	reduce using rule 153 (OPTIONAL-43)
	OP10_NAMED_UNARY	reduce using rule 153 (OPTIONAL-43)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 153 (OPTIONAL-43)
	OP19_LOOP_CONTROL	reduce using rule 153 (OPTIONAL-43)
	OP22_LOGICAL_NOT	reduce using rule 153 (OPTIONAL-43)
	VARIABLE_SYMBOL	reduce using rule 153 (OPTIONAL-43)
	WORD	reduce using rule 153 (OPTIONAL-43)
	WORD_SCOPED	reduce using rule 153 (OPTIONAL-43)

	PAREN-42	go to state 349
	OPTIONAL-43	go to state 346
	PAREN-40	go to state 347

State 315:

	OPTIONAL-37 -> ListElements .	(Rule 123)

	$default	reduce using rule 123 (OPTIONAL-37)

State 316:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 . ')'	(Rule 127)

	')'	shift, and go to state 351

State 317:

	PAREN-46 -> OP21_LIST_COMMA ListElement .	(Rule 174)

	$default	reduce using rule 174 (PAREN-46)

State 318:

	PLUS-48 -> PLUS-48 WORD .	(Rule 177)

	$default	reduce using rule 177 (PLUS-48)

State 319:

	ListElements -> OP01_QW LEFT_PAREN PLUS-48 ')' .	(Rule 180)

	$default	reduce using rule 180 (ListElements)

State 320:

	PAREN-51 -> OP21_LIST_COMMA HashEntry .	(Rule 195)

	$default	reduce using rule 195 (PAREN-51)

State 321:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-50 SubExpression .	(Rule 191)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

	'}'	reduce using rule 191 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 191 (HashEntry)

State 322:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 168)

	$default	reduce using rule 168 (VariableRetrieval)

State 323:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 169)

	$default	reduce using rule 169 (VariableRetrieval)

State 324:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 167)

	$default	reduce using rule 167 (VariableRetrieval)

State 325:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 160)

	$default	reduce using rule 160 (LoopWhile)

State 326:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN . ListElements ')' CodeBlock	(Rule 159)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 163
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	TypeInner	go to state 164
	WordScoped	go to state 115
	HashReference	go to state 116
	Literal	go to state 87
	Expression	go to state 132
	Variable	go to state 130
	ListElement	go to state 166
	SubExpression	go to state 168
	HashDereferenced	go to state 113
	Operator	go to state 77
	ArrayReference	go to state 80
	ListElements	go to state 352
	ArrayDereferenced	go to state 98

State 327:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression . '..' SubExpression ')' CodeBlock	(Rule 158)

	'..'	shift, and go to state 353
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 328:

	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 86)

	')'	shift, and go to state 354

State 329:

	Operator -> LEFT_PAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 330:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-28 ')' ';'	(Rule 70)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 355

State 331:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 332:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	TYPE_METHOD	shift, and go to state 356
	WORD	shift, and go to state 53

	Type	go to state 52

State 333:

	MethodOrSubroutine -> Method .	(Rule 80)

	$default	reduce using rule 80 (MethodOrSubroutine)

State 334:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 357

State 335:

	MethodOrSubroutine -> Subroutine .	(Rule 81)

	$default	reduce using rule 81 (MethodOrSubroutine)

State 336:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 337:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 193)

	'my'	shift, and go to state 73

	TypeInner	go to state 358

State 338:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 . ')' ';'	(Rule 65)

	')'	shift, and go to state 359
	OP21_LIST_COMMA	shift, and go to state 361

	PAREN-25	go to state 360

State 339:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 340:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 362

State 341:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 363

State 342:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 171)

	$default	reduce using rule 171 (VariableDeclaration)

State 343:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 364

State 344:

	CodeBlock -> LEFT_BRACE PLUS-44 '}' .	(Rule 163)

	$default	reduce using rule 163 (CodeBlock)

State 345:

	PLUS-44 -> PLUS-44 Operation .	(Rule 161)

	$default	reduce using rule 161 (PLUS-44)

State 346:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-41 OPTIONAL-43 .	(Rule 154)

	$default	reduce using rule 154 (Conditional)

State 347:

	STAR-41 -> STAR-41 PAREN-40 .	(Rule 149)

	$default	reduce using rule 149 (STAR-41)

State 348:

	PAREN-42 -> 'else' . CodeBlock	(Rule 151)

	LEFT_BRACE	shift, and go to state 275

	CodeBlock	go to state 365

State 349:

	OPTIONAL-43 -> PAREN-42 .	(Rule 152)

	$default	reduce using rule 152 (OPTIONAL-43)

State 350:

	PAREN-40 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 148)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 77
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	SubExpression	go to state 366
	HashDereferenced	go to state 113
	Variable	go to state 130
	Expression	go to state 132
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115

State 351:

	Expression -> Variable OP02_METHOD_THINARROW WORD LEFT_PAREN OPTIONAL-37 ')' .	(Rule 127)

	$default	reduce using rule 127 (Expression)

State 352:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements . ')' CodeBlock	(Rule 159)

	')'	shift, and go to state 367

State 353:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' . SubExpression ')' CodeBlock	(Rule 158)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87
	Expression	go to state 132
	Variable	go to state 130
	SubExpression	go to state 368
	HashDereferenced	go to state 113
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	Operator	go to state 77

State 354:

	Operator -> LEFT_PAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 355:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 68)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 . ')' ';'	(Rule 70)

	')'	shift, and go to state 371
	OP21_LIST_COMMA	shift, and go to state 369

	PAREN-27	go to state 370

State 356:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	VARIABLE_SYMBOL	shift, and go to state 372

State 357:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 358:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 193)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 116
	WordScoped	go to state 115
	Literal	go to state 87
	Expression	go to state 132
	Variable	go to state 130
	HashDereferenced	go to state 113
	SubExpression	go to state 373
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80

State 359:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' . ';'	(Rule 65)

	';'	shift, and go to state 374

State 360:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 361:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 62)

	'%{'	shift, and go to state 84
	WORD	shift, and go to state 303

	HashDereferenced	go to state 304
	HashEntryTyped	go to state 375

State 362:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 53

	Type	go to state 376

State 363:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 377

State 364:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 87)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_OPEN	shift, and go to state 88
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 132
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115
	Operator	go to state 77
	ArrayDereferenced	go to state 98
	ArrayReference	go to state 80
	SubExpression	go to state 378
	HashDereferenced	go to state 113
	Variable	go to state 130

State 365:

	PAREN-42 -> 'else' CodeBlock .	(Rule 151)

	$default	reduce using rule 151 (PAREN-42)

State 366:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	PAREN-40 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 148)

	')'	shift, and go to state 379
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 367:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' . CodeBlock	(Rule 159)

	LEFT_BRACE	shift, and go to state 275

	CodeBlock	go to state 380

State 368:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression . ')' CodeBlock	(Rule 158)

	')'	shift, and go to state 381
	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

State 369:

	PAREN-27 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 67)

	'%{'	shift, and go to state 84
	WORD	shift, and go to state 303

	HashDereferenced	go to state 304
	HashEntryTyped	go to state 382

State 370:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 371:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' . ';'	(Rule 70)

	';'	shift, and go to state 383

State 372:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'= sub {'	shift, and go to state 384

State 373:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 193)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143
	OP23_LOGICAL_AND	shift, and go to state 142
	OP24_LOGICAL_OR_XOR	shift, and go to state 154

	')'	reduce using rule 193 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 193 (HashEntryTyped)

State 374:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 375:

	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 376:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 385

State 377:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 378:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 87)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 101)
	Operator -> SubExpression . OP12_COMPARE_EQ_NEQ SubExpression	(Rule 102)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 103)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 104)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 106)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 107)
	Operator -> SubExpression . OP18_TERNARY Variable COLON Variable	(Rule 108)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 110)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 111)

	OP04_MATH_POW	shift, and go to state 146
	OP06_REGEX_MATCH	shift, and go to state 152
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 140
	OP08_MATH_ADD_SUB	shift, and go to state 151
	OP08_STRING_CAT	shift, and go to state 141
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 148
	OP12_COMPARE_EQ_NEQ	shift, and go to state 153
	OP13_BITWISE_AND	shift, and go to state 145
	OP14_BITWISE_OR_XOR	shift, and go to state 149
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 143

	')'	reduce using rule 87 (Operator)
	'..'	reduce using rule 87 (Operator)
	';'	reduce using rule 87 (Operator)
	']'	reduce using rule 87 (Operator)
	'}'	reduce using rule 87 (Operator)
	OP21_LIST_COMMA	reduce using rule 87 (Operator)
	OP23_LOGICAL_AND	reduce using rule 87 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 87 (Operator)

State 379:

	PAREN-40 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 148)

	LEFT_BRACE	shift, and go to state 275

	CodeBlock	go to state 386

State 380:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LEFT_PAREN ListElements ')' CodeBlock .	(Rule 159)

	$default	reduce using rule 159 (LoopForEach)

State 381:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' . CodeBlock	(Rule 158)

	LEFT_BRACE	shift, and go to state 275

	CodeBlock	go to state 387

State 382:

	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 67)

	$default	reduce using rule 67 (PAREN-27)

State 383:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';' .	(Rule 70)

	$default	reduce using rule 70 (PropertiesClass)

State 384:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'( my'	shift, and go to state 388

	'%{'	reduce using rule 72 (OPTIONAL-29)
	'@{'	reduce using rule 72 (OPTIONAL-29)
	'for my integer'	reduce using rule 72 (OPTIONAL-29)
	'foreach my'	reduce using rule 72 (OPTIONAL-29)
	'if ('	reduce using rule 72 (OPTIONAL-29)
	'my'	reduce using rule 72 (OPTIONAL-29)
	'undef'	reduce using rule 72 (OPTIONAL-29)
	'while ('	reduce using rule 72 (OPTIONAL-29)
	LEFT_BRACE	reduce using rule 72 (OPTIONAL-29)
	LEFT_BRACKET	reduce using rule 72 (OPTIONAL-29)
	LEFT_PAREN	reduce using rule 72 (OPTIONAL-29)
	LITERAL_NUMBER	reduce using rule 72 (OPTIONAL-29)
	LITERAL_STRING	reduce using rule 72 (OPTIONAL-29)
	OP01_CLOSE	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT	reduce using rule 72 (OPTIONAL-29)
	OP03_MATH_INC_DEC	reduce using rule 72 (OPTIONAL-29)
	OP05_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	OP05_MATH_NEG	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL	reduce using rule 72 (OPTIONAL-29)
	OP22_LOGICAL_NOT	reduce using rule 72 (OPTIONAL-29)
	VARIABLE_SYMBOL	reduce using rule 72 (OPTIONAL-29)
	WORD	reduce using rule 72 (OPTIONAL-29)
	WORD_SCOPED	reduce using rule 72 (OPTIONAL-29)

	MethodArguments	go to state 390
	OPTIONAL-29	go to state 389

State 385:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 386:

	PAREN-40 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 148)

	$default	reduce using rule 148 (PAREN-40)

State 387:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LEFT_PAREN SubExpression '..' SubExpression ')' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (LoopFor)

State 388:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	TYPE_CLASS_OR_SELF	shift, and go to state 391

State 389:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 . PLUS-30 '}' ';'	(Rule 75)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 90
	'my'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_NAMED_VOID	shift, and go to state 94
	OP01_OPEN	shift, and go to state 88
	OP01_PRINT	shift, and go to state 106
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 103
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 110
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 142 (OPTIONAL-39)
	'foreach my'	reduce using rule 142 (OPTIONAL-39)
	'while ('	reduce using rule 142 (OPTIONAL-39)

	LoopLabel	go to state 83
	Statement	go to state 107
	PLUS-30	go to state 393
	OPTIONAL-39	go to state 104
	OperatorVoid	go to state 97
	Operator	go to state 77
	VariableDeclaration	go to state 99
	ArrayReference	go to state 80
	ArrayDereferenced	go to state 98
	VariableModification	go to state 101
	Variable	go to state 92
	Conditional	go to state 93
	Expression	go to state 91
	Operation	go to state 392
	Literal	go to state 87
	HashReference	go to state 116
	WordScoped	go to state 115
	PAREN-38	go to state 117
	SubExpression	go to state 86
	HashDereferenced	go to state 113

State 390:

	OPTIONAL-29 -> MethodArguments .	(Rule 71)

	$default	reduce using rule 71 (OPTIONAL-29)

State 391:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	$default	reduce using rule 78 (STAR-32)

	STAR-32	go to state 394

State 392:

	PLUS-30 -> Operation .	(Rule 74)

	$default	reduce using rule 74 (PLUS-30)

State 393:

	PLUS-30 -> PLUS-30 . Operation	(Rule 73)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 . '}' ';'	(Rule 75)

	'%{'	shift, and go to state 84
	'@{'	shift, and go to state 112
	'if ('	shift, and go to state 90
	'my'	shift, and go to state 82
	'undef'	shift, and go to state 109
	'}'	shift, and go to state 396
	LEFT_BRACE	shift, and go to state 100
	LEFT_BRACKET	shift, and go to state 111
	LEFT_PAREN	shift, and go to state 120
	LITERAL_NUMBER	shift, and go to state 78
	LITERAL_STRING	shift, and go to state 114
	OP01_CLOSE	shift, and go to state 81
	OP01_NAMED	shift, and go to state 96
	OP01_NAMED_VOID	shift, and go to state 94
	OP01_OPEN	shift, and go to state 88
	OP01_PRINT	shift, and go to state 106
	OP03_MATH_INC_DEC	shift, and go to state 95
	OP05_LOGICAL_NEG	shift, and go to state 108
	OP05_MATH_NEG	shift, and go to state 121
	OP10_NAMED_UNARY	shift, and go to state 79
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 105
	OP19_LOOP_CONTROL	shift, and go to state 103
	OP22_LOGICAL_NOT	shift, and go to state 89
	VARIABLE_SYMBOL	shift, and go to state 102
	WORD	shift, and go to state 110
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 142 (OPTIONAL-39)
	'foreach my'	reduce using rule 142 (OPTIONAL-39)
	'while ('	reduce using rule 142 (OPTIONAL-39)

	OPTIONAL-39	go to state 104
	Statement	go to state 107
	LoopLabel	go to state 83
	Variable	go to state 92
	Conditional	go to state 93
	VariableModification	go to state 101
	Operator	go to state 77
	OperatorVoid	go to state 97
	ArrayReference	go to state 80
	VariableDeclaration	go to state 99
	ArrayDereferenced	go to state 98
	HashReference	go to state 116
	WordScoped	go to state 115
	PAREN-38	go to state 117
	Literal	go to state 87
	Expression	go to state 91
	Operation	go to state 395
	SubExpression	go to state 86
	HashDereferenced	go to state 113

State 394:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 77)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	')'	shift, and go to state 398
	OP21_LIST_COMMA	shift, and go to state 399

	PAREN-31	go to state 397

State 395:

	PLUS-30 -> PLUS-30 Operation .	(Rule 73)

	$default	reduce using rule 73 (PLUS-30)

State 396:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' . ';'	(Rule 75)

	';'	shift, and go to state 400

State 397:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 77)

	$default	reduce using rule 77 (STAR-32)

State 398:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	OP19_VARIABLE_ASSIGN	shift, and go to state 401

State 399:

	PAREN-31 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 76)

	'my'	shift, and go to state 402

State 400:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';' .	(Rule 75)

	$default	reduce using rule 75 (Method)

State 401:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 79)

	'@_;'	shift, and go to state 403

State 402:

	PAREN-31 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 76)

	WORD	shift, and go to state 53

	Type	go to state 404

State 403:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 79)

	$default	reduce using rule 79 (MethodArguments)

State 404:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 76)

	VARIABLE_SYMBOL	shift, and go to state 405

State 405:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 76)

	$default	reduce using rule 76 (PAREN-31)


Summary:
--------
Number of rules         : 208
Number of terminals     : 88
Number of non-terminals : 100
Number of states        : 406
