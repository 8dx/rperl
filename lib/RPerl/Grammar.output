Conflicts:
----------
Conflict in state 95 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 95 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 95 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 95 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 95 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 95 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 95 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 95 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 95 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 95 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 95 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 95 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 95 between rule 113 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 95 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 95 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 95 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 117 between rule 123 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 117 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 117 between rule 123 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 117 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 117 between rule 123 and token OP18_TERNARY resolved as shift.
Conflict in state 117 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 117 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 117 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 117 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 117 between rule 123 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 117 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 117 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 117 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 117 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 117 between rule 123 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 117 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 136 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 136 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 136 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 136 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 136 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 136 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 136 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 136 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 136 between rule 106 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 136 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 136 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 136 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 136 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 136 between rule 106 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 136 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 136 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 164 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 164 between rule 114 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 164 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 164 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 164 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 164 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 164 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 164 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 164 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 164 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 164 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 164 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 164 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 164 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 164 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 164 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 202 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 202 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 202 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 202 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 202 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 202 between rule 117 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 202 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 202 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 202 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 202 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 202 between rule 117 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 202 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 202 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 202 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 202 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 202 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 203 between rule 105 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 203 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 203 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 203 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 203 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 203 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 203 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 203 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 203 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 203 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 203 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 203 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 203 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 205 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 205 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 205 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 205 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 205 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 205 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 205 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 205 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 205 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 205 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 205 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 205 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 205 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 205 between rule 115 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 205 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 205 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 206 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 206 between rule 116 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 206 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 206 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 206 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 206 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 206 between rule 116 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 206 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 206 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 206 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 206 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 206 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 206 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 206 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 207 between rule 124 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 207 between rule 124 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 207 between rule 124 and token OP08_STRING_CAT resolved as shift.
Conflict in state 207 between rule 124 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 207 between rule 124 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 207 between rule 124 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 207 between rule 124 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 207 between rule 124 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 207 between rule 124 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 207 between rule 124 and token OP04_MATH_POW resolved as shift.
Conflict in state 207 between rule 124 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 207 between rule 124 and token OP18_TERNARY resolved as shift.
Conflict in state 207 between rule 124 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 207 between rule 124 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 207 between rule 124 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 207 between rule 124 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 208 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 208 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 208 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 208 between rule 111 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 208 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 208 between rule 111 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 208 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 208 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 208 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 208 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 208 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 208 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 208 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 208 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 209 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 209 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 209 between rule 110 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 209 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 209 between rule 110 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 209 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 209 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 209 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 209 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 209 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 209 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 209 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 209 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 209 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 210 between rule 109 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 210 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 210 between rule 109 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 210 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 210 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 210 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 210 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 210 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 210 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 210 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 210 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 210 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 210 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 210 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 125 and token OP18_TERNARY resolved as shift.
Conflict in state 211 between rule 125 and token OP04_MATH_POW resolved as shift.
Conflict in state 211 between rule 125 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 211 between rule 125 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 211 between rule 125 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 211 between rule 125 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 211 between rule 125 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 211 between rule 125 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 211 between rule 125 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 211 between rule 125 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 211 between rule 125 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 211 between rule 125 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 211 between rule 125 and token OP08_STRING_CAT resolved as shift.
Conflict in state 211 between rule 125 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 211 between rule 125 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 211 between rule 125 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 213 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 213 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 213 between rule 120 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 213 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 213 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 213 between rule 120 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 213 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 213 between rule 120 and token OP18_TERNARY resolved as reduce.
Conflict in state 213 between rule 120 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 213 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 213 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 213 between rule 120 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 120 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 213 between rule 120 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 213 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 214 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 214 between rule 119 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 214 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 214 between rule 119 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 214 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 214 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 214 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 214 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 214 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 214 between rule 119 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 214 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 214 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 214 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 214 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 215 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 215 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 215 between rule 121 and token OP17_LIST_RANGE resolved as error.
Conflict in state 215 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 215 between rule 121 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 215 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 215 between rule 121 and token OP18_TERNARY resolved as reduce.
Conflict in state 215 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 215 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 215 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 215 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 121 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 215 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 215 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 216 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 216 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 216 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 216 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 216 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 216 between rule 118 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 216 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 216 between rule 118 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 216 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 216 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 216 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 216 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 216 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 216 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 217 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 217 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 217 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 217 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 217 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 217 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 217 between rule 112 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 217 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 217 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 217 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 217 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 217 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 217 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 217 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 217 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Critic
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Include
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Constant
10:	STAR-4 -> /* empty */
11:	STAR-5 -> STAR-5 Subroutine
12:	STAR-5 -> /* empty */
13:	PLUS-6 -> PLUS-6 Operation
14:	PLUS-6 -> Operation
15:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6
16:	Module -> Package
17:	Module -> Class
18:	STAR-7 -> STAR-7 Critic
19:	STAR-7 -> /* empty */
20:	STAR-8 -> STAR-8 Include
21:	STAR-8 -> /* empty */
22:	STAR-9 -> STAR-9 Constant
23:	STAR-9 -> /* empty */
24:	PLUS-10 -> PLUS-10 Subroutine
25:	PLUS-10 -> Subroutine
26:	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1, 1;'
27:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our $VERSION =' VERSION_NUMBER ';'
28:	PLUS-11 -> PLUS-11 WORD
29:	PLUS-11 -> WORD
30:	Critic -> '## no critic qw(' PLUS-11 ')'
31:	PLUS-12 -> PLUS-12 WORD
32:	PLUS-12 -> WORD
33:	Include -> 'use' WordScoped ';'
34:	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';'
35:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
36:	OPTIONAL-13 -> TypeInner
37:	OPTIONAL-13 -> /* empty */
38:	OPTIONAL-14 -> TypeInner
39:	OPTIONAL-14 -> /* empty */
40:	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 LITERAL
41:	STAR-16 -> STAR-16 PAREN-15
42:	STAR-16 -> /* empty */
43:	OPTIONAL-17 -> TypeInner
44:	OPTIONAL-17 -> /* empty */
45:	OPTIONAL-18 -> TypeInner
46:	OPTIONAL-18 -> /* empty */
47:	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 LITERAL
48:	STAR-20 -> STAR-20 PAREN-19
49:	STAR-20 -> /* empty */
50:	ConstantValue -> LITERAL
51:	ConstantValue -> '[' OPTIONAL-13 LITERAL STAR-16 ']'
52:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 LITERAL STAR-20 '}'
53:	OPTIONAL-21 -> SubroutineArguments
54:	OPTIONAL-21 -> /* empty */
55:	PLUS-22 -> PLUS-22 Operation
56:	PLUS-22 -> Operation
57:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'
58:	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
59:	STAR-24 -> STAR-24 PAREN-23
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 ArgumentCheck
62:	STAR-25 -> /* empty */
63:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25
64:	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
65:	OPTIONAL-27 -> PAREN-26
66:	OPTIONAL-27 -> /* empty */
67:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';'
68:	STAR-28 -> STAR-28 Critic
69:	STAR-28 -> /* empty */
70:	STAR-29 -> STAR-29 Include
71:	STAR-29 -> /* empty */
72:	STAR-30 -> STAR-30 Constant
73:	STAR-30 -> /* empty */
74:	STAR-31 -> STAR-31 Method
75:	STAR-31 -> /* empty */
76:	PLUS-32 -> PLUS-32 Subroutine
77:	PLUS-32 -> Subroutine
78:	PAREN-33 -> PLUS-32 '1, 1;'
79:	OPTIONAL-34 -> PAREN-33
80:	OPTIONAL-34 -> /* empty */
81:	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34
82:	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped
83:	STAR-36 -> STAR-36 PAREN-35
84:	STAR-36 -> /* empty */
85:	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';'
86:	Properties -> 'our %properties = (' ')' ';'
87:	OPTIONAL-37 -> MethodArguments
88:	OPTIONAL-37 -> /* empty */
89:	PLUS-38 -> PLUS-38 Operation
90:	PLUS-38 -> Operation
91:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'
92:	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
93:	STAR-40 -> STAR-40 PAREN-39
94:	STAR-40 -> /* empty */
95:	STAR-41 -> STAR-41 ArgumentCheck
96:	STAR-41 -> /* empty */
97:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41
98:	Operation -> Expression ';'
99:	Operation -> Statement
100:	OPTIONAL-42 -> ListElements
101:	OPTIONAL-42 -> /* empty */
102:	Operator -> OP01_NAMED '(' OPTIONAL-42 ')'
103:	Operator -> OP03_MATH_INC_DEC Variable
104:	Operator -> Variable OP03_MATH_INC_DEC
105:	Operator -> Expression OP04_MATH_POW Expression
106:	Operator -> OP05_LOGICAL_NEG Expression
107:	Operator -> OP05_MATH_NEG Expression ')'
108:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
109:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
110:	Operator -> Expression OP08_MATH_ADD_SUB Expression
111:	Operator -> Expression OP08_STRING_CAT Expression
112:	Operator -> Expression OP09_BITWISE_SHIFT Expression
113:	Operator -> OP10_NAMED_UNARY Expression
114:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
115:	Operator -> Expression OP11_COMPARE_LT_GT Expression
116:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
117:	Operator -> Expression OP13_BITWISE_AND Expression
118:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
119:	Operator -> Expression OP15_LOGICAL_AND Expression
120:	Operator -> Expression OP16_LOGICAL_OR Expression
121:	Operator -> Expression OP17_LIST_RANGE Expression
122:	Operator -> Expression OP18_TERNARY Variable COLON Variable
123:	Operator -> OP22_LOGICAL_NOT Expression
124:	Operator -> Expression OP23_LOGICAL_AND Expression
125:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
126:	OPTIONAL-43 -> ListElements
127:	OPTIONAL-43 -> /* empty */
128:	OPTIONAL-44 -> ListElements
129:	OPTIONAL-44 -> /* empty */
130:	OPTIONAL-45 -> ListElements
131:	OPTIONAL-45 -> /* empty */
132:	OPTIONAL-46 -> ListElements
133:	OPTIONAL-46 -> /* empty */
134:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';'
135:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';'
136:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';'
137:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';'
138:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
139:	OPTIONAL-47 -> ListElements
140:	OPTIONAL-47 -> /* empty */
141:	OPTIONAL-48 -> ListElements
142:	OPTIONAL-48 -> /* empty */
143:	Expression -> 'undef'
144:	Expression -> LITERAL
145:	Expression -> Variable
146:	Expression -> ArrayReference
147:	Expression -> ArrayDereferenced
148:	Expression -> HashReference
149:	Expression -> HashDereferenced
150:	Expression -> '{' '}'
151:	Expression -> Operator
152:	Expression -> WordScoped '(' OPTIONAL-47 ')'
153:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'
154:	Expression -> '(' Expression ')'
155:	PAREN-49 -> LoopLabel COLON
156:	OPTIONAL-50 -> PAREN-49
157:	OPTIONAL-50 -> /* empty */
158:	Statement -> Conditional
159:	Statement -> OPTIONAL-50 Loop
160:	Statement -> OperatorVoid
161:	Statement -> VariableDeclaration
162:	Statement -> VariableModification
163:	PAREN-51 -> 'elsif (' Expression ')' CodeBlock
164:	STAR-52 -> STAR-52 PAREN-51
165:	STAR-52 -> /* empty */
166:	PAREN-53 -> 'else' CodeBlock
167:	OPTIONAL-54 -> PAREN-53
168:	OPTIONAL-54 -> /* empty */
169:	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54
170:	Loop -> LoopFor
171:	Loop -> LoopForEach
172:	Loop -> LoopWhile
173:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
174:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
175:	LoopWhile -> 'while (' Expression ')' CodeBlock
176:	PLUS-55 -> PLUS-55 Operation
177:	PLUS-55 -> Operation
178:	CodeBlock -> '{' PLUS-55 '}'
179:	STAR-56 -> STAR-56 VariableRetrieval
180:	STAR-56 -> /* empty */
181:	Variable -> VARIABLE_SYMBOL STAR-56
182:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
183:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
184:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
185:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
186:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'
187:	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';'
188:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
189:	PAREN-57 -> OP21_LIST_COMMA ListElement
190:	STAR-58 -> STAR-58 PAREN-57
191:	STAR-58 -> /* empty */
192:	ListElements -> ListElement STAR-58
193:	ListElement -> Expression
194:	ListElement -> TypeInner Expression
195:	ListElement -> KEYS_OR_VALUES HashDereferenced
196:	OPTIONAL-59 -> ListElements
197:	OPTIONAL-59 -> /* empty */
198:	ArrayReference -> '[' OPTIONAL-59 ']'
199:	ArrayDereferenced -> '@{' Variable '}'
200:	ArrayDereferenced -> '@{' ArrayReference '}'
201:	OPTIONAL-60 -> TypeInner
202:	OPTIONAL-60 -> /* empty */
203:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 Expression
204:	HashEntry -> HashDereferenced
205:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
206:	HashEntryTyped -> HashDereferenced
207:	PAREN-61 -> OP21_LIST_COMMA HashEntry
208:	STAR-62 -> STAR-62 PAREN-61
209:	STAR-62 -> /* empty */
210:	HashReference -> '{' HashEntry STAR-62 '}'
211:	HashDereferenced -> '%{' Variable '}'
212:	HashDereferenced -> '%{' HashReference '}'
213:	WordScoped -> WORD
214:	WordScoped -> WORD_SCOPED
215:	FileHandle -> '{*' WORD '}'
216:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
217:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
218:	Type -> WORD
219:	LoopLabel -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 1
	SHEBANG	shift, and go to state 7

	PLUS-1	go to state 3
	Program	go to state 2
	Package	go to state 5
	Module	go to state 4
	Class	go to state 8
	CompileUnit	go to state 6

State 1:

	Package -> 'package' . WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1, 1;'	(Rule 26)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 10

State 2:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 3:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 1

	$end	reduce using rule 4 (CompileUnit)

	Class	go to state 8
	Module	go to state 12
	Package	go to state 5

State 4:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 5:

	Module -> Package .	(Rule 16)

	$default	reduce using rule 16 (Module)

State 6:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 13

State 7:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use strict;'	shift, and go to state 14

	Header	go to state 15

State 8:

	Module -> Class .	(Rule 17)

	$default	reduce using rule 17 (Module)

State 9:

	WordScoped -> WORD .	(Rule 213)

	$default	reduce using rule 213 (WordScoped)

State 10:

	Package -> 'package' WordScoped . ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1, 1;'	(Rule 26)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 16

State 11:

	WordScoped -> WORD_SCOPED .	(Rule 214)

	$default	reduce using rule 214 (WordScoped)

State 12:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 13:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 14:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our $VERSION =' VERSION_NUMBER ';'	(Rule 27)

	'use warnings;'	shift, and go to state 17

State 15:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 18

State 16:

	Package -> 'package' WordScoped ';' . Header STAR-7 STAR-8 STAR-9 PLUS-10 '1, 1;'	(Rule 26)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	'use strict;'	shift, and go to state 14

	Header	go to state 19

State 17:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our $VERSION =' VERSION_NUMBER ';'	(Rule 27)

	'use RPerl;'	shift, and go to state 20

State 18:

	STAR-2 -> STAR-2 . Critic	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'## no critic qw('	shift, and go to state 21

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'use'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)
	WORD_SCOPED	reduce using rule 8 (STAR-3)

	Critic	go to state 22
	STAR-3	go to state 23

State 19:

	Package -> 'package' WordScoped ';' Header . STAR-7 STAR-8 STAR-9 PLUS-10 '1, 1;'	(Rule 26)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	'use parent qw('	shift, and go to state 24

	'## no critic qw('	reduce using rule 19 (STAR-7)
	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)
	'use'	reduce using rule 19 (STAR-7)

	STAR-7	go to state 25

State 20:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our $VERSION =' VERSION_NUMBER ';'	(Rule 27)

	'our $VERSION ='	shift, and go to state 26

State 21:

	Critic -> '## no critic qw(' . PLUS-11 ')'	(Rule 30)

	WORD	shift, and go to state 28

	PLUS-11	go to state 27

State 22:

	STAR-2 -> STAR-2 Critic .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 23:

	STAR-3 -> STAR-3 . Include	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use'	shift, and go to state 31

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'use constant'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)
	WORD_SCOPED	reduce using rule 10 (STAR-4)

	STAR-4	go to state 29
	Include	go to state 30

State 24:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 32

State 25:

	STAR-7 -> STAR-7 . Critic	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-7 . STAR-8 STAR-9 PLUS-10 '1, 1;'	(Rule 26)

	'## no critic qw('	shift, and go to state 21

	'our'	reduce using rule 21 (STAR-8)
	'use constant'	reduce using rule 21 (STAR-8)
	'use'	reduce using rule 21 (STAR-8)

	Critic	go to state 34
	STAR-8	go to state 33

State 26:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our $VERSION =' . VERSION_NUMBER ';'	(Rule 27)

	VERSION_NUMBER	shift, and go to state 35

State 27:

	PLUS-11 -> PLUS-11 . WORD	(Rule 28)
	Critic -> '## no critic qw(' PLUS-11 . ')'	(Rule 30)

	')'	shift, and go to state 36
	WORD	shift, and go to state 37

State 28:

	PLUS-11 -> WORD .	(Rule 29)

	$default	reduce using rule 29 (PLUS-11)

State 29:

	STAR-4 -> STAR-4 . Constant	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . STAR-5 PLUS-6	(Rule 15)

	'use constant'	shift, and go to state 39

	'%{'	reduce using rule 12 (STAR-5)
	'('	reduce using rule 12 (STAR-5)
	'@{'	reduce using rule 12 (STAR-5)
	'['	reduce using rule 12 (STAR-5)
	'for my integer'	reduce using rule 12 (STAR-5)
	'foreach my'	reduce using rule 12 (STAR-5)
	'if ('	reduce using rule 12 (STAR-5)
	'my'	reduce using rule 12 (STAR-5)
	'our'	reduce using rule 12 (STAR-5)
	'undef'	reduce using rule 12 (STAR-5)
	'while ('	reduce using rule 12 (STAR-5)
	'{'	reduce using rule 12 (STAR-5)
	LITERAL	reduce using rule 12 (STAR-5)
	OP01_NAMED	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 12 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 12 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 12 (STAR-5)
	OP05_MATH_NEG	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 12 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 12 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 12 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 12 (STAR-5)
	WORD	reduce using rule 12 (STAR-5)
	WORD_SCOPED	reduce using rule 12 (STAR-5)

	STAR-5	go to state 38
	Constant	go to state 40

State 30:

	STAR-3 -> STAR-3 Include .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 31:

	Include -> 'use' . WordScoped ';'	(Rule 33)
	Include -> 'use' . WordScoped 'qw(' PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 41

State 32:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped . ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	')'	shift, and go to state 42

State 33:

	STAR-8 -> STAR-8 . Include	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 . STAR-9 PLUS-10 '1, 1;'	(Rule 26)

	'use'	shift, and go to state 31

	'our'	reduce using rule 23 (STAR-9)
	'use constant'	reduce using rule 23 (STAR-9)

	STAR-9	go to state 44
	Include	go to state 43

State 34:

	STAR-7 -> STAR-7 Critic .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 35:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our $VERSION =' VERSION_NUMBER . ';'	(Rule 27)

	';'	shift, and go to state 45

State 36:

	Critic -> '## no critic qw(' PLUS-11 ')' .	(Rule 30)

	$default	reduce using rule 30 (Critic)

State 37:

	PLUS-11 -> PLUS-11 WORD .	(Rule 28)

	$default	reduce using rule 28 (PLUS-11)

State 38:

	STAR-5 -> STAR-5 . Subroutine	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 . PLUS-6	(Rule 15)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'if ('	shift, and go to state 77
	'my'	shift, and go to state 49
	'our'	shift, and go to state 69
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP01_NAMED_VOID	shift, and go to state 51
	OP01_NAMED_VOID_PAREN	shift, and go to state 66
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 52
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Variable	go to state 55
	Subroutine	go to state 79
	Statement	go to state 54
	WordScoped	go to state 75
	Expression	go to state 74
	OperatorVoid	go to state 46
	HashDereferenced	go to state 47
	ArrayReference	go to state 85
	LoopLabel	go to state 71
	Conditional	go to state 86
	PLUS-6	go to state 73
	Operator	go to state 63
	VariableModification	go to state 65
	VariableDeclaration	go to state 84
	PAREN-49	go to state 64
	ArrayDereferenced	go to state 67
	HashReference	go to state 81
	OPTIONAL-50	go to state 62
	Operation	go to state 57

State 39:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	WORD	shift, and go to state 87

State 40:

	STAR-4 -> STAR-4 Constant .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 41:

	Include -> 'use' WordScoped . ';'	(Rule 33)
	Include -> 'use' WordScoped . 'qw(' PLUS-12 ')' ';'	(Rule 34)

	';'	shift, and go to state 89
	'qw('	shift, and go to state 88

State 42:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' . ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 90

State 43:

	STAR-8 -> STAR-8 Include .	(Rule 20)

	$default	reduce using rule 20 (STAR-8)

State 44:

	STAR-9 -> STAR-9 . Constant	(Rule 22)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 . PLUS-10 '1, 1;'	(Rule 26)

	'our'	shift, and go to state 69
	'use constant'	shift, and go to state 39

	Subroutine	go to state 92
	PLUS-10	go to state 91
	Constant	go to state 93

State 45:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our $VERSION =' VERSION_NUMBER ';' .	(Rule 27)

	$default	reduce using rule 27 (Header)

State 46:

	Statement -> OperatorVoid .	(Rule 160)

	$default	reduce using rule 160 (Statement)

State 47:

	Expression -> HashDereferenced .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 48:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 113)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 47
	WordScoped	go to state 75
	Expression	go to state 95
	HashReference	go to state 81
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	ArrayReference	go to state 85
	Variable	go to state 94

State 49:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 185)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 186)

	WORD	shift, and go to state 97

	Type	go to state 96

State 50:

	Expression -> '(' . Expression ')'	(Rule 154)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 81
	Expression	go to state 98
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	ArrayReference	go to state 85
	Variable	go to state 94
	Operator	go to state 63
	ArrayDereferenced	go to state 67

State 51:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-45 ';'	(Rule 136)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 105
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	'{*'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	';'	reduce using rule 131 (OPTIONAL-45)

	OPTIONAL-45	go to state 106
	ListElements	go to state 104
	HashDereferenced	go to state 47
	WordScoped	go to state 75
	Expression	go to state 99
	ListElement	go to state 102
	HashReference	go to state 81
	TypeInner	go to state 107
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	ArrayReference	go to state 85
	FileHandle	go to state 100
	Variable	go to state 94

State 52:

	WordScoped -> WORD .	(Rule 213)
	LoopLabel -> WORD .	(Rule 219)

	'('	reduce using rule 213 (WordScoped)
	COLON	reduce using rule 219 (LoopLabel)

State 53:

	HashDereferenced -> '%{' . Variable '}'	(Rule 211)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 212)

	'{'	shift, and go to state 109
	VARIABLE_SYMBOL	shift, and go to state 56

	Variable	go to state 108
	HashReference	go to state 110

State 54:

	Operation -> Statement .	(Rule 99)

	$default	reduce using rule 99 (Operation)

State 55:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 187)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 188)

	OP02_METHOD_THINARROW	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 114
	OP19_VARIABLE_ASSIGN	shift, and go to state 113
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 111

	';'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 56:

	Variable -> VARIABLE_SYMBOL . STAR-56	(Rule 181)

	$default	reduce using rule 180 (STAR-56)

	STAR-56	go to state 115

State 57:

	PLUS-6 -> Operation .	(Rule 14)

	$default	reduce using rule 14 (PLUS-6)

State 58:

	Expression -> 'undef' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 59:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 107)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 47
	WordScoped	go to state 75
	Expression	go to state 116
	HashReference	go to state 81
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	ArrayReference	go to state 85
	Variable	go to state 94

State 60:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 123)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 85
	Variable	go to state 94
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 117
	WordScoped	go to state 75

State 61:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 199)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 200)

	'['	shift, and go to state 76
	VARIABLE_SYMBOL	shift, and go to state 56

	ArrayReference	go to state 119
	Variable	go to state 118

State 62:

	Statement -> OPTIONAL-50 . Loop	(Rule 159)

	'for my integer'	shift, and go to state 123
	'foreach my'	shift, and go to state 122
	'while ('	shift, and go to state 125

	LoopWhile	go to state 120
	Loop	go to state 124
	LoopFor	go to state 121
	LoopForEach	go to state 126

State 63:

	Expression -> Operator .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 64:

	OPTIONAL-50 -> PAREN-49 .	(Rule 156)

	$default	reduce using rule 156 (OPTIONAL-50)

State 65:

	Statement -> VariableModification .	(Rule 162)

	$default	reduce using rule 162 (Statement)

State 66:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-43 ')' ';'	(Rule 134)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 105
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	'{*'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 127 (OPTIONAL-43)

	ArrayReference	go to state 85
	FileHandle	go to state 127
	Variable	go to state 94
	Operator	go to state 63
	TypeInner	go to state 107
	ArrayDereferenced	go to state 67
	HashReference	go to state 81
	OPTIONAL-43	go to state 128
	ListElement	go to state 102
	WordScoped	go to state 75
	Expression	go to state 99
	HashDereferenced	go to state 47
	ListElements	go to state 129

State 67:

	Expression -> ArrayDereferenced .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 68:

	Expression -> LITERAL .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 69:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	WORD	shift, and go to state 97

	Type	go to state 130

State 70:

	Expression -> '{' . '}'	(Rule 150)
	HashReference -> '{' . HashEntry STAR-62 '}'	(Rule 210)

	'%{'	shift, and go to state 53
	'}'	shift, and go to state 133
	WORD	shift, and go to state 131

	HashEntry	go to state 134
	HashDereferenced	go to state 132

State 71:

	PAREN-49 -> LoopLabel . COLON	(Rule 155)

	COLON	shift, and go to state 135

State 72:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 106)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Operator	go to state 63
	ArrayDereferenced	go to state 67
	Variable	go to state 94
	ArrayReference	go to state 85
	Expression	go to state 136
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	HashReference	go to state 81

State 73:

	PLUS-6 -> PLUS-6 . Operation	(Rule 13)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6 .	(Rule 15)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'if ('	shift, and go to state 77
	'my'	shift, and go to state 49
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP01_NAMED_VOID	shift, and go to state 51
	OP01_NAMED_VOID_PAREN	shift, and go to state 66
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 52
	WORD_SCOPED	shift, and go to state 11

	$end	reduce using rule 15 (Program)
	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Variable	go to state 55
	Statement	go to state 54
	HashDereferenced	go to state 47
	Expression	go to state 74
	OperatorVoid	go to state 46
	WordScoped	go to state 75
	Conditional	go to state 86
	LoopLabel	go to state 71
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	VariableDeclaration	go to state 84
	VariableModification	go to state 65
	PAREN-49	go to state 64
	OPTIONAL-50	go to state 62
	HashReference	go to state 81
	Operation	go to state 137

State 74:

	Operation -> Expression . ';'	(Rule 98)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	';'	shift, and go to state 139
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 75:

	Expression -> WordScoped . '(' OPTIONAL-47 ')'	(Rule 152)

	'('	shift, and go to state 155

State 76:

	ArrayReference -> '[' . OPTIONAL-59 ']'	(Rule 198)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	']'	reduce using rule 197 (OPTIONAL-59)

	ListElement	go to state 102
	HashReference	go to state 81
	HashDereferenced	go to state 47
	ListElements	go to state 156
	OPTIONAL-59	go to state 157
	Expression	go to state 99
	WordScoped	go to state 75
	Variable	go to state 94
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	TypeInner	go to state 107
	Operator	go to state 63

State 77:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 169)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 81
	WordScoped	go to state 75
	Expression	go to state 159
	HashDereferenced	go to state 47
	Variable	go to state 94
	ArrayReference	go to state 85
	Operator	go to state 63
	ArrayDereferenced	go to state 67

State 78:

	Operator -> OP01_NAMED . '(' OPTIONAL-42 ')'	(Rule 102)

	'('	shift, and go to state 160

State 79:

	STAR-5 -> STAR-5 Subroutine .	(Rule 11)

	$default	reduce using rule 11 (STAR-5)

State 80:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 103)

	VARIABLE_SYMBOL	shift, and go to state 56

	Variable	go to state 161

State 81:

	Expression -> HashReference .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 82:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 138)

	WORD	shift, and go to state 163

	LoopLabel	go to state 162

State 83:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 114)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 94
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 164
	WordScoped	go to state 75

State 84:

	Statement -> VariableDeclaration .	(Rule 161)

	$default	reduce using rule 161 (Statement)

State 85:

	Expression -> ArrayReference .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 86:

	Statement -> Conditional .	(Rule 158)

	$default	reduce using rule 158 (Statement)

State 87:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	OP20_HASH_FATARROW	shift, and go to state 165

State 88:

	Include -> 'use' WordScoped 'qw(' . PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 166

	PLUS-12	go to state 167

State 89:

	Include -> 'use' WordScoped ';' .	(Rule 33)

	$default	reduce using rule 33 (Include)

State 90:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' . Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 31

	Include	go to state 168

State 91:

	PLUS-10 -> PLUS-10 . Subroutine	(Rule 24)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 . '1, 1;'	(Rule 26)

	'1, 1;'	shift, and go to state 170
	'our'	shift, and go to state 69

	Subroutine	go to state 169

State 92:

	PLUS-10 -> Subroutine .	(Rule 25)

	$default	reduce using rule 25 (PLUS-10)

State 93:

	STAR-9 -> STAR-9 Constant .	(Rule 22)

	$default	reduce using rule 22 (STAR-9)

State 94:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)

	OP02_METHOD_THINARROW	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 114

	')'	reduce using rule 145 (Expression)
	'..'	reduce using rule 145 (Expression)
	';'	reduce using rule 145 (Expression)
	']'	reduce using rule 145 (Expression)
	'}'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP21_LIST_COMMA	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 95:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 96:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 185)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 186)

	VARIABLE_SYMBOL	shift, and go to state 171

State 97:

	Type -> WORD .	(Rule 218)

	$default	reduce using rule 218 (Type)

State 98:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Expression -> '(' Expression . ')'	(Rule 154)

	')'	shift, and go to state 172
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 99:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> Expression .	(Rule 193)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

	')'	reduce using rule 193 (ListElement)
	';'	reduce using rule 193 (ListElement)
	']'	reduce using rule 193 (ListElement)
	OP21_LIST_COMMA	reduce using rule 193 (ListElement)

State 100:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	';'	reduce using rule 133 (OPTIONAL-46)

	ListElement	go to state 102
	HashReference	go to state 81
	HashDereferenced	go to state 47
	ListElements	go to state 173
	WordScoped	go to state 75
	Expression	go to state 99
	OPTIONAL-46	go to state 174
	Variable	go to state 94
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	TypeInner	go to state 107
	Operator	go to state 63

State 101:

	FileHandle -> '{*' . WORD '}'	(Rule 215)

	WORD	shift, and go to state 175

State 102:

	ListElements -> ListElement . STAR-58	(Rule 192)

	$default	reduce using rule 191 (STAR-58)

	STAR-58	go to state 176

State 103:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 195)

	'%{'	shift, and go to state 53

	HashDereferenced	go to state 177

State 104:

	OPTIONAL-45 -> ListElements .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-45)

State 105:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 216)
	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'filehandle_ref'	shift, and go to state 178
	WORD	shift, and go to state 97

	Type	go to state 179

State 106:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 . ';'	(Rule 136)

	';'	shift, and go to state 180

State 107:

	ListElement -> TypeInner . Expression	(Rule 194)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 85
	Variable	go to state 94
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 181
	WordScoped	go to state 75

State 108:

	HashDereferenced -> '%{' Variable . '}'	(Rule 211)

	'}'	shift, and go to state 182

State 109:

	HashReference -> '{' . HashEntry STAR-62 '}'	(Rule 210)

	'%{'	shift, and go to state 53
	WORD	shift, and go to state 131

	HashDereferenced	go to state 132
	HashEntry	go to state 134

State 110:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 212)

	'}'	shift, and go to state 183

State 111:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 188)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Operator	go to state 63
	ArrayDereferenced	go to state 67
	Variable	go to state 94
	ArrayReference	go to state 85
	WordScoped	go to state 75
	Expression	go to state 184
	HashDereferenced	go to state 47
	HashReference	go to state 81

State 112:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-48 ')'	(Rule 153)

	WORD	shift, and go to state 185

State 113:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 187)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 75
	Expression	go to state 186
	HashDereferenced	go to state 47
	HashReference	go to state 81
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	ArrayReference	go to state 85
	Variable	go to state 94

State 114:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 115:

	STAR-56 -> STAR-56 . VariableRetrieval	(Rule 179)
	Variable -> VARIABLE_SYMBOL STAR-56 .	(Rule 181)

	OP02_ARRAY_THINARROW	shift, and go to state 187
	OP02_HASH_THINARROW	shift, and go to state 188

	')'	reduce using rule 181 (Variable)
	'..'	reduce using rule 181 (Variable)
	';'	reduce using rule 181 (Variable)
	']'	reduce using rule 181 (Variable)
	'}'	reduce using rule 181 (Variable)
	COLON	reduce using rule 181 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 181 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 181 (Variable)
	OP04_MATH_POW	reduce using rule 181 (Variable)
	OP06_REGEX_MATCH	reduce using rule 181 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 181 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 181 (Variable)
	OP08_STRING_CAT	reduce using rule 181 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 181 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 181 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 181 (Variable)
	OP13_BITWISE_AND	reduce using rule 181 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 181 (Variable)
	OP15_LOGICAL_AND	reduce using rule 181 (Variable)
	OP16_LOGICAL_OR	reduce using rule 181 (Variable)
	OP17_LIST_RANGE	reduce using rule 181 (Variable)
	OP18_TERNARY	reduce using rule 181 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 181 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 181 (Variable)
	OP21_LIST_COMMA	reduce using rule 181 (Variable)
	OP23_LOGICAL_AND	reduce using rule 181 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 181 (Variable)

	VariableRetrieval	go to state 189

State 116:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 107)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	')'	shift, and go to state 190
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 117:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141

	')'	reduce using rule 123 (Operator)
	'..'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP23_LOGICAL_AND	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 118:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 199)

	'}'	shift, and go to state 191

State 119:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 200)

	'}'	shift, and go to state 192

State 120:

	Loop -> LoopWhile .	(Rule 172)

	$default	reduce using rule 172 (Loop)

State 121:

	Loop -> LoopFor .	(Rule 170)

	$default	reduce using rule 170 (Loop)

State 122:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 174)

	WORD	shift, and go to state 97

	Type	go to state 193

State 123:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 173)

	VARIABLE_SYMBOL	shift, and go to state 194

State 124:

	Statement -> OPTIONAL-50 Loop .	(Rule 159)

	$default	reduce using rule 159 (Statement)

State 125:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 85
	Variable	go to state 94
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	HashReference	go to state 81
	Expression	go to state 195
	WordScoped	go to state 75
	HashDereferenced	go to state 47

State 126:

	Loop -> LoopForEach .	(Rule 171)

	$default	reduce using rule 171 (Loop)

State 127:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 129 (OPTIONAL-44)

	ArrayReference	go to state 85
	Variable	go to state 94
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	TypeInner	go to state 107
	HashReference	go to state 81
	OPTIONAL-44	go to state 196
	ListElement	go to state 102
	WordScoped	go to state 75
	Expression	go to state 99
	ListElements	go to state 197
	HashDereferenced	go to state 47

State 128:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 . ')' ';'	(Rule 134)

	')'	shift, and go to state 198

State 129:

	OPTIONAL-43 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-43)

State 130:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	VARIABLE_SYMBOL	shift, and go to state 199

State 131:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-60 Expression	(Rule 203)

	OP20_HASH_FATARROW	shift, and go to state 200

State 132:

	HashEntry -> HashDereferenced .	(Rule 204)

	$default	reduce using rule 204 (HashEntry)

State 133:

	Expression -> '{' '}' .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 134:

	HashReference -> '{' HashEntry . STAR-62 '}'	(Rule 210)

	$default	reduce using rule 209 (STAR-62)

	STAR-62	go to state 201

State 135:

	PAREN-49 -> LoopLabel COLON .	(Rule 155)

	$default	reduce using rule 155 (PAREN-49)

State 136:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP06_REGEX_MATCH	reduce using rule 106 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 106 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 137:

	PLUS-6 -> PLUS-6 Operation .	(Rule 13)

	$default	reduce using rule 13 (PLUS-6)

State 138:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 117)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 202
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	HashReference	go to state 81
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	Variable	go to state 94
	ArrayReference	go to state 85

State 139:

	Operation -> Expression ';' .	(Rule 98)

	$default	reduce using rule 98 (Operation)

State 140:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 105)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 94
	ArrayReference	go to state 85
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	HashReference	go to state 81
	Expression	go to state 203
	WordScoped	go to state 75
	HashDereferenced	go to state 47

State 141:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 56

	Variable	go to state 204

State 142:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 115)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 75
	Expression	go to state 205
	HashDereferenced	go to state 47
	HashReference	go to state 81
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	ArrayReference	go to state 85
	Variable	go to state 94

State 143:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 116)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 85
	Variable	go to state 94
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	HashReference	go to state 81
	WordScoped	go to state 75
	Expression	go to state 206
	HashDereferenced	go to state 47

State 144:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 124)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 81
	Expression	go to state 207
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	ArrayReference	go to state 85
	Variable	go to state 94
	Operator	go to state 63
	ArrayDereferenced	go to state 67

State 145:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 111)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 85
	Variable	go to state 94
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 208
	WordScoped	go to state 75

State 146:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 110)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayDereferenced	go to state 67
	Operator	go to state 63
	ArrayReference	go to state 85
	Variable	go to state 94
	HashDereferenced	go to state 47
	WordScoped	go to state 75
	Expression	go to state 209
	HashReference	go to state 81

State 147:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 109)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 85
	Variable	go to state 94
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 210
	WordScoped	go to state 75

State 148:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 125)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Operator	go to state 63
	ArrayDereferenced	go to state 67
	Variable	go to state 94
	ArrayReference	go to state 85
	Expression	go to state 211
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	HashReference	go to state 81

State 149:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 108)

	'/'	shift, and go to state 212

State 150:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 120)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 213
	WordScoped	go to state 75
	Variable	go to state 94
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	Operator	go to state 63

State 151:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 119)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 85
	Variable	go to state 94
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 214
	WordScoped	go to state 75

State 152:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 121)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 81
	Expression	go to state 215
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	Variable	go to state 94
	ArrayReference	go to state 85
	Operator	go to state 63
	ArrayDereferenced	go to state 67

State 153:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 118)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 75
	Expression	go to state 216
	HashDereferenced	go to state 47
	HashReference	go to state 81
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	ArrayReference	go to state 85
	Variable	go to state 94

State 154:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 112)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 94
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	WordScoped	go to state 75
	Expression	go to state 217

State 155:

	Expression -> WordScoped '(' . OPTIONAL-47 ')'	(Rule 152)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 140 (OPTIONAL-47)

	ArrayReference	go to state 85
	OPTIONAL-47	go to state 218
	Variable	go to state 94
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	TypeInner	go to state 107
	HashReference	go to state 81
	ListElement	go to state 102
	WordScoped	go to state 75
	Expression	go to state 99
	ListElements	go to state 219
	HashDereferenced	go to state 47

State 156:

	OPTIONAL-59 -> ListElements .	(Rule 196)

	$default	reduce using rule 196 (OPTIONAL-59)

State 157:

	ArrayReference -> '[' OPTIONAL-59 . ']'	(Rule 198)

	']'	shift, and go to state 220

State 158:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 97

	Type	go to state 179

State 159:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 169)

	')'	shift, and go to state 221
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 160:

	Operator -> OP01_NAMED '(' . OPTIONAL-42 ')'	(Rule 102)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 101 (OPTIONAL-42)

	Operator	go to state 63
	TypeInner	go to state 107
	ArrayDereferenced	go to state 67
	ArrayReference	go to state 85
	Variable	go to state 94
	WordScoped	go to state 75
	Expression	go to state 99
	OPTIONAL-42	go to state 223
	HashDereferenced	go to state 47
	ListElements	go to state 222
	HashReference	go to state 81
	ListElement	go to state 102

State 161:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 162:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 138)

	';'	shift, and go to state 224

State 163:

	LoopLabel -> WORD .	(Rule 219)

	$default	reduce using rule 219 (LoopLabel)

State 164:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 114)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 114 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 165:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 35)

	'my'	shift, and go to state 158

	TypeInner	go to state 225

State 166:

	PLUS-12 -> WORD .	(Rule 32)

	$default	reduce using rule 32 (PLUS-12)

State 167:

	PLUS-12 -> PLUS-12 . WORD	(Rule 31)
	Include -> 'use' WordScoped 'qw(' PLUS-12 . ')' ';'	(Rule 34)

	')'	shift, and go to state 226
	WORD	shift, and go to state 227

State 168:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include . STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 228

State 169:

	PLUS-10 -> PLUS-10 Subroutine .	(Rule 24)

	$default	reduce using rule 24 (PLUS-10)

State 170:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1, 1;' .	(Rule 26)

	$default	reduce using rule 26 (Package)

State 171:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 185)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 186)

	';'	shift, and go to state 230
	OP19_VARIABLE_ASSIGN	shift, and go to state 229

State 172:

	Expression -> '(' Expression ')' .	(Rule 154)

	$default	reduce using rule 154 (Expression)

State 173:

	OPTIONAL-46 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-46)

State 174:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 . ';'	(Rule 137)

	';'	shift, and go to state 231

State 175:

	FileHandle -> '{*' WORD . '}'	(Rule 215)

	'}'	shift, and go to state 232

State 176:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 190)
	ListElements -> ListElement STAR-58 .	(Rule 192)

	OP21_LIST_COMMA	shift, and go to state 234

	')'	reduce using rule 192 (ListElements)
	';'	reduce using rule 192 (ListElements)
	']'	reduce using rule 192 (ListElements)

	PAREN-57	go to state 233

State 177:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 195)

	$default	reduce using rule 195 (ListElement)

State 178:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 216)

	VARIABLE_SYMBOL	shift, and go to state 235

State 179:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'$TYPED_'	shift, and go to state 236

State 180:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 181:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> TypeInner Expression .	(Rule 194)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

	')'	reduce using rule 194 (ListElement)
	';'	reduce using rule 194 (ListElement)
	']'	reduce using rule 194 (ListElement)
	OP21_LIST_COMMA	reduce using rule 194 (ListElement)

State 182:

	HashDereferenced -> '%{' Variable '}' .	(Rule 211)

	$default	reduce using rule 211 (HashDereferenced)

State 183:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 212)

	$default	reduce using rule 212 (HashDereferenced)

State 184:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 188)

	';'	shift, and go to state 237
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 185:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-48 ')'	(Rule 153)

	'('	shift, and go to state 238

State 186:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 187)

	';'	shift, and go to state 239
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 187:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 182)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 94
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 240
	WordScoped	go to state 75

State 188:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 183)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 184)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 241
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 47
	WordScoped	go to state 75
	Expression	go to state 242
	HashReference	go to state 81
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	ArrayReference	go to state 85
	Variable	go to state 94

State 189:

	STAR-56 -> STAR-56 VariableRetrieval .	(Rule 179)

	$default	reduce using rule 179 (STAR-56)

State 190:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 191:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 199)

	$default	reduce using rule 199 (ArrayDereferenced)

State 192:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 200)

	$default	reduce using rule 200 (ArrayDereferenced)

State 193:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 174)

	VARIABLE_SYMBOL	shift, and go to state 243

State 194:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 173)

	'('	shift, and go to state 244

State 195:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 175)

	')'	shift, and go to state 245
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 196:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 . ')' ';'	(Rule 135)

	')'	shift, and go to state 246

State 197:

	OPTIONAL-44 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-44)

State 198:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' . ';'	(Rule 134)

	';'	shift, and go to state 247

State 199:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'= sub {'	shift, and go to state 248

State 200:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-60 Expression	(Rule 203)

	'my'	shift, and go to state 158

	'%{'	reduce using rule 202 (OPTIONAL-60)
	'('	reduce using rule 202 (OPTIONAL-60)
	'@{'	reduce using rule 202 (OPTIONAL-60)
	'['	reduce using rule 202 (OPTIONAL-60)
	'undef'	reduce using rule 202 (OPTIONAL-60)
	'{'	reduce using rule 202 (OPTIONAL-60)
	LITERAL	reduce using rule 202 (OPTIONAL-60)
	OP01_NAMED	reduce using rule 202 (OPTIONAL-60)
	OP03_MATH_INC_DEC	reduce using rule 202 (OPTIONAL-60)
	OP05_LOGICAL_NEG	reduce using rule 202 (OPTIONAL-60)
	OP05_MATH_NEG	reduce using rule 202 (OPTIONAL-60)
	OP10_NAMED_UNARY	reduce using rule 202 (OPTIONAL-60)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 202 (OPTIONAL-60)
	OP22_LOGICAL_NOT	reduce using rule 202 (OPTIONAL-60)
	VARIABLE_SYMBOL	reduce using rule 202 (OPTIONAL-60)
	WORD	reduce using rule 202 (OPTIONAL-60)
	WORD_SCOPED	reduce using rule 202 (OPTIONAL-60)

	OPTIONAL-60	go to state 249
	TypeInner	go to state 250

State 201:

	STAR-62 -> STAR-62 . PAREN-61	(Rule 208)
	HashReference -> '{' HashEntry STAR-62 . '}'	(Rule 210)

	'}'	shift, and go to state 253
	OP21_LIST_COMMA	shift, and go to state 252

	PAREN-61	go to state 251

State 202:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP13_BITWISE_AND	reduce using rule 117 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 203:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP06_REGEX_MATCH	reduce using rule 105 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 204:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 122)

	COLON	shift, and go to state 254

State 205:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 206:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP13_BITWISE_AND	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 207:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141

	')'	reduce using rule 124 (Operator)
	'..'	reduce using rule 124 (Operator)
	';'	reduce using rule 124 (Operator)
	']'	reduce using rule 124 (Operator)
	'}'	reduce using rule 124 (Operator)
	OP21_LIST_COMMA	reduce using rule 124 (Operator)
	OP23_LOGICAL_AND	reduce using rule 124 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 124 (Operator)

State 208:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 209:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 110 (Operator)
	OP08_STRING_CAT	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 210:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 109 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 109 (Operator)
	OP08_STRING_CAT	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 211:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144

	')'	reduce using rule 125 (Operator)
	'..'	reduce using rule 125 (Operator)
	';'	reduce using rule 125 (Operator)
	']'	reduce using rule 125 (Operator)
	'}'	reduce using rule 125 (Operator)
	OP21_LIST_COMMA	reduce using rule 125 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (Operator)

State 212:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 108)

	OP06_REGEX_PATTERN	shift, and go to state 255

State 213:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151

	')'	reduce using rule 120 (Operator)
	'..'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP16_LOGICAL_OR	reduce using rule 120 (Operator)
	OP17_LIST_RANGE	reduce using rule 120 (Operator)
	OP18_TERNARY	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP23_LOGICAL_AND	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 214:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP15_LOGICAL_AND	reduce using rule 119 (Operator)
	OP16_LOGICAL_OR	reduce using rule 119 (Operator)
	OP17_LIST_RANGE	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 215:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 121 (Operator)
	'..'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP18_TERNARY	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 216:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 118 (Operator)
	OP15_LOGICAL_AND	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 217:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 218:

	Expression -> WordScoped '(' OPTIONAL-47 . ')'	(Rule 152)

	')'	shift, and go to state 256

State 219:

	OPTIONAL-47 -> ListElements .	(Rule 139)

	$default	reduce using rule 139 (OPTIONAL-47)

State 220:

	ArrayReference -> '[' OPTIONAL-59 ']' .	(Rule 198)

	$default	reduce using rule 198 (ArrayReference)

State 221:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-52 OPTIONAL-54	(Rule 169)

	'{'	shift, and go to state 257

	CodeBlock	go to state 258

State 222:

	OPTIONAL-42 -> ListElements .	(Rule 100)

	$default	reduce using rule 100 (OPTIONAL-42)

State 223:

	Operator -> OP01_NAMED '(' OPTIONAL-42 . ')'	(Rule 102)

	')'	shift, and go to state 259

State 224:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 138)

	$default	reduce using rule 138 (OperatorVoid)

State 225:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 35)

	'['	shift, and go to state 263
	'{'	shift, and go to state 261
	LITERAL	shift, and go to state 260

	ConstantValue	go to state 262

State 226:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' . ';'	(Rule 34)

	';'	shift, and go to state 264

State 227:

	PLUS-12 -> PLUS-12 WORD .	(Rule 31)

	$default	reduce using rule 31 (PLUS-12)

State 228:

	STAR-28 -> STAR-28 . Critic	(Rule 68)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 . STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	'## no critic qw('	shift, and go to state 21

	'our %properties = ('	reduce using rule 71 (STAR-29)
	'use constant'	reduce using rule 71 (STAR-29)
	'use'	reduce using rule 71 (STAR-29)

	STAR-29	go to state 266
	Critic	go to state 265

State 229:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 186)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Operator	go to state 63
	ArrayDereferenced	go to state 67
	ArrayReference	go to state 85
	Variable	go to state 94
	WordScoped	go to state 75
	Expression	go to state 267
	HashDereferenced	go to state 47
	HashReference	go to state 81

State 230:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 185)

	$default	reduce using rule 185 (VariableDeclaration)

State 231:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';' .	(Rule 137)

	$default	reduce using rule 137 (OperatorVoid)

State 232:

	FileHandle -> '{*' WORD '}' .	(Rule 215)

	$default	reduce using rule 215 (FileHandle)

State 233:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 190)

	$default	reduce using rule 190 (STAR-58)

State 234:

	PAREN-57 -> OP21_LIST_COMMA . ListElement	(Rule 189)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 85
	Variable	go to state 94
	ArrayDereferenced	go to state 67
	TypeInner	go to state 107
	Operator	go to state 63
	ListElement	go to state 268
	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 99
	WordScoped	go to state 75

State 235:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 216)

	$default	reduce using rule 216 (FileHandle)

State 236:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 269

State 237:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 188)

	$default	reduce using rule 188 (VariableModification)

State 238:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-48 ')'	(Rule 153)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 142 (OPTIONAL-48)

	OPTIONAL-48	go to state 271
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	TypeInner	go to state 107
	ArrayReference	go to state 85
	Variable	go to state 94
	Expression	go to state 99
	WordScoped	go to state 75
	ListElements	go to state 270
	HashDereferenced	go to state 47
	HashReference	go to state 81
	ListElement	go to state 102

State 239:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 187)

	$default	reduce using rule 187 (VariableModification)

State 240:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 182)

	']'	shift, and go to state 272
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 241:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 184)
	WordScoped -> WORD .	(Rule 213)

	'}'	shift, and go to state 273

	'('	reduce using rule 213 (WordScoped)

State 242:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 183)

	'}'	shift, and go to state 274
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 243:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 174)

	'('	shift, and go to state 275

State 244:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 173)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 81
	Expression	go to state 276
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	Variable	go to state 94
	ArrayReference	go to state 85
	Operator	go to state 63
	ArrayDereferenced	go to state 67

State 245:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 175)

	'{'	shift, and go to state 257

	CodeBlock	go to state 277

State 246:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' . ';'	(Rule 135)

	';'	shift, and go to state 278

State 247:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 248:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'( my'	shift, and go to state 281

	'%{'	reduce using rule 54 (OPTIONAL-21)
	'('	reduce using rule 54 (OPTIONAL-21)
	'@{'	reduce using rule 54 (OPTIONAL-21)
	'['	reduce using rule 54 (OPTIONAL-21)
	'for my integer'	reduce using rule 54 (OPTIONAL-21)
	'foreach my'	reduce using rule 54 (OPTIONAL-21)
	'if ('	reduce using rule 54 (OPTIONAL-21)
	'my'	reduce using rule 54 (OPTIONAL-21)
	'undef'	reduce using rule 54 (OPTIONAL-21)
	'while ('	reduce using rule 54 (OPTIONAL-21)
	'{'	reduce using rule 54 (OPTIONAL-21)
	LITERAL	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID_PAREN	reduce using rule 54 (OPTIONAL-21)
	OP03_MATH_INC_DEC	reduce using rule 54 (OPTIONAL-21)
	OP05_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-21)
	OP05_MATH_NEG	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 54 (OPTIONAL-21)
	OP19_LOOP_CONTROL	reduce using rule 54 (OPTIONAL-21)
	OP22_LOGICAL_NOT	reduce using rule 54 (OPTIONAL-21)
	VARIABLE_SYMBOL	reduce using rule 54 (OPTIONAL-21)
	WORD	reduce using rule 54 (OPTIONAL-21)
	WORD_SCOPED	reduce using rule 54 (OPTIONAL-21)

	OPTIONAL-21	go to state 280
	SubroutineArguments	go to state 279

State 249:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 . Expression	(Rule 203)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Operator	go to state 63
	ArrayDereferenced	go to state 67
	Variable	go to state 94
	ArrayReference	go to state 85
	Expression	go to state 282
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	HashReference	go to state 81

State 250:

	OPTIONAL-60 -> TypeInner .	(Rule 201)

	$default	reduce using rule 201 (OPTIONAL-60)

State 251:

	STAR-62 -> STAR-62 PAREN-61 .	(Rule 208)

	$default	reduce using rule 208 (STAR-62)

State 252:

	PAREN-61 -> OP21_LIST_COMMA . HashEntry	(Rule 207)

	'%{'	shift, and go to state 53
	WORD	shift, and go to state 131

	HashDereferenced	go to state 132
	HashEntry	go to state 283

State 253:

	HashReference -> '{' HashEntry STAR-62 '}' .	(Rule 210)

	$default	reduce using rule 210 (HashReference)

State 254:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 56

	Variable	go to state 284

State 255:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 108)

	'/'	shift, and go to state 285

State 256:

	Expression -> WordScoped '(' OPTIONAL-47 ')' .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 257:

	CodeBlock -> '{' . PLUS-55 '}'	(Rule 178)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'if ('	shift, and go to state 77
	'my'	shift, and go to state 49
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP01_NAMED_VOID	shift, and go to state 51
	OP01_NAMED_VOID_PAREN	shift, and go to state 66
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 52
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Variable	go to state 55
	Statement	go to state 54
	HashDereferenced	go to state 47
	OperatorVoid	go to state 46
	WordScoped	go to state 75
	Expression	go to state 74
	Conditional	go to state 86
	LoopLabel	go to state 71
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	PLUS-55	go to state 286
	VariableModification	go to state 65
	PAREN-49	go to state 64
	VariableDeclaration	go to state 84
	OPTIONAL-50	go to state 62
	HashReference	go to state 81
	Operation	go to state 287

State 258:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-52 OPTIONAL-54	(Rule 169)

	$default	reduce using rule 165 (STAR-52)

	STAR-52	go to state 288

State 259:

	Operator -> OP01_NAMED '(' OPTIONAL-42 ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 260:

	ConstantValue -> LITERAL .	(Rule 50)

	$default	reduce using rule 50 (ConstantValue)

State 261:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-17 LITERAL STAR-20 '}'	(Rule 52)

	WORD	shift, and go to state 289

State 262:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 35)

	';'	shift, and go to state 290

State 263:

	ConstantValue -> '[' . OPTIONAL-13 LITERAL STAR-16 ']'	(Rule 51)

	'my'	shift, and go to state 158

	LITERAL	reduce using rule 37 (OPTIONAL-13)

	OPTIONAL-13	go to state 291
	TypeInner	go to state 292

State 264:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';' .	(Rule 34)

	$default	reduce using rule 34 (Include)

State 265:

	STAR-28 -> STAR-28 Critic .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 266:

	STAR-29 -> STAR-29 . Include	(Rule 70)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 . STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 31

	'our %properties = ('	reduce using rule 73 (STAR-30)
	'use constant'	reduce using rule 73 (STAR-30)

	Include	go to state 294
	STAR-30	go to state 293

State 267:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 186)

	';'	shift, and go to state 295
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 268:

	PAREN-57 -> OP21_LIST_COMMA ListElement .	(Rule 189)

	$default	reduce using rule 189 (PAREN-57)

State 269:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 217)

	OP19_VARIABLE_ASSIGN	shift, and go to state 296

State 270:

	OPTIONAL-48 -> ListElements .	(Rule 141)

	$default	reduce using rule 141 (OPTIONAL-48)

State 271:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 . ')'	(Rule 153)

	')'	shift, and go to state 297

State 272:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 182)

	$default	reduce using rule 182 (VariableRetrieval)

State 273:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 184)

	$default	reduce using rule 184 (VariableRetrieval)

State 274:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 183)

	$default	reduce using rule 183 (VariableRetrieval)

State 275:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 174)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	KEYS_OR_VALUES	shift, and go to state 103
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ListElements	go to state 298
	HashDereferenced	go to state 47
	Expression	go to state 99
	WordScoped	go to state 75
	ListElement	go to state 102
	HashReference	go to state 81
	ArrayDereferenced	go to state 67
	TypeInner	go to state 107
	Operator	go to state 63
	ArrayReference	go to state 85
	Variable	go to state 94

State 276:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 173)

	'..'	shift, and go to state 299
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 277:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 175)

	$default	reduce using rule 175 (LoopWhile)

State 278:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 279:

	OPTIONAL-21 -> SubroutineArguments .	(Rule 53)

	$default	reduce using rule 53 (OPTIONAL-21)

State 280:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 . PLUS-22 '}' ';'	(Rule 57)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'if ('	shift, and go to state 77
	'my'	shift, and go to state 49
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP01_NAMED_VOID	shift, and go to state 51
	OP01_NAMED_VOID_PAREN	shift, and go to state 66
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 52
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Statement	go to state 54
	Variable	go to state 55
	OperatorVoid	go to state 46
	Expression	go to state 74
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	Operator	go to state 63
	VariableModification	go to state 65
	VariableDeclaration	go to state 84
	PAREN-49	go to state 64
	ArrayDereferenced	go to state 67
	ArrayReference	go to state 85
	LoopLabel	go to state 71
	Conditional	go to state 86
	PLUS-22	go to state 300
	Operation	go to state 301
	HashReference	go to state 81
	OPTIONAL-50	go to state 62

State 281:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	WORD	shift, and go to state 97

	Type	go to state 302

State 282:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 Expression .	(Rule 203)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

	'}'	reduce using rule 203 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 203 (HashEntry)

State 283:

	PAREN-61 -> OP21_LIST_COMMA HashEntry .	(Rule 207)

	$default	reduce using rule 207 (PAREN-61)

State 284:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 122)

	$default	reduce using rule 122 (Operator)

State 285:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 286:

	PLUS-55 -> PLUS-55 . Operation	(Rule 176)
	CodeBlock -> '{' PLUS-55 . '}'	(Rule 178)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'if ('	shift, and go to state 77
	'my'	shift, and go to state 49
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	'}'	shift, and go to state 303
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP01_NAMED_VOID	shift, and go to state 51
	OP01_NAMED_VOID_PAREN	shift, and go to state 66
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 52
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Variable	go to state 55
	Statement	go to state 54
	WordScoped	go to state 75
	OperatorVoid	go to state 46
	Expression	go to state 74
	HashDereferenced	go to state 47
	ArrayReference	go to state 85
	LoopLabel	go to state 71
	Conditional	go to state 86
	VariableModification	go to state 65
	PAREN-49	go to state 64
	VariableDeclaration	go to state 84
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	HashReference	go to state 81
	OPTIONAL-50	go to state 62
	Operation	go to state 304

State 287:

	PLUS-55 -> Operation .	(Rule 177)

	$default	reduce using rule 177 (PLUS-55)

State 288:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 164)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 . OPTIONAL-54	(Rule 169)

	'else'	shift, and go to state 309
	'elsif ('	shift, and go to state 305

	$end	reduce using rule 168 (OPTIONAL-54)
	'%{'	reduce using rule 168 (OPTIONAL-54)
	'('	reduce using rule 168 (OPTIONAL-54)
	'@{'	reduce using rule 168 (OPTIONAL-54)
	'['	reduce using rule 168 (OPTIONAL-54)
	'for my integer'	reduce using rule 168 (OPTIONAL-54)
	'foreach my'	reduce using rule 168 (OPTIONAL-54)
	'if ('	reduce using rule 168 (OPTIONAL-54)
	'my'	reduce using rule 168 (OPTIONAL-54)
	'undef'	reduce using rule 168 (OPTIONAL-54)
	'while ('	reduce using rule 168 (OPTIONAL-54)
	'{'	reduce using rule 168 (OPTIONAL-54)
	'}'	reduce using rule 168 (OPTIONAL-54)
	LITERAL	reduce using rule 168 (OPTIONAL-54)
	OP01_NAMED	reduce using rule 168 (OPTIONAL-54)
	OP01_NAMED_VOID	reduce using rule 168 (OPTIONAL-54)
	OP01_NAMED_VOID_PAREN	reduce using rule 168 (OPTIONAL-54)
	OP03_MATH_INC_DEC	reduce using rule 168 (OPTIONAL-54)
	OP05_LOGICAL_NEG	reduce using rule 168 (OPTIONAL-54)
	OP05_MATH_NEG	reduce using rule 168 (OPTIONAL-54)
	OP10_NAMED_UNARY	reduce using rule 168 (OPTIONAL-54)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 168 (OPTIONAL-54)
	OP19_LOOP_CONTROL	reduce using rule 168 (OPTIONAL-54)
	OP22_LOGICAL_NOT	reduce using rule 168 (OPTIONAL-54)
	VARIABLE_SYMBOL	reduce using rule 168 (OPTIONAL-54)
	WORD	reduce using rule 168 (OPTIONAL-54)
	WORD_SCOPED	reduce using rule 168 (OPTIONAL-54)

	PAREN-51	go to state 306
	OPTIONAL-54	go to state 307
	PAREN-53	go to state 308

State 289:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-17 LITERAL STAR-20 '}'	(Rule 52)

	OP20_HASH_FATARROW	shift, and go to state 310

State 290:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 35)

	$default	reduce using rule 35 (Constant)

State 291:

	ConstantValue -> '[' OPTIONAL-13 . LITERAL STAR-16 ']'	(Rule 51)

	LITERAL	shift, and go to state 311

State 292:

	OPTIONAL-13 -> TypeInner .	(Rule 36)

	$default	reduce using rule 36 (OPTIONAL-13)

State 293:

	STAR-30 -> STAR-30 . Constant	(Rule 72)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 . Properties STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	'our %properties = ('	shift, and go to state 312
	'use constant'	shift, and go to state 39

	Properties	go to state 313
	Constant	go to state 314

State 294:

	STAR-29 -> STAR-29 Include .	(Rule 70)

	$default	reduce using rule 70 (STAR-29)

State 295:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 186)

	$default	reduce using rule 186 (VariableDeclaration)

State 296:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 217)

	$default	reduce using rule 217 (TypeInner)

State 297:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')' .	(Rule 153)

	$default	reduce using rule 153 (Expression)

State 298:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 174)

	')'	shift, and go to state 315

State 299:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 173)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayDereferenced	go to state 67
	Operator	go to state 63
	ArrayReference	go to state 85
	Variable	go to state 94
	HashDereferenced	go to state 47
	Expression	go to state 316
	WordScoped	go to state 75
	HashReference	go to state 81

State 300:

	PLUS-22 -> PLUS-22 . Operation	(Rule 55)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 . '}' ';'	(Rule 57)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'if ('	shift, and go to state 77
	'my'	shift, and go to state 49
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	'}'	shift, and go to state 317
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP01_NAMED_VOID	shift, and go to state 51
	OP01_NAMED_VOID_PAREN	shift, and go to state 66
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 52
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Variable	go to state 55
	Statement	go to state 54
	HashDereferenced	go to state 47
	OperatorVoid	go to state 46
	WordScoped	go to state 75
	Expression	go to state 74
	LoopLabel	go to state 71
	Conditional	go to state 86
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	VariableModification	go to state 65
	PAREN-49	go to state 64
	VariableDeclaration	go to state 84
	Operator	go to state 63
	OPTIONAL-50	go to state 62
	HashReference	go to state 81
	Operation	go to state 318

State 301:

	PLUS-22 -> Operation .	(Rule 56)

	$default	reduce using rule 56 (PLUS-22)

State 302:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	VARIABLE_SYMBOL	shift, and go to state 319

State 303:

	CodeBlock -> '{' PLUS-55 '}' .	(Rule 178)

	$default	reduce using rule 178 (CodeBlock)

State 304:

	PLUS-55 -> PLUS-55 Operation .	(Rule 176)

	$default	reduce using rule 176 (PLUS-55)

State 305:

	PAREN-51 -> 'elsif (' . Expression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 94
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	WordScoped	go to state 75
	Expression	go to state 320

State 306:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 164)

	$default	reduce using rule 164 (STAR-52)

State 307:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54 .	(Rule 169)

	$default	reduce using rule 169 (Conditional)

State 308:

	OPTIONAL-54 -> PAREN-53 .	(Rule 167)

	$default	reduce using rule 167 (OPTIONAL-54)

State 309:

	PAREN-53 -> 'else' . CodeBlock	(Rule 166)

	'{'	shift, and go to state 257

	CodeBlock	go to state 321

State 310:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-17 LITERAL STAR-20 '}'	(Rule 52)

	'my'	shift, and go to state 158

	LITERAL	reduce using rule 44 (OPTIONAL-17)

	OPTIONAL-17	go to state 323
	TypeInner	go to state 322

State 311:

	ConstantValue -> '[' OPTIONAL-13 LITERAL . STAR-16 ']'	(Rule 51)

	$default	reduce using rule 42 (STAR-16)

	STAR-16	go to state 324

State 312:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-36 ')' ';'	(Rule 85)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 86)

	'%{'	shift, and go to state 53
	')'	shift, and go to state 327
	WORD	shift, and go to state 328

	HashEntryTyped	go to state 326
	HashDereferenced	go to state 325

State 313:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties . STAR-31 '1, 1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 75 (STAR-31)

	STAR-31	go to state 329

State 314:

	STAR-30 -> STAR-30 Constant .	(Rule 72)

	$default	reduce using rule 72 (STAR-30)

State 315:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 174)

	'{'	shift, and go to state 257

	CodeBlock	go to state 330

State 316:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 173)

	')'	shift, and go to state 331
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 317:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' . ';'	(Rule 57)

	';'	shift, and go to state 332

State 318:

	PLUS-22 -> PLUS-22 Operation .	(Rule 55)

	$default	reduce using rule 55 (PLUS-22)

State 319:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 333

State 320:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	PAREN-51 -> 'elsif (' Expression . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 334
	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 321:

	PAREN-53 -> 'else' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (PAREN-53)

State 322:

	OPTIONAL-17 -> TypeInner .	(Rule 43)

	$default	reduce using rule 43 (OPTIONAL-17)

State 323:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 . LITERAL STAR-20 '}'	(Rule 52)

	LITERAL	shift, and go to state 335

State 324:

	STAR-16 -> STAR-16 . PAREN-15	(Rule 41)
	ConstantValue -> '[' OPTIONAL-13 LITERAL STAR-16 . ']'	(Rule 51)

	']'	shift, and go to state 338
	OP21_LIST_COMMA	shift, and go to state 336

	PAREN-15	go to state 337

State 325:

	HashEntryTyped -> HashDereferenced .	(Rule 206)

	$default	reduce using rule 206 (HashEntryTyped)

State 326:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-36 ')' ';'	(Rule 85)

	$default	reduce using rule 84 (STAR-36)

	STAR-36	go to state 339

State 327:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 86)

	';'	shift, and go to state 340

State 328:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 205)

	OP20_HASH_FATARROW	shift, and go to state 341

State 329:

	STAR-31 -> STAR-31 . Method	(Rule 74)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 . '1, 1;' OPTIONAL-34	(Rule 81)

	'1, 1;'	shift, and go to state 343
	'our'	shift, and go to state 344

	Method	go to state 342

State 330:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 174)

	$default	reduce using rule 174 (LoopForEach)

State 331:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 173)

	'{'	shift, and go to state 257

	CodeBlock	go to state 345

State 332:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';' .	(Rule 57)

	$default	reduce using rule 57 (Subroutine)

State 333:

	STAR-24 -> STAR-24 . PAREN-23	(Rule 59)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	')'	shift, and go to state 347
	OP21_LIST_COMMA	shift, and go to state 346

	PAREN-23	go to state 348

State 334:

	PAREN-51 -> 'elsif (' Expression ')' . CodeBlock	(Rule 163)

	'{'	shift, and go to state 257

	CodeBlock	go to state 349

State 335:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 LITERAL . STAR-20 '}'	(Rule 52)

	$default	reduce using rule 49 (STAR-20)

	STAR-20	go to state 350

State 336:

	PAREN-15 -> OP21_LIST_COMMA . OPTIONAL-14 LITERAL	(Rule 40)

	'my'	shift, and go to state 158

	LITERAL	reduce using rule 39 (OPTIONAL-14)

	OPTIONAL-14	go to state 351
	TypeInner	go to state 352

State 337:

	STAR-16 -> STAR-16 PAREN-15 .	(Rule 41)

	$default	reduce using rule 41 (STAR-16)

State 338:

	ConstantValue -> '[' OPTIONAL-13 LITERAL STAR-16 ']' .	(Rule 51)

	$default	reduce using rule 51 (ConstantValue)

State 339:

	STAR-36 -> STAR-36 . PAREN-35	(Rule 83)
	Properties -> 'our %properties = (' HashEntryTyped STAR-36 . ')' ';'	(Rule 85)

	')'	shift, and go to state 353
	OP21_LIST_COMMA	shift, and go to state 355

	PAREN-35	go to state 354

State 340:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 86)

	$default	reduce using rule 86 (Properties)

State 341:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 205)

	'my'	shift, and go to state 158

	TypeInner	go to state 356

State 342:

	STAR-31 -> STAR-31 Method .	(Rule 74)

	$default	reduce using rule 74 (STAR-31)

State 343:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' . OPTIONAL-34	(Rule 81)

	'our'	shift, and go to state 69

	$end	reduce using rule 80 (OPTIONAL-34)
	'package'	reduce using rule 80 (OPTIONAL-34)

	Subroutine	go to state 357
	PAREN-33	go to state 359
	OPTIONAL-34	go to state 358
	PLUS-32	go to state 360

State 344:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	WORD	shift, and go to state 97

	Type	go to state 361

State 345:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 173)

	$default	reduce using rule 173 (LoopFor)

State 346:

	PAREN-23 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 58)

	'my'	shift, and go to state 362

State 347:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	OP19_VARIABLE_ASSIGN	shift, and go to state 363

State 348:

	STAR-24 -> STAR-24 PAREN-23 .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 349:

	PAREN-51 -> 'elsif (' Expression ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (PAREN-51)

State 350:

	STAR-20 -> STAR-20 . PAREN-19	(Rule 48)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 LITERAL STAR-20 . '}'	(Rule 52)

	'}'	shift, and go to state 364
	OP21_LIST_COMMA	shift, and go to state 365

	PAREN-19	go to state 366

State 351:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 . LITERAL	(Rule 40)

	LITERAL	shift, and go to state 367

State 352:

	OPTIONAL-14 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-14)

State 353:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' . ';'	(Rule 85)

	';'	shift, and go to state 368

State 354:

	STAR-36 -> STAR-36 PAREN-35 .	(Rule 83)

	$default	reduce using rule 83 (STAR-36)

State 355:

	PAREN-35 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 82)

	'%{'	shift, and go to state 53
	WORD	shift, and go to state 328

	HashEntryTyped	go to state 369
	HashDereferenced	go to state 325

State 356:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 205)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 370
	WordScoped	go to state 75
	HashDereferenced	go to state 47
	HashReference	go to state 81
	Operator	go to state 63
	ArrayDereferenced	go to state 67
	ArrayReference	go to state 85
	Variable	go to state 94

State 357:

	PLUS-32 -> Subroutine .	(Rule 77)

	$default	reduce using rule 77 (PLUS-32)

State 358:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1, 1;' OPTIONAL-34 .	(Rule 81)

	$default	reduce using rule 81 (Class)

State 359:

	OPTIONAL-34 -> PAREN-33 .	(Rule 79)

	$default	reduce using rule 79 (OPTIONAL-34)

State 360:

	PLUS-32 -> PLUS-32 . Subroutine	(Rule 76)
	PAREN-33 -> PLUS-32 . '1, 1;'	(Rule 78)

	'1, 1;'	shift, and go to state 371
	'our'	shift, and go to state 69

	Subroutine	go to state 372

State 361:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	VARIABLE_SYMBOL	shift, and go to state 373

State 362:

	PAREN-23 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 58)

	WORD	shift, and go to state 97

	Type	go to state 374

State 363:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-25	(Rule 63)

	'@_;'	shift, and go to state 375

State 364:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 LITERAL STAR-20 '}' .	(Rule 52)

	$default	reduce using rule 52 (ConstantValue)

State 365:

	PAREN-19 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-18 LITERAL	(Rule 47)

	WORD	shift, and go to state 376

State 366:

	STAR-20 -> STAR-20 PAREN-19 .	(Rule 48)

	$default	reduce using rule 48 (STAR-20)

State 367:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 LITERAL .	(Rule 40)

	$default	reduce using rule 40 (PAREN-15)

State 368:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';' .	(Rule 85)

	$default	reduce using rule 85 (Properties)

State 369:

	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 82)

	$default	reduce using rule 82 (PAREN-35)

State 370:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 205)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

	')'	reduce using rule 205 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 205 (HashEntryTyped)

State 371:

	PAREN-33 -> PLUS-32 '1, 1;' .	(Rule 78)

	$default	reduce using rule 78 (PAREN-33)

State 372:

	PLUS-32 -> PLUS-32 Subroutine .	(Rule 76)

	$default	reduce using rule 76 (PLUS-32)

State 373:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'= sub {'	shift, and go to state 377

State 374:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 378

State 375:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-25	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 379

State 376:

	PAREN-19 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-18 LITERAL	(Rule 47)

	OP20_HASH_FATARROW	shift, and go to state 380

State 377:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'( my'	shift, and go to state 383

	'%{'	reduce using rule 88 (OPTIONAL-37)
	'('	reduce using rule 88 (OPTIONAL-37)
	'@{'	reduce using rule 88 (OPTIONAL-37)
	'['	reduce using rule 88 (OPTIONAL-37)
	'for my integer'	reduce using rule 88 (OPTIONAL-37)
	'foreach my'	reduce using rule 88 (OPTIONAL-37)
	'if ('	reduce using rule 88 (OPTIONAL-37)
	'my'	reduce using rule 88 (OPTIONAL-37)
	'undef'	reduce using rule 88 (OPTIONAL-37)
	'while ('	reduce using rule 88 (OPTIONAL-37)
	'{'	reduce using rule 88 (OPTIONAL-37)
	LITERAL	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID_PAREN	reduce using rule 88 (OPTIONAL-37)
	OP03_MATH_INC_DEC	reduce using rule 88 (OPTIONAL-37)
	OP05_LOGICAL_NEG	reduce using rule 88 (OPTIONAL-37)
	OP05_MATH_NEG	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 88 (OPTIONAL-37)
	OP19_LOOP_CONTROL	reduce using rule 88 (OPTIONAL-37)
	OP22_LOGICAL_NOT	reduce using rule 88 (OPTIONAL-37)
	VARIABLE_SYMBOL	reduce using rule 88 (OPTIONAL-37)
	WORD	reduce using rule 88 (OPTIONAL-37)
	WORD_SCOPED	reduce using rule 88 (OPTIONAL-37)

	MethodArguments	go to state 381
	OPTIONAL-37	go to state 382

State 378:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 58)

	$default	reduce using rule 58 (PAREN-23)

State 379:

	STAR-25 -> STAR-25 . ArgumentCheck	(Rule 61)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25 .	(Rule 63)

	CHECK_OR_CHECKTRACE	shift, and go to state 385

	'%{'	reduce using rule 63 (SubroutineArguments)
	'('	reduce using rule 63 (SubroutineArguments)
	'@{'	reduce using rule 63 (SubroutineArguments)
	'['	reduce using rule 63 (SubroutineArguments)
	'for my integer'	reduce using rule 63 (SubroutineArguments)
	'foreach my'	reduce using rule 63 (SubroutineArguments)
	'if ('	reduce using rule 63 (SubroutineArguments)
	'my'	reduce using rule 63 (SubroutineArguments)
	'undef'	reduce using rule 63 (SubroutineArguments)
	'while ('	reduce using rule 63 (SubroutineArguments)
	'{'	reduce using rule 63 (SubroutineArguments)
	LITERAL	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 63 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 63 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 63 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 63 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 63 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 63 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 63 (SubroutineArguments)
	WORD	reduce using rule 63 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 63 (SubroutineArguments)

	ArgumentCheck	go to state 384

State 380:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-18 LITERAL	(Rule 47)

	'my'	shift, and go to state 158

	LITERAL	reduce using rule 46 (OPTIONAL-18)

	OPTIONAL-18	go to state 387
	TypeInner	go to state 386

State 381:

	OPTIONAL-37 -> MethodArguments .	(Rule 87)

	$default	reduce using rule 87 (OPTIONAL-37)

State 382:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 . PLUS-38 '}' ';'	(Rule 91)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'if ('	shift, and go to state 77
	'my'	shift, and go to state 49
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP01_NAMED_VOID	shift, and go to state 51
	OP01_NAMED_VOID_PAREN	shift, and go to state 66
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 52
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	LoopLabel	go to state 71
	Conditional	go to state 86
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	PAREN-49	go to state 64
	VariableModification	go to state 65
	VariableDeclaration	go to state 84
	Operator	go to state 63
	OPTIONAL-50	go to state 62
	HashReference	go to state 81
	Operation	go to state 389
	Variable	go to state 55
	Statement	go to state 54
	PLUS-38	go to state 388
	HashDereferenced	go to state 47
	Expression	go to state 74
	OperatorVoid	go to state 46
	WordScoped	go to state 75

State 383:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	TYPE_CLASS_OR_SELF	shift, and go to state 390

State 384:

	STAR-25 -> STAR-25 ArgumentCheck .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 385:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'('	shift, and go to state 391

State 386:

	OPTIONAL-18 -> TypeInner .	(Rule 45)

	$default	reduce using rule 45 (OPTIONAL-18)

State 387:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 . LITERAL	(Rule 47)

	LITERAL	shift, and go to state 392

State 388:

	PLUS-38 -> PLUS-38 . Operation	(Rule 89)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 . '}' ';'	(Rule 91)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'if ('	shift, and go to state 77
	'my'	shift, and go to state 49
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	'}'	shift, and go to state 393
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP01_NAMED_VOID	shift, and go to state 51
	OP01_NAMED_VOID_PAREN	shift, and go to state 66
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 52
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	OPTIONAL-50	go to state 62
	HashReference	go to state 81
	Operation	go to state 394
	Conditional	go to state 86
	LoopLabel	go to state 71
	ArrayReference	go to state 85
	ArrayDereferenced	go to state 67
	VariableDeclaration	go to state 84
	VariableModification	go to state 65
	PAREN-49	go to state 64
	Operator	go to state 63
	HashDereferenced	go to state 47
	Expression	go to state 74
	WordScoped	go to state 75
	OperatorVoid	go to state 46
	Variable	go to state 55
	Statement	go to state 54

State 389:

	PLUS-38 -> Operation .	(Rule 90)

	$default	reduce using rule 90 (PLUS-38)

State 390:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	$default	reduce using rule 94 (STAR-40)

	STAR-40	go to state 395

State 391:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 47
	Expression	go to state 396
	WordScoped	go to state 75
	HashReference	go to state 81
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	Variable	go to state 94
	ArrayReference	go to state 85

State 392:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 LITERAL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-19)

State 393:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' . ';'	(Rule 91)

	';'	shift, and go to state 397

State 394:

	PLUS-38 -> PLUS-38 Operation .	(Rule 89)

	$default	reduce using rule 89 (PLUS-38)

State 395:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 93)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	')'	shift, and go to state 399
	OP21_LIST_COMMA	shift, and go to state 400

	PAREN-39	go to state 398

State 396:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-27 ')' ';'	(Rule 67)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP21_LIST_COMMA	shift, and go to state 403
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

	')'	reduce using rule 66 (OPTIONAL-27)

	OPTIONAL-27	go to state 401
	PAREN-26	go to state 402

State 397:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';' .	(Rule 91)

	$default	reduce using rule 91 (Method)

State 398:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 93)

	$default	reduce using rule 93 (STAR-40)

State 399:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	OP19_VARIABLE_ASSIGN	shift, and go to state 404

State 400:

	PAREN-39 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 92)

	'my'	shift, and go to state 405

State 401:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 . ')' ';'	(Rule 67)

	')'	shift, and go to state 406

State 402:

	OPTIONAL-27 -> PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-27)

State 403:

	PAREN-26 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 64)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 85
	Variable	go to state 94
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	HashReference	go to state 81
	HashDereferenced	go to state 47
	Expression	go to state 407
	WordScoped	go to state 75

State 404:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-41	(Rule 97)

	'@_;'	shift, and go to state 408

State 405:

	PAREN-39 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 92)

	WORD	shift, and go to state 97

	Type	go to state 409

State 406:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' . ';'	(Rule 67)

	';'	shift, and go to state 410

State 407:

	PAREN-26 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP21_LIST_COMMA	shift, and go to state 411
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

State 408:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-41	(Rule 97)

	$default	reduce using rule 96 (STAR-41)

	STAR-41	go to state 412

State 409:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 92)

	VARIABLE_SYMBOL	shift, and go to state 413

State 410:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';' .	(Rule 67)

	$default	reduce using rule 67 (ArgumentCheck)

State 411:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 64)

	'%{'	shift, and go to state 53
	'('	shift, and go to state 50
	'@{'	shift, and go to state 61
	'['	shift, and go to state 76
	'undef'	shift, and go to state 58
	'{'	shift, and go to state 70
	LITERAL	shift, and go to state 68
	OP01_NAMED	shift, and go to state 78
	OP03_MATH_INC_DEC	shift, and go to state 80
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 59
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 60
	VARIABLE_SYMBOL	shift, and go to state 56
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 47
	Expression	go to state 414
	WordScoped	go to state 75
	HashReference	go to state 81
	ArrayDereferenced	go to state 67
	Operator	go to state 63
	Variable	go to state 94
	ArrayReference	go to state 85

State 412:

	STAR-41 -> STAR-41 . ArgumentCheck	(Rule 95)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41 .	(Rule 97)

	CHECK_OR_CHECKTRACE	shift, and go to state 385

	'%{'	reduce using rule 97 (MethodArguments)
	'('	reduce using rule 97 (MethodArguments)
	'@{'	reduce using rule 97 (MethodArguments)
	'['	reduce using rule 97 (MethodArguments)
	'for my integer'	reduce using rule 97 (MethodArguments)
	'foreach my'	reduce using rule 97 (MethodArguments)
	'if ('	reduce using rule 97 (MethodArguments)
	'my'	reduce using rule 97 (MethodArguments)
	'undef'	reduce using rule 97 (MethodArguments)
	'while ('	reduce using rule 97 (MethodArguments)
	'{'	reduce using rule 97 (MethodArguments)
	LITERAL	reduce using rule 97 (MethodArguments)
	OP01_NAMED	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 97 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 97 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 97 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 97 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 97 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 97 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 97 (MethodArguments)
	WORD	reduce using rule 97 (MethodArguments)
	WORD_SCOPED	reduce using rule 97 (MethodArguments)

	ArgumentCheck	go to state 415

State 413:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 92)

	$default	reduce using rule 92 (PAREN-39)

State 414:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 140
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 147
	OP08_MATH_ADD_SUB	shift, and go to state 146
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 154
	OP11_COMPARE_LT_GT	shift, and go to state 142
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 153
	OP15_LOGICAL_AND	shift, and go to state 151
	OP16_LOGICAL_OR	shift, and go to state 150
	OP17_LIST_RANGE	shift, and go to state 152
	OP18_TERNARY	shift, and go to state 141
	OP23_LOGICAL_AND	shift, and go to state 144
	OP24_LOGICAL_OR_XOR	shift, and go to state 148

	')'	reduce using rule 64 (PAREN-26)

State 415:

	STAR-41 -> STAR-41 ArgumentCheck .	(Rule 95)

	$default	reduce using rule 95 (STAR-41)


Summary:
--------
Number of rules         : 220
Number of terminals     : 83
Number of non-terminals : 107
Number of states        : 416
