Conflicts:
----------
Conflict in state 128 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 128 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 128 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 128 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 128 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 128 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 128 between rule 103 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 128 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 128 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 128 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 128 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 128 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 128 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 128 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 128 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 128 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 139 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 139 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 139 between rule 112 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 139 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 139 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 139 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 139 between rule 112 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 139 between rule 112 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 139 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 139 between rule 112 and token OP18_TERNARY resolved as shift.
Conflict in state 139 between rule 112 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 139 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 139 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 139 between rule 112 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 139 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 139 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 181 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 181 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 181 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 181 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 181 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 181 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 181 between rule 95 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 181 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 181 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 181 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 181 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 181 between rule 95 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 181 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 181 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 193 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 193 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 193 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 193 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 193 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 193 between rule 102 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 193 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 102 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 193 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 193 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 193 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 193 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 193 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 217 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 217 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 217 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 217 between rule 94 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 217 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 217 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 217 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 217 between rule 94 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 217 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 217 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 217 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 217 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 217 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 217 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 217 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 219 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 219 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 219 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 219 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 219 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 219 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 219 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 219 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 219 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 219 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 219 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 219 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 219 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 220 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 220 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 220 between rule 99 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 220 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 220 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 220 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 220 between rule 99 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 220 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 220 between rule 99 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 220 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 220 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 220 between rule 99 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 220 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 221 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 221 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 221 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 221 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 221 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 221 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 221 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 221 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 221 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 221 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 221 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 221 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 221 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 221 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 222 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 222 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 222 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 222 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 222 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 101 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 222 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 222 between rule 101 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 222 between rule 101 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 222 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 222 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 222 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 222 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 222 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 222 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 224 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 224 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 224 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 224 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 224 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 224 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 224 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 224 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 224 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 224 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 224 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 225 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 225 between rule 109 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 225 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 225 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 225 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 225 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 225 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 225 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 225 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 225 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 225 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 225 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 225 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 225 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 225 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 226 between rule 98 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 226 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 226 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 226 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 226 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 226 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 226 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 226 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 226 between rule 98 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 226 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 226 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 226 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 226 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 226 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 98 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 227 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 227 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 227 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 227 between rule 114 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 227 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 227 between rule 114 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 227 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 227 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 227 between rule 114 and token OP18_TERNARY resolved as shift.
Conflict in state 227 between rule 114 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 227 between rule 114 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 227 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 227 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 227 between rule 114 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 227 between rule 114 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 227 between rule 114 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 228 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 228 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 228 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 228 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 228 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 228 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 228 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 228 between rule 110 and token OP17_LIST_RANGE resolved as error.
Conflict in state 228 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 228 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 228 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 228 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 228 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 228 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 228 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 228 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 229 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 229 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 229 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 229 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 229 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 229 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 229 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 229 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 229 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 229 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 229 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 229 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 229 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 229 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 229 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 229 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 230 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 230 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 230 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 230 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 230 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 230 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 230 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 230 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 230 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 230 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 230 between rule 104 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 230 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 230 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 230 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 231 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 231 between rule 113 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 231 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 231 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 231 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 231 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 231 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 231 between rule 113 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 231 between rule 113 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 231 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 231 between rule 113 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 231 between rule 113 and token OP18_TERNARY resolved as shift.
Conflict in state 231 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 231 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 231 between rule 113 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 232 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 232 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 232 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 232 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 232 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 232 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 232 between rule 100 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 232 between rule 100 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 232 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 232 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 232 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 232 between rule 100 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 232 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 232 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 '1;' '1;'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	STAR-20 -> STAR-20 ArgumentCheck
51:	STAR-20 -> /* empty */
52:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20
53:	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
54:	OPTIONAL-22 -> PAREN-21
55:	OPTIONAL-22 -> /* empty */
56:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' ';'
57:	STAR-23 -> STAR-23 Critic
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 Include
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 Constant
62:	STAR-25 -> /* empty */
63:	STAR-26 -> STAR-26 Method
64:	STAR-26 -> /* empty */
65:	PLUS-27 -> PLUS-27 Subroutine
66:	PLUS-27 -> Subroutine
67:	PAREN-28 -> PLUS-27 '1;' '1;'
68:	OPTIONAL-29 -> PAREN-28
69:	OPTIONAL-29 -> /* empty */
70:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties STAR-26 '1;' '1;' OPTIONAL-29
71:	PAREN-30 -> OP21_LIST_COMMA HashEntryTyped
72:	STAR-31 -> STAR-31 PAREN-30
73:	STAR-31 -> /* empty */
74:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-31 ')' ';'
75:	Properties -> 'our %properties = (' ')' ';' Critic
76:	OPTIONAL-32 -> MethodArguments
77:	OPTIONAL-32 -> /* empty */
78:	PLUS-33 -> PLUS-33 Operation
79:	PLUS-33 -> Operation
80:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';'
81:	PAREN-34 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
82:	STAR-35 -> STAR-35 PAREN-34
83:	STAR-35 -> /* empty */
84:	STAR-36 -> STAR-36 ArgumentCheck
85:	STAR-36 -> /* empty */
86:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36
87:	Operation -> Expression ';'
88:	Operation -> Statement
89:	OPTIONAL-37 -> ListElements
90:	OPTIONAL-37 -> /* empty */
91:	Operator -> OP01_NAMED '(' OPTIONAL-37 ')'
92:	Operator -> OP03_MATH_INC_DEC Variable
93:	Operator -> Variable OP03_MATH_INC_DEC
94:	Operator -> Expression OP04_MATH_POW Expression
95:	Operator -> OP05_LOGICAL_NEG Expression
96:	Operator -> OP05_MATH_NEG Expression ')'
97:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
98:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
99:	Operator -> Expression OP08_MATH_ADD_SUB Expression
100:	Operator -> Expression OP08_STRING_CAT Expression
101:	Operator -> Expression OP09_BITWISE_SHIFT Expression
102:	Operator -> OP10_NAMED_UNARY Expression
103:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
104:	Operator -> Expression OP11_COMPARE_LT_GT Expression
105:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
106:	Operator -> Expression OP13_BITWISE_AND Expression
107:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
108:	Operator -> Expression OP15_LOGICAL_AND Expression
109:	Operator -> Expression OP16_LOGICAL_OR Expression
110:	Operator -> Expression OP17_LIST_RANGE Expression
111:	Operator -> Expression OP18_TERNARY Variable COLON Variable
112:	Operator -> OP22_LOGICAL_NOT Expression
113:	Operator -> Expression OP23_LOGICAL_AND Expression
114:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
115:	OPTIONAL-38 -> ListElements
116:	OPTIONAL-38 -> /* empty */
117:	OPTIONAL-39 -> ListElements
118:	OPTIONAL-39 -> /* empty */
119:	OPTIONAL-40 -> ListElements
120:	OPTIONAL-40 -> /* empty */
121:	OPTIONAL-41 -> ListElements
122:	OPTIONAL-41 -> /* empty */
123:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-38 ')' ';'
124:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-39 ')' ';'
125:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-40 ';'
126:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-41 ';'
127:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
128:	OPTIONAL-42 -> ListElements
129:	OPTIONAL-42 -> /* empty */
130:	OPTIONAL-43 -> ListElements
131:	OPTIONAL-43 -> /* empty */
132:	Expression -> 'undef'
133:	Expression -> Literal
134:	Expression -> Variable
135:	Expression -> ArrayReference
136:	Expression -> ArrayDereferenced
137:	Expression -> HashReference
138:	Expression -> HashDereferenced
139:	Expression -> '{' '}'
140:	Expression -> Operator
141:	Expression -> WordScoped '(' OPTIONAL-42 ')'
142:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-43 ')'
143:	Expression -> '(' Expression ')'
144:	ExpressionOrStdin -> Expression
145:	ExpressionOrStdin -> '<STDIN>'
146:	PAREN-44 -> LoopLabel COLON
147:	OPTIONAL-45 -> PAREN-44
148:	OPTIONAL-45 -> /* empty */
149:	Statement -> Conditional
150:	Statement -> OPTIONAL-45 Loop
151:	Statement -> OperatorVoid
152:	Statement -> VariableDeclaration
153:	Statement -> VariableModification
154:	PAREN-46 -> 'elsif (' Expression ')' CodeBlock
155:	STAR-47 -> STAR-47 PAREN-46
156:	STAR-47 -> /* empty */
157:	PAREN-48 -> 'else' CodeBlock
158:	OPTIONAL-49 -> PAREN-48
159:	OPTIONAL-49 -> /* empty */
160:	Conditional -> 'if (' Expression ')' CodeBlock STAR-47 OPTIONAL-49
161:	Loop -> LoopFor
162:	Loop -> LoopForEach
163:	Loop -> LoopWhile
164:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
165:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
166:	LoopWhile -> 'while (' Expression ')' CodeBlock
167:	PLUS-50 -> PLUS-50 Operation
168:	PLUS-50 -> Operation
169:	CodeBlock -> '{' PLUS-50 '}'
170:	STAR-51 -> STAR-51 VariableRetrieval
171:	STAR-51 -> /* empty */
172:	Variable -> VARIABLE_SYMBOL STAR-51
173:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
174:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
175:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
176:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
177:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
178:	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
179:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
180:	PAREN-52 -> OP21_LIST_COMMA ListElement
181:	STAR-53 -> STAR-53 PAREN-52
182:	STAR-53 -> /* empty */
183:	PLUS-54 -> PLUS-54 WORD
184:	PLUS-54 -> WORD
185:	ListElements -> ListElement STAR-53
186:	ListElements -> OP01_NAMED_QW '(' PLUS-54 ')'
187:	ListElement -> Expression
188:	ListElement -> TypeInner Expression
189:	ListElement -> KEYS_OR_VALUES HashDereferenced
190:	OPTIONAL-55 -> ListElements
191:	OPTIONAL-55 -> /* empty */
192:	ArrayReference -> '[' OPTIONAL-55 ']'
193:	ArrayDereferenced -> '@{' Variable '}'
194:	ArrayDereferenced -> '@{' ArrayReference '}'
195:	OPTIONAL-56 -> TypeInner
196:	OPTIONAL-56 -> /* empty */
197:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-56 Expression
198:	HashEntry -> HashDereferenced
199:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
200:	HashEntryTyped -> HashDereferenced
201:	PAREN-57 -> OP21_LIST_COMMA HashEntry
202:	STAR-58 -> STAR-58 PAREN-57
203:	STAR-58 -> /* empty */
204:	HashReference -> '{' HashEntry STAR-58 '}'
205:	HashDereferenced -> '%{' Variable '}'
206:	HashDereferenced -> '%{' HashReference '}'
207:	WordScoped -> WORD
208:	WordScoped -> WORD_SCOPED
209:	FileHandle -> '{*' WORD '}'
210:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
211:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
212:	Type -> WORD
213:	LoopLabel -> WORD
214:	Literal -> LITERAL_STRING
215:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 2
	SHEBANG	shift, and go to state 9

	'package'	reduce using rule 20 (OPTIONAL-9)

	Program	go to state 5
	CompileUnit	go to state 6
	OPTIONAL-9	go to state 7
	PLUS-2	go to state 3
	ModuleHeader	go to state 1
	Critic	go to state 4
	PAREN-1	go to state 8

State 1:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 13

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Package	go to state 11
	STAR-10	go to state 10
	Module	go to state 12
	Class	go to state 14

State 2:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 16

	PLUS-14	go to state 15

State 3:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 2

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 4
	PAREN-1	go to state 17
	OPTIONAL-9	go to state 7
	ModuleHeader	go to state 1

State 4:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 5:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 6:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 18

State 7:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 19

State 8:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 9:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 2

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 20
	OPTIONAL-3	go to state 21

State 10:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 '1;' '1;'	(Rule 32)

	'## no critic qw('	shift, and go to state 2

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 23
	STAR-11	go to state 22

State 11:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 12:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 13:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties STAR-26 '1;' '1;' OPTIONAL-29	(Rule 70)

	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 26

State 14:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 15:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 28
	WORD	shift, and go to state 27

State 16:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 17:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 18:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 19:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 29

State 20:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 21:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 30

	Header	go to state 31

State 22:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 '1;' '1;'	(Rule 32)

	'use'	shift, and go to state 33

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 34
	STAR-12	go to state 32

State 23:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 24:

	WordScoped -> WORD_SCOPED .	(Rule 208)

	$default	reduce using rule 208 (WordScoped)

State 25:

	WordScoped -> WORD .	(Rule 207)

	$default	reduce using rule 207 (WordScoped)

State 26:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-23 STAR-24 STAR-25 Properties STAR-26 '1;' '1;' OPTIONAL-29	(Rule 70)

	')'	shift, and go to state 35

State 27:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 28:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 29:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 36

State 30:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 37

State 31:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 38

State 32:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 '1;' '1;'	(Rule 32)

	'our'	shift, and go to state 40
	'use constant'	shift, and go to state 42

	Constant	go to state 39
	Subroutine	go to state 41
	PLUS-13	go to state 43

State 33:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 44

State 34:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 35:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-23 STAR-24 STAR-25 Properties STAR-26 '1;' '1;' OPTIONAL-29	(Rule 70)

	';'	shift, and go to state 45

State 36:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 30

	Header	go to state 46

State 37:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 47

State 38:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 2

	'%{'	reduce using rule 11 (STAR-5)
	'('	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'['	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	'{'	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 49
	STAR-5	go to state 48

State 39:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 40:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 51

	Type	go to state 50

State 41:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 42:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 52

State 43:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . '1;' '1;'	(Rule 32)

	'1;'	shift, and go to state 54
	'our'	shift, and go to state 40

	Subroutine	go to state 53

State 44:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 55
	'qw('	shift, and go to state 56

State 45:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-23 STAR-24 STAR-25 Properties STAR-26 '1;' '1;' OPTIONAL-29	(Rule 70)

	'use'	shift, and go to state 33

	Include	go to state 57

State 46:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 47:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 58

State 48:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 33

	'%{'	reduce using rule 13 (STAR-6)
	'('	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'['	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	'{'	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_PAREN	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	STAR-6	go to state 59
	Include	go to state 60

State 49:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 50:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 61

State 51:

	Type -> WORD .	(Rule 212)

	$default	reduce using rule 212 (Type)

State 52:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 62

State 53:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 54:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 '1;' . '1;'	(Rule 32)

	'1;'	shift, and go to state 63

State 55:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 56:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 64

	PLUS-15	go to state 65

State 57:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-23 STAR-24 STAR-25 Properties STAR-26 '1;' '1;' OPTIONAL-29	(Rule 70)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 66

State 58:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 67

State 59:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 42

	'%{'	reduce using rule 15 (STAR-7)
	'('	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'['	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	'{'	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_PAREN	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 69
	STAR-7	go to state 68

State 60:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 61:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 70

State 62:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 71

	TypeInner	go to state 72

State 63:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 '1;' '1;' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 64:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 65:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 74
	WORD	shift, and go to state 73

State 66:

	STAR-23 -> STAR-23 . Critic	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 . STAR-24 STAR-25 Properties STAR-26 '1;' '1;' OPTIONAL-29	(Rule 70)

	'## no critic qw('	shift, and go to state 2

	'our %properties = ('	reduce using rule 60 (STAR-24)
	'use constant'	reduce using rule 60 (STAR-24)
	'use'	reduce using rule 60 (STAR-24)

	STAR-24	go to state 75
	Critic	go to state 76

State 67:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'if ('	shift, and go to state 111
	'my'	shift, and go to state 115
	'our'	shift, and go to state 40
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 96
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-45)
	'foreach my'	reduce using rule 148 (OPTIONAL-45)
	'while ('	reduce using rule 148 (OPTIONAL-45)

	Statement	go to state 105
	WordScoped	go to state 82
	VariableModification	go to state 109
	Operator	go to state 110
	Expression	go to state 85
	HashReference	go to state 87
	OperatorVoid	go to state 108
	VariableDeclaration	go to state 107
	Operation	go to state 99
	OPTIONAL-45	go to state 98
	PLUS-8	go to state 80
	PAREN-44	go to state 100
	LoopLabel	go to state 113
	HashDereferenced	go to state 95
	Conditional	go to state 118
	Subroutine	go to state 92
	Literal	go to state 93
	Variable	go to state 88
	ArrayReference	go to state 89
	ArrayDereferenced	go to state 90

State 69:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 70:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 119

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'('	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'['	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	'{'	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 121
	OPTIONAL-16	go to state 120

State 71:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	WORD	shift, and go to state 51

	Type	go to state 122

State 72:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101

	Literal	go to state 123

State 73:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 74:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 124

State 75:

	STAR-24 -> STAR-24 . Include	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 . STAR-25 Properties STAR-26 '1;' '1;' OPTIONAL-29	(Rule 70)

	'use'	shift, and go to state 33

	'our %properties = ('	reduce using rule 62 (STAR-25)
	'use constant'	reduce using rule 62 (STAR-25)

	STAR-25	go to state 125
	Include	go to state 126

State 76:

	STAR-23 -> STAR-23 Critic .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 77:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 103)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89
	HashDereferenced	go to state 95
	Operator	go to state 110
	Expression	go to state 128
	HashReference	go to state 87
	Literal	go to state 93
	WordScoped	go to state 82

State 78:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-40 ';'	(Rule 125)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-41 ';'	(Rule 126)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 138
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	'{*'	shift, and go to state 132
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_QW	shift, and go to state 136
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	';'	reduce using rule 120 (OPTIONAL-40)

	Literal	go to state 93
	OPTIONAL-40	go to state 134
	Operator	go to state 110
	ListElements	go to state 137
	Expression	go to state 131
	HashReference	go to state 87
	HashDereferenced	go to state 95
	WordScoped	go to state 82
	FileHandle	go to state 133
	ArrayDereferenced	go to state 90
	ListElement	go to state 135
	TypeInner	go to state 129
	ArrayReference	go to state 89
	Variable	go to state 127

State 79:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 112)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	Variable	go to state 127
	ArrayReference	go to state 89
	ArrayDereferenced	go to state 90
	WordScoped	go to state 82
	HashDereferenced	go to state 95
	Expression	go to state 139
	Operator	go to state 110
	HashReference	go to state 87
	Literal	go to state 93

State 80:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'if ('	shift, and go to state 111
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 96
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 24

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 148 (OPTIONAL-45)
	'foreach my'	reduce using rule 148 (OPTIONAL-45)
	'while ('	reduce using rule 148 (OPTIONAL-45)

	VariableDeclaration	go to state 107
	OperatorVoid	go to state 108
	Expression	go to state 85
	HashReference	go to state 87
	Operator	go to state 110
	VariableModification	go to state 109
	Statement	go to state 105
	WordScoped	go to state 82
	PAREN-44	go to state 100
	OPTIONAL-45	go to state 98
	Operation	go to state 140
	Literal	go to state 93
	Conditional	go to state 118
	HashDereferenced	go to state 95
	LoopLabel	go to state 113
	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 88

State 81:

	ArrayReference -> '[' . OPTIONAL-55 ']'	(Rule 192)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_QW	shift, and go to state 136
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	']'	reduce using rule 191 (OPTIONAL-55)

	OPTIONAL-55	go to state 141
	Literal	go to state 93
	HashDereferenced	go to state 95
	Operator	go to state 110
	Expression	go to state 131
	ListElements	go to state 142
	HashReference	go to state 87
	WordScoped	go to state 82
	ArrayDereferenced	go to state 90
	TypeInner	go to state 129
	ListElement	go to state 135
	Variable	go to state 127
	ArrayReference	go to state 89

State 82:

	Expression -> WordScoped . '(' OPTIONAL-42 ')'	(Rule 141)

	'('	shift, and go to state 143

State 83:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 96)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	Expression	go to state 144
	Operator	go to state 110
	HashReference	go to state 87
	HashDereferenced	go to state 95
	Literal	go to state 93
	WordScoped	go to state 82
	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127

State 84:

	WordScoped -> WORD .	(Rule 207)
	LoopLabel -> WORD .	(Rule 213)

	'('	reduce using rule 207 (WordScoped)
	COLON	reduce using rule 213 (LoopLabel)

State 85:

	Operation -> Expression . ';'	(Rule 87)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	';'	shift, and go to state 153
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 86:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 193)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 194)

	'['	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 97

	ArrayReference	go to state 163
	Variable	go to state 162

State 87:

	Expression -> HashReference .	(Rule 137)

	$default	reduce using rule 137 (Expression)

State 88:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 93)
	Expression -> Variable .	(Rule 134)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-43 ')'	(Rule 142)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 178)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 179)

	OP02_METHOD_THINARROW	shift, and go to state 164
	OP03_MATH_INC_DEC	shift, and go to state 167
	OP19_VARIABLE_ASSIGN	shift, and go to state 165
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 166

	';'	reduce using rule 134 (Expression)
	OP04_MATH_POW	reduce using rule 134 (Expression)
	OP06_REGEX_MATCH	reduce using rule 134 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 134 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 134 (Expression)
	OP08_STRING_CAT	reduce using rule 134 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 134 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 134 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 134 (Expression)
	OP13_BITWISE_AND	reduce using rule 134 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 134 (Expression)
	OP15_LOGICAL_AND	reduce using rule 134 (Expression)
	OP16_LOGICAL_OR	reduce using rule 134 (Expression)
	OP17_LIST_RANGE	reduce using rule 134 (Expression)
	OP18_TERNARY	reduce using rule 134 (Expression)
	OP23_LOGICAL_AND	reduce using rule 134 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 134 (Expression)

State 89:

	Expression -> ArrayReference .	(Rule 135)

	$default	reduce using rule 135 (Expression)

State 90:

	Expression -> ArrayDereferenced .	(Rule 136)

	$default	reduce using rule 136 (Expression)

State 91:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 127)

	WORD	shift, and go to state 169

	LoopLabel	go to state 168

State 92:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 93:

	Expression -> Literal .	(Rule 133)

	$default	reduce using rule 133 (Expression)

State 94:

	Literal -> LITERAL_NUMBER .	(Rule 215)

	$default	reduce using rule 215 (Literal)

State 95:

	Expression -> HashDereferenced .	(Rule 138)

	$default	reduce using rule 138 (Expression)

State 96:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-38 ')' ';'	(Rule 123)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-39 ')' ';'	(Rule 124)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 138
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	'{*'	shift, and go to state 132
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_QW	shift, and go to state 136
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 116 (OPTIONAL-38)

	WordScoped	go to state 82
	OPTIONAL-38	go to state 172
	HashDereferenced	go to state 95
	Expression	go to state 131
	HashReference	go to state 87
	ListElements	go to state 171
	Operator	go to state 110
	Literal	go to state 93
	Variable	go to state 127
	ArrayReference	go to state 89
	TypeInner	go to state 129
	ListElement	go to state 135
	FileHandle	go to state 170
	ArrayDereferenced	go to state 90

State 97:

	Variable -> VARIABLE_SYMBOL . STAR-51	(Rule 172)

	$default	reduce using rule 171 (STAR-51)

	STAR-51	go to state 173

State 98:

	Statement -> OPTIONAL-45 . Loop	(Rule 150)

	'for my integer'	shift, and go to state 178
	'foreach my'	shift, and go to state 174
	'while ('	shift, and go to state 179

	LoopFor	go to state 175
	LoopWhile	go to state 180
	Loop	go to state 176
	LoopForEach	go to state 177

State 99:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 100:

	OPTIONAL-45 -> PAREN-44 .	(Rule 147)

	$default	reduce using rule 147 (OPTIONAL-45)

State 101:

	Literal -> LITERAL_STRING .	(Rule 214)

	$default	reduce using rule 214 (Literal)

State 102:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 95)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	HashDereferenced	go to state 95
	Expression	go to state 181
	HashReference	go to state 87
	Operator	go to state 110
	Literal	go to state 93
	Variable	go to state 127
	ArrayReference	go to state 89
	ArrayDereferenced	go to state 90

State 103:

	HashDereferenced -> '%{' . Variable '}'	(Rule 205)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 206)

	'{'	shift, and go to state 184
	VARIABLE_SYMBOL	shift, and go to state 97

	HashReference	go to state 182
	Variable	go to state 183

State 104:

	Expression -> '(' . Expression ')'	(Rule 143)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 93
	HashDereferenced	go to state 95
	HashReference	go to state 87
	Operator	go to state 110
	Expression	go to state 185
	WordScoped	go to state 82
	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89

State 105:

	Operation -> Statement .	(Rule 88)

	$default	reduce using rule 88 (Operation)

State 106:

	Expression -> '{' . '}'	(Rule 139)
	HashReference -> '{' . HashEntry STAR-58 '}'	(Rule 204)

	'%{'	shift, and go to state 103
	'}'	shift, and go to state 188
	WORD	shift, and go to state 189

	HashEntry	go to state 186
	HashDereferenced	go to state 187

State 107:

	Statement -> VariableDeclaration .	(Rule 152)

	$default	reduce using rule 152 (Statement)

State 108:

	Statement -> OperatorVoid .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 109:

	Statement -> VariableModification .	(Rule 153)

	$default	reduce using rule 153 (Statement)

State 110:

	Expression -> Operator .	(Rule 140)

	$default	reduce using rule 140 (Expression)

State 111:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-47 OPTIONAL-49	(Rule 160)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89
	Literal	go to state 93
	HashDereferenced	go to state 95
	HashReference	go to state 87
	Operator	go to state 110
	Expression	go to state 190
	WordScoped	go to state 82

State 112:

	Operator -> OP01_NAMED . '(' OPTIONAL-37 ')'	(Rule 91)

	'('	shift, and go to state 191

State 113:

	PAREN-44 -> LoopLabel . COLON	(Rule 146)

	COLON	shift, and go to state 192

State 114:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 102)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89
	Literal	go to state 93
	HashDereferenced	go to state 95
	Operator	go to state 110
	Expression	go to state 193
	HashReference	go to state 87
	WordScoped	go to state 82

State 115:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 176)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 177)

	WORD	shift, and go to state 51

	Type	go to state 194

State 116:

	Expression -> 'undef' .	(Rule 132)

	$default	reduce using rule 132 (Expression)

State 117:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 92)

	VARIABLE_SYMBOL	shift, and go to state 97

	Variable	go to state 195

State 118:

	Statement -> Conditional .	(Rule 149)

	$default	reduce using rule 149 (Statement)

State 119:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	WORD	shift, and go to state 51

	Type	go to state 196

State 120:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'if ('	shift, and go to state 111
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 96
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-45)
	'foreach my'	reduce using rule 148 (OPTIONAL-45)
	'while ('	reduce using rule 148 (OPTIONAL-45)

	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 88
	Conditional	go to state 118
	HashDereferenced	go to state 95
	Literal	go to state 93
	LoopLabel	go to state 113
	PAREN-44	go to state 100
	PLUS-17	go to state 197
	Operation	go to state 198
	OPTIONAL-45	go to state 98
	Operator	go to state 110
	Expression	go to state 85
	HashReference	go to state 87
	VariableModification	go to state 109
	VariableDeclaration	go to state 107
	OperatorVoid	go to state 108
	Statement	go to state 105
	WordScoped	go to state 82

State 121:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 122:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	'$TYPED_'	shift, and go to state 199

State 123:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 200

State 124:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 125:

	STAR-25 -> STAR-25 . Constant	(Rule 61)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 . Properties STAR-26 '1;' '1;' OPTIONAL-29	(Rule 70)

	'our %properties = ('	shift, and go to state 201
	'use constant'	shift, and go to state 42

	Constant	go to state 202
	Properties	go to state 203

State 126:

	STAR-24 -> STAR-24 Include .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 127:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 93)
	Expression -> Variable .	(Rule 134)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-43 ')'	(Rule 142)

	OP02_METHOD_THINARROW	shift, and go to state 164
	OP03_MATH_INC_DEC	shift, and go to state 167

	')'	reduce using rule 134 (Expression)
	'..'	reduce using rule 134 (Expression)
	';'	reduce using rule 134 (Expression)
	']'	reduce using rule 134 (Expression)
	'}'	reduce using rule 134 (Expression)
	OP04_MATH_POW	reduce using rule 134 (Expression)
	OP06_REGEX_MATCH	reduce using rule 134 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 134 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 134 (Expression)
	OP08_STRING_CAT	reduce using rule 134 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 134 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 134 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 134 (Expression)
	OP13_BITWISE_AND	reduce using rule 134 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 134 (Expression)
	OP15_LOGICAL_AND	reduce using rule 134 (Expression)
	OP16_LOGICAL_OR	reduce using rule 134 (Expression)
	OP17_LIST_RANGE	reduce using rule 134 (Expression)
	OP18_TERNARY	reduce using rule 134 (Expression)
	OP21_LIST_COMMA	reduce using rule 134 (Expression)
	OP23_LOGICAL_AND	reduce using rule 134 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 134 (Expression)

State 128:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 103)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 103 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 129:

	ListElement -> TypeInner . Expression	(Rule 188)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	Expression	go to state 204
	HashReference	go to state 87
	Operator	go to state 110
	HashDereferenced	go to state 95
	Literal	go to state 93
	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90

State 130:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 189)

	'%{'	shift, and go to state 103

	HashDereferenced	go to state 205

State 131:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	ListElement -> Expression .	(Rule 187)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

	')'	reduce using rule 187 (ListElement)
	';'	reduce using rule 187 (ListElement)
	']'	reduce using rule 187 (ListElement)
	OP21_LIST_COMMA	reduce using rule 187 (ListElement)

State 132:

	FileHandle -> '{*' . WORD '}'	(Rule 209)

	WORD	shift, and go to state 206

State 133:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-41 ';'	(Rule 126)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_QW	shift, and go to state 136
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	';'	reduce using rule 122 (OPTIONAL-41)

	HashReference	go to state 87
	Expression	go to state 131
	Operator	go to state 110
	ListElements	go to state 208
	HashDereferenced	go to state 95
	Literal	go to state 93
	WordScoped	go to state 82
	OPTIONAL-41	go to state 207
	ListElement	go to state 135
	TypeInner	go to state 129
	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127

State 134:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-40 . ';'	(Rule 125)

	';'	shift, and go to state 209

State 135:

	ListElements -> ListElement . STAR-53	(Rule 185)

	$default	reduce using rule 182 (STAR-53)

	STAR-53	go to state 210

State 136:

	ListElements -> OP01_NAMED_QW . '(' PLUS-54 ')'	(Rule 186)

	'('	shift, and go to state 211

State 137:

	OPTIONAL-40 -> ListElements .	(Rule 119)

	$default	reduce using rule 119 (OPTIONAL-40)

State 138:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 210)
	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	'filehandle_ref'	shift, and go to state 212
	WORD	shift, and go to state 51

	Type	go to state 122

State 139:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 140:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 141:

	ArrayReference -> '[' OPTIONAL-55 . ']'	(Rule 192)

	']'	shift, and go to state 213

State 142:

	OPTIONAL-55 -> ListElements .	(Rule 190)

	$default	reduce using rule 190 (OPTIONAL-55)

State 143:

	Expression -> WordScoped '(' . OPTIONAL-42 ')'	(Rule 141)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_QW	shift, and go to state 136
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 129 (OPTIONAL-42)

	ArrayDereferenced	go to state 90
	ListElement	go to state 135
	TypeInner	go to state 129
	ArrayReference	go to state 89
	Variable	go to state 127
	Literal	go to state 93
	ListElements	go to state 215
	HashReference	go to state 87
	Operator	go to state 110
	Expression	go to state 131
	HashDereferenced	go to state 95
	OPTIONAL-42	go to state 214
	WordScoped	go to state 82

State 144:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 96)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	')'	shift, and go to state 216
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 145:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 94)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	Literal	go to state 93
	Operator	go to state 110
	Expression	go to state 217
	HashReference	go to state 87
	HashDereferenced	go to state 95
	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90

State 146:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 97)

	'/'	shift, and go to state 218

State 147:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 108)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127
	Expression	go to state 219
	Operator	go to state 110
	HashReference	go to state 87
	HashDereferenced	go to state 95
	Literal	go to state 93
	WordScoped	go to state 82

State 148:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 99)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89
	Literal	go to state 93
	HashDereferenced	go to state 95
	Operator	go to state 110
	HashReference	go to state 87
	Expression	go to state 220
	WordScoped	go to state 82

State 149:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 105)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89
	HashDereferenced	go to state 95
	Operator	go to state 110
	HashReference	go to state 87
	Expression	go to state 221
	Literal	go to state 93
	WordScoped	go to state 82

State 150:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 101)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 93
	HashDereferenced	go to state 95
	Expression	go to state 222
	Operator	go to state 110
	HashReference	go to state 87
	WordScoped	go to state 82
	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89

State 151:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 111)

	VARIABLE_SYMBOL	shift, and go to state 97

	Variable	go to state 223

State 152:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 107)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 93
	HashReference	go to state 87
	Operator	go to state 110
	Expression	go to state 224
	HashDereferenced	go to state 95
	WordScoped	go to state 82
	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127

State 153:

	Operation -> Expression ';' .	(Rule 87)

	$default	reduce using rule 87 (Operation)

State 154:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 109)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89
	Literal	go to state 93
	HashDereferenced	go to state 95
	Operator	go to state 110
	HashReference	go to state 87
	Expression	go to state 225
	WordScoped	go to state 82

State 155:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 98)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	Expression	go to state 226
	Operator	go to state 110
	HashReference	go to state 87
	HashDereferenced	go to state 95
	Literal	go to state 93
	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90

State 156:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 114)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	HashReference	go to state 87
	Expression	go to state 227
	Operator	go to state 110
	HashDereferenced	go to state 95
	Literal	go to state 93
	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90

State 157:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 110)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90
	WordScoped	go to state 82
	Literal	go to state 93
	HashReference	go to state 87
	Operator	go to state 110
	Expression	go to state 228
	HashDereferenced	go to state 95

State 158:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 106)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	Operator	go to state 110
	Expression	go to state 229
	HashReference	go to state 87
	HashDereferenced	go to state 95
	Literal	go to state 93
	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90

State 159:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 104)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127
	Literal	go to state 93
	HashReference	go to state 87
	Operator	go to state 110
	Expression	go to state 230
	HashDereferenced	go to state 95
	WordScoped	go to state 82

State 160:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 113)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 93
	HashDereferenced	go to state 95
	Operator	go to state 110
	Expression	go to state 231
	HashReference	go to state 87
	WordScoped	go to state 82
	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89

State 161:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 100)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	Operator	go to state 110
	Expression	go to state 232
	HashReference	go to state 87
	HashDereferenced	go to state 95
	Literal	go to state 93
	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90

State 162:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 193)

	'}'	shift, and go to state 233

State 163:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 194)

	'}'	shift, and go to state 234

State 164:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-43 ')'	(Rule 142)

	WORD	shift, and go to state 235

State 165:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 178)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'<STDIN>'	shift, and go to state 237
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	ExpressionOrStdin	go to state 238
	ArrayReference	go to state 89
	Variable	go to state 127
	Literal	go to state 93
	Operator	go to state 110
	HashReference	go to state 87
	Expression	go to state 236
	HashDereferenced	go to state 95
	WordScoped	go to state 82

State 166:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 179)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	HashDereferenced	go to state 95
	HashReference	go to state 87
	Expression	go to state 239
	Operator	go to state 110
	Literal	go to state 93
	WordScoped	go to state 82
	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89

State 167:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 168:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 127)

	';'	shift, and go to state 240

State 169:

	LoopLabel -> WORD .	(Rule 213)

	$default	reduce using rule 213 (LoopLabel)

State 170:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-39 ')' ';'	(Rule 124)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_QW	shift, and go to state 136
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 118 (OPTIONAL-39)

	Variable	go to state 127
	ArrayReference	go to state 89
	TypeInner	go to state 129
	ListElement	go to state 135
	ArrayDereferenced	go to state 90
	WordScoped	go to state 82
	OPTIONAL-39	go to state 241
	HashDereferenced	go to state 95
	HashReference	go to state 87
	Operator	go to state 110
	ListElements	go to state 242
	Expression	go to state 131
	Literal	go to state 93

State 171:

	OPTIONAL-38 -> ListElements .	(Rule 115)

	$default	reduce using rule 115 (OPTIONAL-38)

State 172:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-38 . ')' ';'	(Rule 123)

	')'	shift, and go to state 243

State 173:

	STAR-51 -> STAR-51 . VariableRetrieval	(Rule 170)
	Variable -> VARIABLE_SYMBOL STAR-51 .	(Rule 172)

	OP02_ARRAY_THINARROW	shift, and go to state 245
	OP02_HASH_THINARROW	shift, and go to state 246

	')'	reduce using rule 172 (Variable)
	'..'	reduce using rule 172 (Variable)
	';'	reduce using rule 172 (Variable)
	']'	reduce using rule 172 (Variable)
	'}'	reduce using rule 172 (Variable)
	COLON	reduce using rule 172 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 172 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 172 (Variable)
	OP04_MATH_POW	reduce using rule 172 (Variable)
	OP06_REGEX_MATCH	reduce using rule 172 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 172 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 172 (Variable)
	OP08_STRING_CAT	reduce using rule 172 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 172 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 172 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 172 (Variable)
	OP13_BITWISE_AND	reduce using rule 172 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 172 (Variable)
	OP15_LOGICAL_AND	reduce using rule 172 (Variable)
	OP16_LOGICAL_OR	reduce using rule 172 (Variable)
	OP17_LIST_RANGE	reduce using rule 172 (Variable)
	OP18_TERNARY	reduce using rule 172 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 172 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 172 (Variable)
	OP21_LIST_COMMA	reduce using rule 172 (Variable)
	OP23_LOGICAL_AND	reduce using rule 172 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 172 (Variable)

	VariableRetrieval	go to state 244

State 174:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 165)

	WORD	shift, and go to state 51

	Type	go to state 247

State 175:

	Loop -> LoopFor .	(Rule 161)

	$default	reduce using rule 161 (Loop)

State 176:

	Statement -> OPTIONAL-45 Loop .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 177:

	Loop -> LoopForEach .	(Rule 162)

	$default	reduce using rule 162 (Loop)

State 178:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 164)

	VARIABLE_SYMBOL	shift, and go to state 248

State 179:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	HashDereferenced	go to state 95
	Operator	go to state 110
	HashReference	go to state 87
	Expression	go to state 249
	Literal	go to state 93
	Variable	go to state 127
	ArrayReference	go to state 89
	ArrayDereferenced	go to state 90

State 180:

	Loop -> LoopWhile .	(Rule 163)

	$default	reduce using rule 163 (Loop)

State 181:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145

	')'	reduce using rule 95 (Operator)
	'..'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP06_REGEX_MATCH	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 182:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 206)

	'}'	shift, and go to state 250

State 183:

	HashDereferenced -> '%{' Variable . '}'	(Rule 205)

	'}'	shift, and go to state 251

State 184:

	HashReference -> '{' . HashEntry STAR-58 '}'	(Rule 204)

	'%{'	shift, and go to state 103
	WORD	shift, and go to state 189

	HashDereferenced	go to state 187
	HashEntry	go to state 186

State 185:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	Expression -> '(' Expression . ')'	(Rule 143)

	')'	shift, and go to state 252
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 186:

	HashReference -> '{' HashEntry . STAR-58 '}'	(Rule 204)

	$default	reduce using rule 203 (STAR-58)

	STAR-58	go to state 253

State 187:

	HashEntry -> HashDereferenced .	(Rule 198)

	$default	reduce using rule 198 (HashEntry)

State 188:

	Expression -> '{' '}' .	(Rule 139)

	$default	reduce using rule 139 (Expression)

State 189:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-56 Expression	(Rule 197)

	OP20_HASH_FATARROW	shift, and go to state 254

State 190:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-47 OPTIONAL-49	(Rule 160)

	')'	shift, and go to state 255
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 191:

	Operator -> OP01_NAMED '(' . OPTIONAL-37 ')'	(Rule 91)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_QW	shift, and go to state 136
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 90 (OPTIONAL-37)

	WordScoped	go to state 82
	OPTIONAL-37	go to state 256
	HashDereferenced	go to state 95
	Operator	go to state 110
	ListElements	go to state 257
	Expression	go to state 131
	HashReference	go to state 87
	Literal	go to state 93
	Variable	go to state 127
	ArrayReference	go to state 89
	TypeInner	go to state 129
	ListElement	go to state 135
	ArrayDereferenced	go to state 90

State 192:

	PAREN-44 -> LoopLabel COLON .	(Rule 146)

	$default	reduce using rule 146 (PAREN-44)

State 193:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150

	')'	reduce using rule 102 (Operator)
	'..'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 102 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 194:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 176)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 177)

	VARIABLE_SYMBOL	shift, and go to state 258

State 195:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 92)

	$default	reduce using rule 92 (Operator)

State 196:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	VARIABLE_SYMBOL	shift, and go to state 259

State 197:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'if ('	shift, and go to state 111
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	'}'	shift, and go to state 261
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 96
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-45)
	'foreach my'	reduce using rule 148 (OPTIONAL-45)
	'while ('	reduce using rule 148 (OPTIONAL-45)

	OPTIONAL-45	go to state 98
	Operation	go to state 260
	PAREN-44	go to state 100
	Statement	go to state 105
	WordScoped	go to state 82
	OperatorVoid	go to state 108
	VariableDeclaration	go to state 107
	HashReference	go to state 87
	Expression	go to state 85
	Operator	go to state 110
	VariableModification	go to state 109
	ArrayReference	go to state 89
	Variable	go to state 88
	ArrayDereferenced	go to state 90
	LoopLabel	go to state 113
	Literal	go to state 93
	Conditional	go to state 118
	HashDereferenced	go to state 95

State 198:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 199:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 211)

	WORD	shift, and go to state 262

State 200:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 201:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-31 ')' ';'	(Rule 74)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 75)

	'## no critic qw('	shift, and go to state 2
	')'	shift, and go to state 264

	Critic	go to state 263

State 202:

	STAR-25 -> STAR-25 Constant .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 203:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties . STAR-26 '1;' '1;' OPTIONAL-29	(Rule 70)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 265

State 204:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	ListElement -> TypeInner Expression .	(Rule 188)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

	')'	reduce using rule 188 (ListElement)
	';'	reduce using rule 188 (ListElement)
	']'	reduce using rule 188 (ListElement)
	OP21_LIST_COMMA	reduce using rule 188 (ListElement)

State 205:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 189)

	$default	reduce using rule 189 (ListElement)

State 206:

	FileHandle -> '{*' WORD . '}'	(Rule 209)

	'}'	shift, and go to state 266

State 207:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-41 . ';'	(Rule 126)

	';'	shift, and go to state 267

State 208:

	OPTIONAL-41 -> ListElements .	(Rule 121)

	$default	reduce using rule 121 (OPTIONAL-41)

State 209:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-40 ';' .	(Rule 125)

	$default	reduce using rule 125 (OperatorVoid)

State 210:

	STAR-53 -> STAR-53 . PAREN-52	(Rule 181)
	ListElements -> ListElement STAR-53 .	(Rule 185)

	OP21_LIST_COMMA	shift, and go to state 268

	')'	reduce using rule 185 (ListElements)
	';'	reduce using rule 185 (ListElements)
	']'	reduce using rule 185 (ListElements)

	PAREN-52	go to state 269

State 211:

	ListElements -> OP01_NAMED_QW '(' . PLUS-54 ')'	(Rule 186)

	WORD	shift, and go to state 271

	PLUS-54	go to state 270

State 212:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 210)

	VARIABLE_SYMBOL	shift, and go to state 272

State 213:

	ArrayReference -> '[' OPTIONAL-55 ']' .	(Rule 192)

	$default	reduce using rule 192 (ArrayReference)

State 214:

	Expression -> WordScoped '(' OPTIONAL-42 . ')'	(Rule 141)

	')'	shift, and go to state 273

State 215:

	OPTIONAL-42 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-42)

State 216:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 96)

	$default	reduce using rule 96 (Operator)

State 217:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145

	')'	reduce using rule 94 (Operator)
	'..'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP06_REGEX_MATCH	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 218:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 97)

	OP06_REGEX_PATTERN	shift, and go to state 274

State 219:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 220:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155

	')'	reduce using rule 99 (Operator)
	'..'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 221:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 222:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161

	')'	reduce using rule 101 (Operator)
	'..'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 101 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 223:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 111)

	COLON	shift, and go to state 275

State 224:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 225:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 226:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146

	')'	reduce using rule 98 (Operator)
	'..'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 98 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 98 (Operator)
	OP08_STRING_CAT	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 227:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 228:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 229:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 230:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 231:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 232:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148

	')'	reduce using rule 100 (Operator)
	'..'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP08_STRING_CAT	reduce using rule 100 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 233:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 193)

	$default	reduce using rule 193 (ArrayDereferenced)

State 234:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 194)

	$default	reduce using rule 194 (ArrayDereferenced)

State 235:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-43 ')'	(Rule 142)

	'('	shift, and go to state 276

State 236:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	ExpressionOrStdin -> Expression .	(Rule 144)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

	';'	reduce using rule 144 (ExpressionOrStdin)

State 237:

	ExpressionOrStdin -> '<STDIN>' .	(Rule 145)

	$default	reduce using rule 145 (ExpressionOrStdin)

State 238:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 178)

	';'	shift, and go to state 277

State 239:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 179)

	';'	shift, and go to state 278
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 240:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 127)

	$default	reduce using rule 127 (OperatorVoid)

State 241:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-39 . ')' ';'	(Rule 124)

	')'	shift, and go to state 279

State 242:

	OPTIONAL-39 -> ListElements .	(Rule 117)

	$default	reduce using rule 117 (OPTIONAL-39)

State 243:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-38 ')' . ';'	(Rule 123)

	';'	shift, and go to state 280

State 244:

	STAR-51 -> STAR-51 VariableRetrieval .	(Rule 170)

	$default	reduce using rule 170 (STAR-51)

State 245:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 173)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	Operator	go to state 110
	Expression	go to state 281
	HashReference	go to state 87
	HashDereferenced	go to state 95
	Literal	go to state 93
	WordScoped	go to state 82
	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127

State 246:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 174)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 175)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 282
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90
	WordScoped	go to state 82
	Literal	go to state 93
	Operator	go to state 110
	Expression	go to state 283
	HashReference	go to state 87
	HashDereferenced	go to state 95

State 247:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 165)

	VARIABLE_SYMBOL	shift, and go to state 284

State 248:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 164)

	'('	shift, and go to state 285

State 249:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 166)

	')'	shift, and go to state 286
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 250:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 206)

	$default	reduce using rule 206 (HashDereferenced)

State 251:

	HashDereferenced -> '%{' Variable '}' .	(Rule 205)

	$default	reduce using rule 205 (HashDereferenced)

State 252:

	Expression -> '(' Expression ')' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 253:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 202)
	HashReference -> '{' HashEntry STAR-58 . '}'	(Rule 204)

	'}'	shift, and go to state 287
	OP21_LIST_COMMA	shift, and go to state 289

	PAREN-57	go to state 288

State 254:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-56 Expression	(Rule 197)

	'my'	shift, and go to state 71

	'%{'	reduce using rule 196 (OPTIONAL-56)
	'('	reduce using rule 196 (OPTIONAL-56)
	'@{'	reduce using rule 196 (OPTIONAL-56)
	'['	reduce using rule 196 (OPTIONAL-56)
	'undef'	reduce using rule 196 (OPTIONAL-56)
	'{'	reduce using rule 196 (OPTIONAL-56)
	LITERAL_NUMBER	reduce using rule 196 (OPTIONAL-56)
	LITERAL_STRING	reduce using rule 196 (OPTIONAL-56)
	OP01_NAMED	reduce using rule 196 (OPTIONAL-56)
	OP03_MATH_INC_DEC	reduce using rule 196 (OPTIONAL-56)
	OP05_LOGICAL_NEG	reduce using rule 196 (OPTIONAL-56)
	OP05_MATH_NEG	reduce using rule 196 (OPTIONAL-56)
	OP10_NAMED_UNARY	reduce using rule 196 (OPTIONAL-56)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 196 (OPTIONAL-56)
	OP22_LOGICAL_NOT	reduce using rule 196 (OPTIONAL-56)
	VARIABLE_SYMBOL	reduce using rule 196 (OPTIONAL-56)
	WORD	reduce using rule 196 (OPTIONAL-56)
	WORD_SCOPED	reduce using rule 196 (OPTIONAL-56)

	OPTIONAL-56	go to state 291
	TypeInner	go to state 290

State 255:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-47 OPTIONAL-49	(Rule 160)

	'{'	shift, and go to state 292

	CodeBlock	go to state 293

State 256:

	Operator -> OP01_NAMED '(' OPTIONAL-37 . ')'	(Rule 91)

	')'	shift, and go to state 294

State 257:

	OPTIONAL-37 -> ListElements .	(Rule 89)

	$default	reduce using rule 89 (OPTIONAL-37)

State 258:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 176)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 177)

	';'	shift, and go to state 296
	OP19_VARIABLE_ASSIGN	shift, and go to state 295

State 259:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 297

State 260:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 261:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 298

State 262:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 211)

	OP19_VARIABLE_ASSIGN	shift, and go to state 299

State 263:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-31 ')' ';'	(Rule 74)

	'%{'	shift, and go to state 103
	WORD	shift, and go to state 302

	HashDereferenced	go to state 300
	HashEntryTyped	go to state 301

State 264:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 75)

	';'	shift, and go to state 303

State 265:

	STAR-26 -> STAR-26 . Method	(Rule 63)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties STAR-26 . '1;' '1;' OPTIONAL-29	(Rule 70)

	'1;'	shift, and go to state 306
	'our'	shift, and go to state 304

	Method	go to state 305

State 266:

	FileHandle -> '{*' WORD '}' .	(Rule 209)

	$default	reduce using rule 209 (FileHandle)

State 267:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-41 ';' .	(Rule 126)

	$default	reduce using rule 126 (OperatorVoid)

State 268:

	PAREN-52 -> OP21_LIST_COMMA . ListElement	(Rule 180)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	Expression	go to state 131
	Operator	go to state 110
	HashReference	go to state 87
	HashDereferenced	go to state 95
	Literal	go to state 93
	WordScoped	go to state 82
	ListElement	go to state 307
	TypeInner	go to state 129
	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127

State 269:

	STAR-53 -> STAR-53 PAREN-52 .	(Rule 181)

	$default	reduce using rule 181 (STAR-53)

State 270:

	PLUS-54 -> PLUS-54 . WORD	(Rule 183)
	ListElements -> OP01_NAMED_QW '(' PLUS-54 . ')'	(Rule 186)

	')'	shift, and go to state 309
	WORD	shift, and go to state 308

State 271:

	PLUS-54 -> WORD .	(Rule 184)

	$default	reduce using rule 184 (PLUS-54)

State 272:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 210)

	$default	reduce using rule 210 (FileHandle)

State 273:

	Expression -> WordScoped '(' OPTIONAL-42 ')' .	(Rule 141)

	$default	reduce using rule 141 (Expression)

State 274:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 97)

	'/'	shift, and go to state 310

State 275:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 111)

	VARIABLE_SYMBOL	shift, and go to state 97

	Variable	go to state 311

State 276:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-43 ')'	(Rule 142)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_QW	shift, and go to state 136
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	')'	reduce using rule 131 (OPTIONAL-43)

	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90
	ListElement	go to state 135
	TypeInner	go to state 129
	WordScoped	go to state 82
	Literal	go to state 93
	OPTIONAL-43	go to state 313
	Operator	go to state 110
	ListElements	go to state 312
	Expression	go to state 131
	HashReference	go to state 87
	HashDereferenced	go to state 95

State 277:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 178)

	$default	reduce using rule 178 (VariableModification)

State 278:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 179)

	$default	reduce using rule 179 (VariableModification)

State 279:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-39 ')' . ';'	(Rule 124)

	';'	shift, and go to state 314

State 280:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-38 ')' ';' .	(Rule 123)

	$default	reduce using rule 123 (OperatorVoid)

State 281:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 173)

	']'	shift, and go to state 315
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 282:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 175)
	WordScoped -> WORD .	(Rule 207)

	'}'	shift, and go to state 316

	'('	reduce using rule 207 (WordScoped)

State 283:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 174)

	'}'	shift, and go to state 317
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 284:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 165)

	'('	shift, and go to state 318

State 285:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127
	Operator	go to state 110
	HashReference	go to state 87
	Expression	go to state 319
	HashDereferenced	go to state 95
	Literal	go to state 93
	WordScoped	go to state 82

State 286:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 166)

	'{'	shift, and go to state 292

	CodeBlock	go to state 320

State 287:

	HashReference -> '{' HashEntry STAR-58 '}' .	(Rule 204)

	$default	reduce using rule 204 (HashReference)

State 288:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 202)

	$default	reduce using rule 202 (STAR-58)

State 289:

	PAREN-57 -> OP21_LIST_COMMA . HashEntry	(Rule 201)

	'%{'	shift, and go to state 103
	WORD	shift, and go to state 189

	HashEntry	go to state 321
	HashDereferenced	go to state 187

State 290:

	OPTIONAL-56 -> TypeInner .	(Rule 195)

	$default	reduce using rule 195 (OPTIONAL-56)

State 291:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-56 . Expression	(Rule 197)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	HashReference	go to state 87
	Expression	go to state 322
	Operator	go to state 110
	HashDereferenced	go to state 95
	Literal	go to state 93
	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90

State 292:

	CodeBlock -> '{' . PLUS-50 '}'	(Rule 169)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'if ('	shift, and go to state 111
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 96
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-45)
	'foreach my'	reduce using rule 148 (OPTIONAL-45)
	'while ('	reduce using rule 148 (OPTIONAL-45)

	PLUS-50	go to state 324
	Variable	go to state 88
	ArrayReference	go to state 89
	ArrayDereferenced	go to state 90
	LoopLabel	go to state 113
	HashDereferenced	go to state 95
	Conditional	go to state 118
	Literal	go to state 93
	Operation	go to state 323
	OPTIONAL-45	go to state 98
	PAREN-44	go to state 100
	Statement	go to state 105
	WordScoped	go to state 82
	VariableModification	go to state 109
	Operator	go to state 110
	HashReference	go to state 87
	Expression	go to state 85
	OperatorVoid	go to state 108
	VariableDeclaration	go to state 107

State 293:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-47 OPTIONAL-49	(Rule 160)

	$default	reduce using rule 156 (STAR-47)

	STAR-47	go to state 325

State 294:

	Operator -> OP01_NAMED '(' OPTIONAL-37 ')' .	(Rule 91)

	$default	reduce using rule 91 (Operator)

State 295:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 177)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'<STDIN>'	shift, and go to state 237
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	Literal	go to state 93
	HashDereferenced	go to state 95
	Operator	go to state 110
	Expression	go to state 236
	HashReference	go to state 87
	WordScoped	go to state 82
	ArrayDereferenced	go to state 90
	Variable	go to state 127
	ArrayReference	go to state 89
	ExpressionOrStdin	go to state 326

State 296:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 176)

	$default	reduce using rule 176 (VariableDeclaration)

State 297:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	')'	shift, and go to state 329
	OP21_LIST_COMMA	shift, and go to state 328

	PAREN-18	go to state 327

State 298:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 299:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 211)

	$default	reduce using rule 211 (TypeInner)

State 300:

	HashEntryTyped -> HashDereferenced .	(Rule 200)

	$default	reduce using rule 200 (HashEntryTyped)

State 301:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-31 ')' ';'	(Rule 74)

	$default	reduce using rule 73 (STAR-31)

	STAR-31	go to state 330

State 302:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 199)

	OP20_HASH_FATARROW	shift, and go to state 331

State 303:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 75)

	'## no critic qw('	shift, and go to state 2

	Critic	go to state 332

State 304:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';'	(Rule 80)

	WORD	shift, and go to state 51

	Type	go to state 333

State 305:

	STAR-26 -> STAR-26 Method .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 306:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties STAR-26 '1;' . '1;' OPTIONAL-29	(Rule 70)

	'1;'	shift, and go to state 334

State 307:

	PAREN-52 -> OP21_LIST_COMMA ListElement .	(Rule 180)

	$default	reduce using rule 180 (PAREN-52)

State 308:

	PLUS-54 -> PLUS-54 WORD .	(Rule 183)

	$default	reduce using rule 183 (PLUS-54)

State 309:

	ListElements -> OP01_NAMED_QW '(' PLUS-54 ')' .	(Rule 186)

	$default	reduce using rule 186 (ListElements)

State 310:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 97)

	$default	reduce using rule 97 (Operator)

State 311:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 111)

	$default	reduce using rule 111 (Operator)

State 312:

	OPTIONAL-43 -> ListElements .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-43)

State 313:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-43 . ')'	(Rule 142)

	')'	shift, and go to state 335

State 314:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-39 ')' ';' .	(Rule 124)

	$default	reduce using rule 124 (OperatorVoid)

State 315:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 173)

	$default	reduce using rule 173 (VariableRetrieval)

State 316:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 175)

	$default	reduce using rule 175 (VariableRetrieval)

State 317:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 174)

	$default	reduce using rule 174 (VariableRetrieval)

State 318:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 165)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	KEYS_OR_VALUES	shift, and go to state 130
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_QW	shift, and go to state 136
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	HashDereferenced	go to state 95
	HashReference	go to state 87
	Expression	go to state 131
	ListElements	go to state 336
	Operator	go to state 110
	Literal	go to state 93
	Variable	go to state 127
	ArrayReference	go to state 89
	TypeInner	go to state 129
	ListElement	go to state 135
	ArrayDereferenced	go to state 90

State 319:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 164)

	'..'	shift, and go to state 337
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 320:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (LoopWhile)

State 321:

	PAREN-57 -> OP21_LIST_COMMA HashEntry .	(Rule 201)

	$default	reduce using rule 201 (PAREN-57)

State 322:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-56 Expression .	(Rule 197)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

	'}'	reduce using rule 197 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 197 (HashEntry)

State 323:

	PLUS-50 -> Operation .	(Rule 168)

	$default	reduce using rule 168 (PLUS-50)

State 324:

	PLUS-50 -> PLUS-50 . Operation	(Rule 167)
	CodeBlock -> '{' PLUS-50 . '}'	(Rule 169)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'if ('	shift, and go to state 111
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	'}'	shift, and go to state 338
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 96
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-45)
	'foreach my'	reduce using rule 148 (OPTIONAL-45)
	'while ('	reduce using rule 148 (OPTIONAL-45)

	VariableModification	go to state 109
	HashReference	go to state 87
	Operator	go to state 110
	Expression	go to state 85
	OperatorVoid	go to state 108
	VariableDeclaration	go to state 107
	WordScoped	go to state 82
	Statement	go to state 105
	PAREN-44	go to state 100
	Operation	go to state 339
	OPTIONAL-45	go to state 98
	HashDereferenced	go to state 95
	Conditional	go to state 118
	Literal	go to state 93
	LoopLabel	go to state 113
	ArrayDereferenced	go to state 90
	Variable	go to state 88
	ArrayReference	go to state 89

State 325:

	STAR-47 -> STAR-47 . PAREN-46	(Rule 155)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-47 . OPTIONAL-49	(Rule 160)

	'else'	shift, and go to state 342
	'elsif ('	shift, and go to state 344

	$end	reduce using rule 159 (OPTIONAL-49)
	'%{'	reduce using rule 159 (OPTIONAL-49)
	'('	reduce using rule 159 (OPTIONAL-49)
	'@{'	reduce using rule 159 (OPTIONAL-49)
	'['	reduce using rule 159 (OPTIONAL-49)
	'for my integer'	reduce using rule 159 (OPTIONAL-49)
	'foreach my'	reduce using rule 159 (OPTIONAL-49)
	'if ('	reduce using rule 159 (OPTIONAL-49)
	'my'	reduce using rule 159 (OPTIONAL-49)
	'undef'	reduce using rule 159 (OPTIONAL-49)
	'while ('	reduce using rule 159 (OPTIONAL-49)
	'{'	reduce using rule 159 (OPTIONAL-49)
	'}'	reduce using rule 159 (OPTIONAL-49)
	LITERAL_NUMBER	reduce using rule 159 (OPTIONAL-49)
	LITERAL_STRING	reduce using rule 159 (OPTIONAL-49)
	OP01_NAMED	reduce using rule 159 (OPTIONAL-49)
	OP01_NAMED_VOID	reduce using rule 159 (OPTIONAL-49)
	OP01_NAMED_VOID_PAREN	reduce using rule 159 (OPTIONAL-49)
	OP03_MATH_INC_DEC	reduce using rule 159 (OPTIONAL-49)
	OP05_LOGICAL_NEG	reduce using rule 159 (OPTIONAL-49)
	OP05_MATH_NEG	reduce using rule 159 (OPTIONAL-49)
	OP10_NAMED_UNARY	reduce using rule 159 (OPTIONAL-49)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 159 (OPTIONAL-49)
	OP19_LOOP_CONTROL	reduce using rule 159 (OPTIONAL-49)
	OP22_LOGICAL_NOT	reduce using rule 159 (OPTIONAL-49)
	VARIABLE_SYMBOL	reduce using rule 159 (OPTIONAL-49)
	WORD	reduce using rule 159 (OPTIONAL-49)
	WORD_SCOPED	reduce using rule 159 (OPTIONAL-49)

	PAREN-48	go to state 343
	PAREN-46	go to state 341
	OPTIONAL-49	go to state 340

State 326:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 177)

	';'	shift, and go to state 345

State 327:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 328:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 346

State 329:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	OP19_VARIABLE_ASSIGN	shift, and go to state 347

State 330:

	STAR-31 -> STAR-31 . PAREN-30	(Rule 72)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-31 . ')' ';'	(Rule 74)

	')'	shift, and go to state 350
	OP21_LIST_COMMA	shift, and go to state 348

	PAREN-30	go to state 349

State 331:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 199)

	'my'	shift, and go to state 71

	TypeInner	go to state 351

State 332:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 75)

	$default	reduce using rule 75 (Properties)

State 333:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';'	(Rule 80)

	VARIABLE_SYMBOL	shift, and go to state 352

State 334:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties STAR-26 '1;' '1;' . OPTIONAL-29	(Rule 70)

	'our'	shift, and go to state 40

	$end	reduce using rule 69 (OPTIONAL-29)
	'## no critic qw('	reduce using rule 69 (OPTIONAL-29)
	'package'	reduce using rule 69 (OPTIONAL-29)

	OPTIONAL-29	go to state 356
	Subroutine	go to state 355
	PAREN-28	go to state 354
	PLUS-27	go to state 353

State 335:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-43 ')' .	(Rule 142)

	$default	reduce using rule 142 (Expression)

State 336:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 165)

	')'	shift, and go to state 357

State 337:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	Literal	go to state 93
	HashDereferenced	go to state 95
	Expression	go to state 358
	Operator	go to state 110
	HashReference	go to state 87
	Variable	go to state 127
	ArrayReference	go to state 89
	ArrayDereferenced	go to state 90

State 338:

	CodeBlock -> '{' PLUS-50 '}' .	(Rule 169)

	$default	reduce using rule 169 (CodeBlock)

State 339:

	PLUS-50 -> PLUS-50 Operation .	(Rule 167)

	$default	reduce using rule 167 (PLUS-50)

State 340:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-47 OPTIONAL-49 .	(Rule 160)

	$default	reduce using rule 160 (Conditional)

State 341:

	STAR-47 -> STAR-47 PAREN-46 .	(Rule 155)

	$default	reduce using rule 155 (STAR-47)

State 342:

	PAREN-48 -> 'else' . CodeBlock	(Rule 157)

	'{'	shift, and go to state 292

	CodeBlock	go to state 359

State 343:

	OPTIONAL-49 -> PAREN-48 .	(Rule 158)

	$default	reduce using rule 158 (OPTIONAL-49)

State 344:

	PAREN-46 -> 'elsif (' . Expression ')' CodeBlock	(Rule 154)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127
	HashReference	go to state 87
	Operator	go to state 110
	Expression	go to state 360
	HashDereferenced	go to state 95
	Literal	go to state 93
	WordScoped	go to state 82

State 345:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 177)

	$default	reduce using rule 177 (VariableDeclaration)

State 346:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 51

	Type	go to state 361

State 347:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-20	(Rule 52)

	'@_;'	shift, and go to state 362

State 348:

	PAREN-30 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 71)

	'%{'	shift, and go to state 103
	WORD	shift, and go to state 302

	HashDereferenced	go to state 300
	HashEntryTyped	go to state 363

State 349:

	STAR-31 -> STAR-31 PAREN-30 .	(Rule 72)

	$default	reduce using rule 72 (STAR-31)

State 350:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-31 ')' . ';'	(Rule 74)

	';'	shift, and go to state 364

State 351:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 199)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayDereferenced	go to state 90
	ArrayReference	go to state 89
	Variable	go to state 127
	Literal	go to state 93
	Expression	go to state 365
	Operator	go to state 110
	HashReference	go to state 87
	HashDereferenced	go to state 95
	WordScoped	go to state 82

State 352:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-32 PLUS-33 '}' ';'	(Rule 80)

	'= sub {'	shift, and go to state 366

State 353:

	PLUS-27 -> PLUS-27 . Subroutine	(Rule 65)
	PAREN-28 -> PLUS-27 . '1;' '1;'	(Rule 67)

	'1;'	shift, and go to state 367
	'our'	shift, and go to state 40

	Subroutine	go to state 368

State 354:

	OPTIONAL-29 -> PAREN-28 .	(Rule 68)

	$default	reduce using rule 68 (OPTIONAL-29)

State 355:

	PLUS-27 -> Subroutine .	(Rule 66)

	$default	reduce using rule 66 (PLUS-27)

State 356:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties STAR-26 '1;' '1;' OPTIONAL-29 .	(Rule 70)

	$default	reduce using rule 70 (Class)

State 357:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 165)

	'{'	shift, and go to state 292

	CodeBlock	go to state 369

State 358:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 164)

	')'	shift, and go to state 370
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 359:

	PAREN-48 -> 'else' CodeBlock .	(Rule 157)

	$default	reduce using rule 157 (PAREN-48)

State 360:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	PAREN-46 -> 'elsif (' Expression . ')' CodeBlock	(Rule 154)

	')'	shift, and go to state 371
	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 361:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 372

State 362:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-20	(Rule 52)

	$default	reduce using rule 51 (STAR-20)

	STAR-20	go to state 373

State 363:

	PAREN-30 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 71)

	$default	reduce using rule 71 (PAREN-30)

State 364:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-31 ')' ';' .	(Rule 74)

	$default	reduce using rule 74 (Properties)

State 365:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 199)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

	')'	reduce using rule 199 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 199 (HashEntryTyped)

State 366:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-32 PLUS-33 '}' ';'	(Rule 80)

	'( my'	shift, and go to state 376

	'%{'	reduce using rule 77 (OPTIONAL-32)
	'('	reduce using rule 77 (OPTIONAL-32)
	'@{'	reduce using rule 77 (OPTIONAL-32)
	'['	reduce using rule 77 (OPTIONAL-32)
	'for my integer'	reduce using rule 77 (OPTIONAL-32)
	'foreach my'	reduce using rule 77 (OPTIONAL-32)
	'if ('	reduce using rule 77 (OPTIONAL-32)
	'my'	reduce using rule 77 (OPTIONAL-32)
	'undef'	reduce using rule 77 (OPTIONAL-32)
	'while ('	reduce using rule 77 (OPTIONAL-32)
	'{'	reduce using rule 77 (OPTIONAL-32)
	LITERAL_NUMBER	reduce using rule 77 (OPTIONAL-32)
	LITERAL_STRING	reduce using rule 77 (OPTIONAL-32)
	OP01_NAMED	reduce using rule 77 (OPTIONAL-32)
	OP01_NAMED_VOID	reduce using rule 77 (OPTIONAL-32)
	OP01_NAMED_VOID_PAREN	reduce using rule 77 (OPTIONAL-32)
	OP03_MATH_INC_DEC	reduce using rule 77 (OPTIONAL-32)
	OP05_LOGICAL_NEG	reduce using rule 77 (OPTIONAL-32)
	OP05_MATH_NEG	reduce using rule 77 (OPTIONAL-32)
	OP10_NAMED_UNARY	reduce using rule 77 (OPTIONAL-32)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 77 (OPTIONAL-32)
	OP19_LOOP_CONTROL	reduce using rule 77 (OPTIONAL-32)
	OP22_LOGICAL_NOT	reduce using rule 77 (OPTIONAL-32)
	VARIABLE_SYMBOL	reduce using rule 77 (OPTIONAL-32)
	WORD	reduce using rule 77 (OPTIONAL-32)
	WORD_SCOPED	reduce using rule 77 (OPTIONAL-32)

	OPTIONAL-32	go to state 375
	MethodArguments	go to state 374

State 367:

	PAREN-28 -> PLUS-27 '1;' . '1;'	(Rule 67)

	'1;'	shift, and go to state 377

State 368:

	PLUS-27 -> PLUS-27 Subroutine .	(Rule 65)

	$default	reduce using rule 65 (PLUS-27)

State 369:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 165)

	$default	reduce using rule 165 (LoopForEach)

State 370:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 164)

	'{'	shift, and go to state 292

	CodeBlock	go to state 378

State 371:

	PAREN-46 -> 'elsif (' Expression ')' . CodeBlock	(Rule 154)

	'{'	shift, and go to state 292

	CodeBlock	go to state 379

State 372:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 373:

	STAR-20 -> STAR-20 . ArgumentCheck	(Rule 50)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20 .	(Rule 52)

	CHECK_OR_CHECKTRACE	shift, and go to state 381

	'%{'	reduce using rule 52 (SubroutineArguments)
	'('	reduce using rule 52 (SubroutineArguments)
	'@{'	reduce using rule 52 (SubroutineArguments)
	'['	reduce using rule 52 (SubroutineArguments)
	'for my integer'	reduce using rule 52 (SubroutineArguments)
	'foreach my'	reduce using rule 52 (SubroutineArguments)
	'if ('	reduce using rule 52 (SubroutineArguments)
	'my'	reduce using rule 52 (SubroutineArguments)
	'undef'	reduce using rule 52 (SubroutineArguments)
	'while ('	reduce using rule 52 (SubroutineArguments)
	'{'	reduce using rule 52 (SubroutineArguments)
	LITERAL_NUMBER	reduce using rule 52 (SubroutineArguments)
	LITERAL_STRING	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 52 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 52 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 52 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 52 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 52 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 52 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 52 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 52 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 52 (SubroutineArguments)
	WORD	reduce using rule 52 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 52 (SubroutineArguments)

	ArgumentCheck	go to state 380

State 374:

	OPTIONAL-32 -> MethodArguments .	(Rule 76)

	$default	reduce using rule 76 (OPTIONAL-32)

State 375:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-32 . PLUS-33 '}' ';'	(Rule 80)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'if ('	shift, and go to state 111
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 96
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-45)
	'foreach my'	reduce using rule 148 (OPTIONAL-45)
	'while ('	reduce using rule 148 (OPTIONAL-45)

	PAREN-44	go to state 100
	OPTIONAL-45	go to state 98
	Operation	go to state 382
	VariableDeclaration	go to state 107
	OperatorVoid	go to state 108
	HashReference	go to state 87
	Expression	go to state 85
	Operator	go to state 110
	VariableModification	go to state 109
	WordScoped	go to state 82
	Statement	go to state 105
	ArrayDereferenced	go to state 90
	PLUS-33	go to state 383
	ArrayReference	go to state 89
	Variable	go to state 88
	Literal	go to state 93
	Conditional	go to state 118
	HashDereferenced	go to state 95
	LoopLabel	go to state 113

State 376:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 86)

	TYPE_CLASS_OR_SELF	shift, and go to state 384

State 377:

	PAREN-28 -> PLUS-27 '1;' '1;' .	(Rule 67)

	$default	reduce using rule 67 (PAREN-28)

State 378:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 164)

	$default	reduce using rule 164 (LoopFor)

State 379:

	PAREN-46 -> 'elsif (' Expression ')' CodeBlock .	(Rule 154)

	$default	reduce using rule 154 (PAREN-46)

State 380:

	STAR-20 -> STAR-20 ArgumentCheck .	(Rule 50)

	$default	reduce using rule 50 (STAR-20)

State 381:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-22 ')' ';'	(Rule 56)

	'('	shift, and go to state 385

State 382:

	PLUS-33 -> Operation .	(Rule 79)

	$default	reduce using rule 79 (PLUS-33)

State 383:

	PLUS-33 -> PLUS-33 . Operation	(Rule 78)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 . '}' ';'	(Rule 80)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'if ('	shift, and go to state 111
	'my'	shift, and go to state 115
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	'}'	shift, and go to state 386
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP01_NAMED_VOID	shift, and go to state 78
	OP01_NAMED_VOID_PAREN	shift, and go to state 96
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP19_LOOP_CONTROL	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 84
	WORD_SCOPED	shift, and go to state 24

	'for my integer'	reduce using rule 148 (OPTIONAL-45)
	'foreach my'	reduce using rule 148 (OPTIONAL-45)
	'while ('	reduce using rule 148 (OPTIONAL-45)

	Literal	go to state 93
	HashDereferenced	go to state 95
	Conditional	go to state 118
	LoopLabel	go to state 113
	ArrayDereferenced	go to state 90
	Variable	go to state 88
	ArrayReference	go to state 89
	VariableDeclaration	go to state 107
	OperatorVoid	go to state 108
	VariableModification	go to state 109
	Operator	go to state 110
	Expression	go to state 85
	HashReference	go to state 87
	Statement	go to state 105
	WordScoped	go to state 82
	PAREN-44	go to state 100
	OPTIONAL-45	go to state 98
	Operation	go to state 387

State 384:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 86)

	$default	reduce using rule 83 (STAR-35)

	STAR-35	go to state 388

State 385:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-22 ')' ';'	(Rule 56)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	HashDereferenced	go to state 95
	Expression	go to state 389
	Operator	go to state 110
	HashReference	go to state 87
	Literal	go to state 93
	Variable	go to state 127
	ArrayReference	go to state 89
	ArrayDereferenced	go to state 90

State 386:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' . ';'	(Rule 80)

	';'	shift, and go to state 390

State 387:

	PLUS-33 -> PLUS-33 Operation .	(Rule 78)

	$default	reduce using rule 78 (PLUS-33)

State 388:

	STAR-35 -> STAR-35 . PAREN-34	(Rule 82)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 86)

	')'	shift, and go to state 393
	OP21_LIST_COMMA	shift, and go to state 392

	PAREN-34	go to state 391

State 389:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-22 ')' ';'	(Rule 56)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP21_LIST_COMMA	shift, and go to state 394
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

	')'	reduce using rule 55 (OPTIONAL-22)

	OPTIONAL-22	go to state 395
	PAREN-21	go to state 396

State 390:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';' .	(Rule 80)

	$default	reduce using rule 80 (Method)

State 391:

	STAR-35 -> STAR-35 PAREN-34 .	(Rule 82)

	$default	reduce using rule 82 (STAR-35)

State 392:

	PAREN-34 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 81)

	'my'	shift, and go to state 397

State 393:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 86)

	OP19_VARIABLE_ASSIGN	shift, and go to state 398

State 394:

	PAREN-21 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 53)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	ArrayReference	go to state 89
	Variable	go to state 127
	ArrayDereferenced	go to state 90
	WordScoped	go to state 82
	Literal	go to state 93
	HashReference	go to state 87
	Expression	go to state 399
	Operator	go to state 110
	HashDereferenced	go to state 95

State 395:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 . ')' ';'	(Rule 56)

	')'	shift, and go to state 400

State 396:

	OPTIONAL-22 -> PAREN-21 .	(Rule 54)

	$default	reduce using rule 54 (OPTIONAL-22)

State 397:

	PAREN-34 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 81)

	WORD	shift, and go to state 51

	Type	go to state 401

State 398:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-36	(Rule 86)

	'@_;'	shift, and go to state 402

State 399:

	PAREN-21 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 53)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP21_LIST_COMMA	shift, and go to state 403
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

State 400:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' . ';'	(Rule 56)

	';'	shift, and go to state 404

State 401:

	PAREN-34 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 81)

	VARIABLE_SYMBOL	shift, and go to state 405

State 402:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-36	(Rule 86)

	$default	reduce using rule 85 (STAR-36)

	STAR-36	go to state 406

State 403:

	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 53)

	'%{'	shift, and go to state 103
	'('	shift, and go to state 104
	'@{'	shift, and go to state 86
	'['	shift, and go to state 81
	'undef'	shift, and go to state 116
	'{'	shift, and go to state 106
	LITERAL_NUMBER	shift, and go to state 94
	LITERAL_STRING	shift, and go to state 101
	OP01_NAMED	shift, and go to state 112
	OP03_MATH_INC_DEC	shift, and go to state 117
	OP05_LOGICAL_NEG	shift, and go to state 102
	OP05_MATH_NEG	shift, and go to state 83
	OP10_NAMED_UNARY	shift, and go to state 114
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 77
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 97
	WORD	shift, and go to state 25
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 82
	HashDereferenced	go to state 95
	Operator	go to state 110
	Expression	go to state 407
	HashReference	go to state 87
	Literal	go to state 93
	Variable	go to state 127
	ArrayReference	go to state 89
	ArrayDereferenced	go to state 90

State 404:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' ';' .	(Rule 56)

	$default	reduce using rule 56 (ArgumentCheck)

State 405:

	PAREN-34 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 81)

	$default	reduce using rule 81 (PAREN-34)

State 406:

	STAR-36 -> STAR-36 . ArgumentCheck	(Rule 84)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36 .	(Rule 86)

	CHECK_OR_CHECKTRACE	shift, and go to state 381

	'%{'	reduce using rule 86 (MethodArguments)
	'('	reduce using rule 86 (MethodArguments)
	'@{'	reduce using rule 86 (MethodArguments)
	'['	reduce using rule 86 (MethodArguments)
	'for my integer'	reduce using rule 86 (MethodArguments)
	'foreach my'	reduce using rule 86 (MethodArguments)
	'if ('	reduce using rule 86 (MethodArguments)
	'my'	reduce using rule 86 (MethodArguments)
	'undef'	reduce using rule 86 (MethodArguments)
	'while ('	reduce using rule 86 (MethodArguments)
	'{'	reduce using rule 86 (MethodArguments)
	LITERAL_NUMBER	reduce using rule 86 (MethodArguments)
	LITERAL_STRING	reduce using rule 86 (MethodArguments)
	OP01_NAMED	reduce using rule 86 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 86 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 86 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 86 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 86 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 86 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 86 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 86 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 86 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 86 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 86 (MethodArguments)
	WORD	reduce using rule 86 (MethodArguments)
	WORD_SCOPED	reduce using rule 86 (MethodArguments)

	ArgumentCheck	go to state 408

State 407:

	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 53)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 94)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 97)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 98)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 99)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 100)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 101)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 104)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 105)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 106)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 107)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 108)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 109)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 110)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 111)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 113)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 114)

	OP04_MATH_POW	shift, and go to state 145
	OP06_REGEX_MATCH	shift, and go to state 146
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 155
	OP08_MATH_ADD_SUB	shift, and go to state 148
	OP08_STRING_CAT	shift, and go to state 161
	OP09_BITWISE_SHIFT	shift, and go to state 150
	OP11_COMPARE_LT_GT	shift, and go to state 159
	OP12_COMPARE_EQ_NEQ	shift, and go to state 149
	OP13_BITWISE_AND	shift, and go to state 158
	OP14_BITWISE_OR_XOR	shift, and go to state 152
	OP15_LOGICAL_AND	shift, and go to state 147
	OP16_LOGICAL_OR	shift, and go to state 154
	OP17_LIST_RANGE	shift, and go to state 157
	OP18_TERNARY	shift, and go to state 151
	OP23_LOGICAL_AND	shift, and go to state 160
	OP24_LOGICAL_OR_XOR	shift, and go to state 156

	')'	reduce using rule 53 (PAREN-21)

State 408:

	STAR-36 -> STAR-36 ArgumentCheck .	(Rule 84)

	$default	reduce using rule 84 (STAR-36)


Summary:
--------
Number of rules         : 216
Number of terminals     : 85
Number of non-terminals : 105
Number of states        : 409
