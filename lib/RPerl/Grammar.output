Conflicts:
----------
Conflict in state 123 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 123 between rule 121 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 123 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 123 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 123 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 123 between rule 121 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 123 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 123 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 123 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 123 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 123 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 123 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 123 between rule 121 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 123 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 123 between rule 121 and token OP18_TERNARY resolved as shift.
Conflict in state 123 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 125 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 125 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 125 between rule 104 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 125 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 125 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 125 between rule 104 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 125 between rule 104 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 125 between rule 104 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 125 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 125 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 125 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 125 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 125 between rule 104 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 125 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 125 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 125 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 126 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 126 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 126 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 126 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 126 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 126 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 126 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 126 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 126 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 126 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 126 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 126 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 126 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 126 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 126 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 126 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 186 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 186 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 186 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 186 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 186 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 186 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 186 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 186 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 186 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 186 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 186 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 186 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 186 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 186 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 206 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 206 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 206 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 206 between rule 114 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 206 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 206 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 206 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 206 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 206 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 206 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 206 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 206 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 206 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 206 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 206 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 207 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 207 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 207 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 207 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 207 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 207 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 207 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 207 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 207 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 207 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 207 between rule 113 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 207 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 207 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 208 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 208 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 208 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 208 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 208 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 208 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 208 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 208 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 208 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 208 between rule 116 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 208 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 208 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 208 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 208 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 208 between rule 116 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 209 between rule 107 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 209 between rule 107 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 209 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 209 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 209 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 209 between rule 107 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 209 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 209 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 209 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 209 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 209 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 107 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 209 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 209 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 209 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 209 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 210 between rule 117 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 210 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 210 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 210 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 210 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 210 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 210 between rule 117 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 210 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 210 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 210 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 210 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 210 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 210 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 210 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 211 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 211 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 211 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 211 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 211 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 211 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 211 between rule 118 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 211 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 211 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 211 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 211 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 211 between rule 118 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 211 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 211 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 213 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 213 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 213 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 213 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 213 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 213 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 213 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 213 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 213 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 213 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 213 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 213 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 214 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 214 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 214 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 108 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 214 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 214 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 214 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 214 between rule 108 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 214 between rule 108 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 214 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 214 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 214 between rule 108 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 214 between rule 108 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 214 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 214 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 216 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 216 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 216 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 216 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 216 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 216 between rule 109 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 216 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 216 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 216 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 216 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 216 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 216 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 216 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 216 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 216 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 216 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 217 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 217 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 217 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 217 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 217 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 217 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 217 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 217 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 217 between rule 115 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 217 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 217 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 217 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 217 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 217 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 218 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 218 between rule 103 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 218 between rule 103 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 218 between rule 103 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 218 between rule 103 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 218 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 218 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 218 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 218 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 218 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 218 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 218 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 218 between rule 103 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 218 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 218 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 219 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 219 between rule 119 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 219 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 219 between rule 119 and token OP17_LIST_RANGE resolved as error.
Conflict in state 219 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 219 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 219 between rule 119 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 219 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 219 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 219 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 219 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 219 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 219 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 219 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 219 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 220 between rule 122 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 220 between rule 122 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 122 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 220 between rule 122 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 220 between rule 122 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 220 between rule 122 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 220 between rule 122 and token OP08_STRING_CAT resolved as shift.
Conflict in state 220 between rule 122 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 220 between rule 122 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 122 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 220 between rule 122 and token OP18_TERNARY resolved as shift.
Conflict in state 220 between rule 122 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 220 between rule 122 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 220 between rule 122 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 220 between rule 122 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 220 between rule 122 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 221 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 221 between rule 123 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 221 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 221 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 221 between rule 123 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 221 between rule 123 and token OP18_TERNARY resolved as shift.
Conflict in state 221 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 221 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 221 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 221 between rule 123 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 221 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 221 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 221 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 221 between rule 123 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 221 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 221 between rule 123 and token OP04_MATH_POW resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	STAR-20 -> STAR-20 ArgumentCheck
51:	STAR-20 -> /* empty */
52:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20
53:	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
54:	OPTIONAL-22 -> PAREN-21
55:	OPTIONAL-22 -> /* empty */
56:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' ';'
57:	STAR-23 -> STAR-23 Critic
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 Include
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 Constant
62:	STAR-25 -> /* empty */
63:	OPTIONAL-26 -> PropertiesClass
64:	OPTIONAL-26 -> /* empty */
65:	STAR-27 -> STAR-27 MethodOrSubroutine
66:	STAR-27 -> /* empty */
67:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'
68:	PAREN-28 -> OP21_LIST_COMMA HashEntryTyped
69:	STAR-29 -> STAR-29 PAREN-28
70:	STAR-29 -> /* empty */
71:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-29 ')' ';'
72:	Properties -> 'our %properties = (' ')' ';' Critic
73:	PAREN-30 -> OP21_LIST_COMMA HashEntryTyped
74:	STAR-31 -> STAR-31 PAREN-30
75:	STAR-31 -> /* empty */
76:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-31 ')' ';'
77:	OPTIONAL-32 -> MethodArguments
78:	OPTIONAL-32 -> /* empty */
79:	PLUS-33 -> PLUS-33 Operation
80:	PLUS-33 -> Operation
81:	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';'
82:	PAREN-34 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
83:	STAR-35 -> STAR-35 PAREN-34
84:	STAR-35 -> /* empty */
85:	STAR-36 -> STAR-36 ArgumentCheck
86:	STAR-36 -> /* empty */
87:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36
88:	MethodOrSubroutine -> Method
89:	MethodOrSubroutine -> Subroutine
90:	Operation -> Expression ';'
91:	Operation -> Statement
92:	OPTIONAL-37 -> ListElements
93:	OPTIONAL-37 -> /* empty */
94:	OPTIONAL-38 -> ListElements
95:	OPTIONAL-38 -> /* empty */
96:	OPTIONAL-39 -> ListElements
97:	OPTIONAL-39 -> /* empty */
98:	Operator -> OP01_NAMED '(' OPTIONAL-37 ')'
99:	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-38 ')' ';'
100:	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-39 ';'
101:	Operator -> OP03_MATH_INC_DEC Variable
102:	Operator -> Variable OP03_MATH_INC_DEC
103:	Operator -> Expression OP04_MATH_POW Expression
104:	Operator -> OP05_LOGICAL_NEG Expression
105:	Operator -> OP05_MATH_NEG Expression ')'
106:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
107:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
108:	Operator -> Expression OP08_MATH_ADD_SUB Expression
109:	Operator -> Expression OP08_STRING_CAT Expression
110:	Operator -> Expression OP09_BITWISE_SHIFT Expression
111:	Operator -> OP10_NAMED_UNARY Expression
112:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
113:	Operator -> Expression OP11_COMPARE_LT_GT Expression
114:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
115:	Operator -> Expression OP13_BITWISE_AND Expression
116:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
117:	Operator -> Expression OP15_LOGICAL_AND Expression
118:	Operator -> Expression OP16_LOGICAL_OR Expression
119:	Operator -> Expression OP17_LIST_RANGE Expression
120:	Operator -> Expression OP18_TERNARY Variable COLON Variable
121:	Operator -> OP22_LOGICAL_NOT Expression
122:	Operator -> Expression OP23_LOGICAL_AND Expression
123:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
124:	OPTIONAL-40 -> ListElements
125:	OPTIONAL-40 -> /* empty */
126:	OPTIONAL-41 -> ListElements
127:	OPTIONAL-41 -> /* empty */
128:	OPTIONAL-42 -> ListElements
129:	OPTIONAL-42 -> /* empty */
130:	OPTIONAL-43 -> ListElements
131:	OPTIONAL-43 -> /* empty */
132:	OPTIONAL-44 -> ListElements
133:	OPTIONAL-44 -> /* empty */
134:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';'
135:	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-41 ')' ';'
136:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';'
137:	OperatorVoid -> OP01_PRINT_VOID OPTIONAL-43 ';'
138:	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-44 ';'
139:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
140:	OPTIONAL-45 -> ListElements
141:	OPTIONAL-45 -> /* empty */
142:	OPTIONAL-46 -> ListElements
143:	OPTIONAL-46 -> /* empty */
144:	Expression -> 'undef'
145:	Expression -> Literal
146:	Expression -> Variable
147:	Expression -> ArrayReference
148:	Expression -> ArrayDereferenced
149:	Expression -> HashReference
150:	Expression -> HashDereferenced
151:	Expression -> '{' '}'
152:	Expression -> Operator
153:	Expression -> WordScoped '(' OPTIONAL-45 ')'
154:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-46 ')'
155:	Expression -> '(' Expression ')'
156:	ExpressionOrStdin -> Expression
157:	ExpressionOrStdin -> '<STDIN>'
158:	PAREN-47 -> LoopLabel COLON
159:	OPTIONAL-48 -> PAREN-47
160:	OPTIONAL-48 -> /* empty */
161:	Statement -> Conditional
162:	Statement -> OPTIONAL-48 Loop
163:	Statement -> OperatorVoid
164:	Statement -> VariableDeclaration
165:	Statement -> VariableModification
166:	PAREN-49 -> 'elsif (' Expression ')' CodeBlock
167:	STAR-50 -> STAR-50 PAREN-49
168:	STAR-50 -> /* empty */
169:	PAREN-51 -> 'else' CodeBlock
170:	OPTIONAL-52 -> PAREN-51
171:	OPTIONAL-52 -> /* empty */
172:	Conditional -> 'if (' Expression ')' CodeBlock STAR-50 OPTIONAL-52
173:	Loop -> LoopFor
174:	Loop -> LoopForEach
175:	Loop -> LoopWhile
176:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
177:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
178:	LoopWhile -> 'while (' Expression ')' CodeBlock
179:	PLUS-53 -> PLUS-53 Operation
180:	PLUS-53 -> Operation
181:	CodeBlock -> '{' PLUS-53 '}'
182:	STAR-54 -> STAR-54 VariableRetrieval
183:	STAR-54 -> /* empty */
184:	Variable -> VARIABLE_SYMBOL STAR-54
185:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
186:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
187:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
188:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
189:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
190:	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
191:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
192:	PAREN-55 -> OP21_LIST_COMMA ListElement
193:	STAR-56 -> STAR-56 PAREN-55
194:	STAR-56 -> /* empty */
195:	PLUS-57 -> PLUS-57 WORD
196:	PLUS-57 -> WORD
197:	ListElements -> ListElement STAR-56
198:	ListElements -> OP01_QW '(' PLUS-57 ')'
199:	ListElement -> Expression
200:	ListElement -> TypeInner Expression
201:	ListElement -> KEYS_OR_VALUES HashDereferenced
202:	OPTIONAL-58 -> ListElements
203:	OPTIONAL-58 -> /* empty */
204:	ArrayReference -> '[' OPTIONAL-58 ']'
205:	ArrayDereferenced -> '@{' Variable '}'
206:	ArrayDereferenced -> '@{' ArrayReference '}'
207:	OPTIONAL-59 -> TypeInner
208:	OPTIONAL-59 -> /* empty */
209:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-59 Expression
210:	HashEntry -> HashDereferenced
211:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
212:	HashEntryTyped -> HashDereferenced
213:	PAREN-60 -> OP21_LIST_COMMA HashEntry
214:	STAR-61 -> STAR-61 PAREN-60
215:	STAR-61 -> /* empty */
216:	HashReference -> '{' HashEntry STAR-61 '}'
217:	HashDereferenced -> '%{' Variable '}'
218:	HashDereferenced -> '%{' HashReference '}'
219:	WordScoped -> WORD
220:	WordScoped -> WORD_SCOPED
221:	LoopLabel -> WORD
222:	Type -> WORD
223:	TypeMethod -> WORD '__method'
224:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
225:	FileHandle -> '{*' WORD '}'
226:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
227:	Literal -> LITERAL_STRING
228:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 2
	SHEBANG	shift, and go to state 5

	'package'	reduce using rule 20 (OPTIONAL-9)

	CompileUnit	go to state 4
	Program	go to state 7
	Critic	go to state 3
	PAREN-1	go to state 9
	OPTIONAL-9	go to state 8
	PLUS-2	go to state 1
	ModuleHeader	go to state 6

State 1:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 2

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 3
	PAREN-1	go to state 10
	OPTIONAL-9	go to state 8
	ModuleHeader	go to state 6

State 2:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 12

	PLUS-14	go to state 11

State 3:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 4:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 13

State 5:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 2

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 15
	OPTIONAL-3	go to state 14

State 6:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 17

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	STAR-10	go to state 18
	Class	go to state 20
	Module	go to state 19
	Package	go to state 16

State 7:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 8:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 21

State 9:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 10:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 11:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 22
	WORD	shift, and go to state 23

State 12:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 13:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 14:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 24

	Header	go to state 25

State 15:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 16:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 17:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	WordScoped	go to state 26

State 18:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 2

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 30
	STAR-11	go to state 29

State 19:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 20:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 21:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	WordScoped	go to state 31

State 22:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 23:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 24:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 32

State 25:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 33

State 26:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	')'	shift, and go to state 34

State 27:

	WordScoped -> WORD .	(Rule 219)

	$default	reduce using rule 219 (WordScoped)

State 28:

	WordScoped -> WORD_SCOPED .	(Rule 220)

	$default	reduce using rule 220 (WordScoped)

State 29:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 35

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 37
	Include	go to state 36

State 30:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 31:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 38

State 32:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 39

State 33:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 2

	'%{'	reduce using rule 11 (STAR-5)
	'('	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'['	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	'{'	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 11 (STAR-5)
	OP01_OPEN_CLOSE	reduce using rule 11 (STAR-5)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID_PAREN	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 40
	STAR-5	go to state 41

State 34:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	';'	shift, and go to state 42

State 35:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	WordScoped	go to state 43

State 36:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 37:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 45
	'use constant'	shift, and go to state 48

	Subroutine	go to state 46
	PLUS-13	go to state 44
	Constant	go to state 47

State 38:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 24

	Header	go to state 49

State 39:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 50

State 40:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 41:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 35

	'%{'	reduce using rule 13 (STAR-6)
	'('	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'['	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	'{'	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_PAREN	reduce using rule 13 (STAR-6)
	OP01_OPEN_CLOSE	reduce using rule 13 (STAR-6)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID_PAREN	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	STAR-6	go to state 52
	Include	go to state 51

State 42:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'use'	shift, and go to state 35

	Include	go to state 53

State 43:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 54
	'qw('	shift, and go to state 55

State 44:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 45
	LITERAL_NUMBER	shift, and go to state 57

	Subroutine	go to state 56

State 45:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 59

	Type	go to state 58

State 46:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 47:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 48:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 60

State 49:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 50:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 61

State 51:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 52:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 48

	'%{'	reduce using rule 15 (STAR-7)
	'('	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'['	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	'{'	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_PAREN	reduce using rule 15 (STAR-7)
	OP01_OPEN_CLOSE	reduce using rule 15 (STAR-7)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID_PAREN	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 63
	STAR-7	go to state 62

State 53:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 64

State 54:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 55:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 65

	PLUS-15	go to state 66

State 56:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 57:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 67

State 58:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 68

State 59:

	Type -> WORD .	(Rule 222)

	$default	reduce using rule 222 (Type)

State 60:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 69

State 61:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 62:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'if ('	shift, and go to state 79
	'my'	shift, and go to state 80
	'our'	shift, and go to state 45
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_NAMED_VOID	shift, and go to state 112
	OP01_NAMED_VOID_PAREN	shift, and go to state 87
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 88
	OP01_PRINT_VOID_PAREN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 98
	WORD_SCOPED	shift, and go to state 28

	'for my integer'	reduce using rule 160 (OPTIONAL-48)
	'foreach my'	reduce using rule 160 (OPTIONAL-48)
	'while ('	reduce using rule 160 (OPTIONAL-48)

	OPTIONAL-48	go to state 96
	VariableDeclaration	go to state 95
	Operation	go to state 103
	Variable	go to state 104
	PAREN-47	go to state 77
	Operator	go to state 76
	LoopLabel	go to state 102
	Subroutine	go to state 73
	Expression	go to state 78
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	PLUS-8	go to state 106
	ArrayReference	go to state 83
	OperatorVoid	go to state 85
	Statement	go to state 115
	ArrayDereferenced	go to state 93
	VariableModification	go to state 94
	WordScoped	go to state 111
	Conditional	go to state 114

State 63:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 64:

	STAR-23 -> STAR-23 . Critic	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 . STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'## no critic qw('	shift, and go to state 2

	'our %properties = ('	reduce using rule 60 (STAR-24)
	'use constant'	reduce using rule 60 (STAR-24)
	'use'	reduce using rule 60 (STAR-24)

	Critic	go to state 116
	STAR-24	go to state 117

State 65:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 66:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 118
	WORD	shift, and go to state 119

State 67:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 68:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 120

State 69:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 122

	TypeInner	go to state 121

State 70:

	Literal -> LITERAL_STRING .	(Rule 227)

	$default	reduce using rule 227 (Literal)

State 71:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 121)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	Expression	go to state 123
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86

State 72:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 104)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86
	Expression	go to state 125
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76
	ArrayDereferenced	go to state 93

State 73:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 74:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 112)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	Expression	go to state 126
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111

State 75:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 139)

	WORD	shift, and go to state 128

	LoopLabel	go to state 127

State 76:

	Expression -> Operator .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 77:

	OPTIONAL-48 -> PAREN-47 .	(Rule 159)

	$default	reduce using rule 159 (OPTIONAL-48)

State 78:

	Operation -> Expression . ';'	(Rule 90)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	';'	shift, and go to state 145
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 79:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-50 OPTIONAL-52	(Rule 172)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayDereferenced	go to state 93
	Expression	go to state 146
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86
	ArrayReference	go to state 83

State 80:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 188)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 189)

	WORD	shift, and go to state 59

	Type	go to state 147

State 81:

	Operator -> OP01_OPEN_CLOSE_PAREN . FileHandle OPTIONAL-38 ')' ';'	(Rule 99)

	'my'	shift, and go to state 150
	'{*'	shift, and go to state 148

	FileHandle	go to state 149

State 82:

	Expression -> 'undef' .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 83:

	Expression -> ArrayReference .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 84:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 101)

	VARIABLE_SYMBOL	shift, and go to state 99

	Variable	go to state 151

State 85:

	Statement -> OperatorVoid .	(Rule 163)

	$default	reduce using rule 163 (Statement)

State 86:

	Expression -> Literal .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 87:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-40 ')' ';'	(Rule 134)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	')'	reduce using rule 125 (OPTIONAL-40)

	HashReference	go to state 90
	HashDereferenced	go to state 89
	TypeInner	go to state 154
	Literal	go to state 86
	ListElements	go to state 153
	OPTIONAL-40	go to state 157
	ListElement	go to state 152
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	Expression	go to state 155
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111

State 88:

	OperatorVoid -> OP01_PRINT_VOID . OPTIONAL-43 ';'	(Rule 137)
	OperatorVoid -> OP01_PRINT_VOID . FileHandle OPTIONAL-44 ';'	(Rule 138)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 162
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	'{*'	shift, and go to state 148
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	';'	reduce using rule 131 (OPTIONAL-43)

	Expression	go to state 155
	Variable	go to state 124
	Operator	go to state 76
	FileHandle	go to state 160
	WordScoped	go to state 111
	ArrayDereferenced	go to state 93
	ListElement	go to state 152
	ArrayReference	go to state 83
	TypeInner	go to state 154
	OPTIONAL-43	go to state 161
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	ListElements	go to state 159

State 89:

	Expression -> HashDereferenced .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 90:

	Expression -> HashReference .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 91:

	Operator -> OP01_OPEN_CLOSE . FileHandle OPTIONAL-39 ';'	(Rule 100)

	'my'	shift, and go to state 150
	'{*'	shift, and go to state 148

	FileHandle	go to state 163

State 92:

	OperatorVoid -> OP01_PRINT_VOID_PAREN . FileHandle OPTIONAL-41 ')' ';'	(Rule 135)

	'my'	shift, and go to state 150
	'{*'	shift, and go to state 148

	FileHandle	go to state 164

State 93:

	Expression -> ArrayDereferenced .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 94:

	Statement -> VariableModification .	(Rule 165)

	$default	reduce using rule 165 (Statement)

State 95:

	Statement -> VariableDeclaration .	(Rule 164)

	$default	reduce using rule 164 (Statement)

State 96:

	Statement -> OPTIONAL-48 . Loop	(Rule 162)

	'for my integer'	shift, and go to state 171
	'foreach my'	shift, and go to state 168
	'while ('	shift, and go to state 165

	LoopForEach	go to state 170
	LoopWhile	go to state 166
	LoopFor	go to state 169
	Loop	go to state 167

State 97:

	Expression -> '(' . Expression ')'	(Rule 155)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	Expression	go to state 172
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89

State 98:

	WordScoped -> WORD .	(Rule 219)
	LoopLabel -> WORD .	(Rule 221)

	'('	reduce using rule 219 (WordScoped)
	COLON	reduce using rule 221 (LoopLabel)

State 99:

	Variable -> VARIABLE_SYMBOL . STAR-54	(Rule 184)

	$default	reduce using rule 183 (STAR-54)

	STAR-54	go to state 173

State 100:

	HashDereferenced -> '%{' . Variable '}'	(Rule 217)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 218)

	'{'	shift, and go to state 175
	VARIABLE_SYMBOL	shift, and go to state 99

	HashReference	go to state 176
	Variable	go to state 174

State 101:

	Expression -> '{' . '}'	(Rule 151)
	HashReference -> '{' . HashEntry STAR-61 '}'	(Rule 216)

	'%{'	shift, and go to state 100
	'}'	shift, and go to state 180
	WORD	shift, and go to state 179

	HashDereferenced	go to state 178
	HashEntry	go to state 177

State 102:

	PAREN-47 -> LoopLabel . COLON	(Rule 158)

	COLON	shift, and go to state 181

State 103:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 104:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 102)
	Expression -> Variable .	(Rule 146)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-46 ')'	(Rule 154)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 190)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 191)

	OP02_METHOD_THINARROW	shift, and go to state 182
	OP03_MATH_INC_DEC	shift, and go to state 184
	OP19_VARIABLE_ASSIGN	shift, and go to state 185
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 183

	';'	reduce using rule 146 (Expression)
	OP04_MATH_POW	reduce using rule 146 (Expression)
	OP06_REGEX_MATCH	reduce using rule 146 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 146 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 146 (Expression)
	OP08_STRING_CAT	reduce using rule 146 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 146 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 146 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 146 (Expression)
	OP13_BITWISE_AND	reduce using rule 146 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 146 (Expression)
	OP15_LOGICAL_AND	reduce using rule 146 (Expression)
	OP16_LOGICAL_OR	reduce using rule 146 (Expression)
	OP17_LIST_RANGE	reduce using rule 146 (Expression)
	OP18_TERNARY	reduce using rule 146 (Expression)
	OP23_LOGICAL_AND	reduce using rule 146 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 146 (Expression)

State 105:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 111)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayDereferenced	go to state 93
	Expression	go to state 186
	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	ArrayReference	go to state 83

State 106:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'if ('	shift, and go to state 79
	'my'	shift, and go to state 80
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_NAMED_VOID	shift, and go to state 112
	OP01_NAMED_VOID_PAREN	shift, and go to state 87
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 88
	OP01_PRINT_VOID_PAREN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 98
	WORD_SCOPED	shift, and go to state 28

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 160 (OPTIONAL-48)
	'foreach my'	reduce using rule 160 (OPTIONAL-48)
	'while ('	reduce using rule 160 (OPTIONAL-48)

	VariableDeclaration	go to state 95
	OPTIONAL-48	go to state 96
	Expression	go to state 78
	PAREN-47	go to state 77
	Operation	go to state 187
	Variable	go to state 104
	Operator	go to state 76
	LoopLabel	go to state 102
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86
	OperatorVoid	go to state 85
	ArrayReference	go to state 83
	VariableModification	go to state 94
	Statement	go to state 115
	ArrayDereferenced	go to state 93
	Conditional	go to state 114
	WordScoped	go to state 111

State 107:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 205)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 206)

	'['	shift, and go to state 110
	VARIABLE_SYMBOL	shift, and go to state 99

	ArrayReference	go to state 189
	Variable	go to state 188

State 108:

	Operator -> OP01_NAMED . '(' OPTIONAL-37 ')'	(Rule 98)

	'('	shift, and go to state 190

State 109:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 105)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	Expression	go to state 191
	ArrayDereferenced	go to state 93

State 110:

	ArrayReference -> '[' . OPTIONAL-58 ']'	(Rule 204)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	']'	reduce using rule 203 (OPTIONAL-58)

	ArrayDereferenced	go to state 93
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111
	Expression	go to state 155
	ListElements	go to state 193
	HashDereferenced	go to state 89
	TypeInner	go to state 154
	HashReference	go to state 90
	Literal	go to state 86
	ArrayReference	go to state 83
	OPTIONAL-58	go to state 192
	ListElement	go to state 152

State 111:

	Expression -> WordScoped . '(' OPTIONAL-45 ')'	(Rule 153)

	'('	shift, and go to state 194

State 112:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-42 ';'	(Rule 136)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	';'	reduce using rule 129 (OPTIONAL-42)

	ListElements	go to state 195
	HashDereferenced	go to state 89
	HashReference	go to state 90
	TypeInner	go to state 154
	Literal	go to state 86
	ArrayReference	go to state 83
	ListElement	go to state 152
	ArrayDereferenced	go to state 93
	OPTIONAL-42	go to state 196
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111
	Expression	go to state 155

State 113:

	Literal -> LITERAL_NUMBER .	(Rule 228)

	$default	reduce using rule 228 (Literal)

State 114:

	Statement -> Conditional .	(Rule 161)

	$default	reduce using rule 161 (Statement)

State 115:

	Operation -> Statement .	(Rule 91)

	$default	reduce using rule 91 (Operation)

State 116:

	STAR-23 -> STAR-23 Critic .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 117:

	STAR-24 -> STAR-24 . Include	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 . STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'use'	shift, and go to state 35

	'our %properties = ('	reduce using rule 62 (STAR-25)
	'use constant'	reduce using rule 62 (STAR-25)

	STAR-25	go to state 198
	Include	go to state 197

State 118:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 199

State 119:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 120:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 201

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'('	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'['	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	'{'	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 200
	OPTIONAL-16	go to state 202

State 121:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70

	Literal	go to state 203

State 122:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 224)

	WORD	shift, and go to state 59

	Type	go to state 204

State 123:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 121)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135

	')'	reduce using rule 121 (Operator)
	'..'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 124:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 102)
	Expression -> Variable .	(Rule 146)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-46 ')'	(Rule 154)

	OP02_METHOD_THINARROW	shift, and go to state 182
	OP03_MATH_INC_DEC	shift, and go to state 184

	')'	reduce using rule 146 (Expression)
	'..'	reduce using rule 146 (Expression)
	';'	reduce using rule 146 (Expression)
	']'	reduce using rule 146 (Expression)
	'}'	reduce using rule 146 (Expression)
	OP04_MATH_POW	reduce using rule 146 (Expression)
	OP06_REGEX_MATCH	reduce using rule 146 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 146 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 146 (Expression)
	OP08_STRING_CAT	reduce using rule 146 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 146 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 146 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 146 (Expression)
	OP13_BITWISE_AND	reduce using rule 146 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 146 (Expression)
	OP15_LOGICAL_AND	reduce using rule 146 (Expression)
	OP16_LOGICAL_OR	reduce using rule 146 (Expression)
	OP17_LIST_RANGE	reduce using rule 146 (Expression)
	OP18_TERNARY	reduce using rule 146 (Expression)
	OP21_LIST_COMMA	reduce using rule 146 (Expression)
	OP23_LOGICAL_AND	reduce using rule 146 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 146 (Expression)

State 125:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 104)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP06_REGEX_MATCH	reduce using rule 104 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 104 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 104 (Operator)
	OP08_STRING_CAT	reduce using rule 104 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 104 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 104 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 126:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 127:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 139)

	';'	shift, and go to state 205

State 128:

	LoopLabel -> WORD .	(Rule 221)

	$default	reduce using rule 221 (LoopLabel)

State 129:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 114)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	Expression	go to state 206
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	Literal	go to state 86
	HashDereferenced	go to state 89
	HashReference	go to state 90

State 130:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 113)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayDereferenced	go to state 93
	Expression	go to state 207
	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	Literal	go to state 86
	HashDereferenced	go to state 89
	HashReference	go to state 90
	ArrayReference	go to state 83

State 131:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 116)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	Expression	go to state 208
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76

State 132:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 107)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	Expression	go to state 209
	ArrayDereferenced	go to state 93

State 133:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 117)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	Expression	go to state 210
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	Literal	go to state 86
	HashDereferenced	go to state 89
	HashReference	go to state 90

State 134:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 118)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86
	Expression	go to state 211
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111
	ArrayDereferenced	go to state 93

State 135:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 120)

	VARIABLE_SYMBOL	shift, and go to state 99

	Variable	go to state 212

State 136:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 110)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayDereferenced	go to state 93
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111
	Expression	go to state 213
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	ArrayReference	go to state 83

State 137:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 108)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	Expression	go to state 214
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89

State 138:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 106)

	'/'	shift, and go to state 215

State 139:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 109)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Expression	go to state 216
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	ArrayDereferenced	go to state 93

State 140:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 115)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayDereferenced	go to state 93
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76
	Expression	go to state 217
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86
	ArrayReference	go to state 83

State 141:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 103)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	Expression	go to state 218
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89

State 142:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 119)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111
	Expression	go to state 219
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86

State 143:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 122)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111
	Expression	go to state 220
	ArrayDereferenced	go to state 93

State 144:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 123)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	Literal	go to state 86
	HashDereferenced	go to state 89
	HashReference	go to state 90
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	Expression	go to state 221
	ArrayDereferenced	go to state 93

State 145:

	Operation -> Expression ';' .	(Rule 90)

	$default	reduce using rule 90 (Operation)

State 146:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-50 OPTIONAL-52	(Rule 172)

	')'	shift, and go to state 222
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 147:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 188)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 189)

	VARIABLE_SYMBOL	shift, and go to state 223

State 148:

	FileHandle -> '{*' . WORD '}'	(Rule 225)

	WORD	shift, and go to state 224

State 149:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle . OPTIONAL-38 ')' ';'	(Rule 99)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	')'	reduce using rule 95 (OPTIONAL-38)

	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	Expression	go to state 155
	OPTIONAL-38	go to state 225
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	ListElement	go to state 152
	ListElements	go to state 226
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	TypeInner	go to state 154

State 150:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 226)

	'filehandle_ref'	shift, and go to state 227

State 151:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 152:

	ListElements -> ListElement . STAR-56	(Rule 197)

	$default	reduce using rule 194 (STAR-56)

	STAR-56	go to state 228

State 153:

	OPTIONAL-40 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-40)

State 154:

	ListElement -> TypeInner . Expression	(Rule 200)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	Expression	go to state 229
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	Literal	go to state 86
	HashDereferenced	go to state 89
	HashReference	go to state 90

State 155:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	ListElement -> Expression .	(Rule 199)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

	')'	reduce using rule 199 (ListElement)
	';'	reduce using rule 199 (ListElement)
	']'	reduce using rule 199 (ListElement)
	OP21_LIST_COMMA	reduce using rule 199 (ListElement)

State 156:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 201)

	'%{'	shift, and go to state 100

	HashDereferenced	go to state 230

State 157:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 . ')' ';'	(Rule 134)

	')'	shift, and go to state 231

State 158:

	ListElements -> OP01_QW . '(' PLUS-57 ')'	(Rule 198)

	'('	shift, and go to state 232

State 159:

	OPTIONAL-43 -> ListElements .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-43)

State 160:

	OperatorVoid -> OP01_PRINT_VOID FileHandle . OPTIONAL-44 ';'	(Rule 138)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	';'	reduce using rule 133 (OPTIONAL-44)

	TypeInner	go to state 154
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86
	ListElements	go to state 234
	ListElement	go to state 152
	ArrayReference	go to state 83
	OPTIONAL-44	go to state 233
	ArrayDereferenced	go to state 93
	Expression	go to state 155
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76

State 161:

	OperatorVoid -> OP01_PRINT_VOID OPTIONAL-43 . ';'	(Rule 137)

	';'	shift, and go to state 235

State 162:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 224)
	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 226)

	'filehandle_ref'	shift, and go to state 227
	WORD	shift, and go to state 59

	Type	go to state 204

State 163:

	Operator -> OP01_OPEN_CLOSE FileHandle . OPTIONAL-39 ';'	(Rule 100)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	';'	reduce using rule 97 (OPTIONAL-39)

	ArrayDereferenced	go to state 93
	OPTIONAL-39	go to state 237
	Expression	go to state 155
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	Literal	go to state 86
	TypeInner	go to state 154
	HashDereferenced	go to state 89
	HashReference	go to state 90
	ListElements	go to state 236
	ListElement	go to state 152
	ArrayReference	go to state 83

State 164:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle . OPTIONAL-41 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	')'	reduce using rule 127 (OPTIONAL-41)

	HashReference	go to state 90
	TypeInner	go to state 154
	HashDereferenced	go to state 89
	Literal	go to state 86
	ListElements	go to state 239
	OPTIONAL-41	go to state 238
	ListElement	go to state 152
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	Expression	go to state 155
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76

State 165:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 178)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	Expression	go to state 240
	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124

State 166:

	Loop -> LoopWhile .	(Rule 175)

	$default	reduce using rule 175 (Loop)

State 167:

	Statement -> OPTIONAL-48 Loop .	(Rule 162)

	$default	reduce using rule 162 (Statement)

State 168:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 177)

	WORD	shift, and go to state 59

	Type	go to state 241

State 169:

	Loop -> LoopFor .	(Rule 173)

	$default	reduce using rule 173 (Loop)

State 170:

	Loop -> LoopForEach .	(Rule 174)

	$default	reduce using rule 174 (Loop)

State 171:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 176)

	VARIABLE_SYMBOL	shift, and go to state 242

State 172:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	Expression -> '(' Expression . ')'	(Rule 155)

	')'	shift, and go to state 243
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 173:

	STAR-54 -> STAR-54 . VariableRetrieval	(Rule 182)
	Variable -> VARIABLE_SYMBOL STAR-54 .	(Rule 184)

	OP02_ARRAY_THINARROW	shift, and go to state 245
	OP02_HASH_THINARROW	shift, and go to state 244

	')'	reduce using rule 184 (Variable)
	'..'	reduce using rule 184 (Variable)
	';'	reduce using rule 184 (Variable)
	']'	reduce using rule 184 (Variable)
	'}'	reduce using rule 184 (Variable)
	COLON	reduce using rule 184 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 184 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 184 (Variable)
	OP04_MATH_POW	reduce using rule 184 (Variable)
	OP06_REGEX_MATCH	reduce using rule 184 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 184 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 184 (Variable)
	OP08_STRING_CAT	reduce using rule 184 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 184 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 184 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 184 (Variable)
	OP13_BITWISE_AND	reduce using rule 184 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 184 (Variable)
	OP15_LOGICAL_AND	reduce using rule 184 (Variable)
	OP16_LOGICAL_OR	reduce using rule 184 (Variable)
	OP17_LIST_RANGE	reduce using rule 184 (Variable)
	OP18_TERNARY	reduce using rule 184 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 184 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 184 (Variable)
	OP21_LIST_COMMA	reduce using rule 184 (Variable)
	OP23_LOGICAL_AND	reduce using rule 184 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 184 (Variable)

	VariableRetrieval	go to state 246

State 174:

	HashDereferenced -> '%{' Variable . '}'	(Rule 217)

	'}'	shift, and go to state 247

State 175:

	HashReference -> '{' . HashEntry STAR-61 '}'	(Rule 216)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 179

	HashEntry	go to state 177
	HashDereferenced	go to state 178

State 176:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 218)

	'}'	shift, and go to state 248

State 177:

	HashReference -> '{' HashEntry . STAR-61 '}'	(Rule 216)

	$default	reduce using rule 215 (STAR-61)

	STAR-61	go to state 249

State 178:

	HashEntry -> HashDereferenced .	(Rule 210)

	$default	reduce using rule 210 (HashEntry)

State 179:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-59 Expression	(Rule 209)

	OP20_HASH_FATARROW	shift, and go to state 250

State 180:

	Expression -> '{' '}' .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 181:

	PAREN-47 -> LoopLabel COLON .	(Rule 158)

	$default	reduce using rule 158 (PAREN-47)

State 182:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-46 ')'	(Rule 154)

	WORD	shift, and go to state 251

State 183:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 191)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	Literal	go to state 86
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Expression	go to state 252
	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	ArrayDereferenced	go to state 93

State 184:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 185:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 190)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'<STDIN>'	shift, and go to state 254
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayDereferenced	go to state 93
	Expression	go to state 255
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	ArrayReference	go to state 83
	ExpressionOrStdin	go to state 253

State 186:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 111)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 187:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 188:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 205)

	'}'	shift, and go to state 256

State 189:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 206)

	'}'	shift, and go to state 257

State 190:

	Operator -> OP01_NAMED '(' . OPTIONAL-37 ')'	(Rule 98)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	')'	reduce using rule 93 (OPTIONAL-37)

	ArrayReference	go to state 83
	ListElement	go to state 152
	ListElements	go to state 259
	Literal	go to state 86
	TypeInner	go to state 154
	HashReference	go to state 90
	HashDereferenced	go to state 89
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	Expression	go to state 155
	ArrayDereferenced	go to state 93
	OPTIONAL-37	go to state 258

State 191:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	')'	shift, and go to state 260
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 192:

	ArrayReference -> '[' OPTIONAL-58 . ']'	(Rule 204)

	']'	shift, and go to state 261

State 193:

	OPTIONAL-58 -> ListElements .	(Rule 202)

	$default	reduce using rule 202 (OPTIONAL-58)

State 194:

	Expression -> WordScoped '(' . OPTIONAL-45 ')'	(Rule 153)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	')'	reduce using rule 141 (OPTIONAL-45)

	HashReference	go to state 90
	HashDereferenced	go to state 89
	TypeInner	go to state 154
	Literal	go to state 86
	OPTIONAL-45	go to state 262
	ListElements	go to state 263
	ListElement	go to state 152
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	Expression	go to state 155
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76

State 195:

	OPTIONAL-42 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-42)

State 196:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 . ';'	(Rule 136)

	';'	shift, and go to state 264

State 197:

	STAR-24 -> STAR-24 Include .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 198:

	STAR-25 -> STAR-25 . Constant	(Rule 61)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 . Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'our %properties = ('	shift, and go to state 266
	'use constant'	shift, and go to state 48

	Constant	go to state 265
	Properties	go to state 267

State 199:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 200:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 201:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	WORD	shift, and go to state 59

	Type	go to state 268

State 202:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'if ('	shift, and go to state 79
	'my'	shift, and go to state 80
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_NAMED_VOID	shift, and go to state 112
	OP01_NAMED_VOID_PAREN	shift, and go to state 87
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 88
	OP01_PRINT_VOID_PAREN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 98
	WORD_SCOPED	shift, and go to state 28

	'for my integer'	reduce using rule 160 (OPTIONAL-48)
	'foreach my'	reduce using rule 160 (OPTIONAL-48)
	'while ('	reduce using rule 160 (OPTIONAL-48)

	Conditional	go to state 114
	WordScoped	go to state 111
	VariableModification	go to state 94
	ArrayDereferenced	go to state 93
	Statement	go to state 115
	OperatorVoid	go to state 85
	ArrayReference	go to state 83
	Literal	go to state 86
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Expression	go to state 78
	Operator	go to state 76
	LoopLabel	go to state 102
	Operation	go to state 269
	Variable	go to state 104
	PAREN-47	go to state 77
	VariableDeclaration	go to state 95
	OPTIONAL-48	go to state 96
	PLUS-17	go to state 270

State 203:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 271

State 204:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 224)

	'$TYPED_'	shift, and go to state 272

State 205:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 139)

	$default	reduce using rule 139 (OperatorVoid)

State 206:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 207:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 208:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 209:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 107 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 107 (Operator)
	OP08_STRING_CAT	reduce using rule 107 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 107 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 210:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 211:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 212:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 120)

	COLON	shift, and go to state 273

State 213:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 214:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 108 (Operator)
	OP08_STRING_CAT	reduce using rule 108 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 108 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 108 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 108 (Operator)
	OP13_BITWISE_AND	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 215:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 106)

	OP06_REGEX_PATTERN	shift, and go to state 274

State 216:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP08_STRING_CAT	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 217:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 218:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP06_REGEX_MATCH	reduce using rule 103 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 103 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 103 (Operator)
	OP08_STRING_CAT	reduce using rule 103 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 103 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 103 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 219:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 220:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135

	')'	reduce using rule 122 (Operator)
	'..'	reduce using rule 122 (Operator)
	';'	reduce using rule 122 (Operator)
	']'	reduce using rule 122 (Operator)
	'}'	reduce using rule 122 (Operator)
	OP21_LIST_COMMA	reduce using rule 122 (Operator)
	OP23_LOGICAL_AND	reduce using rule 122 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 122 (Operator)

State 221:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143

	')'	reduce using rule 123 (Operator)
	'..'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 222:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-50 OPTIONAL-52	(Rule 172)

	'{'	shift, and go to state 275

	CodeBlock	go to state 276

State 223:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 188)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 189)

	';'	shift, and go to state 277
	OP19_VARIABLE_ASSIGN	shift, and go to state 278

State 224:

	FileHandle -> '{*' WORD . '}'	(Rule 225)

	'}'	shift, and go to state 279

State 225:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-38 . ')' ';'	(Rule 99)

	')'	shift, and go to state 280

State 226:

	OPTIONAL-38 -> ListElements .	(Rule 94)

	$default	reduce using rule 94 (OPTIONAL-38)

State 227:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 226)

	VARIABLE_SYMBOL	shift, and go to state 281

State 228:

	STAR-56 -> STAR-56 . PAREN-55	(Rule 193)
	ListElements -> ListElement STAR-56 .	(Rule 197)

	OP21_LIST_COMMA	shift, and go to state 283

	')'	reduce using rule 197 (ListElements)
	';'	reduce using rule 197 (ListElements)
	']'	reduce using rule 197 (ListElements)

	PAREN-55	go to state 282

State 229:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	ListElement -> TypeInner Expression .	(Rule 200)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

	')'	reduce using rule 200 (ListElement)
	';'	reduce using rule 200 (ListElement)
	']'	reduce using rule 200 (ListElement)
	OP21_LIST_COMMA	reduce using rule 200 (ListElement)

State 230:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 201)

	$default	reduce using rule 201 (ListElement)

State 231:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' . ';'	(Rule 134)

	';'	shift, and go to state 284

State 232:

	ListElements -> OP01_QW '(' . PLUS-57 ')'	(Rule 198)

	WORD	shift, and go to state 286

	PLUS-57	go to state 285

State 233:

	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-44 . ';'	(Rule 138)

	';'	shift, and go to state 287

State 234:

	OPTIONAL-44 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-44)

State 235:

	OperatorVoid -> OP01_PRINT_VOID OPTIONAL-43 ';' .	(Rule 137)

	$default	reduce using rule 137 (OperatorVoid)

State 236:

	OPTIONAL-39 -> ListElements .	(Rule 96)

	$default	reduce using rule 96 (OPTIONAL-39)

State 237:

	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-39 . ';'	(Rule 100)

	';'	shift, and go to state 288

State 238:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-41 . ')' ';'	(Rule 135)

	')'	shift, and go to state 289

State 239:

	OPTIONAL-41 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-41)

State 240:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 178)

	')'	shift, and go to state 290
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 241:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 177)

	VARIABLE_SYMBOL	shift, and go to state 291

State 242:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 176)

	'('	shift, and go to state 292

State 243:

	Expression -> '(' Expression ')' .	(Rule 155)

	$default	reduce using rule 155 (Expression)

State 244:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 186)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 187)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 293
	WORD_SCOPED	shift, and go to state 28

	Literal	go to state 86
	HashDereferenced	go to state 89
	HashReference	go to state 90
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	Expression	go to state 294

State 245:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 185)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayDereferenced	go to state 93
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	Expression	go to state 295
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	ArrayReference	go to state 83

State 246:

	STAR-54 -> STAR-54 VariableRetrieval .	(Rule 182)

	$default	reduce using rule 182 (STAR-54)

State 247:

	HashDereferenced -> '%{' Variable '}' .	(Rule 217)

	$default	reduce using rule 217 (HashDereferenced)

State 248:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 218)

	$default	reduce using rule 218 (HashDereferenced)

State 249:

	STAR-61 -> STAR-61 . PAREN-60	(Rule 214)
	HashReference -> '{' HashEntry STAR-61 . '}'	(Rule 216)

	'}'	shift, and go to state 297
	OP21_LIST_COMMA	shift, and go to state 298

	PAREN-60	go to state 296

State 250:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-59 Expression	(Rule 209)

	'my'	shift, and go to state 122

	'%{'	reduce using rule 208 (OPTIONAL-59)
	'('	reduce using rule 208 (OPTIONAL-59)
	'@{'	reduce using rule 208 (OPTIONAL-59)
	'['	reduce using rule 208 (OPTIONAL-59)
	'undef'	reduce using rule 208 (OPTIONAL-59)
	'{'	reduce using rule 208 (OPTIONAL-59)
	LITERAL_NUMBER	reduce using rule 208 (OPTIONAL-59)
	LITERAL_STRING	reduce using rule 208 (OPTIONAL-59)
	OP01_NAMED	reduce using rule 208 (OPTIONAL-59)
	OP01_OPEN_CLOSE	reduce using rule 208 (OPTIONAL-59)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 208 (OPTIONAL-59)
	OP03_MATH_INC_DEC	reduce using rule 208 (OPTIONAL-59)
	OP05_LOGICAL_NEG	reduce using rule 208 (OPTIONAL-59)
	OP05_MATH_NEG	reduce using rule 208 (OPTIONAL-59)
	OP10_NAMED_UNARY	reduce using rule 208 (OPTIONAL-59)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 208 (OPTIONAL-59)
	OP22_LOGICAL_NOT	reduce using rule 208 (OPTIONAL-59)
	VARIABLE_SYMBOL	reduce using rule 208 (OPTIONAL-59)
	WORD	reduce using rule 208 (OPTIONAL-59)
	WORD_SCOPED	reduce using rule 208 (OPTIONAL-59)

	OPTIONAL-59	go to state 299
	TypeInner	go to state 300

State 251:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-46 ')'	(Rule 154)

	'('	shift, and go to state 301

State 252:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 191)

	';'	shift, and go to state 302
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 253:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 190)

	';'	shift, and go to state 303

State 254:

	ExpressionOrStdin -> '<STDIN>' .	(Rule 157)

	$default	reduce using rule 157 (ExpressionOrStdin)

State 255:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	ExpressionOrStdin -> Expression .	(Rule 156)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

	';'	reduce using rule 156 (ExpressionOrStdin)

State 256:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 205)

	$default	reduce using rule 205 (ArrayDereferenced)

State 257:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 206)

	$default	reduce using rule 206 (ArrayDereferenced)

State 258:

	Operator -> OP01_NAMED '(' OPTIONAL-37 . ')'	(Rule 98)

	')'	shift, and go to state 304

State 259:

	OPTIONAL-37 -> ListElements .	(Rule 92)

	$default	reduce using rule 92 (OPTIONAL-37)

State 260:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 105)

	$default	reduce using rule 105 (Operator)

State 261:

	ArrayReference -> '[' OPTIONAL-58 ']' .	(Rule 204)

	$default	reduce using rule 204 (ArrayReference)

State 262:

	Expression -> WordScoped '(' OPTIONAL-45 . ')'	(Rule 153)

	')'	shift, and go to state 305

State 263:

	OPTIONAL-45 -> ListElements .	(Rule 140)

	$default	reduce using rule 140 (OPTIONAL-45)

State 264:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 265:

	STAR-25 -> STAR-25 Constant .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 266:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-29 ')' ';'	(Rule 71)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 72)

	'## no critic qw('	shift, and go to state 2
	')'	shift, and go to state 306

	Critic	go to state 307

State 267:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties . OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'our %properties_class = ('	shift, and go to state 310

	'our'	reduce using rule 64 (OPTIONAL-26)
	LITERAL_NUMBER	reduce using rule 64 (OPTIONAL-26)

	PropertiesClass	go to state 308
	OPTIONAL-26	go to state 309

State 268:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	VARIABLE_SYMBOL	shift, and go to state 311

State 269:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 270:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'if ('	shift, and go to state 79
	'my'	shift, and go to state 80
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	'}'	shift, and go to state 313
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_NAMED_VOID	shift, and go to state 112
	OP01_NAMED_VOID_PAREN	shift, and go to state 87
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 88
	OP01_PRINT_VOID_PAREN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 98
	WORD_SCOPED	shift, and go to state 28

	'for my integer'	reduce using rule 160 (OPTIONAL-48)
	'foreach my'	reduce using rule 160 (OPTIONAL-48)
	'while ('	reduce using rule 160 (OPTIONAL-48)

	ArrayDereferenced	go to state 93
	Statement	go to state 115
	VariableModification	go to state 94
	WordScoped	go to state 111
	Conditional	go to state 114
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	ArrayReference	go to state 83
	OperatorVoid	go to state 85
	LoopLabel	go to state 102
	Operator	go to state 76
	Operation	go to state 312
	Variable	go to state 104
	PAREN-47	go to state 77
	Expression	go to state 78
	VariableDeclaration	go to state 95
	OPTIONAL-48	go to state 96

State 271:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 272:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 224)

	WORD	shift, and go to state 314

State 273:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 120)

	VARIABLE_SYMBOL	shift, and go to state 99

	Variable	go to state 315

State 274:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 106)

	'/'	shift, and go to state 316

State 275:

	CodeBlock -> '{' . PLUS-53 '}'	(Rule 181)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'if ('	shift, and go to state 79
	'my'	shift, and go to state 80
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_NAMED_VOID	shift, and go to state 112
	OP01_NAMED_VOID_PAREN	shift, and go to state 87
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 88
	OP01_PRINT_VOID_PAREN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 98
	WORD_SCOPED	shift, and go to state 28

	'for my integer'	reduce using rule 160 (OPTIONAL-48)
	'foreach my'	reduce using rule 160 (OPTIONAL-48)
	'while ('	reduce using rule 160 (OPTIONAL-48)

	WordScoped	go to state 111
	Conditional	go to state 114
	Statement	go to state 115
	ArrayDereferenced	go to state 93
	VariableModification	go to state 94
	ArrayReference	go to state 83
	OperatorVoid	go to state 85
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86
	Operation	go to state 317
	Variable	go to state 104
	PAREN-47	go to state 77
	Operator	go to state 76
	LoopLabel	go to state 102
	Expression	go to state 78
	PLUS-53	go to state 318
	OPTIONAL-48	go to state 96
	VariableDeclaration	go to state 95

State 276:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-50 OPTIONAL-52	(Rule 172)

	$default	reduce using rule 168 (STAR-50)

	STAR-50	go to state 319

State 277:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 188)

	$default	reduce using rule 188 (VariableDeclaration)

State 278:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 189)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'<STDIN>'	shift, and go to state 254
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ExpressionOrStdin	go to state 320
	ArrayReference	go to state 83
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	Expression	go to state 255
	ArrayDereferenced	go to state 93

State 279:

	FileHandle -> '{*' WORD '}' .	(Rule 225)

	$default	reduce using rule 225 (FileHandle)

State 280:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-38 ')' . ';'	(Rule 99)

	';'	shift, and go to state 321

State 281:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 226)

	$default	reduce using rule 226 (FileHandle)

State 282:

	STAR-56 -> STAR-56 PAREN-55 .	(Rule 193)

	$default	reduce using rule 193 (STAR-56)

State 283:

	PAREN-55 -> OP21_LIST_COMMA . ListElement	(Rule 192)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	ListElement	go to state 322
	TypeInner	go to state 154
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76
	Expression	go to state 155
	ArrayDereferenced	go to state 93

State 284:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 285:

	PLUS-57 -> PLUS-57 . WORD	(Rule 195)
	ListElements -> OP01_QW '(' PLUS-57 . ')'	(Rule 198)

	')'	shift, and go to state 323
	WORD	shift, and go to state 324

State 286:

	PLUS-57 -> WORD .	(Rule 196)

	$default	reduce using rule 196 (PLUS-57)

State 287:

	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-44 ';' .	(Rule 138)

	$default	reduce using rule 138 (OperatorVoid)

State 288:

	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-39 ';' .	(Rule 100)

	$default	reduce using rule 100 (Operator)

State 289:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-41 ')' . ';'	(Rule 135)

	';'	shift, and go to state 325

State 290:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 178)

	'{'	shift, and go to state 275

	CodeBlock	go to state 326

State 291:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 177)

	'('	shift, and go to state 327

State 292:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 176)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	Expression	go to state 328
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	ArrayDereferenced	go to state 93
	ArrayReference	go to state 83
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89

State 293:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 187)
	WordScoped -> WORD .	(Rule 219)

	'}'	shift, and go to state 329

	'('	reduce using rule 219 (WordScoped)

State 294:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 186)

	'}'	shift, and go to state 330
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 295:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 185)

	']'	shift, and go to state 331
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 296:

	STAR-61 -> STAR-61 PAREN-60 .	(Rule 214)

	$default	reduce using rule 214 (STAR-61)

State 297:

	HashReference -> '{' HashEntry STAR-61 '}' .	(Rule 216)

	$default	reduce using rule 216 (HashReference)

State 298:

	PAREN-60 -> OP21_LIST_COMMA . HashEntry	(Rule 213)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 179

	HashEntry	go to state 332
	HashDereferenced	go to state 178

State 299:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-59 . Expression	(Rule 209)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76
	Expression	go to state 333
	ArrayDereferenced	go to state 93

State 300:

	OPTIONAL-59 -> TypeInner .	(Rule 207)

	$default	reduce using rule 207 (OPTIONAL-59)

State 301:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-46 ')'	(Rule 154)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	')'	reduce using rule 143 (OPTIONAL-46)

	HashDereferenced	go to state 89
	HashReference	go to state 90
	TypeInner	go to state 154
	Literal	go to state 86
	OPTIONAL-46	go to state 335
	ListElements	go to state 334
	ListElement	go to state 152
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	Expression	go to state 155
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111

State 302:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 191)

	$default	reduce using rule 191 (VariableModification)

State 303:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 190)

	$default	reduce using rule 190 (VariableModification)

State 304:

	Operator -> OP01_NAMED '(' OPTIONAL-37 ')' .	(Rule 98)

	$default	reduce using rule 98 (Operator)

State 305:

	Expression -> WordScoped '(' OPTIONAL-45 ')' .	(Rule 153)

	$default	reduce using rule 153 (Expression)

State 306:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 72)

	';'	shift, and go to state 336

State 307:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-29 ')' ';'	(Rule 71)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 338

	HashDereferenced	go to state 339
	HashEntryTyped	go to state 337

State 308:

	OPTIONAL-26 -> PropertiesClass .	(Rule 63)

	$default	reduce using rule 63 (OPTIONAL-26)

State 309:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 . STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	$default	reduce using rule 66 (STAR-27)

	STAR-27	go to state 340

State 310:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-31 ')' ';'	(Rule 76)

	'## no critic qw('	shift, and go to state 2

	Critic	go to state 341

State 311:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 342

State 312:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 313:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 343

State 314:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 224)

	OP19_VARIABLE_ASSIGN	shift, and go to state 344

State 315:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 120)

	$default	reduce using rule 120 (Operator)

State 316:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 106)

	$default	reduce using rule 106 (Operator)

State 317:

	PLUS-53 -> Operation .	(Rule 180)

	$default	reduce using rule 180 (PLUS-53)

State 318:

	PLUS-53 -> PLUS-53 . Operation	(Rule 179)
	CodeBlock -> '{' PLUS-53 . '}'	(Rule 181)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'if ('	shift, and go to state 79
	'my'	shift, and go to state 80
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	'}'	shift, and go to state 345
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_NAMED_VOID	shift, and go to state 112
	OP01_NAMED_VOID_PAREN	shift, and go to state 87
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 88
	OP01_PRINT_VOID_PAREN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 98
	WORD_SCOPED	shift, and go to state 28

	'for my integer'	reduce using rule 160 (OPTIONAL-48)
	'foreach my'	reduce using rule 160 (OPTIONAL-48)
	'while ('	reduce using rule 160 (OPTIONAL-48)

	ArrayReference	go to state 83
	OperatorVoid	go to state 85
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	WordScoped	go to state 111
	Conditional	go to state 114
	ArrayDereferenced	go to state 93
	Statement	go to state 115
	VariableModification	go to state 94
	VariableDeclaration	go to state 95
	OPTIONAL-48	go to state 96
	Operator	go to state 76
	LoopLabel	go to state 102
	PAREN-47	go to state 77
	Variable	go to state 104
	Operation	go to state 346
	Expression	go to state 78

State 319:

	STAR-50 -> STAR-50 . PAREN-49	(Rule 167)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-50 . OPTIONAL-52	(Rule 172)

	'else'	shift, and go to state 349
	'elsif ('	shift, and go to state 350

	$end	reduce using rule 171 (OPTIONAL-52)
	'%{'	reduce using rule 171 (OPTIONAL-52)
	'('	reduce using rule 171 (OPTIONAL-52)
	'@{'	reduce using rule 171 (OPTIONAL-52)
	'['	reduce using rule 171 (OPTIONAL-52)
	'for my integer'	reduce using rule 171 (OPTIONAL-52)
	'foreach my'	reduce using rule 171 (OPTIONAL-52)
	'if ('	reduce using rule 171 (OPTIONAL-52)
	'my'	reduce using rule 171 (OPTIONAL-52)
	'undef'	reduce using rule 171 (OPTIONAL-52)
	'while ('	reduce using rule 171 (OPTIONAL-52)
	'{'	reduce using rule 171 (OPTIONAL-52)
	'}'	reduce using rule 171 (OPTIONAL-52)
	LITERAL_NUMBER	reduce using rule 171 (OPTIONAL-52)
	LITERAL_STRING	reduce using rule 171 (OPTIONAL-52)
	OP01_NAMED	reduce using rule 171 (OPTIONAL-52)
	OP01_NAMED_VOID	reduce using rule 171 (OPTIONAL-52)
	OP01_NAMED_VOID_PAREN	reduce using rule 171 (OPTIONAL-52)
	OP01_OPEN_CLOSE	reduce using rule 171 (OPTIONAL-52)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 171 (OPTIONAL-52)
	OP01_PRINT_VOID	reduce using rule 171 (OPTIONAL-52)
	OP01_PRINT_VOID_PAREN	reduce using rule 171 (OPTIONAL-52)
	OP03_MATH_INC_DEC	reduce using rule 171 (OPTIONAL-52)
	OP05_LOGICAL_NEG	reduce using rule 171 (OPTIONAL-52)
	OP05_MATH_NEG	reduce using rule 171 (OPTIONAL-52)
	OP10_NAMED_UNARY	reduce using rule 171 (OPTIONAL-52)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 171 (OPTIONAL-52)
	OP19_LOOP_CONTROL	reduce using rule 171 (OPTIONAL-52)
	OP22_LOGICAL_NOT	reduce using rule 171 (OPTIONAL-52)
	VARIABLE_SYMBOL	reduce using rule 171 (OPTIONAL-52)
	WORD	reduce using rule 171 (OPTIONAL-52)
	WORD_SCOPED	reduce using rule 171 (OPTIONAL-52)

	PAREN-49	go to state 351
	PAREN-51	go to state 347
	OPTIONAL-52	go to state 348

State 320:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 189)

	';'	shift, and go to state 352

State 321:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-38 ')' ';' .	(Rule 99)

	$default	reduce using rule 99 (Operator)

State 322:

	PAREN-55 -> OP21_LIST_COMMA ListElement .	(Rule 192)

	$default	reduce using rule 192 (PAREN-55)

State 323:

	ListElements -> OP01_QW '(' PLUS-57 ')' .	(Rule 198)

	$default	reduce using rule 198 (ListElements)

State 324:

	PLUS-57 -> PLUS-57 WORD .	(Rule 195)

	$default	reduce using rule 195 (PLUS-57)

State 325:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-41 ')' ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 326:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 178)

	$default	reduce using rule 178 (LoopWhile)

State 327:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 177)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'my'	shift, and go to state 122
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	KEYS_OR_VALUES	shift, and go to state 156
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 158
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	HashReference	go to state 90
	TypeInner	go to state 154
	HashDereferenced	go to state 89
	Literal	go to state 86
	ListElements	go to state 353
	ListElement	go to state 152
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	Expression	go to state 155
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111

State 328:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 176)

	'..'	shift, and go to state 354
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 329:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 187)

	$default	reduce using rule 187 (VariableRetrieval)

State 330:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 186)

	$default	reduce using rule 186 (VariableRetrieval)

State 331:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 185)

	$default	reduce using rule 185 (VariableRetrieval)

State 332:

	PAREN-60 -> OP21_LIST_COMMA HashEntry .	(Rule 213)

	$default	reduce using rule 213 (PAREN-60)

State 333:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-59 Expression .	(Rule 209)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

	'}'	reduce using rule 209 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 209 (HashEntry)

State 334:

	OPTIONAL-46 -> ListElements .	(Rule 142)

	$default	reduce using rule 142 (OPTIONAL-46)

State 335:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-46 . ')'	(Rule 154)

	')'	shift, and go to state 355

State 336:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 72)

	'## no critic qw('	shift, and go to state 2

	Critic	go to state 356

State 337:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-29 ')' ';'	(Rule 71)

	$default	reduce using rule 70 (STAR-29)

	STAR-29	go to state 357

State 338:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 211)

	OP20_HASH_FATARROW	shift, and go to state 358

State 339:

	HashEntryTyped -> HashDereferenced .	(Rule 212)

	$default	reduce using rule 212 (HashEntryTyped)

State 340:

	STAR-27 -> STAR-27 . MethodOrSubroutine	(Rule 65)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 . LITERAL_NUMBER ';'	(Rule 67)

	'our'	shift, and go to state 359
	LITERAL_NUMBER	shift, and go to state 360

	Subroutine	go to state 363
	Method	go to state 362
	MethodOrSubroutine	go to state 361

State 341:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-31 ')' ';'	(Rule 76)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 338

	HashEntryTyped	go to state 364
	HashDereferenced	go to state 339

State 342:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	')'	shift, and go to state 365
	OP21_LIST_COMMA	shift, and go to state 366

	PAREN-18	go to state 367

State 343:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 344:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 224)

	$default	reduce using rule 224 (TypeInner)

State 345:

	CodeBlock -> '{' PLUS-53 '}' .	(Rule 181)

	$default	reduce using rule 181 (CodeBlock)

State 346:

	PLUS-53 -> PLUS-53 Operation .	(Rule 179)

	$default	reduce using rule 179 (PLUS-53)

State 347:

	OPTIONAL-52 -> PAREN-51 .	(Rule 170)

	$default	reduce using rule 170 (OPTIONAL-52)

State 348:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-50 OPTIONAL-52 .	(Rule 172)

	$default	reduce using rule 172 (Conditional)

State 349:

	PAREN-51 -> 'else' . CodeBlock	(Rule 169)

	'{'	shift, and go to state 275

	CodeBlock	go to state 368

State 350:

	PAREN-49 -> 'elsif (' . Expression ')' CodeBlock	(Rule 166)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	HashDereferenced	go to state 89
	HashReference	go to state 90
	Literal	go to state 86
	Variable	go to state 124
	Operator	go to state 76
	WordScoped	go to state 111
	Expression	go to state 369
	ArrayDereferenced	go to state 93

State 351:

	STAR-50 -> STAR-50 PAREN-49 .	(Rule 167)

	$default	reduce using rule 167 (STAR-50)

State 352:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 189)

	$default	reduce using rule 189 (VariableDeclaration)

State 353:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 177)

	')'	shift, and go to state 370

State 354:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 176)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	Literal	go to state 86
	HashDereferenced	go to state 89
	HashReference	go to state 90
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	Expression	go to state 371
	ArrayDereferenced	go to state 93

State 355:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-46 ')' .	(Rule 154)

	$default	reduce using rule 154 (Expression)

State 356:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 72)

	$default	reduce using rule 72 (Properties)

State 357:

	STAR-29 -> STAR-29 . PAREN-28	(Rule 69)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-29 . ')' ';'	(Rule 71)

	')'	shift, and go to state 373
	OP21_LIST_COMMA	shift, and go to state 374

	PAREN-28	go to state 372

State 358:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 211)

	'my'	shift, and go to state 122

	TypeInner	go to state 375

State 359:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';'	(Rule 81)

	WORD	shift, and go to state 376

	Type	go to state 58
	TypeMethod	go to state 377

State 360:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER . ';'	(Rule 67)

	';'	shift, and go to state 378

State 361:

	STAR-27 -> STAR-27 MethodOrSubroutine .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 362:

	MethodOrSubroutine -> Method .	(Rule 88)

	$default	reduce using rule 88 (MethodOrSubroutine)

State 363:

	MethodOrSubroutine -> Subroutine .	(Rule 89)

	$default	reduce using rule 89 (MethodOrSubroutine)

State 364:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-31 ')' ';'	(Rule 76)

	$default	reduce using rule 75 (STAR-31)

	STAR-31	go to state 379

State 365:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	OP19_VARIABLE_ASSIGN	shift, and go to state 380

State 366:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 381

State 367:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 368:

	PAREN-51 -> 'else' CodeBlock .	(Rule 169)

	$default	reduce using rule 169 (PAREN-51)

State 369:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	PAREN-49 -> 'elsif (' Expression . ')' CodeBlock	(Rule 166)

	')'	shift, and go to state 382
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 370:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 177)

	'{'	shift, and go to state 275

	CodeBlock	go to state 383

State 371:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 176)

	')'	shift, and go to state 384
	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 372:

	STAR-29 -> STAR-29 PAREN-28 .	(Rule 69)

	$default	reduce using rule 69 (STAR-29)

State 373:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-29 ')' . ';'	(Rule 71)

	';'	shift, and go to state 385

State 374:

	PAREN-28 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 68)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 338

	HashDereferenced	go to state 339
	HashEntryTyped	go to state 386

State 375:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 211)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayDereferenced	go to state 93
	Operator	go to state 76
	WordScoped	go to state 111
	Variable	go to state 124
	Expression	go to state 387
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	ArrayReference	go to state 83

State 376:

	Type -> WORD .	(Rule 222)
	TypeMethod -> WORD . '__method'	(Rule 223)

	'__method'	shift, and go to state 388

	VARIABLE_SYMBOL	reduce using rule 222 (Type)

State 377:

	Method -> 'our' TypeMethod . VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';'	(Rule 81)

	VARIABLE_SYMBOL	shift, and go to state 389

State 378:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';' .	(Rule 67)

	$default	reduce using rule 67 (Class)

State 379:

	STAR-31 -> STAR-31 . PAREN-30	(Rule 74)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-31 . ')' ';'	(Rule 76)

	')'	shift, and go to state 392
	OP21_LIST_COMMA	shift, and go to state 391

	PAREN-30	go to state 390

State 380:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-20	(Rule 52)

	'@_;'	shift, and go to state 393

State 381:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 59

	Type	go to state 394

State 382:

	PAREN-49 -> 'elsif (' Expression ')' . CodeBlock	(Rule 166)

	'{'	shift, and go to state 275

	CodeBlock	go to state 395

State 383:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 177)

	$default	reduce using rule 177 (LoopForEach)

State 384:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 176)

	'{'	shift, and go to state 275

	CodeBlock	go to state 396

State 385:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-29 ')' ';' .	(Rule 71)

	$default	reduce using rule 71 (Properties)

State 386:

	PAREN-28 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 68)

	$default	reduce using rule 68 (PAREN-28)

State 387:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 211)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

	')'	reduce using rule 211 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 211 (HashEntryTyped)

State 388:

	TypeMethod -> WORD '__method' .	(Rule 223)

	$default	reduce using rule 223 (TypeMethod)

State 389:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL . '= sub {' OPTIONAL-32 PLUS-33 '}' ';'	(Rule 81)

	'= sub {'	shift, and go to state 397

State 390:

	STAR-31 -> STAR-31 PAREN-30 .	(Rule 74)

	$default	reduce using rule 74 (STAR-31)

State 391:

	PAREN-30 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 73)

	'%{'	shift, and go to state 100
	WORD	shift, and go to state 338

	HashEntryTyped	go to state 398
	HashDereferenced	go to state 339

State 392:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-31 ')' . ';'	(Rule 76)

	';'	shift, and go to state 399

State 393:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-20	(Rule 52)

	$default	reduce using rule 51 (STAR-20)

	STAR-20	go to state 400

State 394:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 401

State 395:

	PAREN-49 -> 'elsif (' Expression ')' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (PAREN-49)

State 396:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 176)

	$default	reduce using rule 176 (LoopFor)

State 397:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' . OPTIONAL-32 PLUS-33 '}' ';'	(Rule 81)

	'( my'	shift, and go to state 402

	'%{'	reduce using rule 78 (OPTIONAL-32)
	'('	reduce using rule 78 (OPTIONAL-32)
	'@{'	reduce using rule 78 (OPTIONAL-32)
	'['	reduce using rule 78 (OPTIONAL-32)
	'for my integer'	reduce using rule 78 (OPTIONAL-32)
	'foreach my'	reduce using rule 78 (OPTIONAL-32)
	'if ('	reduce using rule 78 (OPTIONAL-32)
	'my'	reduce using rule 78 (OPTIONAL-32)
	'undef'	reduce using rule 78 (OPTIONAL-32)
	'while ('	reduce using rule 78 (OPTIONAL-32)
	'{'	reduce using rule 78 (OPTIONAL-32)
	LITERAL_NUMBER	reduce using rule 78 (OPTIONAL-32)
	LITERAL_STRING	reduce using rule 78 (OPTIONAL-32)
	OP01_NAMED	reduce using rule 78 (OPTIONAL-32)
	OP01_NAMED_VOID	reduce using rule 78 (OPTIONAL-32)
	OP01_NAMED_VOID_PAREN	reduce using rule 78 (OPTIONAL-32)
	OP01_OPEN_CLOSE	reduce using rule 78 (OPTIONAL-32)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 78 (OPTIONAL-32)
	OP01_PRINT_VOID	reduce using rule 78 (OPTIONAL-32)
	OP01_PRINT_VOID_PAREN	reduce using rule 78 (OPTIONAL-32)
	OP03_MATH_INC_DEC	reduce using rule 78 (OPTIONAL-32)
	OP05_LOGICAL_NEG	reduce using rule 78 (OPTIONAL-32)
	OP05_MATH_NEG	reduce using rule 78 (OPTIONAL-32)
	OP10_NAMED_UNARY	reduce using rule 78 (OPTIONAL-32)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 78 (OPTIONAL-32)
	OP19_LOOP_CONTROL	reduce using rule 78 (OPTIONAL-32)
	OP22_LOGICAL_NOT	reduce using rule 78 (OPTIONAL-32)
	VARIABLE_SYMBOL	reduce using rule 78 (OPTIONAL-32)
	WORD	reduce using rule 78 (OPTIONAL-32)
	WORD_SCOPED	reduce using rule 78 (OPTIONAL-32)

	MethodArguments	go to state 404
	OPTIONAL-32	go to state 403

State 398:

	PAREN-30 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 73)

	$default	reduce using rule 73 (PAREN-30)

State 399:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-31 ')' ';' .	(Rule 76)

	$default	reduce using rule 76 (PropertiesClass)

State 400:

	STAR-20 -> STAR-20 . ArgumentCheck	(Rule 50)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20 .	(Rule 52)

	CHECK_OR_CHECKTRACE	shift, and go to state 406

	'%{'	reduce using rule 52 (SubroutineArguments)
	'('	reduce using rule 52 (SubroutineArguments)
	'@{'	reduce using rule 52 (SubroutineArguments)
	'['	reduce using rule 52 (SubroutineArguments)
	'for my integer'	reduce using rule 52 (SubroutineArguments)
	'foreach my'	reduce using rule 52 (SubroutineArguments)
	'if ('	reduce using rule 52 (SubroutineArguments)
	'my'	reduce using rule 52 (SubroutineArguments)
	'undef'	reduce using rule 52 (SubroutineArguments)
	'while ('	reduce using rule 52 (SubroutineArguments)
	'{'	reduce using rule 52 (SubroutineArguments)
	LITERAL_NUMBER	reduce using rule 52 (SubroutineArguments)
	LITERAL_STRING	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 52 (SubroutineArguments)
	OP01_OPEN_CLOSE	reduce using rule 52 (SubroutineArguments)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 52 (SubroutineArguments)
	OP01_PRINT_VOID	reduce using rule 52 (SubroutineArguments)
	OP01_PRINT_VOID_PAREN	reduce using rule 52 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 52 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 52 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 52 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 52 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 52 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 52 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 52 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 52 (SubroutineArguments)
	WORD	reduce using rule 52 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 52 (SubroutineArguments)

	ArgumentCheck	go to state 405

State 401:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 402:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 87)

	TYPE_CLASS_OR_SELF	shift, and go to state 407

State 403:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 . PLUS-33 '}' ';'	(Rule 81)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'if ('	shift, and go to state 79
	'my'	shift, and go to state 80
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_NAMED_VOID	shift, and go to state 112
	OP01_NAMED_VOID_PAREN	shift, and go to state 87
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 88
	OP01_PRINT_VOID_PAREN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 98
	WORD_SCOPED	shift, and go to state 28

	'for my integer'	reduce using rule 160 (OPTIONAL-48)
	'foreach my'	reduce using rule 160 (OPTIONAL-48)
	'while ('	reduce using rule 160 (OPTIONAL-48)

	VariableDeclaration	go to state 95
	OPTIONAL-48	go to state 96
	LoopLabel	go to state 102
	Operator	go to state 76
	PAREN-47	go to state 77
	Operation	go to state 408
	Variable	go to state 104
	Expression	go to state 78
	ArrayReference	go to state 83
	OperatorVoid	go to state 85
	PLUS-33	go to state 409
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	WordScoped	go to state 111
	Conditional	go to state 114
	ArrayDereferenced	go to state 93
	Statement	go to state 115
	VariableModification	go to state 94

State 404:

	OPTIONAL-32 -> MethodArguments .	(Rule 77)

	$default	reduce using rule 77 (OPTIONAL-32)

State 405:

	STAR-20 -> STAR-20 ArgumentCheck .	(Rule 50)

	$default	reduce using rule 50 (STAR-20)

State 406:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-22 ')' ';'	(Rule 56)

	'('	shift, and go to state 410

State 407:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 87)

	$default	reduce using rule 84 (STAR-35)

	STAR-35	go to state 411

State 408:

	PLUS-33 -> Operation .	(Rule 80)

	$default	reduce using rule 80 (PLUS-33)

State 409:

	PLUS-33 -> PLUS-33 . Operation	(Rule 79)
	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 . '}' ';'	(Rule 81)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'if ('	shift, and go to state 79
	'my'	shift, and go to state 80
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	'}'	shift, and go to state 413
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_NAMED_VOID	shift, and go to state 112
	OP01_NAMED_VOID_PAREN	shift, and go to state 87
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 88
	OP01_PRINT_VOID_PAREN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 98
	WORD_SCOPED	shift, and go to state 28

	'for my integer'	reduce using rule 160 (OPTIONAL-48)
	'foreach my'	reduce using rule 160 (OPTIONAL-48)
	'while ('	reduce using rule 160 (OPTIONAL-48)

	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	OperatorVoid	go to state 85
	ArrayReference	go to state 83
	VariableModification	go to state 94
	Statement	go to state 115
	ArrayDereferenced	go to state 93
	Conditional	go to state 114
	WordScoped	go to state 111
	VariableDeclaration	go to state 95
	OPTIONAL-48	go to state 96
	Expression	go to state 78
	Variable	go to state 104
	PAREN-47	go to state 77
	Operation	go to state 412
	LoopLabel	go to state 102
	Operator	go to state 76

State 410:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-22 ')' ';'	(Rule 56)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	ArrayReference	go to state 83
	ArrayDereferenced	go to state 93
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76
	Expression	go to state 414

State 411:

	STAR-35 -> STAR-35 . PAREN-34	(Rule 83)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 87)

	')'	shift, and go to state 416
	OP21_LIST_COMMA	shift, and go to state 417

	PAREN-34	go to state 415

State 412:

	PLUS-33 -> PLUS-33 Operation .	(Rule 79)

	$default	reduce using rule 79 (PLUS-33)

State 413:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' . ';'	(Rule 81)

	';'	shift, and go to state 418

State 414:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-22 ')' ';'	(Rule 56)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP21_LIST_COMMA	shift, and go to state 421
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

	')'	reduce using rule 55 (OPTIONAL-22)

	OPTIONAL-22	go to state 419
	PAREN-21	go to state 420

State 415:

	STAR-35 -> STAR-35 PAREN-34 .	(Rule 83)

	$default	reduce using rule 83 (STAR-35)

State 416:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 87)

	OP19_VARIABLE_ASSIGN	shift, and go to state 422

State 417:

	PAREN-34 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 82)

	'my'	shift, and go to state 423

State 418:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';' .	(Rule 81)

	$default	reduce using rule 81 (Method)

State 419:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 . ')' ';'	(Rule 56)

	')'	shift, and go to state 424

State 420:

	OPTIONAL-22 -> PAREN-21 .	(Rule 54)

	$default	reduce using rule 54 (OPTIONAL-22)

State 421:

	PAREN-21 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 53)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	Literal	go to state 86
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Expression	go to state 425
	WordScoped	go to state 111
	Operator	go to state 76
	Variable	go to state 124
	ArrayDereferenced	go to state 93

State 422:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-36	(Rule 87)

	'@_;'	shift, and go to state 426

State 423:

	PAREN-34 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 82)

	WORD	shift, and go to state 59

	Type	go to state 427

State 424:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' . ';'	(Rule 56)

	';'	shift, and go to state 428

State 425:

	PAREN-21 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 53)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP21_LIST_COMMA	shift, and go to state 429
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

State 426:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-36	(Rule 87)

	$default	reduce using rule 86 (STAR-36)

	STAR-36	go to state 430

State 427:

	PAREN-34 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 82)

	VARIABLE_SYMBOL	shift, and go to state 431

State 428:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' ';' .	(Rule 56)

	$default	reduce using rule 56 (ArgumentCheck)

State 429:

	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 53)

	'%{'	shift, and go to state 100
	'('	shift, and go to state 97
	'@{'	shift, and go to state 107
	'['	shift, and go to state 110
	'undef'	shift, and go to state 82
	'{'	shift, and go to state 101
	LITERAL_NUMBER	shift, and go to state 113
	LITERAL_STRING	shift, and go to state 70
	OP01_NAMED	shift, and go to state 108
	OP01_OPEN_CLOSE	shift, and go to state 91
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 84
	OP05_LOGICAL_NEG	shift, and go to state 72
	OP05_MATH_NEG	shift, and go to state 109
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 74
	OP22_LOGICAL_NOT	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 99
	WORD	shift, and go to state 27
	WORD_SCOPED	shift, and go to state 28

	ArrayReference	go to state 83
	HashReference	go to state 90
	HashDereferenced	go to state 89
	Literal	go to state 86
	Variable	go to state 124
	WordScoped	go to state 111
	Operator	go to state 76
	Expression	go to state 432
	ArrayDereferenced	go to state 93

State 430:

	STAR-36 -> STAR-36 . ArgumentCheck	(Rule 85)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36 .	(Rule 87)

	CHECK_OR_CHECKTRACE	shift, and go to state 406

	'%{'	reduce using rule 87 (MethodArguments)
	'('	reduce using rule 87 (MethodArguments)
	'@{'	reduce using rule 87 (MethodArguments)
	'['	reduce using rule 87 (MethodArguments)
	'for my integer'	reduce using rule 87 (MethodArguments)
	'foreach my'	reduce using rule 87 (MethodArguments)
	'if ('	reduce using rule 87 (MethodArguments)
	'my'	reduce using rule 87 (MethodArguments)
	'undef'	reduce using rule 87 (MethodArguments)
	'while ('	reduce using rule 87 (MethodArguments)
	'{'	reduce using rule 87 (MethodArguments)
	LITERAL_NUMBER	reduce using rule 87 (MethodArguments)
	LITERAL_STRING	reduce using rule 87 (MethodArguments)
	OP01_NAMED	reduce using rule 87 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 87 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 87 (MethodArguments)
	OP01_OPEN_CLOSE	reduce using rule 87 (MethodArguments)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 87 (MethodArguments)
	OP01_PRINT_VOID	reduce using rule 87 (MethodArguments)
	OP01_PRINT_VOID_PAREN	reduce using rule 87 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 87 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 87 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 87 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 87 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 87 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 87 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 87 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 87 (MethodArguments)
	WORD	reduce using rule 87 (MethodArguments)
	WORD_SCOPED	reduce using rule 87 (MethodArguments)

	ArgumentCheck	go to state 433

State 431:

	PAREN-34 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 82)

	$default	reduce using rule 82 (PAREN-34)

State 432:

	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 53)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 141
	OP06_REGEX_MATCH	shift, and go to state 138
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 132
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 139
	OP09_BITWISE_SHIFT	shift, and go to state 136
	OP11_COMPARE_LT_GT	shift, and go to state 130
	OP12_COMPARE_EQ_NEQ	shift, and go to state 129
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 131
	OP15_LOGICAL_AND	shift, and go to state 133
	OP16_LOGICAL_OR	shift, and go to state 134
	OP17_LIST_RANGE	shift, and go to state 142
	OP18_TERNARY	shift, and go to state 135
	OP23_LOGICAL_AND	shift, and go to state 143
	OP24_LOGICAL_OR_XOR	shift, and go to state 144

	')'	reduce using rule 53 (PAREN-21)

State 433:

	STAR-36 -> STAR-36 ArgumentCheck .	(Rule 85)

	$default	reduce using rule 85 (STAR-36)


Summary:
--------
Number of rules         : 229
Number of terminals     : 90
Number of non-terminals : 111
Number of states        : 434
