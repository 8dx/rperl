Conflicts:
----------
Conflict in state 157 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 157 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 157 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 157 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 157 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 157 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 157 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 157 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 157 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 157 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 157 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 157 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 157 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 157 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 157 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 157 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 188 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 188 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 188 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 188 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 188 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 188 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 188 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 188 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 188 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 188 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 188 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 188 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 188 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 188 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 188 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 188 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 191 between rule 121 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 191 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 191 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 191 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 191 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 121 and token OP18_TERNARY resolved as shift.
Conflict in state 191 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 191 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 191 between rule 121 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 191 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 191 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 191 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 191 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 191 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 191 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 191 between rule 121 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 195 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 195 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 195 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 195 between rule 104 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 195 between rule 104 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 195 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 195 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 195 between rule 104 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 195 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 195 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 195 between rule 104 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 195 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 195 between rule 104 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 195 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 195 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 195 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 122 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 237 between rule 122 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 237 between rule 122 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 237 between rule 122 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 237 between rule 122 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 237 between rule 122 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 237 between rule 122 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 122 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 122 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 237 between rule 122 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 237 between rule 122 and token OP08_STRING_CAT resolved as shift.
Conflict in state 237 between rule 122 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 237 between rule 122 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 237 between rule 122 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 237 between rule 122 and token OP18_TERNARY resolved as shift.
Conflict in state 237 between rule 122 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 238 between rule 103 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 238 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 238 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 238 between rule 103 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 238 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 238 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 238 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 238 between rule 103 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 238 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 238 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 238 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 238 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 238 between rule 103 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 238 between rule 103 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 239 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 239 between rule 119 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 239 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 239 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 239 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 239 between rule 119 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 239 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 239 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 239 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 239 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 239 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 239 between rule 119 and token OP17_LIST_RANGE resolved as error.
Conflict in state 239 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 239 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 239 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 239 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 240 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 240 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 240 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 240 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 240 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 240 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 240 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 240 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 240 between rule 109 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 240 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 240 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 240 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 240 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 240 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 241 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 241 between rule 123 and token OP18_TERNARY resolved as shift.
Conflict in state 241 between rule 123 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 241 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 241 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 241 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 241 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 241 between rule 123 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 241 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 241 between rule 123 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 241 between rule 123 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 241 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 241 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 241 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 241 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 241 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 243 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 243 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 243 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 243 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 243 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 243 between rule 117 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 243 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 243 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 243 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 243 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 243 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 243 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 243 between rule 117 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 243 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 244 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 244 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 244 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 244 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 244 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 244 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 244 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 244 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 244 between rule 116 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 244 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 244 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 244 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 244 between rule 116 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 244 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 245 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 245 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 245 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 245 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 245 between rule 115 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 245 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 245 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 245 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 245 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 245 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 245 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 245 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 245 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 245 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 245 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 245 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 247 between rule 108 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 247 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 247 between rule 108 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 247 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 247 between rule 108 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 247 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 247 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 247 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 247 between rule 108 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 247 between rule 108 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 247 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 248 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 248 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 248 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 248 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 248 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 248 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 248 between rule 118 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 248 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 248 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 248 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 118 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 248 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 248 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 248 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 248 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 248 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 249 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 249 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 249 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 249 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 249 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 249 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 249 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 249 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 249 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 249 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 249 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 249 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 249 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 249 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 249 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 249 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 250 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 250 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 250 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 250 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 250 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 250 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 250 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 250 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 250 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 250 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 250 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 250 between rule 113 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 250 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 250 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 250 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 250 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 251 between rule 107 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 251 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 251 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 251 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 251 between rule 107 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 251 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 251 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 251 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 251 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 251 between rule 107 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 251 between rule 107 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 251 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 251 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 251 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 251 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 252 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 252 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 252 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 252 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 252 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 252 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 252 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 252 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 252 between rule 114 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 252 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 252 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 252 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 252 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	STAR-20 -> STAR-20 ArgumentCheck
51:	STAR-20 -> /* empty */
52:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20
53:	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
54:	OPTIONAL-22 -> PAREN-21
55:	OPTIONAL-22 -> /* empty */
56:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' ';'
57:	STAR-23 -> STAR-23 Critic
58:	STAR-23 -> /* empty */
59:	STAR-24 -> STAR-24 Include
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 Constant
62:	STAR-25 -> /* empty */
63:	OPTIONAL-26 -> PropertiesClass
64:	OPTIONAL-26 -> /* empty */
65:	STAR-27 -> STAR-27 MethodOrSubroutine
66:	STAR-27 -> /* empty */
67:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'
68:	PAREN-28 -> OP21_LIST_COMMA HashEntryTyped
69:	STAR-29 -> STAR-29 PAREN-28
70:	STAR-29 -> /* empty */
71:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-29 ')' ';'
72:	Properties -> 'our %properties = (' ')' ';' Critic
73:	PAREN-30 -> OP21_LIST_COMMA HashEntryTyped
74:	STAR-31 -> STAR-31 PAREN-30
75:	STAR-31 -> /* empty */
76:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-31 ')' ';'
77:	OPTIONAL-32 -> MethodArguments
78:	OPTIONAL-32 -> /* empty */
79:	PLUS-33 -> PLUS-33 Operation
80:	PLUS-33 -> Operation
81:	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';'
82:	PAREN-34 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
83:	STAR-35 -> STAR-35 PAREN-34
84:	STAR-35 -> /* empty */
85:	STAR-36 -> STAR-36 ArgumentCheck
86:	STAR-36 -> /* empty */
87:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36
88:	MethodOrSubroutine -> Method
89:	MethodOrSubroutine -> Subroutine
90:	Operation -> Expression ';'
91:	Operation -> Statement
92:	OPTIONAL-37 -> ListElements
93:	OPTIONAL-37 -> /* empty */
94:	OPTIONAL-38 -> ListElements
95:	OPTIONAL-38 -> /* empty */
96:	OPTIONAL-39 -> ListElements
97:	OPTIONAL-39 -> /* empty */
98:	Operator -> OP01_NAMED '(' OPTIONAL-37 ')'
99:	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-38 ')' ';'
100:	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-39 ';'
101:	Operator -> OP03_MATH_INC_DEC Variable
102:	Operator -> Variable OP03_MATH_INC_DEC
103:	Operator -> Expression OP04_MATH_POW Expression
104:	Operator -> OP05_LOGICAL_NEG Expression
105:	Operator -> OP05_MATH_NEG Expression ')'
106:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
107:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
108:	Operator -> Expression OP08_MATH_ADD_SUB Expression
109:	Operator -> Expression OP08_STRING_CAT Expression
110:	Operator -> Expression OP09_BITWISE_SHIFT Expression
111:	Operator -> OP10_NAMED_UNARY Expression
112:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
113:	Operator -> Expression OP11_COMPARE_LT_GT Expression
114:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
115:	Operator -> Expression OP13_BITWISE_AND Expression
116:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
117:	Operator -> Expression OP15_LOGICAL_AND Expression
118:	Operator -> Expression OP16_LOGICAL_OR Expression
119:	Operator -> Expression OP17_LIST_RANGE Expression
120:	Operator -> Expression OP18_TERNARY Variable COLON Variable
121:	Operator -> OP22_LOGICAL_NOT Expression
122:	Operator -> Expression OP23_LOGICAL_AND Expression
123:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
124:	OPTIONAL-40 -> ListElements
125:	OPTIONAL-40 -> /* empty */
126:	OPTIONAL-41 -> ListElements
127:	OPTIONAL-41 -> /* empty */
128:	OPTIONAL-42 -> ListElements
129:	OPTIONAL-42 -> /* empty */
130:	OPTIONAL-43 -> ListElements
131:	OPTIONAL-43 -> /* empty */
132:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';'
133:	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-41 ')' ';'
134:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';'
135:	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-43 ';'
136:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
137:	OPTIONAL-44 -> ListElements
138:	OPTIONAL-44 -> /* empty */
139:	OPTIONAL-45 -> ListElements
140:	OPTIONAL-45 -> /* empty */
141:	Expression -> 'undef'
142:	Expression -> Literal
143:	Expression -> Variable
144:	Expression -> ArrayReference
145:	Expression -> ArrayDereferenced
146:	Expression -> HashReference
147:	Expression -> HashDereferenced
148:	Expression -> '{' '}'
149:	Expression -> Operator
150:	Expression -> WordScoped '(' OPTIONAL-44 ')'
151:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'
152:	Expression -> '(' Expression ')'
153:	ExpressionOrStdin -> Expression
154:	ExpressionOrStdin -> '<STDIN>'
155:	PAREN-46 -> LoopLabel COLON
156:	OPTIONAL-47 -> PAREN-46
157:	OPTIONAL-47 -> /* empty */
158:	Statement -> Conditional
159:	Statement -> OPTIONAL-47 Loop
160:	Statement -> OperatorVoid
161:	Statement -> VariableDeclaration
162:	Statement -> VariableModification
163:	PAREN-48 -> 'elsif (' Expression ')' CodeBlock
164:	STAR-49 -> STAR-49 PAREN-48
165:	STAR-49 -> /* empty */
166:	PAREN-50 -> 'else' CodeBlock
167:	OPTIONAL-51 -> PAREN-50
168:	OPTIONAL-51 -> /* empty */
169:	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51
170:	Loop -> LoopFor
171:	Loop -> LoopForEach
172:	Loop -> LoopWhile
173:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
174:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
175:	LoopWhile -> 'while (' Expression ')' CodeBlock
176:	PLUS-52 -> PLUS-52 Operation
177:	PLUS-52 -> Operation
178:	CodeBlock -> '{' PLUS-52 '}'
179:	STAR-53 -> STAR-53 VariableRetrieval
180:	STAR-53 -> /* empty */
181:	Variable -> VARIABLE_SYMBOL STAR-53
182:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
183:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
184:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
185:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
186:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
187:	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
188:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
189:	PAREN-54 -> OP21_LIST_COMMA ListElement
190:	STAR-55 -> STAR-55 PAREN-54
191:	STAR-55 -> /* empty */
192:	PLUS-56 -> PLUS-56 WORD
193:	PLUS-56 -> WORD
194:	ListElements -> ListElement STAR-55
195:	ListElements -> OP01_QW '(' PLUS-56 ')'
196:	ListElement -> Expression
197:	ListElement -> TypeInner Expression
198:	ListElement -> KEYS_OR_VALUES HashDereferenced
199:	OPTIONAL-57 -> ListElements
200:	OPTIONAL-57 -> /* empty */
201:	ArrayReference -> '[' OPTIONAL-57 ']'
202:	ArrayDereferenced -> '@{' Variable '}'
203:	ArrayDereferenced -> '@{' ArrayReference '}'
204:	OPTIONAL-58 -> TypeInner
205:	OPTIONAL-58 -> /* empty */
206:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-58 Expression
207:	HashEntry -> HashDereferenced
208:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
209:	HashEntryTyped -> HashDereferenced
210:	PAREN-59 -> OP21_LIST_COMMA HashEntry
211:	STAR-60 -> STAR-60 PAREN-59
212:	STAR-60 -> /* empty */
213:	HashReference -> '{' HashEntry STAR-60 '}'
214:	HashDereferenced -> '%{' Variable '}'
215:	HashDereferenced -> '%{' HashReference '}'
216:	WordScoped -> WORD
217:	WordScoped -> WORD_SCOPED
218:	LoopLabel -> WORD
219:	Type -> WORD
220:	TypeMethod -> WORD '__method'
221:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
222:	FileHandle -> '{*' WORD '}'
223:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
224:	Literal -> LITERAL_STRING
225:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 4
	SHEBANG	shift, and go to state 8

	'package'	reduce using rule 20 (OPTIONAL-9)

	PLUS-2	go to state 5
	OPTIONAL-9	go to state 1
	PAREN-1	go to state 9
	Critic	go to state 3
	CompileUnit	go to state 7
	ModuleHeader	go to state 6
	Program	go to state 2

State 1:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 10

State 2:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 3:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 4:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 11

	PLUS-14	go to state 12

State 5:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 4

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 1
	PAREN-1	go to state 13
	Critic	go to state 3
	ModuleHeader	go to state 6

State 6:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 17

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Module	go to state 16
	Package	go to state 18
	STAR-10	go to state 14
	Class	go to state 15

State 7:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 19

State 8:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 20
	OPTIONAL-3	go to state 21

State 9:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 10:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 22

State 11:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 12:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 26
	WORD	shift, and go to state 25

State 13:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 14:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 4

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 27
	STAR-11	go to state 28

State 15:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 16:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 17:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 29

State 18:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 19:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 20:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 21:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 31

	Header	go to state 30

State 22:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 32

State 23:

	WordScoped -> WORD_SCOPED .	(Rule 217)

	$default	reduce using rule 217 (WordScoped)

State 24:

	WordScoped -> WORD .	(Rule 216)

	$default	reduce using rule 216 (WordScoped)

State 25:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 26:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 27:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 28:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 35

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 34
	STAR-12	go to state 33

State 29:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	')'	shift, and go to state 36

State 30:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 37

State 31:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 38

State 32:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 31

	Header	go to state 39

State 33:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 44
	'use constant'	shift, and go to state 42

	Constant	go to state 40
	PLUS-13	go to state 43
	Subroutine	go to state 41

State 34:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 35:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 45

State 36:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	';'	shift, and go to state 46

State 37:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 4

	'%{'	reduce using rule 11 (STAR-5)
	'('	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'['	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	'{'	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 11 (STAR-5)
	OP01_OPEN_CLOSE	reduce using rule 11 (STAR-5)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID_PAREN	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	STAR-5	go to state 47
	Critic	go to state 48

State 38:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 49

State 39:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 40:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 41:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 42:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 50

State 43:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 44
	LITERAL_NUMBER	shift, and go to state 52

	Subroutine	go to state 51

State 44:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 53

	Type	go to state 54

State 45:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 56
	'qw('	shift, and go to state 55

State 46:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'use'	shift, and go to state 35

	Include	go to state 57

State 47:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 35

	'%{'	reduce using rule 13 (STAR-6)
	'('	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'['	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	'{'	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_PAREN	reduce using rule 13 (STAR-6)
	OP01_OPEN_CLOSE	reduce using rule 13 (STAR-6)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID_PAREN	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	Include	go to state 59
	STAR-6	go to state 58

State 48:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 49:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 60

State 50:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 61

State 51:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 52:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 62

State 53:

	Type -> WORD .	(Rule 219)

	$default	reduce using rule 219 (Type)

State 54:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 63

State 55:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 64

	PLUS-15	go to state 65

State 56:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 57:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 66

State 58:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 42

	'%{'	reduce using rule 15 (STAR-7)
	'('	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'['	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	'{'	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_PAREN	reduce using rule 15 (STAR-7)
	OP01_OPEN_CLOSE	reduce using rule 15 (STAR-7)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID_PAREN	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 67
	STAR-7	go to state 68

State 59:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 60:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 69

State 61:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 71

	TypeInner	go to state 70

State 62:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 63:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 72

State 64:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 65:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 74
	WORD	shift, and go to state 73

State 66:

	STAR-23 -> STAR-23 . Critic	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 . STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'## no critic qw('	shift, and go to state 4

	'our %properties = ('	reduce using rule 60 (STAR-24)
	'use constant'	reduce using rule 60 (STAR-24)
	'use'	reduce using rule 60 (STAR-24)

	Critic	go to state 75
	STAR-24	go to state 76

State 67:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'if ('	shift, and go to state 87
	'my'	shift, and go to state 114
	'our'	shift, and go to state 44
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_PAREN	shift, and go to state 119
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 93
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 157 (OPTIONAL-47)
	'foreach my'	reduce using rule 157 (OPTIONAL-47)
	'while ('	reduce using rule 157 (OPTIONAL-47)

	Literal	go to state 77
	Subroutine	go to state 78
	VariableModification	go to state 101
	HashReference	go to state 80
	Expression	go to state 104
	OperatorVoid	go to state 84
	OPTIONAL-47	go to state 83
	Operator	go to state 103
	Operation	go to state 106
	PLUS-8	go to state 86
	Statement	go to state 112
	ArrayDereferenced	go to state 92
	LoopLabel	go to state 90
	Variable	go to state 97
	HashDereferenced	go to state 98
	PAREN-46	go to state 118
	WordScoped	go to state 117
	VariableDeclaration	go to state 121
	ArrayReference	go to state 100
	Conditional	go to state 99

State 69:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 70:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122

	Literal	go to state 123

State 71:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 221)

	WORD	shift, and go to state 53

	Type	go to state 124

State 72:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 127

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'('	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'['	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	'{'	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	OPTIONAL-16	go to state 125
	SubroutineArguments	go to state 126

State 73:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 74:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 128

State 75:

	STAR-23 -> STAR-23 Critic .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 76:

	STAR-24 -> STAR-24 . Include	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 . STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'use'	shift, and go to state 35

	'our %properties = ('	reduce using rule 62 (STAR-25)
	'use constant'	reduce using rule 62 (STAR-25)

	Include	go to state 129
	STAR-25	go to state 130

State 77:

	Expression -> Literal .	(Rule 142)

	$default	reduce using rule 142 (Expression)

State 78:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 79:

	ArrayReference -> '[' . OPTIONAL-57 ']'	(Rule 201)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	']'	reduce using rule 200 (OPTIONAL-57)

	Expression	go to state 137
	HashDereferenced	go to state 98
	Variable	go to state 134
	OPTIONAL-57	go to state 136
	Operator	go to state 103
	WordScoped	go to state 117
	ArrayReference	go to state 100
	ListElements	go to state 132
	Literal	go to state 77
	TypeInner	go to state 138
	ListElement	go to state 135
	ArrayDereferenced	go to state 92
	HashReference	go to state 80

State 80:

	Expression -> HashReference .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 81:

	Literal -> LITERAL_NUMBER .	(Rule 225)

	$default	reduce using rule 225 (Literal)

State 82:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 136)

	WORD	shift, and go to state 140

	LoopLabel	go to state 139

State 83:

	Statement -> OPTIONAL-47 . Loop	(Rule 159)

	'for my integer'	shift, and go to state 144
	'foreach my'	shift, and go to state 147
	'while ('	shift, and go to state 142

	Loop	go to state 145
	LoopForEach	go to state 143
	LoopFor	go to state 146
	LoopWhile	go to state 141

State 84:

	Statement -> OperatorVoid .	(Rule 160)

	$default	reduce using rule 160 (Statement)

State 85:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 101)

	VARIABLE_SYMBOL	shift, and go to state 120

	Variable	go to state 148

State 86:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'if ('	shift, and go to state 87
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_PAREN	shift, and go to state 119
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 93
	WORD_SCOPED	shift, and go to state 23

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 157 (OPTIONAL-47)
	'foreach my'	reduce using rule 157 (OPTIONAL-47)
	'while ('	reduce using rule 157 (OPTIONAL-47)

	ArrayDereferenced	go to state 92
	LoopLabel	go to state 90
	Statement	go to state 112
	ArrayReference	go to state 100
	VariableDeclaration	go to state 121
	Conditional	go to state 99
	Variable	go to state 97
	HashDereferenced	go to state 98
	PAREN-46	go to state 118
	WordScoped	go to state 117
	VariableModification	go to state 101
	HashReference	go to state 80
	Literal	go to state 77
	Operation	go to state 149
	OperatorVoid	go to state 84
	Expression	go to state 104
	OPTIONAL-47	go to state 83
	Operator	go to state 103

State 87:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 169)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Expression	go to state 150
	HashDereferenced	go to state 98
	Variable	go to state 134
	WordScoped	go to state 117
	Operator	go to state 103
	ArrayReference	go to state 100

State 88:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 105)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 100
	WordScoped	go to state 117
	Operator	go to state 103
	Expression	go to state 151
	Variable	go to state 134
	HashDereferenced	go to state 98
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Literal	go to state 77

State 89:

	Expression -> '{' . '}'	(Rule 148)
	HashReference -> '{' . HashEntry STAR-60 '}'	(Rule 213)

	'%{'	shift, and go to state 95
	'}'	shift, and go to state 154
	WORD	shift, and go to state 155

	HashEntry	go to state 152
	HashDereferenced	go to state 153

State 90:

	PAREN-46 -> LoopLabel . COLON	(Rule 155)

	COLON	shift, and go to state 156

State 91:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 112)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 77
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Operator	go to state 103
	WordScoped	go to state 117
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 157
	ArrayReference	go to state 100

State 92:

	Expression -> ArrayDereferenced .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 93:

	WordScoped -> WORD .	(Rule 216)
	LoopLabel -> WORD .	(Rule 218)

	'('	reduce using rule 216 (WordScoped)
	COLON	reduce using rule 218 (LoopLabel)

State 94:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 202)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 203)

	'['	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 120

	Variable	go to state 159
	ArrayReference	go to state 158

State 95:

	HashDereferenced -> '%{' . Variable '}'	(Rule 214)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 215)

	'{'	shift, and go to state 161
	VARIABLE_SYMBOL	shift, and go to state 120

	Variable	go to state 162
	HashReference	go to state 160

State 96:

	Expression -> '(' . Expression ')'	(Rule 152)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	HashDereferenced	go to state 98
	Expression	go to state 163
	Variable	go to state 134
	WordScoped	go to state 117
	Operator	go to state 103
	ArrayReference	go to state 100

State 97:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 102)
	Expression -> Variable .	(Rule 143)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 151)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 187)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 188)

	OP02_METHOD_THINARROW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 165
	OP19_VARIABLE_ASSIGN	shift, and go to state 164
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 167

	';'	reduce using rule 143 (Expression)
	OP04_MATH_POW	reduce using rule 143 (Expression)
	OP06_REGEX_MATCH	reduce using rule 143 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 143 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 143 (Expression)
	OP08_STRING_CAT	reduce using rule 143 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 143 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 143 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 143 (Expression)
	OP13_BITWISE_AND	reduce using rule 143 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 143 (Expression)
	OP15_LOGICAL_AND	reduce using rule 143 (Expression)
	OP16_LOGICAL_OR	reduce using rule 143 (Expression)
	OP17_LIST_RANGE	reduce using rule 143 (Expression)
	OP18_TERNARY	reduce using rule 143 (Expression)
	OP23_LOGICAL_AND	reduce using rule 143 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 143 (Expression)

State 98:

	Expression -> HashDereferenced .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 99:

	Statement -> Conditional .	(Rule 158)

	$default	reduce using rule 158 (Statement)

State 100:

	Expression -> ArrayReference .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 101:

	Statement -> VariableModification .	(Rule 162)

	$default	reduce using rule 162 (Statement)

State 102:

	OperatorVoid -> OP01_PRINT_VOID . FileHandle OPTIONAL-43 ';'	(Rule 135)

	'my'	shift, and go to state 170
	'{*'	shift, and go to state 169

	FileHandle	go to state 168

State 103:

	Expression -> Operator .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 104:

	Operation -> Expression . ';'	(Rule 90)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	';'	shift, and go to state 178
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 105:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 111)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 188
	Operator	go to state 103
	WordScoped	go to state 117
	ArrayReference	go to state 100

State 106:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 107:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-42 ';'	(Rule 134)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	';'	reduce using rule 129 (OPTIONAL-42)

	HashDereferenced	go to state 98
	Expression	go to state 137
	Variable	go to state 134
	Operator	go to state 103
	WordScoped	go to state 117
	ArrayReference	go to state 100
	ListElements	go to state 189
	Literal	go to state 77
	TypeInner	go to state 138
	ListElement	go to state 135
	ArrayDereferenced	go to state 92
	OPTIONAL-42	go to state 190
	HashReference	go to state 80

State 108:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 121)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 100
	Expression	go to state 191
	Variable	go to state 134
	HashDereferenced	go to state 98
	Operator	go to state 103
	WordScoped	go to state 117
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77

State 109:

	Operator -> OP01_OPEN_CLOSE_PAREN . FileHandle OPTIONAL-38 ')' ';'	(Rule 99)

	'my'	shift, and go to state 170
	'{*'	shift, and go to state 169

	FileHandle	go to state 192

State 110:

	Operator -> OP01_NAMED . '(' OPTIONAL-37 ')'	(Rule 98)

	'('	shift, and go to state 193

State 111:

	Operator -> OP01_OPEN_CLOSE . FileHandle OPTIONAL-39 ';'	(Rule 100)

	'my'	shift, and go to state 170
	'{*'	shift, and go to state 169

	FileHandle	go to state 194

State 112:

	Operation -> Statement .	(Rule 91)

	$default	reduce using rule 91 (Operation)

State 113:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 104)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 100
	Operator	go to state 103
	WordScoped	go to state 117
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 195
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Literal	go to state 77

State 114:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 185)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 186)

	WORD	shift, and go to state 53

	Type	go to state 196

State 115:

	Expression -> 'undef' .	(Rule 141)

	$default	reduce using rule 141 (Expression)

State 116:

	OperatorVoid -> OP01_PRINT_VOID_PAREN . FileHandle OPTIONAL-41 ')' ';'	(Rule 133)

	'my'	shift, and go to state 170
	'{*'	shift, and go to state 169

	FileHandle	go to state 197

State 117:

	Expression -> WordScoped . '(' OPTIONAL-44 ')'	(Rule 150)

	'('	shift, and go to state 198

State 118:

	OPTIONAL-47 -> PAREN-46 .	(Rule 156)

	$default	reduce using rule 156 (OPTIONAL-47)

State 119:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-40 ')' ';'	(Rule 132)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 125 (OPTIONAL-40)

	ArrayReference	go to state 100
	ListElements	go to state 200
	Variable	go to state 134
	Expression	go to state 137
	HashDereferenced	go to state 98
	WordScoped	go to state 117
	Operator	go to state 103
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	OPTIONAL-40	go to state 199
	ListElement	go to state 135
	TypeInner	go to state 138

State 120:

	Variable -> VARIABLE_SYMBOL . STAR-53	(Rule 181)

	$default	reduce using rule 180 (STAR-53)

	STAR-53	go to state 201

State 121:

	Statement -> VariableDeclaration .	(Rule 161)

	$default	reduce using rule 161 (Statement)

State 122:

	Literal -> LITERAL_STRING .	(Rule 224)

	$default	reduce using rule 224 (Literal)

State 123:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 202

State 124:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 221)

	'$TYPED_'	shift, and go to state 203

State 125:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'if ('	shift, and go to state 87
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_PAREN	shift, and go to state 119
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 93
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 157 (OPTIONAL-47)
	'foreach my'	reduce using rule 157 (OPTIONAL-47)
	'while ('	reduce using rule 157 (OPTIONAL-47)

	LoopLabel	go to state 90
	PLUS-17	go to state 205
	ArrayDereferenced	go to state 92
	Statement	go to state 112
	Conditional	go to state 99
	ArrayReference	go to state 100
	VariableDeclaration	go to state 121
	WordScoped	go to state 117
	HashDereferenced	go to state 98
	Variable	go to state 97
	PAREN-46	go to state 118
	VariableModification	go to state 101
	HashReference	go to state 80
	Literal	go to state 77
	Operation	go to state 204
	Operator	go to state 103
	OperatorVoid	go to state 84
	Expression	go to state 104
	OPTIONAL-47	go to state 83

State 126:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 127:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	WORD	shift, and go to state 53

	Type	go to state 206

State 128:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 129:

	STAR-24 -> STAR-24 Include .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 130:

	STAR-25 -> STAR-25 . Constant	(Rule 61)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 . Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'our %properties = ('	shift, and go to state 208
	'use constant'	shift, and go to state 42

	Properties	go to state 207
	Constant	go to state 209

State 131:

	ListElements -> OP01_QW . '(' PLUS-56 ')'	(Rule 195)

	'('	shift, and go to state 210

State 132:

	OPTIONAL-57 -> ListElements .	(Rule 199)

	$default	reduce using rule 199 (OPTIONAL-57)

State 133:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 198)

	'%{'	shift, and go to state 95

	HashDereferenced	go to state 211

State 134:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 102)
	Expression -> Variable .	(Rule 143)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')'	(Rule 151)

	OP02_METHOD_THINARROW	shift, and go to state 166
	OP03_MATH_INC_DEC	shift, and go to state 165

	')'	reduce using rule 143 (Expression)
	'..'	reduce using rule 143 (Expression)
	';'	reduce using rule 143 (Expression)
	']'	reduce using rule 143 (Expression)
	'}'	reduce using rule 143 (Expression)
	OP04_MATH_POW	reduce using rule 143 (Expression)
	OP06_REGEX_MATCH	reduce using rule 143 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 143 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 143 (Expression)
	OP08_STRING_CAT	reduce using rule 143 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 143 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 143 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 143 (Expression)
	OP13_BITWISE_AND	reduce using rule 143 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 143 (Expression)
	OP15_LOGICAL_AND	reduce using rule 143 (Expression)
	OP16_LOGICAL_OR	reduce using rule 143 (Expression)
	OP17_LIST_RANGE	reduce using rule 143 (Expression)
	OP18_TERNARY	reduce using rule 143 (Expression)
	OP21_LIST_COMMA	reduce using rule 143 (Expression)
	OP23_LOGICAL_AND	reduce using rule 143 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 143 (Expression)

State 135:

	ListElements -> ListElement . STAR-55	(Rule 194)

	$default	reduce using rule 191 (STAR-55)

	STAR-55	go to state 212

State 136:

	ArrayReference -> '[' OPTIONAL-57 . ']'	(Rule 201)

	']'	shift, and go to state 213

State 137:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	ListElement -> Expression .	(Rule 196)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

	')'	reduce using rule 196 (ListElement)
	';'	reduce using rule 196 (ListElement)
	']'	reduce using rule 196 (ListElement)
	OP21_LIST_COMMA	reduce using rule 196 (ListElement)

State 138:

	ListElement -> TypeInner . Expression	(Rule 197)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 100
	WordScoped	go to state 117
	Operator	go to state 103
	Expression	go to state 214
	Variable	go to state 134
	HashDereferenced	go to state 98
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Literal	go to state 77

State 139:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 136)

	';'	shift, and go to state 215

State 140:

	LoopLabel -> WORD .	(Rule 218)

	$default	reduce using rule 218 (LoopLabel)

State 141:

	Loop -> LoopWhile .	(Rule 172)

	$default	reduce using rule 172 (Loop)

State 142:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	HashDereferenced	go to state 98
	Expression	go to state 216
	Variable	go to state 134
	WordScoped	go to state 117
	Operator	go to state 103
	ArrayReference	go to state 100

State 143:

	Loop -> LoopForEach .	(Rule 171)

	$default	reduce using rule 171 (Loop)

State 144:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 173)

	VARIABLE_SYMBOL	shift, and go to state 217

State 145:

	Statement -> OPTIONAL-47 Loop .	(Rule 159)

	$default	reduce using rule 159 (Statement)

State 146:

	Loop -> LoopFor .	(Rule 170)

	$default	reduce using rule 170 (Loop)

State 147:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 174)

	WORD	shift, and go to state 53

	Type	go to state 218

State 148:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 149:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 150:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-49 OPTIONAL-51	(Rule 169)

	')'	shift, and go to state 219
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 151:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	')'	shift, and go to state 220
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 152:

	HashReference -> '{' HashEntry . STAR-60 '}'	(Rule 213)

	$default	reduce using rule 212 (STAR-60)

	STAR-60	go to state 221

State 153:

	HashEntry -> HashDereferenced .	(Rule 207)

	$default	reduce using rule 207 (HashEntry)

State 154:

	Expression -> '{' '}' .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 155:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-58 Expression	(Rule 206)

	OP20_HASH_FATARROW	shift, and go to state 222

State 156:

	PAREN-46 -> LoopLabel COLON .	(Rule 155)

	$default	reduce using rule 155 (PAREN-46)

State 157:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 158:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 203)

	'}'	shift, and go to state 223

State 159:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 202)

	'}'	shift, and go to state 224

State 160:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 215)

	'}'	shift, and go to state 225

State 161:

	HashReference -> '{' . HashEntry STAR-60 '}'	(Rule 213)

	'%{'	shift, and go to state 95
	WORD	shift, and go to state 155

	HashDereferenced	go to state 153
	HashEntry	go to state 152

State 162:

	HashDereferenced -> '%{' Variable . '}'	(Rule 214)

	'}'	shift, and go to state 226

State 163:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	Expression -> '(' Expression . ')'	(Rule 152)

	')'	shift, and go to state 227
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 164:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 187)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'<STDIN>'	shift, and go to state 230
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	ExpressionOrStdin	go to state 229
	Literal	go to state 77
	ArrayReference	go to state 100
	WordScoped	go to state 117
	Operator	go to state 103
	Variable	go to state 134
	Expression	go to state 228
	HashDereferenced	go to state 98

State 165:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 166:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-45 ')'	(Rule 151)

	WORD	shift, and go to state 231

State 167:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 188)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	ArrayReference	go to state 100
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 232
	WordScoped	go to state 117
	Operator	go to state 103

State 168:

	OperatorVoid -> OP01_PRINT_VOID FileHandle . OPTIONAL-43 ';'	(Rule 135)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	';'	reduce using rule 131 (OPTIONAL-43)

	Operator	go to state 103
	WordScoped	go to state 117
	Variable	go to state 134
	Expression	go to state 137
	HashDereferenced	go to state 98
	ListElements	go to state 234
	ArrayReference	go to state 100
	ListElement	go to state 135
	TypeInner	go to state 138
	Literal	go to state 77
	OPTIONAL-43	go to state 233
	HashReference	go to state 80
	ArrayDereferenced	go to state 92

State 169:

	FileHandle -> '{*' . WORD '}'	(Rule 222)

	WORD	shift, and go to state 235

State 170:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 223)

	'filehandle_ref'	shift, and go to state 236

State 171:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 122)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 100
	WordScoped	go to state 117
	Operator	go to state 103
	HashDereferenced	go to state 98
	Expression	go to state 237
	Variable	go to state 134
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Literal	go to state 77

State 172:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 103)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 100
	Variable	go to state 134
	Expression	go to state 238
	HashDereferenced	go to state 98
	Operator	go to state 103
	WordScoped	go to state 117
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77

State 173:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 119)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 117
	Operator	go to state 103
	HashDereferenced	go to state 98
	Expression	go to state 239
	Variable	go to state 134
	ArrayReference	go to state 100
	Literal	go to state 77
	HashReference	go to state 80
	ArrayDereferenced	go to state 92

State 174:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 109)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	ArrayReference	go to state 100
	Expression	go to state 240
	HashDereferenced	go to state 98
	Variable	go to state 134
	WordScoped	go to state 117
	Operator	go to state 103

State 175:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 123)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 117
	Operator	go to state 103
	Variable	go to state 134
	HashDereferenced	go to state 98
	Expression	go to state 241
	ArrayReference	go to state 100
	Literal	go to state 77
	HashReference	go to state 80
	ArrayDereferenced	go to state 92

State 176:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 106)

	'/'	shift, and go to state 242

State 177:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 117)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 100
	Operator	go to state 103
	WordScoped	go to state 117
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 243
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Literal	go to state 77

State 178:

	Operation -> Expression ';' .	(Rule 90)

	$default	reduce using rule 90 (Operation)

State 179:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 116)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	ArrayReference	go to state 100
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 244
	Operator	go to state 103
	WordScoped	go to state 117

State 180:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 115)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 245
	HashDereferenced	go to state 98
	Variable	go to state 134
	WordScoped	go to state 117
	Operator	go to state 103
	ArrayReference	go to state 100
	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80

State 181:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 120)

	VARIABLE_SYMBOL	shift, and go to state 120

	Variable	go to state 246

State 182:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 108)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Expression	go to state 247
	HashDereferenced	go to state 98
	Variable	go to state 134
	Operator	go to state 103
	WordScoped	go to state 117
	ArrayReference	go to state 100

State 183:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 118)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Expression	go to state 248
	HashDereferenced	go to state 98
	Variable	go to state 134
	WordScoped	go to state 117
	Operator	go to state 103
	ArrayReference	go to state 100

State 184:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 110)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashDereferenced	go to state 98
	Expression	go to state 249
	Variable	go to state 134
	WordScoped	go to state 117
	Operator	go to state 103
	ArrayReference	go to state 100
	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80

State 185:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 113)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	ArrayReference	go to state 100
	Expression	go to state 250
	Variable	go to state 134
	HashDereferenced	go to state 98
	Operator	go to state 103
	WordScoped	go to state 117

State 186:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 107)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 100
	Operator	go to state 103
	WordScoped	go to state 117
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 251
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Literal	go to state 77

State 187:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 114)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 77
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	WordScoped	go to state 117
	Operator	go to state 103
	HashDereferenced	go to state 98
	Expression	go to state 252
	Variable	go to state 134
	ArrayReference	go to state 100

State 188:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 111)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 189:

	OPTIONAL-42 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-42)

State 190:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 . ';'	(Rule 134)

	';'	shift, and go to state 253

State 191:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 121)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181

	')'	reduce using rule 121 (Operator)
	'..'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 192:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle . OPTIONAL-38 ')' ';'	(Rule 99)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 95 (OPTIONAL-38)

	Literal	go to state 77
	TypeInner	go to state 138
	ListElement	go to state 135
	OPTIONAL-38	go to state 254
	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 137
	WordScoped	go to state 117
	Operator	go to state 103
	ArrayReference	go to state 100
	ListElements	go to state 255

State 193:

	Operator -> OP01_NAMED '(' . OPTIONAL-37 ')'	(Rule 98)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 93 (OPTIONAL-37)

	ListElement	go to state 135
	TypeInner	go to state 138
	Literal	go to state 77
	OPTIONAL-37	go to state 257
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Operator	go to state 103
	WordScoped	go to state 117
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 137
	ListElements	go to state 256
	ArrayReference	go to state 100

State 194:

	Operator -> OP01_OPEN_CLOSE FileHandle . OPTIONAL-39 ';'	(Rule 100)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	';'	reduce using rule 97 (OPTIONAL-39)

	ArrayDereferenced	go to state 92
	OPTIONAL-39	go to state 259
	HashReference	go to state 80
	Literal	go to state 77
	TypeInner	go to state 138
	ListElement	go to state 135
	ArrayReference	go to state 100
	ListElements	go to state 258
	HashDereferenced	go to state 98
	Expression	go to state 137
	Variable	go to state 134
	Operator	go to state 103
	WordScoped	go to state 117

State 195:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 104)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP06_REGEX_MATCH	reduce using rule 104 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 104 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 104 (Operator)
	OP08_STRING_CAT	reduce using rule 104 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 104 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 104 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 196:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 185)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 186)

	VARIABLE_SYMBOL	shift, and go to state 260

State 197:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle . OPTIONAL-41 ')' ';'	(Rule 133)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 127 (OPTIONAL-41)

	ListElements	go to state 261
	ArrayReference	go to state 100
	Operator	go to state 103
	WordScoped	go to state 117
	Expression	go to state 137
	HashDereferenced	go to state 98
	Variable	go to state 134
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	OPTIONAL-41	go to state 262
	ListElement	go to state 135
	TypeInner	go to state 138
	Literal	go to state 77

State 198:

	Expression -> WordScoped '(' . OPTIONAL-44 ')'	(Rule 150)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 138 (OPTIONAL-44)

	ListElements	go to state 263
	ArrayReference	go to state 100
	WordScoped	go to state 117
	Operator	go to state 103
	Variable	go to state 134
	HashDereferenced	go to state 98
	Expression	go to state 137
	HashReference	go to state 80
	OPTIONAL-44	go to state 264
	ArrayDereferenced	go to state 92
	ListElement	go to state 135
	TypeInner	go to state 138
	Literal	go to state 77

State 199:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 . ')' ';'	(Rule 132)

	')'	shift, and go to state 265

State 200:

	OPTIONAL-40 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-40)

State 201:

	STAR-53 -> STAR-53 . VariableRetrieval	(Rule 179)
	Variable -> VARIABLE_SYMBOL STAR-53 .	(Rule 181)

	OP02_ARRAY_THINARROW	shift, and go to state 266
	OP02_HASH_THINARROW	shift, and go to state 267

	')'	reduce using rule 181 (Variable)
	'..'	reduce using rule 181 (Variable)
	';'	reduce using rule 181 (Variable)
	']'	reduce using rule 181 (Variable)
	'}'	reduce using rule 181 (Variable)
	COLON	reduce using rule 181 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 181 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 181 (Variable)
	OP04_MATH_POW	reduce using rule 181 (Variable)
	OP06_REGEX_MATCH	reduce using rule 181 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 181 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 181 (Variable)
	OP08_STRING_CAT	reduce using rule 181 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 181 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 181 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 181 (Variable)
	OP13_BITWISE_AND	reduce using rule 181 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 181 (Variable)
	OP15_LOGICAL_AND	reduce using rule 181 (Variable)
	OP16_LOGICAL_OR	reduce using rule 181 (Variable)
	OP17_LIST_RANGE	reduce using rule 181 (Variable)
	OP18_TERNARY	reduce using rule 181 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 181 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 181 (Variable)
	OP21_LIST_COMMA	reduce using rule 181 (Variable)
	OP23_LOGICAL_AND	reduce using rule 181 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 181 (Variable)

	VariableRetrieval	go to state 268

State 202:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 203:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 221)

	WORD	shift, and go to state 269

State 204:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 205:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'if ('	shift, and go to state 87
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	'}'	shift, and go to state 270
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_PAREN	shift, and go to state 119
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 93
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 157 (OPTIONAL-47)
	'foreach my'	reduce using rule 157 (OPTIONAL-47)
	'while ('	reduce using rule 157 (OPTIONAL-47)

	ArrayReference	go to state 100
	VariableDeclaration	go to state 121
	Conditional	go to state 99
	PAREN-46	go to state 118
	HashDereferenced	go to state 98
	Variable	go to state 97
	WordScoped	go to state 117
	ArrayDereferenced	go to state 92
	LoopLabel	go to state 90
	Statement	go to state 112
	Operation	go to state 271
	OPTIONAL-47	go to state 83
	Expression	go to state 104
	OperatorVoid	go to state 84
	Operator	go to state 103
	HashReference	go to state 80
	VariableModification	go to state 101
	Literal	go to state 77

State 206:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	VARIABLE_SYMBOL	shift, and go to state 272

State 207:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties . OPTIONAL-26 STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	'our %properties_class = ('	shift, and go to state 274

	'our'	reduce using rule 64 (OPTIONAL-26)
	LITERAL_NUMBER	reduce using rule 64 (OPTIONAL-26)

	PropertiesClass	go to state 275
	OPTIONAL-26	go to state 273

State 208:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-29 ')' ';'	(Rule 71)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 72)

	'## no critic qw('	shift, and go to state 4
	')'	shift, and go to state 277

	Critic	go to state 276

State 209:

	STAR-25 -> STAR-25 Constant .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 210:

	ListElements -> OP01_QW '(' . PLUS-56 ')'	(Rule 195)

	WORD	shift, and go to state 279

	PLUS-56	go to state 278

State 211:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 198)

	$default	reduce using rule 198 (ListElement)

State 212:

	STAR-55 -> STAR-55 . PAREN-54	(Rule 190)
	ListElements -> ListElement STAR-55 .	(Rule 194)

	OP21_LIST_COMMA	shift, and go to state 280

	')'	reduce using rule 194 (ListElements)
	';'	reduce using rule 194 (ListElements)
	']'	reduce using rule 194 (ListElements)

	PAREN-54	go to state 281

State 213:

	ArrayReference -> '[' OPTIONAL-57 ']' .	(Rule 201)

	$default	reduce using rule 201 (ArrayReference)

State 214:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	ListElement -> TypeInner Expression .	(Rule 197)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

	')'	reduce using rule 197 (ListElement)
	';'	reduce using rule 197 (ListElement)
	']'	reduce using rule 197 (ListElement)
	OP21_LIST_COMMA	reduce using rule 197 (ListElement)

State 215:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 216:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 175)

	')'	shift, and go to state 282
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 217:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 173)

	'('	shift, and go to state 283

State 218:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 174)

	VARIABLE_SYMBOL	shift, and go to state 284

State 219:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-49 OPTIONAL-51	(Rule 169)

	'{'	shift, and go to state 286

	CodeBlock	go to state 285

State 220:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 105)

	$default	reduce using rule 105 (Operator)

State 221:

	STAR-60 -> STAR-60 . PAREN-59	(Rule 211)
	HashReference -> '{' HashEntry STAR-60 . '}'	(Rule 213)

	'}'	shift, and go to state 287
	OP21_LIST_COMMA	shift, and go to state 289

	PAREN-59	go to state 288

State 222:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-58 Expression	(Rule 206)

	'my'	shift, and go to state 71

	'%{'	reduce using rule 205 (OPTIONAL-58)
	'('	reduce using rule 205 (OPTIONAL-58)
	'@{'	reduce using rule 205 (OPTIONAL-58)
	'['	reduce using rule 205 (OPTIONAL-58)
	'undef'	reduce using rule 205 (OPTIONAL-58)
	'{'	reduce using rule 205 (OPTIONAL-58)
	LITERAL_NUMBER	reduce using rule 205 (OPTIONAL-58)
	LITERAL_STRING	reduce using rule 205 (OPTIONAL-58)
	OP01_NAMED	reduce using rule 205 (OPTIONAL-58)
	OP01_OPEN_CLOSE	reduce using rule 205 (OPTIONAL-58)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 205 (OPTIONAL-58)
	OP03_MATH_INC_DEC	reduce using rule 205 (OPTIONAL-58)
	OP05_LOGICAL_NEG	reduce using rule 205 (OPTIONAL-58)
	OP05_MATH_NEG	reduce using rule 205 (OPTIONAL-58)
	OP10_NAMED_UNARY	reduce using rule 205 (OPTIONAL-58)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 205 (OPTIONAL-58)
	OP22_LOGICAL_NOT	reduce using rule 205 (OPTIONAL-58)
	VARIABLE_SYMBOL	reduce using rule 205 (OPTIONAL-58)
	WORD	reduce using rule 205 (OPTIONAL-58)
	WORD_SCOPED	reduce using rule 205 (OPTIONAL-58)

	TypeInner	go to state 290
	OPTIONAL-58	go to state 291

State 223:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 203)

	$default	reduce using rule 203 (ArrayDereferenced)

State 224:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 202)

	$default	reduce using rule 202 (ArrayDereferenced)

State 225:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 215)

	$default	reduce using rule 215 (HashDereferenced)

State 226:

	HashDereferenced -> '%{' Variable '}' .	(Rule 214)

	$default	reduce using rule 214 (HashDereferenced)

State 227:

	Expression -> '(' Expression ')' .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 228:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	ExpressionOrStdin -> Expression .	(Rule 153)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

	';'	reduce using rule 153 (ExpressionOrStdin)

State 229:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 187)

	';'	shift, and go to state 292

State 230:

	ExpressionOrStdin -> '<STDIN>' .	(Rule 154)

	$default	reduce using rule 154 (ExpressionOrStdin)

State 231:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-45 ')'	(Rule 151)

	'('	shift, and go to state 293

State 232:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 188)

	';'	shift, and go to state 294
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 233:

	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-43 . ';'	(Rule 135)

	';'	shift, and go to state 295

State 234:

	OPTIONAL-43 -> ListElements .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-43)

State 235:

	FileHandle -> '{*' WORD . '}'	(Rule 222)

	'}'	shift, and go to state 296

State 236:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 223)

	VARIABLE_SYMBOL	shift, and go to state 297

State 237:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181

	')'	reduce using rule 122 (Operator)
	'..'	reduce using rule 122 (Operator)
	';'	reduce using rule 122 (Operator)
	']'	reduce using rule 122 (Operator)
	'}'	reduce using rule 122 (Operator)
	OP21_LIST_COMMA	reduce using rule 122 (Operator)
	OP23_LOGICAL_AND	reduce using rule 122 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 122 (Operator)

State 238:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP06_REGEX_MATCH	reduce using rule 103 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 103 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 103 (Operator)
	OP08_STRING_CAT	reduce using rule 103 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 103 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 103 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 239:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 240:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP08_STRING_CAT	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 241:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171

	')'	reduce using rule 123 (Operator)
	'..'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 242:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 106)

	OP06_REGEX_PATTERN	shift, and go to state 298

State 243:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 244:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 245:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 246:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 120)

	COLON	shift, and go to state 299

State 247:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 108 (Operator)
	OP08_STRING_CAT	reduce using rule 108 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 108 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 108 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 108 (Operator)
	OP13_BITWISE_AND	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 248:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 249:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 250:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 251:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 107 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 107 (Operator)
	OP08_STRING_CAT	reduce using rule 107 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 107 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 252:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 253:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-42 ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 254:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-38 . ')' ';'	(Rule 99)

	')'	shift, and go to state 300

State 255:

	OPTIONAL-38 -> ListElements .	(Rule 94)

	$default	reduce using rule 94 (OPTIONAL-38)

State 256:

	OPTIONAL-37 -> ListElements .	(Rule 92)

	$default	reduce using rule 92 (OPTIONAL-37)

State 257:

	Operator -> OP01_NAMED '(' OPTIONAL-37 . ')'	(Rule 98)

	')'	shift, and go to state 301

State 258:

	OPTIONAL-39 -> ListElements .	(Rule 96)

	$default	reduce using rule 96 (OPTIONAL-39)

State 259:

	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-39 . ';'	(Rule 100)

	';'	shift, and go to state 302

State 260:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 185)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 186)

	';'	shift, and go to state 304
	OP19_VARIABLE_ASSIGN	shift, and go to state 303

State 261:

	OPTIONAL-41 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-41)

State 262:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-41 . ')' ';'	(Rule 133)

	')'	shift, and go to state 305

State 263:

	OPTIONAL-44 -> ListElements .	(Rule 137)

	$default	reduce using rule 137 (OPTIONAL-44)

State 264:

	Expression -> WordScoped '(' OPTIONAL-44 . ')'	(Rule 150)

	')'	shift, and go to state 306

State 265:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' . ';'	(Rule 132)

	';'	shift, and go to state 307

State 266:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 182)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 134
	Expression	go to state 308
	HashDereferenced	go to state 98
	WordScoped	go to state 117
	Operator	go to state 103
	ArrayReference	go to state 100
	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80

State 267:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 183)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 184)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 310
	WORD_SCOPED	shift, and go to state 23

	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Literal	go to state 77
	ArrayReference	go to state 100
	WordScoped	go to state 117
	Operator	go to state 103
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 309

State 268:

	STAR-53 -> STAR-53 VariableRetrieval .	(Rule 179)

	$default	reduce using rule 179 (STAR-53)

State 269:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 221)

	OP19_VARIABLE_ASSIGN	shift, and go to state 311

State 270:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 312

State 271:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 272:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 313

State 273:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 . STAR-27 LITERAL_NUMBER ';'	(Rule 67)

	$default	reduce using rule 66 (STAR-27)

	STAR-27	go to state 314

State 274:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-31 ')' ';'	(Rule 76)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 315

State 275:

	OPTIONAL-26 -> PropertiesClass .	(Rule 63)

	$default	reduce using rule 63 (OPTIONAL-26)

State 276:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-29 ')' ';'	(Rule 71)

	'%{'	shift, and go to state 95
	WORD	shift, and go to state 317

	HashEntryTyped	go to state 318
	HashDereferenced	go to state 316

State 277:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 72)

	';'	shift, and go to state 319

State 278:

	PLUS-56 -> PLUS-56 . WORD	(Rule 192)
	ListElements -> OP01_QW '(' PLUS-56 . ')'	(Rule 195)

	')'	shift, and go to state 320
	WORD	shift, and go to state 321

State 279:

	PLUS-56 -> WORD .	(Rule 193)

	$default	reduce using rule 193 (PLUS-56)

State 280:

	PAREN-54 -> OP21_LIST_COMMA . ListElement	(Rule 189)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 117
	Operator	go to state 103
	Expression	go to state 137
	HashDereferenced	go to state 98
	Variable	go to state 134
	ArrayReference	go to state 100
	TypeInner	go to state 138
	ListElement	go to state 322
	Literal	go to state 77
	HashReference	go to state 80
	ArrayDereferenced	go to state 92

State 281:

	STAR-55 -> STAR-55 PAREN-54 .	(Rule 190)

	$default	reduce using rule 190 (STAR-55)

State 282:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 175)

	'{'	shift, and go to state 286

	CodeBlock	go to state 323

State 283:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 173)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	ArrayReference	go to state 100
	Variable	go to state 134
	Expression	go to state 324
	HashDereferenced	go to state 98
	Operator	go to state 103
	WordScoped	go to state 117

State 284:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 174)

	'('	shift, and go to state 325

State 285:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-49 OPTIONAL-51	(Rule 169)

	$default	reduce using rule 165 (STAR-49)

	STAR-49	go to state 326

State 286:

	CodeBlock -> '{' . PLUS-52 '}'	(Rule 178)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'if ('	shift, and go to state 87
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_PAREN	shift, and go to state 119
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 93
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 157 (OPTIONAL-47)
	'foreach my'	reduce using rule 157 (OPTIONAL-47)
	'while ('	reduce using rule 157 (OPTIONAL-47)

	Operation	go to state 328
	Operator	go to state 103
	OPTIONAL-47	go to state 83
	OperatorVoid	go to state 84
	Expression	go to state 104
	HashReference	go to state 80
	VariableModification	go to state 101
	Literal	go to state 77
	Conditional	go to state 99
	VariableDeclaration	go to state 121
	ArrayReference	go to state 100
	WordScoped	go to state 117
	PAREN-46	go to state 118
	HashDereferenced	go to state 98
	Variable	go to state 97
	LoopLabel	go to state 90
	ArrayDereferenced	go to state 92
	PLUS-52	go to state 327
	Statement	go to state 112

State 287:

	HashReference -> '{' HashEntry STAR-60 '}' .	(Rule 213)

	$default	reduce using rule 213 (HashReference)

State 288:

	STAR-60 -> STAR-60 PAREN-59 .	(Rule 211)

	$default	reduce using rule 211 (STAR-60)

State 289:

	PAREN-59 -> OP21_LIST_COMMA . HashEntry	(Rule 210)

	'%{'	shift, and go to state 95
	WORD	shift, and go to state 155

	HashEntry	go to state 329
	HashDereferenced	go to state 153

State 290:

	OPTIONAL-58 -> TypeInner .	(Rule 204)

	$default	reduce using rule 204 (OPTIONAL-58)

State 291:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-58 . Expression	(Rule 206)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	ArrayReference	go to state 100
	Expression	go to state 330
	Variable	go to state 134
	HashDereferenced	go to state 98
	Operator	go to state 103
	WordScoped	go to state 117

State 292:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 187)

	$default	reduce using rule 187 (VariableModification)

State 293:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-45 ')'	(Rule 151)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 140 (OPTIONAL-45)

	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	TypeInner	go to state 138
	OPTIONAL-45	go to state 331
	ListElement	go to state 135
	ArrayReference	go to state 100
	ListElements	go to state 332
	Variable	go to state 134
	HashDereferenced	go to state 98
	Expression	go to state 137
	WordScoped	go to state 117
	Operator	go to state 103

State 294:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 188)

	$default	reduce using rule 188 (VariableModification)

State 295:

	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-43 ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 296:

	FileHandle -> '{*' WORD '}' .	(Rule 222)

	$default	reduce using rule 222 (FileHandle)

State 297:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 223)

	$default	reduce using rule 223 (FileHandle)

State 298:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 106)

	'/'	shift, and go to state 333

State 299:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 120)

	VARIABLE_SYMBOL	shift, and go to state 120

	Variable	go to state 334

State 300:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-38 ')' . ';'	(Rule 99)

	';'	shift, and go to state 335

State 301:

	Operator -> OP01_NAMED '(' OPTIONAL-37 ')' .	(Rule 98)

	$default	reduce using rule 98 (Operator)

State 302:

	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-39 ';' .	(Rule 100)

	$default	reduce using rule 100 (Operator)

State 303:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 186)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'<STDIN>'	shift, and go to state 230
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	ExpressionOrStdin	go to state 336
	Literal	go to state 77
	ArrayReference	go to state 100
	Operator	go to state 103
	WordScoped	go to state 117
	Expression	go to state 228
	Variable	go to state 134
	HashDereferenced	go to state 98

State 304:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 185)

	$default	reduce using rule 185 (VariableDeclaration)

State 305:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-41 ')' . ';'	(Rule 133)

	';'	shift, and go to state 337

State 306:

	Expression -> WordScoped '(' OPTIONAL-44 ')' .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 307:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-40 ')' ';' .	(Rule 132)

	$default	reduce using rule 132 (OperatorVoid)

State 308:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 182)

	']'	shift, and go to state 338
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 309:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 183)

	'}'	shift, and go to state 339
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 310:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 184)
	WordScoped -> WORD .	(Rule 216)

	'}'	shift, and go to state 340

	'('	reduce using rule 216 (WordScoped)

State 311:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 221)

	$default	reduce using rule 221 (TypeInner)

State 312:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 313:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	')'	shift, and go to state 341
	OP21_LIST_COMMA	shift, and go to state 342

	PAREN-18	go to state 343

State 314:

	STAR-27 -> STAR-27 . MethodOrSubroutine	(Rule 65)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 . LITERAL_NUMBER ';'	(Rule 67)

	'our'	shift, and go to state 348
	LITERAL_NUMBER	shift, and go to state 345

	Subroutine	go to state 346
	MethodOrSubroutine	go to state 347
	Method	go to state 344

State 315:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-31 ')' ';'	(Rule 76)

	'%{'	shift, and go to state 95
	WORD	shift, and go to state 317

	HashEntryTyped	go to state 349
	HashDereferenced	go to state 316

State 316:

	HashEntryTyped -> HashDereferenced .	(Rule 209)

	$default	reduce using rule 209 (HashEntryTyped)

State 317:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 208)

	OP20_HASH_FATARROW	shift, and go to state 350

State 318:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-29 ')' ';'	(Rule 71)

	$default	reduce using rule 70 (STAR-29)

	STAR-29	go to state 351

State 319:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 72)

	'## no critic qw('	shift, and go to state 4

	Critic	go to state 352

State 320:

	ListElements -> OP01_QW '(' PLUS-56 ')' .	(Rule 195)

	$default	reduce using rule 195 (ListElements)

State 321:

	PLUS-56 -> PLUS-56 WORD .	(Rule 192)

	$default	reduce using rule 192 (PLUS-56)

State 322:

	PAREN-54 -> OP21_LIST_COMMA ListElement .	(Rule 189)

	$default	reduce using rule 189 (PAREN-54)

State 323:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 175)

	$default	reduce using rule 175 (LoopWhile)

State 324:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 173)

	'..'	shift, and go to state 353
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 325:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 174)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'my'	shift, and go to state 71
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_QW	shift, and go to state 131
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ListElement	go to state 135
	TypeInner	go to state 138
	Literal	go to state 77
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	WordScoped	go to state 117
	Operator	go to state 103
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 137
	ListElements	go to state 354
	ArrayReference	go to state 100

State 326:

	STAR-49 -> STAR-49 . PAREN-48	(Rule 164)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 . OPTIONAL-51	(Rule 169)

	'else'	shift, and go to state 356
	'elsif ('	shift, and go to state 359

	$end	reduce using rule 168 (OPTIONAL-51)
	'%{'	reduce using rule 168 (OPTIONAL-51)
	'('	reduce using rule 168 (OPTIONAL-51)
	'@{'	reduce using rule 168 (OPTIONAL-51)
	'['	reduce using rule 168 (OPTIONAL-51)
	'for my integer'	reduce using rule 168 (OPTIONAL-51)
	'foreach my'	reduce using rule 168 (OPTIONAL-51)
	'if ('	reduce using rule 168 (OPTIONAL-51)
	'my'	reduce using rule 168 (OPTIONAL-51)
	'undef'	reduce using rule 168 (OPTIONAL-51)
	'while ('	reduce using rule 168 (OPTIONAL-51)
	'{'	reduce using rule 168 (OPTIONAL-51)
	'}'	reduce using rule 168 (OPTIONAL-51)
	LITERAL_NUMBER	reduce using rule 168 (OPTIONAL-51)
	LITERAL_STRING	reduce using rule 168 (OPTIONAL-51)
	OP01_NAMED	reduce using rule 168 (OPTIONAL-51)
	OP01_NAMED_VOID	reduce using rule 168 (OPTIONAL-51)
	OP01_NAMED_VOID_PAREN	reduce using rule 168 (OPTIONAL-51)
	OP01_OPEN_CLOSE	reduce using rule 168 (OPTIONAL-51)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 168 (OPTIONAL-51)
	OP01_PRINT_VOID	reduce using rule 168 (OPTIONAL-51)
	OP01_PRINT_VOID_PAREN	reduce using rule 168 (OPTIONAL-51)
	OP03_MATH_INC_DEC	reduce using rule 168 (OPTIONAL-51)
	OP05_LOGICAL_NEG	reduce using rule 168 (OPTIONAL-51)
	OP05_MATH_NEG	reduce using rule 168 (OPTIONAL-51)
	OP10_NAMED_UNARY	reduce using rule 168 (OPTIONAL-51)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 168 (OPTIONAL-51)
	OP19_LOOP_CONTROL	reduce using rule 168 (OPTIONAL-51)
	OP22_LOGICAL_NOT	reduce using rule 168 (OPTIONAL-51)
	VARIABLE_SYMBOL	reduce using rule 168 (OPTIONAL-51)
	WORD	reduce using rule 168 (OPTIONAL-51)
	WORD_SCOPED	reduce using rule 168 (OPTIONAL-51)

	OPTIONAL-51	go to state 358
	PAREN-50	go to state 357
	PAREN-48	go to state 355

State 327:

	PLUS-52 -> PLUS-52 . Operation	(Rule 176)
	CodeBlock -> '{' PLUS-52 . '}'	(Rule 178)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'if ('	shift, and go to state 87
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	'}'	shift, and go to state 361
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_PAREN	shift, and go to state 119
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 93
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 157 (OPTIONAL-47)
	'foreach my'	reduce using rule 157 (OPTIONAL-47)
	'while ('	reduce using rule 157 (OPTIONAL-47)

	WordScoped	go to state 117
	PAREN-46	go to state 118
	HashDereferenced	go to state 98
	Variable	go to state 97
	Conditional	go to state 99
	ArrayReference	go to state 100
	VariableDeclaration	go to state 121
	Statement	go to state 112
	LoopLabel	go to state 90
	ArrayDereferenced	go to state 92
	Operator	go to state 103
	OPTIONAL-47	go to state 83
	Expression	go to state 104
	OperatorVoid	go to state 84
	Operation	go to state 360
	Literal	go to state 77
	HashReference	go to state 80
	VariableModification	go to state 101

State 328:

	PLUS-52 -> Operation .	(Rule 177)

	$default	reduce using rule 177 (PLUS-52)

State 329:

	PAREN-59 -> OP21_LIST_COMMA HashEntry .	(Rule 210)

	$default	reduce using rule 210 (PAREN-59)

State 330:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-58 Expression .	(Rule 206)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

	'}'	reduce using rule 206 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 206 (HashEntry)

State 331:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 . ')'	(Rule 151)

	')'	shift, and go to state 362

State 332:

	OPTIONAL-45 -> ListElements .	(Rule 139)

	$default	reduce using rule 139 (OPTIONAL-45)

State 333:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 106)

	$default	reduce using rule 106 (Operator)

State 334:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 120)

	$default	reduce using rule 120 (Operator)

State 335:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-38 ')' ';' .	(Rule 99)

	$default	reduce using rule 99 (Operator)

State 336:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 186)

	';'	shift, and go to state 363

State 337:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-41 ')' ';' .	(Rule 133)

	$default	reduce using rule 133 (OperatorVoid)

State 338:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 182)

	$default	reduce using rule 182 (VariableRetrieval)

State 339:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 183)

	$default	reduce using rule 183 (VariableRetrieval)

State 340:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 184)

	$default	reduce using rule 184 (VariableRetrieval)

State 341:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-20	(Rule 52)

	OP19_VARIABLE_ASSIGN	shift, and go to state 364

State 342:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 365

State 343:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 344:

	MethodOrSubroutine -> Method .	(Rule 88)

	$default	reduce using rule 88 (MethodOrSubroutine)

State 345:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER . ';'	(Rule 67)

	';'	shift, and go to state 366

State 346:

	MethodOrSubroutine -> Subroutine .	(Rule 89)

	$default	reduce using rule 89 (MethodOrSubroutine)

State 347:

	STAR-27 -> STAR-27 MethodOrSubroutine .	(Rule 65)

	$default	reduce using rule 65 (STAR-27)

State 348:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';'	(Rule 81)

	WORD	shift, and go to state 367

	TypeMethod	go to state 368
	Type	go to state 54

State 349:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-31 ')' ';'	(Rule 76)

	$default	reduce using rule 75 (STAR-31)

	STAR-31	go to state 369

State 350:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 208)

	'my'	shift, and go to state 71

	TypeInner	go to state 370

State 351:

	STAR-29 -> STAR-29 . PAREN-28	(Rule 69)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-29 . ')' ';'	(Rule 71)

	')'	shift, and go to state 371
	OP21_LIST_COMMA	shift, and go to state 373

	PAREN-28	go to state 372

State 352:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 72)

	$default	reduce using rule 72 (Properties)

State 353:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 173)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 100
	Operator	go to state 103
	WordScoped	go to state 117
	Expression	go to state 374
	HashDereferenced	go to state 98
	Variable	go to state 134
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Literal	go to state 77

State 354:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 174)

	')'	shift, and go to state 375

State 355:

	STAR-49 -> STAR-49 PAREN-48 .	(Rule 164)

	$default	reduce using rule 164 (STAR-49)

State 356:

	PAREN-50 -> 'else' . CodeBlock	(Rule 166)

	'{'	shift, and go to state 286

	CodeBlock	go to state 376

State 357:

	OPTIONAL-51 -> PAREN-50 .	(Rule 167)

	$default	reduce using rule 167 (OPTIONAL-51)

State 358:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-49 OPTIONAL-51 .	(Rule 169)

	$default	reduce using rule 169 (Conditional)

State 359:

	PAREN-48 -> 'elsif (' . Expression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 377
	Variable	go to state 134
	HashDereferenced	go to state 98
	Operator	go to state 103
	WordScoped	go to state 117
	ArrayReference	go to state 100
	Literal	go to state 77
	ArrayDereferenced	go to state 92
	HashReference	go to state 80

State 360:

	PLUS-52 -> PLUS-52 Operation .	(Rule 176)

	$default	reduce using rule 176 (PLUS-52)

State 361:

	CodeBlock -> '{' PLUS-52 '}' .	(Rule 178)

	$default	reduce using rule 178 (CodeBlock)

State 362:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-45 ')' .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 363:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 186)

	$default	reduce using rule 186 (VariableDeclaration)

State 364:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-20	(Rule 52)

	'@_;'	shift, and go to state 378

State 365:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 53

	Type	go to state 379

State 366:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-23 STAR-24 STAR-25 Properties OPTIONAL-26 STAR-27 LITERAL_NUMBER ';' .	(Rule 67)

	$default	reduce using rule 67 (Class)

State 367:

	Type -> WORD .	(Rule 219)
	TypeMethod -> WORD . '__method'	(Rule 220)

	'__method'	shift, and go to state 380

	VARIABLE_SYMBOL	reduce using rule 219 (Type)

State 368:

	Method -> 'our' TypeMethod . VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';'	(Rule 81)

	VARIABLE_SYMBOL	shift, and go to state 381

State 369:

	STAR-31 -> STAR-31 . PAREN-30	(Rule 74)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-31 . ')' ';'	(Rule 76)

	')'	shift, and go to state 384
	OP21_LIST_COMMA	shift, and go to state 382

	PAREN-30	go to state 383

State 370:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 208)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	ArrayReference	go to state 100
	Expression	go to state 385
	Variable	go to state 134
	HashDereferenced	go to state 98
	WordScoped	go to state 117
	Operator	go to state 103

State 371:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-29 ')' . ';'	(Rule 71)

	';'	shift, and go to state 386

State 372:

	STAR-29 -> STAR-29 PAREN-28 .	(Rule 69)

	$default	reduce using rule 69 (STAR-29)

State 373:

	PAREN-28 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 68)

	'%{'	shift, and go to state 95
	WORD	shift, and go to state 317

	HashDereferenced	go to state 316
	HashEntryTyped	go to state 387

State 374:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 173)

	')'	shift, and go to state 388
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 375:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 174)

	'{'	shift, and go to state 286

	CodeBlock	go to state 389

State 376:

	PAREN-50 -> 'else' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (PAREN-50)

State 377:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	PAREN-48 -> 'elsif (' Expression . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 390
	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 378:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-20	(Rule 52)

	$default	reduce using rule 51 (STAR-20)

	STAR-20	go to state 391

State 379:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 392

State 380:

	TypeMethod -> WORD '__method' .	(Rule 220)

	$default	reduce using rule 220 (TypeMethod)

State 381:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL . '= sub {' OPTIONAL-32 PLUS-33 '}' ';'	(Rule 81)

	'= sub {'	shift, and go to state 393

State 382:

	PAREN-30 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 73)

	'%{'	shift, and go to state 95
	WORD	shift, and go to state 317

	HashDereferenced	go to state 316
	HashEntryTyped	go to state 394

State 383:

	STAR-31 -> STAR-31 PAREN-30 .	(Rule 74)

	$default	reduce using rule 74 (STAR-31)

State 384:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-31 ')' . ';'	(Rule 76)

	';'	shift, and go to state 395

State 385:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 208)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

	')'	reduce using rule 208 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 208 (HashEntryTyped)

State 386:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-29 ')' ';' .	(Rule 71)

	$default	reduce using rule 71 (Properties)

State 387:

	PAREN-28 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 68)

	$default	reduce using rule 68 (PAREN-28)

State 388:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 173)

	'{'	shift, and go to state 286

	CodeBlock	go to state 396

State 389:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 174)

	$default	reduce using rule 174 (LoopForEach)

State 390:

	PAREN-48 -> 'elsif (' Expression ')' . CodeBlock	(Rule 163)

	'{'	shift, and go to state 286

	CodeBlock	go to state 397

State 391:

	STAR-20 -> STAR-20 . ArgumentCheck	(Rule 50)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-20 .	(Rule 52)

	CHECK_OR_CHECKTRACE	shift, and go to state 398

	'%{'	reduce using rule 52 (SubroutineArguments)
	'('	reduce using rule 52 (SubroutineArguments)
	'@{'	reduce using rule 52 (SubroutineArguments)
	'['	reduce using rule 52 (SubroutineArguments)
	'for my integer'	reduce using rule 52 (SubroutineArguments)
	'foreach my'	reduce using rule 52 (SubroutineArguments)
	'if ('	reduce using rule 52 (SubroutineArguments)
	'my'	reduce using rule 52 (SubroutineArguments)
	'undef'	reduce using rule 52 (SubroutineArguments)
	'while ('	reduce using rule 52 (SubroutineArguments)
	'{'	reduce using rule 52 (SubroutineArguments)
	LITERAL_NUMBER	reduce using rule 52 (SubroutineArguments)
	LITERAL_STRING	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 52 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 52 (SubroutineArguments)
	OP01_OPEN_CLOSE	reduce using rule 52 (SubroutineArguments)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 52 (SubroutineArguments)
	OP01_PRINT_VOID	reduce using rule 52 (SubroutineArguments)
	OP01_PRINT_VOID_PAREN	reduce using rule 52 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 52 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 52 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 52 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 52 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 52 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 52 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 52 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 52 (SubroutineArguments)
	WORD	reduce using rule 52 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 52 (SubroutineArguments)

	ArgumentCheck	go to state 399

State 392:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 393:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' . OPTIONAL-32 PLUS-33 '}' ';'	(Rule 81)

	'( my'	shift, and go to state 400

	'%{'	reduce using rule 78 (OPTIONAL-32)
	'('	reduce using rule 78 (OPTIONAL-32)
	'@{'	reduce using rule 78 (OPTIONAL-32)
	'['	reduce using rule 78 (OPTIONAL-32)
	'for my integer'	reduce using rule 78 (OPTIONAL-32)
	'foreach my'	reduce using rule 78 (OPTIONAL-32)
	'if ('	reduce using rule 78 (OPTIONAL-32)
	'my'	reduce using rule 78 (OPTIONAL-32)
	'undef'	reduce using rule 78 (OPTIONAL-32)
	'while ('	reduce using rule 78 (OPTIONAL-32)
	'{'	reduce using rule 78 (OPTIONAL-32)
	LITERAL_NUMBER	reduce using rule 78 (OPTIONAL-32)
	LITERAL_STRING	reduce using rule 78 (OPTIONAL-32)
	OP01_NAMED	reduce using rule 78 (OPTIONAL-32)
	OP01_NAMED_VOID	reduce using rule 78 (OPTIONAL-32)
	OP01_NAMED_VOID_PAREN	reduce using rule 78 (OPTIONAL-32)
	OP01_OPEN_CLOSE	reduce using rule 78 (OPTIONAL-32)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 78 (OPTIONAL-32)
	OP01_PRINT_VOID	reduce using rule 78 (OPTIONAL-32)
	OP01_PRINT_VOID_PAREN	reduce using rule 78 (OPTIONAL-32)
	OP03_MATH_INC_DEC	reduce using rule 78 (OPTIONAL-32)
	OP05_LOGICAL_NEG	reduce using rule 78 (OPTIONAL-32)
	OP05_MATH_NEG	reduce using rule 78 (OPTIONAL-32)
	OP10_NAMED_UNARY	reduce using rule 78 (OPTIONAL-32)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 78 (OPTIONAL-32)
	OP19_LOOP_CONTROL	reduce using rule 78 (OPTIONAL-32)
	OP22_LOGICAL_NOT	reduce using rule 78 (OPTIONAL-32)
	VARIABLE_SYMBOL	reduce using rule 78 (OPTIONAL-32)
	WORD	reduce using rule 78 (OPTIONAL-32)
	WORD_SCOPED	reduce using rule 78 (OPTIONAL-32)

	MethodArguments	go to state 402
	OPTIONAL-32	go to state 401

State 394:

	PAREN-30 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 73)

	$default	reduce using rule 73 (PAREN-30)

State 395:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-31 ')' ';' .	(Rule 76)

	$default	reduce using rule 76 (PropertiesClass)

State 396:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 173)

	$default	reduce using rule 173 (LoopFor)

State 397:

	PAREN-48 -> 'elsif (' Expression ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (PAREN-48)

State 398:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-22 ')' ';'	(Rule 56)

	'('	shift, and go to state 403

State 399:

	STAR-20 -> STAR-20 ArgumentCheck .	(Rule 50)

	$default	reduce using rule 50 (STAR-20)

State 400:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 87)

	TYPE_CLASS_OR_SELF	shift, and go to state 404

State 401:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 . PLUS-33 '}' ';'	(Rule 81)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'if ('	shift, and go to state 87
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_PAREN	shift, and go to state 119
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 93
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 157 (OPTIONAL-47)
	'foreach my'	reduce using rule 157 (OPTIONAL-47)
	'while ('	reduce using rule 157 (OPTIONAL-47)

	ArrayReference	go to state 100
	VariableDeclaration	go to state 121
	Conditional	go to state 99
	Variable	go to state 97
	HashDereferenced	go to state 98
	PAREN-46	go to state 118
	WordScoped	go to state 117
	ArrayDereferenced	go to state 92
	LoopLabel	go to state 90
	Statement	go to state 112
	Operation	go to state 405
	OperatorVoid	go to state 84
	Expression	go to state 104
	OPTIONAL-47	go to state 83
	Operator	go to state 103
	PLUS-33	go to state 406
	VariableModification	go to state 101
	HashReference	go to state 80
	Literal	go to state 77

State 402:

	OPTIONAL-32 -> MethodArguments .	(Rule 77)

	$default	reduce using rule 77 (OPTIONAL-32)

State 403:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-22 ')' ';'	(Rule 56)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 92
	HashReference	go to state 80
	Literal	go to state 77
	ArrayReference	go to state 100
	Expression	go to state 407
	Variable	go to state 134
	HashDereferenced	go to state 98
	WordScoped	go to state 117
	Operator	go to state 103

State 404:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 87)

	$default	reduce using rule 84 (STAR-35)

	STAR-35	go to state 408

State 405:

	PLUS-33 -> Operation .	(Rule 80)

	$default	reduce using rule 80 (PLUS-33)

State 406:

	PLUS-33 -> PLUS-33 . Operation	(Rule 79)
	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 . '}' ';'	(Rule 81)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'if ('	shift, and go to state 87
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	'}'	shift, and go to state 409
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_PAREN	shift, and go to state 119
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP01_PRINT_VOID	shift, and go to state 102
	OP01_PRINT_VOID_PAREN	shift, and go to state 116
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP19_LOOP_CONTROL	shift, and go to state 82
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 93
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 157 (OPTIONAL-47)
	'foreach my'	reduce using rule 157 (OPTIONAL-47)
	'while ('	reduce using rule 157 (OPTIONAL-47)

	Literal	go to state 77
	VariableModification	go to state 101
	HashReference	go to state 80
	Operator	go to state 103
	Expression	go to state 104
	OperatorVoid	go to state 84
	OPTIONAL-47	go to state 83
	Operation	go to state 410
	Statement	go to state 112
	LoopLabel	go to state 90
	ArrayDereferenced	go to state 92
	WordScoped	go to state 117
	Variable	go to state 97
	HashDereferenced	go to state 98
	PAREN-46	go to state 118
	Conditional	go to state 99
	ArrayReference	go to state 100
	VariableDeclaration	go to state 121

State 407:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-22 ')' ';'	(Rule 56)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP21_LIST_COMMA	shift, and go to state 412
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

	')'	reduce using rule 55 (OPTIONAL-22)

	PAREN-21	go to state 411
	OPTIONAL-22	go to state 413

State 408:

	STAR-35 -> STAR-35 . PAREN-34	(Rule 83)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 87)

	')'	shift, and go to state 414
	OP21_LIST_COMMA	shift, and go to state 415

	PAREN-34	go to state 416

State 409:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' . ';'	(Rule 81)

	';'	shift, and go to state 417

State 410:

	PLUS-33 -> PLUS-33 Operation .	(Rule 79)

	$default	reduce using rule 79 (PLUS-33)

State 411:

	OPTIONAL-22 -> PAREN-21 .	(Rule 54)

	$default	reduce using rule 54 (OPTIONAL-22)

State 412:

	PAREN-21 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 53)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Literal	go to state 77
	ArrayReference	go to state 100
	WordScoped	go to state 117
	Operator	go to state 103
	Variable	go to state 134
	Expression	go to state 418
	HashDereferenced	go to state 98

State 413:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 . ')' ';'	(Rule 56)

	')'	shift, and go to state 419

State 414:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-36	(Rule 87)

	OP19_VARIABLE_ASSIGN	shift, and go to state 420

State 415:

	PAREN-34 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 82)

	'my'	shift, and go to state 421

State 416:

	STAR-35 -> STAR-35 PAREN-34 .	(Rule 83)

	$default	reduce using rule 83 (STAR-35)

State 417:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-32 PLUS-33 '}' ';' .	(Rule 81)

	$default	reduce using rule 81 (Method)

State 418:

	PAREN-21 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 53)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP21_LIST_COMMA	shift, and go to state 422
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

State 419:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' . ';'	(Rule 56)

	';'	shift, and go to state 423

State 420:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-36	(Rule 87)

	'@_;'	shift, and go to state 424

State 421:

	PAREN-34 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 82)

	WORD	shift, and go to state 53

	Type	go to state 425

State 422:

	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 53)

	'%{'	shift, and go to state 95
	'('	shift, and go to state 96
	'@{'	shift, and go to state 94
	'['	shift, and go to state 79
	'undef'	shift, and go to state 115
	'{'	shift, and go to state 89
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 122
	OP01_NAMED	shift, and go to state 110
	OP01_OPEN_CLOSE	shift, and go to state 111
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 109
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 113
	OP05_MATH_NEG	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 105
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 91
	OP22_LOGICAL_NOT	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 120
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 77
	HashReference	go to state 80
	ArrayDereferenced	go to state 92
	Operator	go to state 103
	WordScoped	go to state 117
	HashDereferenced	go to state 98
	Variable	go to state 134
	Expression	go to state 426
	ArrayReference	go to state 100

State 423:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-22 ')' ';' .	(Rule 56)

	$default	reduce using rule 56 (ArgumentCheck)

State 424:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-36	(Rule 87)

	$default	reduce using rule 86 (STAR-36)

	STAR-36	go to state 427

State 425:

	PAREN-34 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 82)

	VARIABLE_SYMBOL	shift, and go to state 428

State 426:

	PAREN-21 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 53)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 103)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 106)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 107)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 108)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 109)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 110)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 113)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 114)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 115)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 116)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 117)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 118)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 119)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 120)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 122)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 172
	OP06_REGEX_MATCH	shift, and go to state 176
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 186
	OP08_MATH_ADD_SUB	shift, and go to state 182
	OP08_STRING_CAT	shift, and go to state 174
	OP09_BITWISE_SHIFT	shift, and go to state 184
	OP11_COMPARE_LT_GT	shift, and go to state 185
	OP12_COMPARE_EQ_NEQ	shift, and go to state 187
	OP13_BITWISE_AND	shift, and go to state 180
	OP14_BITWISE_OR_XOR	shift, and go to state 179
	OP15_LOGICAL_AND	shift, and go to state 177
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 173
	OP18_TERNARY	shift, and go to state 181
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 175

	')'	reduce using rule 53 (PAREN-21)

State 427:

	STAR-36 -> STAR-36 . ArgumentCheck	(Rule 85)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-35 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-36 .	(Rule 87)

	CHECK_OR_CHECKTRACE	shift, and go to state 398

	'%{'	reduce using rule 87 (MethodArguments)
	'('	reduce using rule 87 (MethodArguments)
	'@{'	reduce using rule 87 (MethodArguments)
	'['	reduce using rule 87 (MethodArguments)
	'for my integer'	reduce using rule 87 (MethodArguments)
	'foreach my'	reduce using rule 87 (MethodArguments)
	'if ('	reduce using rule 87 (MethodArguments)
	'my'	reduce using rule 87 (MethodArguments)
	'undef'	reduce using rule 87 (MethodArguments)
	'while ('	reduce using rule 87 (MethodArguments)
	'{'	reduce using rule 87 (MethodArguments)
	LITERAL_NUMBER	reduce using rule 87 (MethodArguments)
	LITERAL_STRING	reduce using rule 87 (MethodArguments)
	OP01_NAMED	reduce using rule 87 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 87 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 87 (MethodArguments)
	OP01_OPEN_CLOSE	reduce using rule 87 (MethodArguments)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 87 (MethodArguments)
	OP01_PRINT_VOID	reduce using rule 87 (MethodArguments)
	OP01_PRINT_VOID_PAREN	reduce using rule 87 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 87 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 87 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 87 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 87 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 87 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 87 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 87 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 87 (MethodArguments)
	WORD	reduce using rule 87 (MethodArguments)
	WORD_SCOPED	reduce using rule 87 (MethodArguments)

	ArgumentCheck	go to state 429

State 428:

	PAREN-34 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 82)

	$default	reduce using rule 82 (PAREN-34)

State 429:

	STAR-36 -> STAR-36 ArgumentCheck .	(Rule 85)

	$default	reduce using rule 85 (STAR-36)


Summary:
--------
Number of rules         : 226
Number of terminals     : 90
Number of non-terminals : 110
Number of states        : 430
