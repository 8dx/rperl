Conflicts:
----------
Conflict in state 132 between rule 92 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 132 between rule 92 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 132 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 132 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 132 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 132 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 132 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 132 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 132 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 132 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 132 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 132 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 132 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 132 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 132 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 132 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 143 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 143 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 143 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 143 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 143 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 143 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 143 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 143 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 143 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 143 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 143 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 143 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 143 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 143 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 143 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 143 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 155 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 155 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 155 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 155 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 155 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 155 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 155 between rule 99 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 155 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 155 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 155 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 155 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 155 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 155 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 155 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 155 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 155 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 194 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 194 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 194 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 194 between rule 110 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 194 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 194 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 194 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 194 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 194 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 194 between rule 110 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 194 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 194 between rule 110 and token OP18_TERNARY resolved as shift.
Conflict in state 194 between rule 110 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 194 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 194 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 194 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 206 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 206 between rule 85 and token OP04_MATH_POW resolved as reduce.
Conflict in state 206 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 206 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 206 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 206 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 206 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 206 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 206 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 206 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 206 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 206 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 206 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 206 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 96 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 235 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 235 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 235 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 235 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 235 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 235 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 235 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 235 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 235 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 235 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 235 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 236 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 236 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 236 between rule 112 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 236 between rule 112 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 236 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 236 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 236 between rule 112 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 236 between rule 112 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 236 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 236 between rule 112 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 236 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 236 between rule 112 and token OP18_TERNARY resolved as shift.
Conflict in state 236 between rule 112 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 236 between rule 112 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 236 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 236 between rule 112 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 237 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 237 between rule 102 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 237 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 237 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 237 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 237 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 237 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 237 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 237 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 237 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 237 between rule 102 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 237 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 237 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 237 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 237 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 237 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 238 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 238 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 238 between rule 107 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 238 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 238 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 238 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 238 between rule 107 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 238 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 238 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 238 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 238 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 238 between rule 107 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 238 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 238 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 238 between rule 107 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 239 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 239 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 239 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 239 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 239 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 239 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 239 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 239 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 239 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 239 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 239 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 239 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 239 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 239 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 239 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 239 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 240 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 240 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 240 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 111 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 240 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 240 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 240 between rule 111 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 240 between rule 111 and token OP18_TERNARY resolved as shift.
Conflict in state 240 between rule 111 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 240 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 240 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 240 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 240 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 240 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 240 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 240 between rule 111 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 241 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 241 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 241 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 241 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 241 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 241 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 241 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 241 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 241 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 241 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 241 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 241 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 241 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 241 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 241 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 241 between rule 108 and token OP17_LIST_RANGE resolved as error.
Conflict in state 242 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 242 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 242 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 242 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 242 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 242 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 242 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 242 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 242 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 242 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 242 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 242 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 242 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 242 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 242 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 242 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 243 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 243 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 243 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 243 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 243 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 243 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 243 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 243 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 243 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 243 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 243 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 243 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 243 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 243 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 244 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 244 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 244 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 244 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 244 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 244 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 244 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 244 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 244 between rule 91 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 244 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 244 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 244 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 244 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 244 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 244 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 245 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 245 between rule 98 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 245 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 245 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 245 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 245 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 245 between rule 98 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 245 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 245 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 245 between rule 98 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 245 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 245 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 245 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 245 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 245 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 245 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 246 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 246 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 246 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 246 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 246 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 246 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 246 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 246 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 246 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 246 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 246 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 246 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 246 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 246 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 246 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 246 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 247 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 247 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 247 between rule 97 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 247 between rule 97 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 247 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 247 between rule 97 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 247 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 247 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 247 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 247 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 247 between rule 97 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 247 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 247 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 247 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 247 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 248 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 248 between rule 103 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 248 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 248 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 248 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 248 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 248 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 248 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 248 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 248 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 248 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 248 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 248 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 248 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 367 between rule 108 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 367 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 367 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 367 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 367 between rule 108 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 367 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 367 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 367 between rule 108 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 367 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 367 between rule 108 and token OP17_LIST_RANGE resolved as error.
Conflict in state 367 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 367 between rule 108 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 367 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 367 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 367 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 367 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 381 between rule 87 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 381 between rule 87 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 381 between rule 87 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 381 between rule 87 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 381 between rule 87 and token OP18_TERNARY resolved as shift.
Conflict in state 381 between rule 87 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 381 between rule 87 and token OP08_STRING_CAT resolved as shift.
Conflict in state 381 between rule 87 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 381 between rule 87 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 381 between rule 87 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 381 between rule 87 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 381 between rule 87 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 381 between rule 87 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 381 between rule 87 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 381 between rule 87 and token OP04_MATH_POW resolved as shift.
Conflict in state 381 between rule 87 and token OP11_COMPARE_LT_GT resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	OPTIONAL-23 -> PropertiesClass
58:	OPTIONAL-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';'
66:	Properties -> 'our %properties = (' ')' ';' Critic
67:	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped
68:	STAR-28 -> STAR-28 PAREN-27
69:	STAR-28 -> /* empty */
70:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';'
71:	OPTIONAL-29 -> MethodArguments
72:	OPTIONAL-29 -> /* empty */
73:	PLUS-30 -> PLUS-30 Operation
74:	PLUS-30 -> Operation
75:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'
76:	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
77:	STAR-32 -> STAR-32 PAREN-31
78:	STAR-32 -> /* empty */
79:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'
80:	MethodOrSubroutine -> Method
81:	MethodOrSubroutine -> Subroutine
82:	Operation -> Expression ';'
83:	Operation -> Statement
84:	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
85:	Operator -> OP01_NAMED SubExpression
86:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
87:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
88:	Operator -> OP01_CLOSE FH_REF_SYMBOL
89:	Operator -> OP03_MATH_INC_DEC Variable
90:	Operator -> Variable OP03_MATH_INC_DEC
91:	Operator -> SubExpression OP04_MATH_POW SubExpression
92:	Operator -> OP05_LOGICAL_NEG SubExpression
93:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
94:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
95:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
96:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
97:	Operator -> SubExpression OP08_STRING_CAT SubExpression
98:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
99:	Operator -> OP10_NAMED_UNARY SubExpression
100:	Operator -> OP10_NAMED_UNARY
101:	Operator -> OP10_STRINGIFY_UNARY SubExpression ')'
102:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
103:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
104:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
105:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
106:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
107:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
108:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
109:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
110:	Operator -> OP22_LOGICAL_NEG SubExpression
111:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
112:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
113:	PAREN-33 -> STDOUT_STDERR
114:	OPTIONAL-34 -> PAREN-33
115:	OPTIONAL-34 -> /* empty */
116:	OPTIONAL-35 -> ListElements
117:	OPTIONAL-35 -> /* empty */
118:	OPTIONAL-36 -> LoopLabel
119:	OPTIONAL-36 -> /* empty */
120:	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';'
121:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
122:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';'
123:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
124:	OperatorVoid -> OP19_LOOP_CONTROL OPTIONAL-36 ';'
125:	OPTIONAL-37 -> ListElements
126:	OPTIONAL-37 -> /* empty */
127:	OPTIONAL-38 -> ListElements
128:	OPTIONAL-38 -> /* empty */
129:	Expression -> Operator
130:	Expression -> WordScoped LPAREN OPTIONAL-37 ')'
131:	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 ')'
132:	SubExpression -> Expression
133:	SubExpression -> 'undef'
134:	SubExpression -> Literal
135:	SubExpression -> Variable
136:	SubExpression -> ArrayReference
137:	SubExpression -> ArrayDereferenced
138:	SubExpression -> HashReference
139:	SubExpression -> HashDereferenced
140:	SubExpression -> LBRACE '}'
141:	SubExpression -> LPAREN SubExpression ')'
142:	SubExpressionOrStdin -> SubExpression
143:	SubExpressionOrStdin -> STDIN
144:	PAREN-39 -> LoopLabel COLON
145:	OPTIONAL-40 -> PAREN-39
146:	OPTIONAL-40 -> /* empty */
147:	Statement -> Conditional
148:	Statement -> OPTIONAL-40 Loop
149:	Statement -> OperatorVoid
150:	Statement -> VariableDeclaration
151:	Statement -> VariableModification
152:	PAREN-41 -> 'elsif (' SubExpression ')' CodeBlock
153:	STAR-42 -> STAR-42 PAREN-41
154:	STAR-42 -> /* empty */
155:	PAREN-43 -> 'else' CodeBlock
156:	OPTIONAL-44 -> PAREN-43
157:	OPTIONAL-44 -> /* empty */
158:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-42 OPTIONAL-44
159:	Loop -> LoopFor
160:	Loop -> LoopForEach
161:	Loop -> LoopWhile
162:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
163:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
164:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
165:	PLUS-45 -> PLUS-45 Operation
166:	PLUS-45 -> Operation
167:	CodeBlock -> LBRACE PLUS-45 '}'
168:	STAR-46 -> STAR-46 VariableRetrieval
169:	STAR-46 -> /* empty */
170:	Variable -> VARIABLE_SYMBOL STAR-46
171:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
172:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
173:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
174:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
175:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
176:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
177:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
178:	PAREN-47 -> OP21_LIST_COMMA ListElement
179:	STAR-48 -> STAR-48 PAREN-47
180:	STAR-48 -> /* empty */
181:	PLUS-49 -> PLUS-49 WORD
182:	PLUS-49 -> WORD
183:	ListElements -> ListElement STAR-48
184:	ListElements -> OP01_QW LPAREN PLUS-49 ')'
185:	ListElement -> SubExpression
186:	ListElement -> TypeInner SubExpression
187:	ListElement -> KEYS_OR_VALUES HashDereferenced
188:	OPTIONAL-50 -> ListElements
189:	OPTIONAL-50 -> /* empty */
190:	ArrayReference -> LBRACKET OPTIONAL-50 ']'
191:	ArrayDereferenced -> '@{' Variable '}'
192:	ArrayDereferenced -> '@{' ArrayReference '}'
193:	OPTIONAL-51 -> TypeInner
194:	OPTIONAL-51 -> /* empty */
195:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-51 SubExpression
196:	HashEntry -> HashDereferenced
197:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
198:	HashEntryTyped -> HashDereferenced
199:	PAREN-52 -> OP21_LIST_COMMA HashEntry
200:	STAR-53 -> STAR-53 PAREN-52
201:	STAR-53 -> /* empty */
202:	HashReference -> LBRACE HashEntry STAR-53 '}'
203:	HashDereferenced -> '%{' Variable '}'
204:	HashDereferenced -> '%{' HashReference '}'
205:	WordScoped -> WORD
206:	WordScoped -> WORD_SCOPED
207:	LoopLabel -> WORD
208:	Type -> WORD
209:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
210:	VariableOrLiteral -> Variable
211:	VariableOrLiteral -> Literal
212:	Literal -> LITERAL_STRING
213:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 8
	SHEBANG	shift, and go to state 3

	'package'	reduce using rule 20 (OPTIONAL-9)

	PAREN-1	go to state 4
	Critic	go to state 1
	ModuleHeader	go to state 9
	OPTIONAL-9	go to state 2
	Program	go to state 5
	CompileUnit	go to state 7
	PLUS-2	go to state 6

State 1:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 2:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 10

State 3:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 8

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 12
	OPTIONAL-3	go to state 11

State 4:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 5:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 6:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 8

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 1
	PAREN-1	go to state 13
	OPTIONAL-9	go to state 2
	ModuleHeader	go to state 9

State 7:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 14

State 8:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 16

	PLUS-14	go to state 15

State 9:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 21

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Class	go to state 17
	Package	go to state 19
	Module	go to state 20
	STAR-10	go to state 18

State 10:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 22

State 11:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 25

	Header	go to state 26

State 12:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 13:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 14:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 15:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 27
	WORD	shift, and go to state 28

State 16:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 17:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 18:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 8

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 29
	STAR-11	go to state 30

State 19:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 20:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 21:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 31

State 22:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 32

State 23:

	WordScoped -> WORD_SCOPED .	(Rule 206)

	$default	reduce using rule 206 (WordScoped)

State 24:

	WordScoped -> WORD .	(Rule 205)

	$default	reduce using rule 205 (WordScoped)

State 25:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 33

State 26:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 34

State 27:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 28:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 29:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 30:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 36

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 35
	Include	go to state 37

State 31:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 38

State 32:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 25

	Header	go to state 39

State 33:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 40

State 34:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 8

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_STRINGIFY_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 41
	STAR-5	go to state 42

State 35:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 45
	'use constant'	shift, and go to state 43

	PLUS-13	go to state 47
	Subroutine	go to state 46
	Constant	go to state 44

State 36:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 48

State 37:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 38:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 49

State 39:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 40:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 50

State 41:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 42:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 36

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_STRINGIFY_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	STAR-6	go to state 51
	Include	go to state 52

State 43:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 53

State 44:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 45:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 54

	Type	go to state 55

State 46:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 47:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 45
	LITERAL_NUMBER	shift, and go to state 57

	Subroutine	go to state 56

State 48:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 58
	'qw('	shift, and go to state 59

State 49:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 36

	Include	go to state 60

State 50:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 61

State 51:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 43

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_STRINGIFY_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 62
	STAR-7	go to state 63

State 52:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 53:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 64

State 54:

	Type -> WORD .	(Rule 208)

	$default	reduce using rule 208 (Type)

State 55:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 65

State 56:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 57:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 66

State 58:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 59:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 67

	PLUS-15	go to state 68

State 60:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 69

State 61:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 62:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 63:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'if ('	shift, and go to state 78
	'my'	shift, and go to state 73
	'our'	shift, and go to state 45
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 79
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_OPEN	shift, and go to state 114
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 94
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 146 (OPTIONAL-40)
	'foreach my'	reduce using rule 146 (OPTIONAL-40)
	'while ('	reduce using rule 146 (OPTIONAL-40)

	HashReference	go to state 112
	HashDereferenced	go to state 87
	Statement	go to state 91
	PLUS-8	go to state 89
	Operator	go to state 90
	LoopLabel	go to state 113
	VariableDeclaration	go to state 83
	OPTIONAL-40	go to state 106
	SubExpression	go to state 104
	Operation	go to state 103
	OperatorVoid	go to state 86
	Subroutine	go to state 85
	ArrayDereferenced	go to state 107
	WordScoped	go to state 97
	VariableModification	go to state 77
	Literal	go to state 96
	ArrayReference	go to state 101
	Variable	go to state 100
	PAREN-39	go to state 99
	Expression	go to state 93
	Conditional	go to state 74

State 64:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 116

	TypeInner	go to state 115

State 65:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 117

State 66:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 67:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 68:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 118
	WORD	shift, and go to state 119

State 69:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 8

	'our %properties = ('	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 121
	STAR-21	go to state 120

State 70:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-35 ';'	(Rule 122)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	';'	reduce using rule 117 (OPTIONAL-35)

	ArrayDereferenced	go to state 107
	Expression	go to state 128
	SubExpression	go to state 126
	ListElement	go to state 127
	OPTIONAL-35	go to state 130
	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90
	Literal	go to state 96
	TypeInner	go to state 131
	WordScoped	go to state 97
	HashReference	go to state 112
	ListElements	go to state 122
	HashDereferenced	go to state 87

State 71:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 92)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Literal	go to state 96
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 132

State 72:

	HashDereferenced -> '%{' . Variable '}'	(Rule 203)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 204)

	LBRACE	shift, and go to state 135
	VARIABLE_SYMBOL	shift, and go to state 105

	HashReference	go to state 134
	Variable	go to state 133

State 73:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 174)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 175)

	WORD	shift, and go to state 54

	Type	go to state 136

State 74:

	Statement -> Conditional .	(Rule 147)

	$default	reduce using rule 147 (Statement)

State 75:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 88)

	FH_REF_SYMBOL	shift, and go to state 137

State 76:

	SubExpression -> LBRACE . '}'	(Rule 140)
	HashReference -> LBRACE . HashEntry STAR-53 '}'	(Rule 202)

	'%{'	shift, and go to state 72
	'}'	shift, and go to state 138
	WORD	shift, and go to state 139

	HashDereferenced	go to state 141
	HashEntry	go to state 140

State 77:

	Statement -> VariableModification .	(Rule 151)

	$default	reduce using rule 151 (Statement)

State 78:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-42 OPTIONAL-44	(Rule 158)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 142
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	Literal	go to state 96

State 79:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 123)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 107
	Expression	go to state 128
	SubExpression	go to state 143
	ListElement	go to state 144
	Operator	go to state 90
	Variable	go to state 129
	ArrayReference	go to state 101
	TypeInner	go to state 131
	Literal	go to state 96
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112

State 80:

	Operator -> OP10_STRINGIFY_UNARY . SubExpression ')'	(Rule 101)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	Literal	go to state 96
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 145

State 81:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 89)

	VARIABLE_SYMBOL	shift, and go to state 105

	Variable	go to state 146

State 82:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 191)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 192)

	LBRACKET	shift, and go to state 108
	VARIABLE_SYMBOL	shift, and go to state 105

	Variable	go to state 147
	ArrayReference	go to state 148

State 83:

	Statement -> VariableDeclaration .	(Rule 150)

	$default	reduce using rule 150 (Statement)

State 84:

	Literal -> LITERAL_NUMBER .	(Rule 213)

	$default	reduce using rule 213 (Literal)

State 85:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 86:

	Statement -> OperatorVoid .	(Rule 149)

	$default	reduce using rule 149 (Statement)

State 87:

	SubExpression -> HashDereferenced .	(Rule 139)

	$default	reduce using rule 139 (SubExpression)

State 88:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 93)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashReference	go to state 112
	WordScoped	go to state 97
	HashDereferenced	go to state 87
	Literal	go to state 96
	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90
	SubExpression	go to state 149
	Expression	go to state 128
	ArrayDereferenced	go to state 107

State 89:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'if ('	shift, and go to state 78
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 79
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_OPEN	shift, and go to state 114
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 94
	WORD_SCOPED	shift, and go to state 23

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 146 (OPTIONAL-40)
	'foreach my'	reduce using rule 146 (OPTIONAL-40)
	'while ('	reduce using rule 146 (OPTIONAL-40)

	Literal	go to state 96
	VariableModification	go to state 77
	WordScoped	go to state 97
	Variable	go to state 100
	PAREN-39	go to state 99
	ArrayReference	go to state 101
	Conditional	go to state 74
	Expression	go to state 93
	HashDereferenced	go to state 87
	HashReference	go to state 112
	LoopLabel	go to state 113
	Operator	go to state 90
	Statement	go to state 91
	Operation	go to state 150
	SubExpression	go to state 104
	OPTIONAL-40	go to state 106
	VariableDeclaration	go to state 83
	ArrayDereferenced	go to state 107
	OperatorVoid	go to state 86

State 90:

	Expression -> Operator .	(Rule 129)

	$default	reduce using rule 129 (Expression)

State 91:

	Operation -> Statement .	(Rule 83)

	$default	reduce using rule 83 (Operation)

State 92:

	Operator -> LPAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 141)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 153
	OP01_OPEN	shift, and go to state 114
	OP01_PRINT	shift, and go to state 152
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Operator	go to state 90
	Variable	go to state 129
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	Literal	go to state 96
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 151

State 93:

	Operation -> Expression . ';'	(Rule 82)
	SubExpression -> Expression .	(Rule 132)

	';'	shift, and go to state 154

	OP04_MATH_POW	reduce using rule 132 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 132 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 132 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 132 (SubExpression)
	OP08_STRING_CAT	reduce using rule 132 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 132 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 132 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 132 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 132 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 132 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 132 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 132 (SubExpression)
	OP18_TERNARY	reduce using rule 132 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 132 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 132 (SubExpression)

State 94:

	WordScoped -> WORD .	(Rule 205)
	LoopLabel -> WORD .	(Rule 207)

	COLON	reduce using rule 207 (LoopLabel)
	LPAREN	reduce using rule 205 (WordScoped)

State 95:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 99)
	Operator -> OP10_NAMED_UNARY .	(Rule 100)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP04_MATH_POW	reduce using rule 100 (Operator)
	OP06_REGEX_MATCH	reduce using rule 100 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 100 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 100 (Operator)
	OP08_STRING_CAT	reduce using rule 100 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

	ArrayDereferenced	go to state 107
	Expression	go to state 128
	SubExpression	go to state 155
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	Literal	go to state 96
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97

State 96:

	SubExpression -> Literal .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 97:

	Expression -> WordScoped . LPAREN OPTIONAL-37 ')'	(Rule 130)

	LPAREN	shift, and go to state 156

State 98:

	Literal -> LITERAL_STRING .	(Rule 212)

	$default	reduce using rule 212 (Literal)

State 99:

	OPTIONAL-40 -> PAREN-39 .	(Rule 145)

	$default	reduce using rule 145 (OPTIONAL-40)

State 100:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 ')'	(Rule 131)
	SubExpression -> Variable .	(Rule 135)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 176)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 177)

	OP02_METHOD_THINARROW	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 160
	OP19_VARIABLE_ASSIGN	shift, and go to state 158
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 159

	OP04_MATH_POW	reduce using rule 135 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 135 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 135 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 135 (SubExpression)
	OP08_STRING_CAT	reduce using rule 135 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 135 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 135 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 135 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 135 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 135 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 135 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 135 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 135 (SubExpression)
	OP18_TERNARY	reduce using rule 135 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 135 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 135 (SubExpression)

State 101:

	SubExpression -> ArrayReference .	(Rule 136)

	$default	reduce using rule 136 (SubExpression)

State 102:

	OperatorVoid -> OP01_PRINT . OPTIONAL-34 ListElements ';'	(Rule 120)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 121)

	FH_REF_SYMBOL_BRACES	shift, and go to state 162
	STDOUT_STDERR	shift, and go to state 164

	'%{'	reduce using rule 115 (OPTIONAL-34)
	'@{'	reduce using rule 115 (OPTIONAL-34)
	'my'	reduce using rule 115 (OPTIONAL-34)
	'undef'	reduce using rule 115 (OPTIONAL-34)
	KEYS_OR_VALUES	reduce using rule 115 (OPTIONAL-34)
	LBRACE	reduce using rule 115 (OPTIONAL-34)
	LBRACKET	reduce using rule 115 (OPTIONAL-34)
	LITERAL_NUMBER	reduce using rule 115 (OPTIONAL-34)
	LITERAL_STRING	reduce using rule 115 (OPTIONAL-34)
	LPAREN	reduce using rule 115 (OPTIONAL-34)
	OP01_CLOSE	reduce using rule 115 (OPTIONAL-34)
	OP01_NAMED	reduce using rule 115 (OPTIONAL-34)
	OP01_OPEN	reduce using rule 115 (OPTIONAL-34)
	OP01_QW	reduce using rule 115 (OPTIONAL-34)
	OP03_MATH_INC_DEC	reduce using rule 115 (OPTIONAL-34)
	OP05_LOGICAL_NEG	reduce using rule 115 (OPTIONAL-34)
	OP05_MATH_NEG_LPAREN	reduce using rule 115 (OPTIONAL-34)
	OP10_NAMED_UNARY	reduce using rule 115 (OPTIONAL-34)
	OP10_STRINGIFY_UNARY	reduce using rule 115 (OPTIONAL-34)
	OP22_LOGICAL_NEG	reduce using rule 115 (OPTIONAL-34)
	VARIABLE_SYMBOL	reduce using rule 115 (OPTIONAL-34)
	WORD	reduce using rule 115 (OPTIONAL-34)
	WORD_SCOPED	reduce using rule 115 (OPTIONAL-34)

	PAREN-33	go to state 161
	OPTIONAL-34	go to state 163

State 103:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 104:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 105:

	Variable -> VARIABLE_SYMBOL . STAR-46	(Rule 170)

	$default	reduce using rule 169 (STAR-46)

	STAR-46	go to state 181

State 106:

	Statement -> OPTIONAL-40 . Loop	(Rule 148)

	'for my integer'	shift, and go to state 186
	'foreach my'	shift, and go to state 183
	'while ('	shift, and go to state 187

	LoopFor	go to state 184
	LoopForEach	go to state 185
	LoopWhile	go to state 182
	Loop	go to state 188

State 107:

	SubExpression -> ArrayDereferenced .	(Rule 137)

	$default	reduce using rule 137 (SubExpression)

State 108:

	ArrayReference -> LBRACKET . OPTIONAL-50 ']'	(Rule 190)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	']'	reduce using rule 189 (OPTIONAL-50)

	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129
	ListElement	go to state 127
	OPTIONAL-50	go to state 190
	ListElements	go to state 189
	HashReference	go to state 112
	WordScoped	go to state 97
	HashDereferenced	go to state 87
	Literal	go to state 96
	TypeInner	go to state 131
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 126

State 109:

	SubExpression -> 'undef' .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 110:

	OperatorVoid -> OP19_LOOP_CONTROL . OPTIONAL-36 ';'	(Rule 124)

	WORD	shift, and go to state 192

	';'	reduce using rule 119 (OPTIONAL-36)

	LoopLabel	go to state 191
	OPTIONAL-36	go to state 193

State 111:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 110)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 96
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	Operator	go to state 90
	Variable	go to state 129
	ArrayReference	go to state 101
	SubExpression	go to state 194
	ArrayDereferenced	go to state 107
	Expression	go to state 128

State 112:

	SubExpression -> HashReference .	(Rule 138)

	$default	reduce using rule 138 (SubExpression)

State 113:

	PAREN-39 -> LoopLabel . COLON	(Rule 144)

	COLON	shift, and go to state 195

State 114:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'my'	shift, and go to state 196

State 115:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98

	Literal	go to state 197

State 116:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 209)

	WORD	shift, and go to state 54

	Type	go to state 198

State 117:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 199

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_STRINGIFY_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	OPTIONAL-16	go to state 201
	SubroutineArguments	go to state 200

State 118:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 202

State 119:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 120:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 36

	'our %properties = ('	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 203
	STAR-22	go to state 204

State 121:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 122:

	OPTIONAL-35 -> ListElements .	(Rule 116)

	$default	reduce using rule 116 (OPTIONAL-35)

State 123:

	ListElements -> OP01_QW . LPAREN PLUS-49 ')'	(Rule 184)

	LPAREN	shift, and go to state 205

State 124:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Literal	go to state 96
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	SubExpression	go to state 206
	Expression	go to state 128
	ArrayDereferenced	go to state 107

State 125:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 187)

	'%{'	shift, and go to state 72

	HashDereferenced	go to state 207

State 126:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	ListElement -> SubExpression .	(Rule 185)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

	')'	reduce using rule 185 (ListElement)
	';'	reduce using rule 185 (ListElement)
	']'	reduce using rule 185 (ListElement)
	OP21_LIST_COMMA	reduce using rule 185 (ListElement)

State 127:

	ListElements -> ListElement . STAR-48	(Rule 183)

	$default	reduce using rule 180 (STAR-48)

	STAR-48	go to state 208

State 128:

	SubExpression -> Expression .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 129:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 90)
	Expression -> Variable . OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 ')'	(Rule 131)
	SubExpression -> Variable .	(Rule 135)

	OP02_METHOD_THINARROW	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 160

	')'	reduce using rule 135 (SubExpression)
	';'	reduce using rule 135 (SubExpression)
	']'	reduce using rule 135 (SubExpression)
	'}'	reduce using rule 135 (SubExpression)
	OP04_MATH_POW	reduce using rule 135 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 135 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 135 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 135 (SubExpression)
	OP08_STRING_CAT	reduce using rule 135 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 135 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 135 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 135 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 135 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 135 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 135 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 135 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 135 (SubExpression)
	OP18_TERNARY	reduce using rule 135 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 135 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 135 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 135 (SubExpression)

State 130:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 . ';'	(Rule 122)

	';'	shift, and go to state 209

State 131:

	ListElement -> TypeInner . SubExpression	(Rule 186)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	Literal	go to state 96
	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129
	SubExpression	go to state 210
	Expression	go to state 128
	ArrayDereferenced	go to state 107

State 132:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 92)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP06_REGEX_MATCH	reduce using rule 92 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 133:

	HashDereferenced -> '%{' Variable . '}'	(Rule 203)

	'}'	shift, and go to state 211

State 134:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 204)

	'}'	shift, and go to state 212

State 135:

	HashReference -> LBRACE . HashEntry STAR-53 '}'	(Rule 202)

	'%{'	shift, and go to state 72
	WORD	shift, and go to state 139

	HashEntry	go to state 140
	HashDereferenced	go to state 141

State 136:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 174)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 175)

	VARIABLE_SYMBOL	shift, and go to state 213

State 137:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 138:

	SubExpression -> LBRACE '}' .	(Rule 140)

	$default	reduce using rule 140 (SubExpression)

State 139:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-51 SubExpression	(Rule 195)

	OP20_HASH_FATARROW	shift, and go to state 214

State 140:

	HashReference -> LBRACE HashEntry . STAR-53 '}'	(Rule 202)

	$default	reduce using rule 201 (STAR-53)

	STAR-53	go to state 215

State 141:

	HashEntry -> HashDereferenced .	(Rule 196)

	$default	reduce using rule 196 (HashEntry)

State 142:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-42 OPTIONAL-44	(Rule 158)

	')'	shift, and go to state 216
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 143:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	ListElement -> SubExpression .	(Rule 185)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 185 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 144:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 123)

	OP21_LIST_COMMA	shift, and go to state 217

State 145:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_STRINGIFY_UNARY SubExpression . ')'	(Rule 101)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	')'	shift, and go to state 218
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 146:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 89)

	$default	reduce using rule 89 (Operator)

State 147:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 191)

	'}'	shift, and go to state 219

State 148:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 192)

	'}'	shift, and go to state 220

State 149:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 93)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	')'	shift, and go to state 221
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 150:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 151:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 141)

	')'	shift, and go to state 222
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 152:

	Operator -> LPAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 84)

	FH_REF_SYMBOL_BRACES	shift, and go to state 223

State 153:

	Operator -> OP01_NAMED . SubExpression	(Rule 85)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 143
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	Literal	go to state 96
	TypeInner	go to state 131
	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90
	ListElement	go to state 224

State 154:

	Operation -> Expression ';' .	(Rule 82)

	$default	reduce using rule 82 (Operation)

State 155:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 99)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 156:

	Expression -> WordScoped LPAREN . OPTIONAL-37 ')'	(Rule 130)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 126 (OPTIONAL-37)

	SubExpression	go to state 126
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	ListElements	go to state 225
	TypeInner	go to state 131
	Literal	go to state 96
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	OPTIONAL-37	go to state 226
	ListElement	go to state 127

State 157:

	Expression -> Variable OP02_METHOD_THINARROW . WORD LPAREN OPTIONAL-38 ')'	(Rule 131)

	WORD	shift, and go to state 227

State 158:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 176)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	STDIN	shift, and go to state 229
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	Literal	go to state 96
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	SubExpression	go to state 228
	Expression	go to state 128
	SubExpressionOrStdin	go to state 230
	ArrayDereferenced	go to state 107

State 159:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 177)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Literal	go to state 96
	Operator	go to state 90
	Variable	go to state 129
	ArrayReference	go to state 101
	SubExpression	go to state 231
	Expression	go to state 128
	ArrayDereferenced	go to state 107

State 160:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 161:

	OPTIONAL-34 -> PAREN-33 .	(Rule 114)

	$default	reduce using rule 114 (OPTIONAL-34)

State 162:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 121)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Operator	go to state 90
	Variable	go to state 129
	ArrayReference	go to state 101
	ListElement	go to state 127
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	ListElements	go to state 232
	HashReference	go to state 112
	TypeInner	go to state 131
	Literal	go to state 96
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 126

State 163:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 . ListElements ';'	(Rule 120)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 126
	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129
	ListElement	go to state 127
	ListElements	go to state 233
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	Literal	go to state 96
	TypeInner	go to state 131

State 164:

	PAREN-33 -> STDOUT_STDERR .	(Rule 113)

	$default	reduce using rule 113 (PAREN-33)

State 165:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 94)

	OP06_REGEX_PATTERN	shift, and go to state 234

State 166:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 96)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 235
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	HashReference	go to state 112
	WordScoped	go to state 97
	HashDereferenced	go to state 87
	Literal	go to state 96
	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129

State 167:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 112)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 236
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Literal	go to state 96

State 168:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 102)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 107
	Expression	go to state 128
	SubExpression	go to state 237
	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90
	Literal	go to state 96
	HashReference	go to state 112
	WordScoped	go to state 97
	HashDereferenced	go to state 87

State 169:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 107)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 107
	Expression	go to state 128
	SubExpression	go to state 238
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	Literal	go to state 96
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97

State 170:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 104)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129
	HashReference	go to state 112
	WordScoped	go to state 97
	HashDereferenced	go to state 87
	Literal	go to state 96
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 239

State 171:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 111)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90
	Literal	go to state 96
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	ArrayDereferenced	go to state 107
	Expression	go to state 128
	SubExpression	go to state 240

State 172:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 108)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Literal	go to state 96
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	SubExpression	go to state 241
	ArrayDereferenced	go to state 107
	Expression	go to state 128

State 173:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 106)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 242
	Operator	go to state 90
	Variable	go to state 129
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Literal	go to state 96

State 174:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 105)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 243
	ArrayDereferenced	go to state 107
	Expression	go to state 128
	Literal	go to state 96
	HashReference	go to state 112
	WordScoped	go to state 97
	HashDereferenced	go to state 87
	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90

State 175:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 91)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 244
	ArrayDereferenced	go to state 107
	Expression	go to state 128
	Literal	go to state 96
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129

State 176:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 98)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 245
	ArrayDereferenced	go to state 107
	Expression	go to state 128
	Literal	go to state 96
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101

State 177:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 95)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	Literal	go to state 96
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 246

State 178:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 97)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 247
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	Literal	go to state 96

State 179:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 103)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayDereferenced	go to state 107
	Expression	go to state 128
	SubExpression	go to state 248
	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129
	Literal	go to state 96
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87

State 180:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 109)

	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	VARIABLE_SYMBOL	shift, and go to state 105

	Literal	go to state 251
	Variable	go to state 250
	VariableOrLiteral	go to state 249

State 181:

	STAR-46 -> STAR-46 . VariableRetrieval	(Rule 168)
	Variable -> VARIABLE_SYMBOL STAR-46 .	(Rule 170)

	OP02_ARRAY_THINARROW	shift, and go to state 253
	OP02_HASH_THINARROW	shift, and go to state 252

	')'	reduce using rule 170 (Variable)
	';'	reduce using rule 170 (Variable)
	']'	reduce using rule 170 (Variable)
	'}'	reduce using rule 170 (Variable)
	COLON	reduce using rule 170 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 170 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 170 (Variable)
	OP04_MATH_POW	reduce using rule 170 (Variable)
	OP06_REGEX_MATCH	reduce using rule 170 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 170 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 170 (Variable)
	OP08_STRING_CAT	reduce using rule 170 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 170 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 170 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 170 (Variable)
	OP13_BITWISE_AND	reduce using rule 170 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 170 (Variable)
	OP15_LOGICAL_AND	reduce using rule 170 (Variable)
	OP16_LOGICAL_OR	reduce using rule 170 (Variable)
	OP17_LIST_RANGE	reduce using rule 170 (Variable)
	OP18_TERNARY	reduce using rule 170 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 170 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 170 (Variable)
	OP21_LIST_COMMA	reduce using rule 170 (Variable)
	OP23_LOGICAL_AND	reduce using rule 170 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 170 (Variable)

	VariableRetrieval	go to state 254

State 182:

	Loop -> LoopWhile .	(Rule 161)

	$default	reduce using rule 161 (Loop)

State 183:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 163)

	WORD	shift, and go to state 54

	Type	go to state 255

State 184:

	Loop -> LoopFor .	(Rule 159)

	$default	reduce using rule 159 (Loop)

State 185:

	Loop -> LoopForEach .	(Rule 160)

	$default	reduce using rule 160 (Loop)

State 186:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 162)

	VARIABLE_SYMBOL	shift, and go to state 256

State 187:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 164)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 257
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	Literal	go to state 96
	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90

State 188:

	Statement -> OPTIONAL-40 Loop .	(Rule 148)

	$default	reduce using rule 148 (Statement)

State 189:

	OPTIONAL-50 -> ListElements .	(Rule 188)

	$default	reduce using rule 188 (OPTIONAL-50)

State 190:

	ArrayReference -> LBRACKET OPTIONAL-50 . ']'	(Rule 190)

	']'	shift, and go to state 258

State 191:

	OPTIONAL-36 -> LoopLabel .	(Rule 118)

	$default	reduce using rule 118 (OPTIONAL-36)

State 192:

	LoopLabel -> WORD .	(Rule 207)

	$default	reduce using rule 207 (LoopLabel)

State 193:

	OperatorVoid -> OP19_LOOP_CONTROL OPTIONAL-36 . ';'	(Rule 124)

	';'	shift, and go to state 259

State 194:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 110)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 195:

	PAREN-39 -> LoopLabel COLON .	(Rule 144)

	$default	reduce using rule 144 (PAREN-39)

State 196:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	'filehandle_ref'	shift, and go to state 260

State 197:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 261

State 198:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 209)

	'$TYPED_'	shift, and go to state 262

State 199:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 54

	Type	go to state 263

State 200:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 201:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'if ('	shift, and go to state 78
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 79
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_OPEN	shift, and go to state 114
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 94
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 146 (OPTIONAL-40)
	'foreach my'	reduce using rule 146 (OPTIONAL-40)
	'while ('	reduce using rule 146 (OPTIONAL-40)

	ArrayDereferenced	go to state 107
	OperatorVoid	go to state 86
	Operation	go to state 265
	SubExpression	go to state 104
	OPTIONAL-40	go to state 106
	VariableDeclaration	go to state 83
	LoopLabel	go to state 113
	Operator	go to state 90
	Statement	go to state 91
	HashDereferenced	go to state 87
	HashReference	go to state 112
	Conditional	go to state 74
	Expression	go to state 93
	PLUS-17	go to state 264
	Variable	go to state 100
	PAREN-39	go to state 99
	ArrayReference	go to state 101
	Literal	go to state 96
	VariableModification	go to state 77
	WordScoped	go to state 97

State 202:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 203:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 204:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties = ('	shift, and go to state 268
	'use constant'	shift, and go to state 43

	Properties	go to state 267
	Constant	go to state 266

State 205:

	ListElements -> OP01_QW LPAREN . PLUS-49 ')'	(Rule 184)

	WORD	shift, and go to state 270

	PLUS-49	go to state 269

State 206:

	Operator -> OP01_NAMED SubExpression .	(Rule 85)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP04_MATH_POW	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 207:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 187)

	$default	reduce using rule 187 (ListElement)

State 208:

	STAR-48 -> STAR-48 . PAREN-47	(Rule 179)
	ListElements -> ListElement STAR-48 .	(Rule 183)

	OP21_LIST_COMMA	shift, and go to state 272

	')'	reduce using rule 183 (ListElements)
	';'	reduce using rule 183 (ListElements)
	']'	reduce using rule 183 (ListElements)

	PAREN-47	go to state 271

State 209:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-35 ';' .	(Rule 122)

	$default	reduce using rule 122 (OperatorVoid)

State 210:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	ListElement -> TypeInner SubExpression .	(Rule 186)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

	')'	reduce using rule 186 (ListElement)
	';'	reduce using rule 186 (ListElement)
	']'	reduce using rule 186 (ListElement)
	OP21_LIST_COMMA	reduce using rule 186 (ListElement)

State 211:

	HashDereferenced -> '%{' Variable '}' .	(Rule 203)

	$default	reduce using rule 203 (HashDereferenced)

State 212:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 204)

	$default	reduce using rule 204 (HashDereferenced)

State 213:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 174)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 175)

	';'	shift, and go to state 274
	OP19_VARIABLE_ASSIGN	shift, and go to state 273

State 214:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-51 SubExpression	(Rule 195)

	'my'	shift, and go to state 116

	'%{'	reduce using rule 194 (OPTIONAL-51)
	'@{'	reduce using rule 194 (OPTIONAL-51)
	'undef'	reduce using rule 194 (OPTIONAL-51)
	LBRACE	reduce using rule 194 (OPTIONAL-51)
	LBRACKET	reduce using rule 194 (OPTIONAL-51)
	LITERAL_NUMBER	reduce using rule 194 (OPTIONAL-51)
	LITERAL_STRING	reduce using rule 194 (OPTIONAL-51)
	LPAREN	reduce using rule 194 (OPTIONAL-51)
	OP01_CLOSE	reduce using rule 194 (OPTIONAL-51)
	OP01_NAMED	reduce using rule 194 (OPTIONAL-51)
	OP01_OPEN	reduce using rule 194 (OPTIONAL-51)
	OP03_MATH_INC_DEC	reduce using rule 194 (OPTIONAL-51)
	OP05_LOGICAL_NEG	reduce using rule 194 (OPTIONAL-51)
	OP05_MATH_NEG_LPAREN	reduce using rule 194 (OPTIONAL-51)
	OP10_NAMED_UNARY	reduce using rule 194 (OPTIONAL-51)
	OP10_STRINGIFY_UNARY	reduce using rule 194 (OPTIONAL-51)
	OP22_LOGICAL_NEG	reduce using rule 194 (OPTIONAL-51)
	VARIABLE_SYMBOL	reduce using rule 194 (OPTIONAL-51)
	WORD	reduce using rule 194 (OPTIONAL-51)
	WORD_SCOPED	reduce using rule 194 (OPTIONAL-51)

	OPTIONAL-51	go to state 275
	TypeInner	go to state 276

State 215:

	STAR-53 -> STAR-53 . PAREN-52	(Rule 200)
	HashReference -> LBRACE HashEntry STAR-53 . '}'	(Rule 202)

	'}'	shift, and go to state 279
	OP21_LIST_COMMA	shift, and go to state 278

	PAREN-52	go to state 277

State 216:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-42 OPTIONAL-44	(Rule 158)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 280

State 217:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 123)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	HashDereferenced	go to state 87
	HashReference	go to state 112
	ListElements	go to state 282
	WordScoped	go to state 97
	TypeInner	go to state 131
	Literal	go to state 96
	Operator	go to state 90
	Variable	go to state 129
	ArrayReference	go to state 101
	ListElement	go to state 127
	SubExpression	go to state 126
	Expression	go to state 128
	ArrayDereferenced	go to state 107

State 218:

	Operator -> OP10_STRINGIFY_UNARY SubExpression ')' .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 219:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 191)

	$default	reduce using rule 191 (ArrayDereferenced)

State 220:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 192)

	$default	reduce using rule 192 (ArrayDereferenced)

State 221:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 222:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 141)

	$default	reduce using rule 141 (SubExpression)

State 223:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 84)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 126
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	ListElement	go to state 127
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	ListElements	go to state 283
	TypeInner	go to state 131
	Literal	go to state 96

State 224:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 86)

	OP21_LIST_COMMA	shift, and go to state 284

State 225:

	OPTIONAL-37 -> ListElements .	(Rule 125)

	$default	reduce using rule 125 (OPTIONAL-37)

State 226:

	Expression -> WordScoped LPAREN OPTIONAL-37 . ')'	(Rule 130)

	')'	shift, and go to state 285

State 227:

	Expression -> Variable OP02_METHOD_THINARROW WORD . LPAREN OPTIONAL-38 ')'	(Rule 131)

	LPAREN	shift, and go to state 286

State 228:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	SubExpressionOrStdin -> SubExpression .	(Rule 142)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

	';'	reduce using rule 142 (SubExpressionOrStdin)

State 229:

	SubExpressionOrStdin -> STDIN .	(Rule 143)

	$default	reduce using rule 143 (SubExpressionOrStdin)

State 230:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 176)

	';'	shift, and go to state 287

State 231:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 177)

	';'	shift, and go to state 288
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 232:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 121)

	';'	shift, and go to state 289

State 233:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements . ';'	(Rule 120)

	';'	shift, and go to state 290

State 234:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 94)

	$default	reduce using rule 94 (Operator)

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 236:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171

	')'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 237:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 238:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 239:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 240:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180

	')'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 241:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 242:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 243:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 244:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP06_REGEX_MATCH	reduce using rule 91 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 245:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 98 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 98 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 246:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 247:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP08_STRING_CAT	reduce using rule 97 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 97 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 97 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 248:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 249:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 109)

	COLON	shift, and go to state 291

State 250:

	VariableOrLiteral -> Variable .	(Rule 210)

	$default	reduce using rule 210 (VariableOrLiteral)

State 251:

	VariableOrLiteral -> Literal .	(Rule 211)

	$default	reduce using rule 211 (VariableOrLiteral)

State 252:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 172)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 173)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 293
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 292
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Literal	go to state 96
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101

State 253:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 171)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	Literal	go to state 96
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 294

State 254:

	STAR-46 -> STAR-46 VariableRetrieval .	(Rule 168)

	$default	reduce using rule 168 (STAR-46)

State 255:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 163)

	VARIABLE_SYMBOL	shift, and go to state 295

State 256:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 162)

	LPAREN	shift, and go to state 296

State 257:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 164)

	')'	shift, and go to state 297
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 258:

	ArrayReference -> LBRACKET OPTIONAL-50 ']' .	(Rule 190)

	$default	reduce using rule 190 (ArrayReference)

State 259:

	OperatorVoid -> OP19_LOOP_CONTROL OPTIONAL-36 ';' .	(Rule 124)

	$default	reduce using rule 124 (OperatorVoid)

State 260:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	FH_REF_SYMBOL	shift, and go to state 298

State 261:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 262:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 209)

	WORD	shift, and go to state 299

State 263:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 300

State 264:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'if ('	shift, and go to state 78
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'}'	shift, and go to state 301
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 79
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_OPEN	shift, and go to state 114
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 94
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 146 (OPTIONAL-40)
	'foreach my'	reduce using rule 146 (OPTIONAL-40)
	'while ('	reduce using rule 146 (OPTIONAL-40)

	Conditional	go to state 74
	Expression	go to state 93
	ArrayReference	go to state 101
	PAREN-39	go to state 99
	Variable	go to state 100
	Literal	go to state 96
	WordScoped	go to state 97
	VariableModification	go to state 77
	ArrayDereferenced	go to state 107
	OperatorVoid	go to state 86
	OPTIONAL-40	go to state 106
	SubExpression	go to state 104
	Operation	go to state 302
	VariableDeclaration	go to state 83
	LoopLabel	go to state 113
	Statement	go to state 91
	Operator	go to state 90
	HashReference	go to state 112
	HashDereferenced	go to state 87

State 265:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 266:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 267:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties_class = ('	shift, and go to state 305

	'our'	reduce using rule 58 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 58 (OPTIONAL-23)

	OPTIONAL-23	go to state 304
	PropertiesClass	go to state 303

State 268:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-26 ')' ';'	(Rule 65)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 8
	')'	shift, and go to state 307

	Critic	go to state 306

State 269:

	PLUS-49 -> PLUS-49 . WORD	(Rule 181)
	ListElements -> OP01_QW LPAREN PLUS-49 . ')'	(Rule 184)

	')'	shift, and go to state 309
	WORD	shift, and go to state 308

State 270:

	PLUS-49 -> WORD .	(Rule 182)

	$default	reduce using rule 182 (PLUS-49)

State 271:

	STAR-48 -> STAR-48 PAREN-47 .	(Rule 179)

	$default	reduce using rule 179 (STAR-48)

State 272:

	PAREN-47 -> OP21_LIST_COMMA . ListElement	(Rule 178)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ListElement	go to state 310
	Operator	go to state 90
	Variable	go to state 129
	ArrayReference	go to state 101
	TypeInner	go to state 131
	Literal	go to state 96
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	ArrayDereferenced	go to state 107
	Expression	go to state 128
	SubExpression	go to state 126

State 273:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 175)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	STDIN	shift, and go to state 229
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpressionOrStdin	go to state 311
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 228
	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	Literal	go to state 96

State 274:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 174)

	$default	reduce using rule 174 (VariableDeclaration)

State 275:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-51 . SubExpression	(Rule 195)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 312
	ArrayDereferenced	go to state 107
	Expression	go to state 128
	Literal	go to state 96
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Operator	go to state 90
	Variable	go to state 129
	ArrayReference	go to state 101

State 276:

	OPTIONAL-51 -> TypeInner .	(Rule 193)

	$default	reduce using rule 193 (OPTIONAL-51)

State 277:

	STAR-53 -> STAR-53 PAREN-52 .	(Rule 200)

	$default	reduce using rule 200 (STAR-53)

State 278:

	PAREN-52 -> OP21_LIST_COMMA . HashEntry	(Rule 199)

	'%{'	shift, and go to state 72
	WORD	shift, and go to state 139

	HashEntry	go to state 313
	HashDereferenced	go to state 141

State 279:

	HashReference -> LBRACE HashEntry STAR-53 '}' .	(Rule 202)

	$default	reduce using rule 202 (HashReference)

State 280:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-42 OPTIONAL-44	(Rule 158)

	$default	reduce using rule 154 (STAR-42)

	STAR-42	go to state 314

State 281:

	CodeBlock -> LBRACE . PLUS-45 '}'	(Rule 167)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'if ('	shift, and go to state 78
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 79
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_OPEN	shift, and go to state 114
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 94
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 146 (OPTIONAL-40)
	'foreach my'	reduce using rule 146 (OPTIONAL-40)
	'while ('	reduce using rule 146 (OPTIONAL-40)

	VariableDeclaration	go to state 83
	SubExpression	go to state 104
	OPTIONAL-40	go to state 106
	Operation	go to state 315
	OperatorVoid	go to state 86
	ArrayDereferenced	go to state 107
	HashReference	go to state 112
	HashDereferenced	go to state 87
	Statement	go to state 91
	Operator	go to state 90
	LoopLabel	go to state 113
	PLUS-45	go to state 316
	Expression	go to state 93
	Conditional	go to state 74
	WordScoped	go to state 97
	VariableModification	go to state 77
	Literal	go to state 96
	ArrayReference	go to state 101
	PAREN-39	go to state 99
	Variable	go to state 100

State 282:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 123)

	';'	shift, and go to state 317

State 283:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 84)

	')'	shift, and go to state 318

State 284:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 86)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 126
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	WordScoped	go to state 97
	HashReference	go to state 112
	ListElements	go to state 319
	HashDereferenced	go to state 87
	Literal	go to state 96
	TypeInner	go to state 131
	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129
	ListElement	go to state 127

State 285:

	Expression -> WordScoped LPAREN OPTIONAL-37 ')' .	(Rule 130)

	$default	reduce using rule 130 (Expression)

State 286:

	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN . OPTIONAL-38 ')'	(Rule 131)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	')'	reduce using rule 128 (OPTIONAL-38)

	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 126
	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90
	ListElement	go to state 127
	OPTIONAL-38	go to state 321
	HashReference	go to state 112
	ListElements	go to state 320
	WordScoped	go to state 97
	HashDereferenced	go to state 87
	Literal	go to state 96
	TypeInner	go to state 131

State 287:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 176)

	$default	reduce using rule 176 (VariableModification)

State 288:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 177)

	$default	reduce using rule 177 (VariableModification)

State 289:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 121)

	$default	reduce using rule 121 (OperatorVoid)

State 290:

	OperatorVoid -> OP01_PRINT OPTIONAL-34 ListElements ';' .	(Rule 120)

	$default	reduce using rule 120 (OperatorVoid)

State 291:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 109)

	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	VARIABLE_SYMBOL	shift, and go to state 105

	Literal	go to state 251
	Variable	go to state 250
	VariableOrLiteral	go to state 322

State 292:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 172)

	'}'	shift, and go to state 323
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 293:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 173)
	WordScoped -> WORD .	(Rule 205)

	'}'	shift, and go to state 324

	LPAREN	reduce using rule 205 (WordScoped)

State 294:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 171)

	']'	shift, and go to state 325
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 295:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 163)

	LPAREN	shift, and go to state 326

State 296:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 162)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 327
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	HashReference	go to state 112
	WordScoped	go to state 97
	HashDereferenced	go to state 87
	Literal	go to state 96
	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129

State 297:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 164)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 328

State 298:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 329

State 299:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 209)

	OP19_VARIABLE_ASSIGN	shift, and go to state 330

State 300:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 331

State 301:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 332

State 302:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 303:

	OPTIONAL-23 -> PropertiesClass .	(Rule 57)

	$default	reduce using rule 57 (OPTIONAL-23)

State 304:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 333

State 305:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'## no critic qw('	shift, and go to state 8

	Critic	go to state 334

State 306:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-26 ')' ';'	(Rule 65)

	'%{'	shift, and go to state 72
	WORD	shift, and go to state 336

	HashEntryTyped	go to state 337
	HashDereferenced	go to state 335

State 307:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 66)

	';'	shift, and go to state 338

State 308:

	PLUS-49 -> PLUS-49 WORD .	(Rule 181)

	$default	reduce using rule 181 (PLUS-49)

State 309:

	ListElements -> OP01_QW LPAREN PLUS-49 ')' .	(Rule 184)

	$default	reduce using rule 184 (ListElements)

State 310:

	PAREN-47 -> OP21_LIST_COMMA ListElement .	(Rule 178)

	$default	reduce using rule 178 (PAREN-47)

State 311:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 175)

	';'	shift, and go to state 339

State 312:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-51 SubExpression .	(Rule 195)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

	'}'	reduce using rule 195 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 195 (HashEntry)

State 313:

	PAREN-52 -> OP21_LIST_COMMA HashEntry .	(Rule 199)

	$default	reduce using rule 199 (PAREN-52)

State 314:

	STAR-42 -> STAR-42 . PAREN-41	(Rule 153)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-42 . OPTIONAL-44	(Rule 158)

	'else'	shift, and go to state 340
	'elsif ('	shift, and go to state 343

	$end	reduce using rule 157 (OPTIONAL-44)
	'%{'	reduce using rule 157 (OPTIONAL-44)
	'@{'	reduce using rule 157 (OPTIONAL-44)
	'for my integer'	reduce using rule 157 (OPTIONAL-44)
	'foreach my'	reduce using rule 157 (OPTIONAL-44)
	'if ('	reduce using rule 157 (OPTIONAL-44)
	'my'	reduce using rule 157 (OPTIONAL-44)
	'undef'	reduce using rule 157 (OPTIONAL-44)
	'while ('	reduce using rule 157 (OPTIONAL-44)
	'}'	reduce using rule 157 (OPTIONAL-44)
	LBRACE	reduce using rule 157 (OPTIONAL-44)
	LBRACKET	reduce using rule 157 (OPTIONAL-44)
	LITERAL_NUMBER	reduce using rule 157 (OPTIONAL-44)
	LITERAL_STRING	reduce using rule 157 (OPTIONAL-44)
	LPAREN	reduce using rule 157 (OPTIONAL-44)
	OP01_CLOSE	reduce using rule 157 (OPTIONAL-44)
	OP01_NAMED	reduce using rule 157 (OPTIONAL-44)
	OP01_NAMED_VOID	reduce using rule 157 (OPTIONAL-44)
	OP01_OPEN	reduce using rule 157 (OPTIONAL-44)
	OP01_PRINT	reduce using rule 157 (OPTIONAL-44)
	OP03_MATH_INC_DEC	reduce using rule 157 (OPTIONAL-44)
	OP05_LOGICAL_NEG	reduce using rule 157 (OPTIONAL-44)
	OP05_MATH_NEG_LPAREN	reduce using rule 157 (OPTIONAL-44)
	OP10_NAMED_UNARY	reduce using rule 157 (OPTIONAL-44)
	OP10_STRINGIFY_UNARY	reduce using rule 157 (OPTIONAL-44)
	OP19_LOOP_CONTROL	reduce using rule 157 (OPTIONAL-44)
	OP22_LOGICAL_NEG	reduce using rule 157 (OPTIONAL-44)
	VARIABLE_SYMBOL	reduce using rule 157 (OPTIONAL-44)
	WORD	reduce using rule 157 (OPTIONAL-44)
	WORD_SCOPED	reduce using rule 157 (OPTIONAL-44)

	OPTIONAL-44	go to state 342
	PAREN-41	go to state 341
	PAREN-43	go to state 344

State 315:

	PLUS-45 -> Operation .	(Rule 166)

	$default	reduce using rule 166 (PLUS-45)

State 316:

	PLUS-45 -> PLUS-45 . Operation	(Rule 165)
	CodeBlock -> LBRACE PLUS-45 . '}'	(Rule 167)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'if ('	shift, and go to state 78
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'}'	shift, and go to state 345
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 79
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_OPEN	shift, and go to state 114
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 94
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 146 (OPTIONAL-40)
	'foreach my'	reduce using rule 146 (OPTIONAL-40)
	'while ('	reduce using rule 146 (OPTIONAL-40)

	OperatorVoid	go to state 86
	ArrayDereferenced	go to state 107
	VariableDeclaration	go to state 83
	Operation	go to state 346
	OPTIONAL-40	go to state 106
	SubExpression	go to state 104
	Operator	go to state 90
	Statement	go to state 91
	LoopLabel	go to state 113
	HashDereferenced	go to state 87
	HashReference	go to state 112
	Expression	go to state 93
	Conditional	go to state 74
	Variable	go to state 100
	PAREN-39	go to state 99
	ArrayReference	go to state 101
	VariableModification	go to state 77
	WordScoped	go to state 97
	Literal	go to state 96

State 317:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 123)

	$default	reduce using rule 123 (OperatorVoid)

State 318:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 319:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 86)

	')'	shift, and go to state 347

State 320:

	OPTIONAL-38 -> ListElements .	(Rule 127)

	$default	reduce using rule 127 (OPTIONAL-38)

State 321:

	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 . ')'	(Rule 131)

	')'	shift, and go to state 348

State 322:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 109)

	$default	reduce using rule 109 (Operator)

State 323:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 172)

	$default	reduce using rule 172 (VariableRetrieval)

State 324:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 173)

	$default	reduce using rule 173 (VariableRetrieval)

State 325:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 171)

	$default	reduce using rule 171 (VariableRetrieval)

State 326:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'my'	shift, and go to state 116
	'undef'	shift, and go to state 109
	KEYS_OR_VALUES	shift, and go to state 125
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP01_QW	shift, and go to state 123
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90
	ListElement	go to state 127
	HashReference	go to state 112
	WordScoped	go to state 97
	ListElements	go to state 349
	HashDereferenced	go to state 87
	Literal	go to state 96
	TypeInner	go to state 131
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 126

State 327:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 162)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 350
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 328:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 164)

	$default	reduce using rule 164 (LoopWhile)

State 329:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 87)

	LITERAL_STRING	shift, and go to state 351

State 330:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 209)

	$default	reduce using rule 209 (TypeInner)

State 331:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 352
	OP21_LIST_COMMA	shift, and go to state 354

	PAREN-18	go to state 353

State 332:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 333:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 358
	LITERAL_NUMBER	shift, and go to state 359

	Subroutine	go to state 357
	MethodOrSubroutine	go to state 355
	Method	go to state 356

State 334:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'%{'	shift, and go to state 72
	WORD	shift, and go to state 336

	HashDereferenced	go to state 335
	HashEntryTyped	go to state 360

State 335:

	HashEntryTyped -> HashDereferenced .	(Rule 198)

	$default	reduce using rule 198 (HashEntryTyped)

State 336:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 197)

	OP20_HASH_FATARROW	shift, and go to state 361

State 337:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-26 ')' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 362

State 338:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 8

	Critic	go to state 363

State 339:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 175)

	$default	reduce using rule 175 (VariableDeclaration)

State 340:

	PAREN-43 -> 'else' . CodeBlock	(Rule 155)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 364

State 341:

	STAR-42 -> STAR-42 PAREN-41 .	(Rule 153)

	$default	reduce using rule 153 (STAR-42)

State 342:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-42 OPTIONAL-44 .	(Rule 158)

	$default	reduce using rule 158 (Conditional)

State 343:

	PAREN-41 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 152)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	SubExpression	go to state 365
	ArrayDereferenced	go to state 107
	Expression	go to state 128
	Literal	go to state 96
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	ArrayReference	go to state 101
	Variable	go to state 129
	Operator	go to state 90

State 344:

	OPTIONAL-44 -> PAREN-43 .	(Rule 156)

	$default	reduce using rule 156 (OPTIONAL-44)

State 345:

	CodeBlock -> LBRACE PLUS-45 '}' .	(Rule 167)

	$default	reduce using rule 167 (CodeBlock)

State 346:

	PLUS-45 -> PLUS-45 Operation .	(Rule 165)

	$default	reduce using rule 165 (PLUS-45)

State 347:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 348:

	Expression -> Variable OP02_METHOD_THINARROW WORD LPAREN OPTIONAL-38 ')' .	(Rule 131)

	$default	reduce using rule 131 (Expression)

State 349:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 366

State 350:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 108)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 162)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	ArrayReference	go to state 101
	Operator	go to state 90
	Variable	go to state 129
	Literal	go to state 96
	WordScoped	go to state 97
	HashReference	go to state 112
	HashDereferenced	go to state 87
	ArrayDereferenced	go to state 107
	Expression	go to state 128
	SubExpression	go to state 367

State 351:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 87)

	OP21_LIST_COMMA	shift, and go to state 368

State 352:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 369

State 353:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 354:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 370

State 355:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 356:

	MethodOrSubroutine -> Method .	(Rule 80)

	$default	reduce using rule 80 (MethodOrSubroutine)

State 357:

	MethodOrSubroutine -> Subroutine .	(Rule 81)

	$default	reduce using rule 81 (MethodOrSubroutine)

State 358:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	TYPE_METHOD	shift, and go to state 371
	WORD	shift, and go to state 54

	Type	go to state 55

State 359:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 372

State 360:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-28 ')' ';'	(Rule 70)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 373

State 361:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 197)

	'my'	shift, and go to state 116

	TypeInner	go to state 374

State 362:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 . ')' ';'	(Rule 65)

	')'	shift, and go to state 377
	OP21_LIST_COMMA	shift, and go to state 375

	PAREN-25	go to state 376

State 363:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 364:

	PAREN-43 -> 'else' CodeBlock .	(Rule 155)

	$default	reduce using rule 155 (PAREN-43)

State 365:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	PAREN-41 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 152)

	')'	shift, and go to state 378
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

State 366:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 163)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 379

State 367:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 162)

	')'	shift, and go to state 380
	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 368:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 87)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	HashReference	go to state 112
	WordScoped	go to state 97
	Literal	go to state 96
	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 381

State 369:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 382

State 370:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 54

	Type	go to state 383

State 371:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	VARIABLE_SYMBOL	shift, and go to state 384

State 372:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 373:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 68)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 . ')' ';'	(Rule 70)

	')'	shift, and go to state 387
	OP21_LIST_COMMA	shift, and go to state 386

	PAREN-27	go to state 385

State 374:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 197)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 124
	OP01_OPEN	shift, and go to state 114
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 23

	Expression	go to state 128
	ArrayDereferenced	go to state 107
	SubExpression	go to state 388
	Variable	go to state 129
	Operator	go to state 90
	ArrayReference	go to state 101
	HashDereferenced	go to state 87
	WordScoped	go to state 97
	HashReference	go to state 112
	Literal	go to state 96

State 375:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 62)

	'%{'	shift, and go to state 72
	WORD	shift, and go to state 336

	HashDereferenced	go to state 335
	HashEntryTyped	go to state 389

State 376:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 377:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' . ';'	(Rule 65)

	';'	shift, and go to state 390

State 378:

	PAREN-41 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 152)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 391

State 379:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (LoopForEach)

State 380:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 162)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 392

State 381:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 87)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180

	')'	reduce using rule 87 (Operator)
	';'	reduce using rule 87 (Operator)
	']'	reduce using rule 87 (Operator)
	'}'	reduce using rule 87 (Operator)
	OP21_LIST_COMMA	reduce using rule 87 (Operator)
	OP23_LOGICAL_AND	reduce using rule 87 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 87 (Operator)

State 382:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 383:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 393

State 384:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'= sub {'	shift, and go to state 394

State 385:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 386:

	PAREN-27 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 67)

	'%{'	shift, and go to state 72
	WORD	shift, and go to state 336

	HashEntryTyped	go to state 395
	HashDereferenced	go to state 335

State 387:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' . ';'	(Rule 70)

	';'	shift, and go to state 396

State 388:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 91)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 94)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 95)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 96)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 97)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 98)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 102)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 103)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 106)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 107)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 108)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 109)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 111)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 112)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 197)

	OP04_MATH_POW	shift, and go to state 175
	OP06_REGEX_MATCH	shift, and go to state 165
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 177
	OP08_MATH_ADD_SUB	shift, and go to state 166
	OP08_STRING_CAT	shift, and go to state 178
	OP09_BITWISE_SHIFT	shift, and go to state 176
	OP11_COMPARE_LT_GT	shift, and go to state 168
	OP12_COMPARE_EQ_NE	shift, and go to state 179
	OP13_BITWISE_AND	shift, and go to state 170
	OP14_BITWISE_OR_XOR	shift, and go to state 174
	OP15_LOGICAL_AND	shift, and go to state 173
	OP16_LOGICAL_OR	shift, and go to state 169
	OP17_LIST_RANGE	shift, and go to state 172
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 171
	OP24_LOGICAL_OR_XOR	shift, and go to state 167

	')'	reduce using rule 197 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 197 (HashEntryTyped)

State 389:

	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 390:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 391:

	PAREN-41 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 152)

	$default	reduce using rule 152 (PAREN-41)

State 392:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 162)

	$default	reduce using rule 162 (LoopFor)

State 393:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 394:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'( my'	shift, and go to state 397

	'%{'	reduce using rule 72 (OPTIONAL-29)
	'@{'	reduce using rule 72 (OPTIONAL-29)
	'for my integer'	reduce using rule 72 (OPTIONAL-29)
	'foreach my'	reduce using rule 72 (OPTIONAL-29)
	'if ('	reduce using rule 72 (OPTIONAL-29)
	'my'	reduce using rule 72 (OPTIONAL-29)
	'undef'	reduce using rule 72 (OPTIONAL-29)
	'while ('	reduce using rule 72 (OPTIONAL-29)
	LBRACE	reduce using rule 72 (OPTIONAL-29)
	LBRACKET	reduce using rule 72 (OPTIONAL-29)
	LITERAL_NUMBER	reduce using rule 72 (OPTIONAL-29)
	LITERAL_STRING	reduce using rule 72 (OPTIONAL-29)
	LPAREN	reduce using rule 72 (OPTIONAL-29)
	OP01_CLOSE	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT	reduce using rule 72 (OPTIONAL-29)
	OP03_MATH_INC_DEC	reduce using rule 72 (OPTIONAL-29)
	OP05_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	OP05_MATH_NEG_LPAREN	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP10_STRINGIFY_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL	reduce using rule 72 (OPTIONAL-29)
	OP22_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	VARIABLE_SYMBOL	reduce using rule 72 (OPTIONAL-29)
	WORD	reduce using rule 72 (OPTIONAL-29)
	WORD_SCOPED	reduce using rule 72 (OPTIONAL-29)

	OPTIONAL-29	go to state 398
	MethodArguments	go to state 399

State 395:

	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 67)

	$default	reduce using rule 67 (PAREN-27)

State 396:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';' .	(Rule 70)

	$default	reduce using rule 70 (PropertiesClass)

State 397:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	TYPE_CLASS_OR_SELF	shift, and go to state 400

State 398:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 . PLUS-30 '}' ';'	(Rule 75)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'if ('	shift, and go to state 78
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 79
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_OPEN	shift, and go to state 114
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 94
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 146 (OPTIONAL-40)
	'foreach my'	reduce using rule 146 (OPTIONAL-40)
	'while ('	reduce using rule 146 (OPTIONAL-40)

	LoopLabel	go to state 113
	Statement	go to state 91
	Operator	go to state 90
	HashReference	go to state 112
	HashDereferenced	go to state 87
	ArrayDereferenced	go to state 107
	OperatorVoid	go to state 86
	SubExpression	go to state 104
	OPTIONAL-40	go to state 106
	Operation	go to state 402
	VariableDeclaration	go to state 83
	ArrayReference	go to state 101
	PAREN-39	go to state 99
	Variable	go to state 100
	Literal	go to state 96
	PLUS-30	go to state 401
	WordScoped	go to state 97
	VariableModification	go to state 77
	Conditional	go to state 74
	Expression	go to state 93

State 399:

	OPTIONAL-29 -> MethodArguments .	(Rule 71)

	$default	reduce using rule 71 (OPTIONAL-29)

State 400:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	$default	reduce using rule 78 (STAR-32)

	STAR-32	go to state 403

State 401:

	PLUS-30 -> PLUS-30 . Operation	(Rule 73)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 . '}' ';'	(Rule 75)

	'%{'	shift, and go to state 72
	'@{'	shift, and go to state 82
	'if ('	shift, and go to state 78
	'my'	shift, and go to state 73
	'undef'	shift, and go to state 109
	'}'	shift, and go to state 405
	LBRACE	shift, and go to state 76
	LBRACKET	shift, and go to state 108
	LITERAL_NUMBER	shift, and go to state 84
	LITERAL_STRING	shift, and go to state 98
	LPAREN	shift, and go to state 92
	OP01_CLOSE	shift, and go to state 75
	OP01_NAMED	shift, and go to state 79
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_OPEN	shift, and go to state 114
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 81
	OP05_LOGICAL_NEG	shift, and go to state 71
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 95
	OP10_STRINGIFY_UNARY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 110
	OP22_LOGICAL_NEG	shift, and go to state 111
	VARIABLE_SYMBOL	shift, and go to state 105
	WORD	shift, and go to state 94
	WORD_SCOPED	shift, and go to state 23

	'for my integer'	reduce using rule 146 (OPTIONAL-40)
	'foreach my'	reduce using rule 146 (OPTIONAL-40)
	'while ('	reduce using rule 146 (OPTIONAL-40)

	Operation	go to state 404
	OPTIONAL-40	go to state 106
	SubExpression	go to state 104
	VariableDeclaration	go to state 83
	ArrayDereferenced	go to state 107
	OperatorVoid	go to state 86
	HashDereferenced	go to state 87
	HashReference	go to state 112
	LoopLabel	go to state 113
	Operator	go to state 90
	Statement	go to state 91
	Conditional	go to state 74
	Expression	go to state 93
	Literal	go to state 96
	VariableModification	go to state 77
	WordScoped	go to state 97
	PAREN-39	go to state 99
	Variable	go to state 100
	ArrayReference	go to state 101

State 402:

	PLUS-30 -> Operation .	(Rule 74)

	$default	reduce using rule 74 (PLUS-30)

State 403:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 77)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	')'	shift, and go to state 408
	OP21_LIST_COMMA	shift, and go to state 406

	PAREN-31	go to state 407

State 404:

	PLUS-30 -> PLUS-30 Operation .	(Rule 73)

	$default	reduce using rule 73 (PLUS-30)

State 405:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' . ';'	(Rule 75)

	';'	shift, and go to state 409

State 406:

	PAREN-31 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 76)

	'my'	shift, and go to state 410

State 407:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 77)

	$default	reduce using rule 77 (STAR-32)

State 408:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	OP19_VARIABLE_ASSIGN	shift, and go to state 411

State 409:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';' .	(Rule 75)

	$default	reduce using rule 75 (Method)

State 410:

	PAREN-31 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 76)

	WORD	shift, and go to state 54

	Type	go to state 412

State 411:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 79)

	'@_;'	shift, and go to state 413

State 412:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 76)

	VARIABLE_SYMBOL	shift, and go to state 414

State 413:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 79)

	$default	reduce using rule 79 (MethodArguments)

State 414:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 76)

	$default	reduce using rule 76 (PAREN-31)


Summary:
--------
Number of rules         : 214
Number of terminals     : 87
Number of non-terminals : 102
Number of states        : 415
