Conflicts:
----------
Conflict in state 96 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 96 between rule 123 and token OP18_TERNARY resolved as shift.
Conflict in state 96 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 96 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 96 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 96 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 96 between rule 123 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 96 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 96 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 96 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 96 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 96 between rule 123 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 96 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 96 between rule 123 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 96 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 96 between rule 123 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 99 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 99 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 99 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 99 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 99 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 99 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 99 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 99 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 99 between rule 113 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 99 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 99 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 99 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 99 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 99 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 99 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 99 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 126 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 126 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 126 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 126 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 126 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 126 between rule 106 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 126 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 126 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 126 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 126 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 126 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 126 between rule 106 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 126 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 126 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 126 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 126 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 150 between rule 114 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 150 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 150 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 150 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 150 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 150 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 150 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 150 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 150 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 150 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 150 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 150 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 150 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 150 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 150 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 150 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 180 between rule 120 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 180 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 180 between rule 120 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 180 between rule 120 and token OP18_TERNARY resolved as reduce.
Conflict in state 180 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 180 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 180 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 180 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 180 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 180 between rule 120 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 180 between rule 120 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 180 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 180 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 180 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 180 between rule 120 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 180 between rule 120 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 181 between rule 125 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 181 between rule 125 and token OP04_MATH_POW resolved as shift.
Conflict in state 181 between rule 125 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 181 between rule 125 and token OP08_STRING_CAT resolved as shift.
Conflict in state 181 between rule 125 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 181 between rule 125 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 181 between rule 125 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 181 between rule 125 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 181 between rule 125 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 181 between rule 125 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 181 between rule 125 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 181 between rule 125 and token OP18_TERNARY resolved as shift.
Conflict in state 181 between rule 125 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 181 between rule 125 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 181 between rule 125 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 181 between rule 125 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 183 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 183 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 183 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 183 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 183 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 183 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 183 between rule 105 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 183 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 183 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 183 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 183 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 183 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 183 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 183 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 183 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 183 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 184 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 184 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 184 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 184 between rule 111 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 184 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 184 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 184 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 184 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 184 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 184 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 184 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 184 between rule 111 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 184 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 184 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 184 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 184 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 185 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 185 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 185 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 185 between rule 109 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 185 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 185 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 185 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 185 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 185 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 185 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 185 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 185 between rule 109 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 185 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 185 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 185 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 185 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 186 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 186 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 186 between rule 110 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 186 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 186 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 186 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 186 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 186 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 186 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 186 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 186 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 186 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 186 between rule 110 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 186 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 187 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 187 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 187 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 187 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 187 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 187 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 187 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 187 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 187 between rule 117 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 187 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 187 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 187 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 187 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 187 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 187 between rule 117 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 187 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 188 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 188 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 188 between rule 116 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 188 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 188 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 188 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 188 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 188 between rule 116 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 188 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 188 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 188 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 188 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 188 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 188 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 188 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 188 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 189 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 189 between rule 121 and token OP18_TERNARY resolved as reduce.
Conflict in state 189 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 189 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 189 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 189 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 189 between rule 121 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 189 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 189 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 189 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 189 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 189 between rule 121 and token OP17_LIST_RANGE resolved as error.
Conflict in state 189 between rule 121 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 189 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 189 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 189 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 190 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 190 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 190 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 190 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 190 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 190 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 190 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 190 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 190 between rule 115 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 190 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 190 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 190 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 190 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 190 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 190 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 190 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 191 between rule 124 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 191 between rule 124 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 191 between rule 124 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 191 between rule 124 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 191 between rule 124 and token OP18_TERNARY resolved as shift.
Conflict in state 191 between rule 124 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 191 between rule 124 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 191 between rule 124 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 191 between rule 124 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 191 between rule 124 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 191 between rule 124 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 191 between rule 124 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 191 between rule 124 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 191 between rule 124 and token OP08_STRING_CAT resolved as shift.
Conflict in state 191 between rule 124 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 191 between rule 124 and token OP04_MATH_POW resolved as shift.
Conflict in state 192 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 192 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 192 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 192 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 192 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 192 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 192 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 192 between rule 112 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 192 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 192 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 192 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 192 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 192 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 192 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 192 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 192 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 193 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 193 between rule 118 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 193 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 193 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 193 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 193 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 193 between rule 118 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 193 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 193 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 193 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 193 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 193 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 194 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 194 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 194 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 194 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 194 between rule 119 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 194 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 194 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 194 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 194 between rule 119 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 194 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 194 between rule 119 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 194 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 194 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 194 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 194 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 194 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Critic
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Include
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Constant
10:	STAR-4 -> /* empty */
11:	STAR-5 -> STAR-5 Subroutine
12:	STAR-5 -> /* empty */
13:	PLUS-6 -> PLUS-6 Operation
14:	PLUS-6 -> Operation
15:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6
16:	Module -> Package
17:	Module -> Class
18:	STAR-7 -> STAR-7 Critic
19:	STAR-7 -> /* empty */
20:	STAR-8 -> STAR-8 Include
21:	STAR-8 -> /* empty */
22:	STAR-9 -> STAR-9 Constant
23:	STAR-9 -> /* empty */
24:	PLUS-10 -> PLUS-10 Subroutine
25:	PLUS-10 -> Subroutine
26:	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'
27:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
28:	PLUS-11 -> PLUS-11 WORD
29:	PLUS-11 -> WORD
30:	Critic -> '## no critic qw(' PLUS-11 ')'
31:	PLUS-12 -> PLUS-12 WORD
32:	PLUS-12 -> WORD
33:	Include -> 'use' WordScoped ';'
34:	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';'
35:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
36:	OPTIONAL-13 -> TypeInner
37:	OPTIONAL-13 -> /* empty */
38:	OPTIONAL-14 -> TypeInner
39:	OPTIONAL-14 -> /* empty */
40:	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal
41:	STAR-16 -> STAR-16 PAREN-15
42:	STAR-16 -> /* empty */
43:	OPTIONAL-17 -> TypeInner
44:	OPTIONAL-17 -> /* empty */
45:	OPTIONAL-18 -> TypeInner
46:	OPTIONAL-18 -> /* empty */
47:	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal
48:	STAR-20 -> STAR-20 PAREN-19
49:	STAR-20 -> /* empty */
50:	ConstantValue -> Literal
51:	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']'
52:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'
53:	OPTIONAL-21 -> SubroutineArguments
54:	OPTIONAL-21 -> /* empty */
55:	PLUS-22 -> PLUS-22 Operation
56:	PLUS-22 -> Operation
57:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'
58:	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
59:	STAR-24 -> STAR-24 PAREN-23
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 ArgumentCheck
62:	STAR-25 -> /* empty */
63:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25
64:	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
65:	OPTIONAL-27 -> PAREN-26
66:	OPTIONAL-27 -> /* empty */
67:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';'
68:	STAR-28 -> STAR-28 Critic
69:	STAR-28 -> /* empty */
70:	STAR-29 -> STAR-29 Include
71:	STAR-29 -> /* empty */
72:	STAR-30 -> STAR-30 Constant
73:	STAR-30 -> /* empty */
74:	STAR-31 -> STAR-31 Method
75:	STAR-31 -> /* empty */
76:	PLUS-32 -> PLUS-32 Subroutine
77:	PLUS-32 -> Subroutine
78:	PAREN-33 -> PLUS-32 '1;' '1;'
79:	OPTIONAL-34 -> PAREN-33
80:	OPTIONAL-34 -> /* empty */
81:	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34
82:	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped
83:	STAR-36 -> STAR-36 PAREN-35
84:	STAR-36 -> /* empty */
85:	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';'
86:	Properties -> 'our %properties = (' ')' ';'
87:	OPTIONAL-37 -> MethodArguments
88:	OPTIONAL-37 -> /* empty */
89:	PLUS-38 -> PLUS-38 Operation
90:	PLUS-38 -> Operation
91:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'
92:	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
93:	STAR-40 -> STAR-40 PAREN-39
94:	STAR-40 -> /* empty */
95:	STAR-41 -> STAR-41 ArgumentCheck
96:	STAR-41 -> /* empty */
97:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41
98:	Operation -> Expression ';'
99:	Operation -> Statement
100:	OPTIONAL-42 -> ListElements
101:	OPTIONAL-42 -> /* empty */
102:	Operator -> OP01_NAMED '(' OPTIONAL-42 ')'
103:	Operator -> OP03_MATH_INC_DEC Variable
104:	Operator -> Variable OP03_MATH_INC_DEC
105:	Operator -> Expression OP04_MATH_POW Expression
106:	Operator -> OP05_LOGICAL_NEG Expression
107:	Operator -> OP05_MATH_NEG Expression ')'
108:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
109:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
110:	Operator -> Expression OP08_MATH_ADD_SUB Expression
111:	Operator -> Expression OP08_STRING_CAT Expression
112:	Operator -> Expression OP09_BITWISE_SHIFT Expression
113:	Operator -> OP10_NAMED_UNARY Expression
114:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
115:	Operator -> Expression OP11_COMPARE_LT_GT Expression
116:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
117:	Operator -> Expression OP13_BITWISE_AND Expression
118:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
119:	Operator -> Expression OP15_LOGICAL_AND Expression
120:	Operator -> Expression OP16_LOGICAL_OR Expression
121:	Operator -> Expression OP17_LIST_RANGE Expression
122:	Operator -> Expression OP18_TERNARY Variable COLON Variable
123:	Operator -> OP22_LOGICAL_NOT Expression
124:	Operator -> Expression OP23_LOGICAL_AND Expression
125:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
126:	OPTIONAL-43 -> ListElements
127:	OPTIONAL-43 -> /* empty */
128:	OPTIONAL-44 -> ListElements
129:	OPTIONAL-44 -> /* empty */
130:	OPTIONAL-45 -> ListElements
131:	OPTIONAL-45 -> /* empty */
132:	OPTIONAL-46 -> ListElements
133:	OPTIONAL-46 -> /* empty */
134:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';'
135:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';'
136:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';'
137:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';'
138:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
139:	OPTIONAL-47 -> ListElements
140:	OPTIONAL-47 -> /* empty */
141:	OPTIONAL-48 -> ListElements
142:	OPTIONAL-48 -> /* empty */
143:	Expression -> 'undef'
144:	Expression -> Literal
145:	Expression -> Variable
146:	Expression -> ArrayReference
147:	Expression -> ArrayDereferenced
148:	Expression -> HashReference
149:	Expression -> HashDereferenced
150:	Expression -> '{' '}'
151:	Expression -> Operator
152:	Expression -> WordScoped '(' OPTIONAL-47 ')'
153:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'
154:	Expression -> '(' Expression ')'
155:	PAREN-49 -> LoopLabel COLON
156:	OPTIONAL-50 -> PAREN-49
157:	OPTIONAL-50 -> /* empty */
158:	Statement -> Conditional
159:	Statement -> OPTIONAL-50 Loop
160:	Statement -> OperatorVoid
161:	Statement -> VariableDeclaration
162:	Statement -> VariableModification
163:	PAREN-51 -> 'elsif (' Expression ')' CodeBlock
164:	STAR-52 -> STAR-52 PAREN-51
165:	STAR-52 -> /* empty */
166:	PAREN-53 -> 'else' CodeBlock
167:	OPTIONAL-54 -> PAREN-53
168:	OPTIONAL-54 -> /* empty */
169:	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54
170:	Loop -> LoopFor
171:	Loop -> LoopForEach
172:	Loop -> LoopWhile
173:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
174:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
175:	LoopWhile -> 'while (' Expression ')' CodeBlock
176:	PLUS-55 -> PLUS-55 Operation
177:	PLUS-55 -> Operation
178:	CodeBlock -> '{' PLUS-55 '}'
179:	STAR-56 -> STAR-56 VariableRetrieval
180:	STAR-56 -> /* empty */
181:	Variable -> VARIABLE_SYMBOL STAR-56
182:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
183:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
184:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
185:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
186:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'
187:	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';'
188:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
189:	PAREN-57 -> OP21_LIST_COMMA ListElement
190:	STAR-58 -> STAR-58 PAREN-57
191:	STAR-58 -> /* empty */
192:	ListElements -> ListElement STAR-58
193:	ListElement -> Expression
194:	ListElement -> TypeInner Expression
195:	ListElement -> KEYS_OR_VALUES HashDereferenced
196:	OPTIONAL-59 -> ListElements
197:	OPTIONAL-59 -> /* empty */
198:	ArrayReference -> '[' OPTIONAL-59 ']'
199:	ArrayDereferenced -> '@{' Variable '}'
200:	ArrayDereferenced -> '@{' ArrayReference '}'
201:	OPTIONAL-60 -> TypeInner
202:	OPTIONAL-60 -> /* empty */
203:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 Expression
204:	HashEntry -> HashDereferenced
205:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
206:	HashEntryTyped -> HashDereferenced
207:	PAREN-61 -> OP21_LIST_COMMA HashEntry
208:	STAR-62 -> STAR-62 PAREN-61
209:	STAR-62 -> /* empty */
210:	HashReference -> '{' HashEntry STAR-62 '}'
211:	HashDereferenced -> '%{' Variable '}'
212:	HashDereferenced -> '%{' HashReference '}'
213:	WordScoped -> WORD
214:	WordScoped -> WORD_SCOPED
215:	FileHandle -> '{*' WORD '}'
216:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
217:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
218:	Type -> WORD
219:	LoopLabel -> WORD
220:	Literal -> LITERAL_STRING
221:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 2
	SHEBANG	shift, and go to state 8

	Program	go to state 3
	Class	go to state 7
	Module	go to state 6
	CompileUnit	go to state 5
	PLUS-1	go to state 4
	Package	go to state 1

State 1:

	Module -> Package .	(Rule 16)

	$default	reduce using rule 16 (Module)

State 2:

	Package -> 'package' . WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	WordScoped	go to state 11

State 3:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 4:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 2

	$end	reduce using rule 4 (CompileUnit)

	Package	go to state 1
	Class	go to state 7
	Module	go to state 12

State 5:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 13

State 6:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 7:

	Module -> Class .	(Rule 17)

	$default	reduce using rule 17 (Module)

State 8:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use strict;'	shift, and go to state 14

	Header	go to state 15

State 9:

	WordScoped -> WORD .	(Rule 213)

	$default	reduce using rule 213 (WordScoped)

State 10:

	WordScoped -> WORD_SCOPED .	(Rule 214)

	$default	reduce using rule 214 (WordScoped)

State 11:

	Package -> 'package' WordScoped . ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 16

State 12:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 13:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 14:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'use warnings;'	shift, and go to state 17

State 15:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 18

State 16:

	Package -> 'package' WordScoped ';' . Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use strict;'	shift, and go to state 14

	Header	go to state 19

State 17:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'use RPerl;'	shift, and go to state 20

State 18:

	STAR-2 -> STAR-2 . Critic	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'## no critic qw('	shift, and go to state 21

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'use'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL_NUMBER	reduce using rule 8 (STAR-3)
	LITERAL_STRING	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)
	WORD_SCOPED	reduce using rule 8 (STAR-3)

	STAR-3	go to state 22
	Critic	go to state 23

State 19:

	Package -> 'package' WordScoped ';' Header . STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use parent qw('	shift, and go to state 25

	'## no critic qw('	reduce using rule 19 (STAR-7)
	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)
	'use'	reduce using rule 19 (STAR-7)

	STAR-7	go to state 24

State 20:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'our'	shift, and go to state 26

State 21:

	Critic -> '## no critic qw(' . PLUS-11 ')'	(Rule 30)

	WORD	shift, and go to state 27

	PLUS-11	go to state 28

State 22:

	STAR-3 -> STAR-3 . Include	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use'	shift, and go to state 30

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'use constant'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL_NUMBER	reduce using rule 10 (STAR-4)
	LITERAL_STRING	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)
	WORD_SCOPED	reduce using rule 10 (STAR-4)

	Include	go to state 31
	STAR-4	go to state 29

State 23:

	STAR-2 -> STAR-2 Critic .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 24:

	STAR-7 -> STAR-7 . Critic	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-7 . STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'## no critic qw('	shift, and go to state 21

	'our'	reduce using rule 21 (STAR-8)
	'use constant'	reduce using rule 21 (STAR-8)
	'use'	reduce using rule 21 (STAR-8)

	STAR-8	go to state 32
	Critic	go to state 33

State 25:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	WordScoped	go to state 34

State 26:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 27)

	VERSION_NUMBER_ASSIGN	shift, and go to state 35

State 27:

	PLUS-11 -> WORD .	(Rule 29)

	$default	reduce using rule 29 (PLUS-11)

State 28:

	PLUS-11 -> PLUS-11 . WORD	(Rule 28)
	Critic -> '## no critic qw(' PLUS-11 . ')'	(Rule 30)

	')'	shift, and go to state 36
	WORD	shift, and go to state 37

State 29:

	STAR-4 -> STAR-4 . Constant	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . STAR-5 PLUS-6	(Rule 15)

	'use constant'	shift, and go to state 40

	'%{'	reduce using rule 12 (STAR-5)
	'('	reduce using rule 12 (STAR-5)
	'@{'	reduce using rule 12 (STAR-5)
	'['	reduce using rule 12 (STAR-5)
	'for my integer'	reduce using rule 12 (STAR-5)
	'foreach my'	reduce using rule 12 (STAR-5)
	'if ('	reduce using rule 12 (STAR-5)
	'my'	reduce using rule 12 (STAR-5)
	'our'	reduce using rule 12 (STAR-5)
	'undef'	reduce using rule 12 (STAR-5)
	'while ('	reduce using rule 12 (STAR-5)
	'{'	reduce using rule 12 (STAR-5)
	LITERAL_NUMBER	reduce using rule 12 (STAR-5)
	LITERAL_STRING	reduce using rule 12 (STAR-5)
	OP01_NAMED	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 12 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 12 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 12 (STAR-5)
	OP05_MATH_NEG	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 12 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 12 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 12 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 12 (STAR-5)
	WORD	reduce using rule 12 (STAR-5)
	WORD_SCOPED	reduce using rule 12 (STAR-5)

	Constant	go to state 39
	STAR-5	go to state 38

State 30:

	Include -> 'use' . WordScoped ';'	(Rule 33)
	Include -> 'use' . WordScoped 'qw(' PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	WordScoped	go to state 41

State 31:

	STAR-3 -> STAR-3 Include .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 32:

	STAR-8 -> STAR-8 . Include	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 . STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'use'	shift, and go to state 30

	'our'	reduce using rule 23 (STAR-9)
	'use constant'	reduce using rule 23 (STAR-9)

	Include	go to state 42
	STAR-9	go to state 43

State 33:

	STAR-7 -> STAR-7 Critic .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 34:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped . ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	')'	shift, and go to state 44

State 35:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 27)

	$default	reduce using rule 27 (Header)

State 36:

	Critic -> '## no critic qw(' PLUS-11 ')' .	(Rule 30)

	$default	reduce using rule 30 (Critic)

State 37:

	PLUS-11 -> PLUS-11 WORD .	(Rule 28)

	$default	reduce using rule 28 (PLUS-11)

State 38:

	STAR-5 -> STAR-5 . Subroutine	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 . PLUS-6	(Rule 15)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 57
	'our'	shift, and go to state 74
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_PAREN	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 10

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	LoopLabel	go to state 47
	Conditional	go to state 71
	ArrayDereferenced	go to state 79
	VariableModification	go to state 54
	WordScoped	go to state 77
	Variable	go to state 78
	Statement	go to state 52
	Literal	go to state 76
	Operation	go to state 51
	PAREN-49	go to state 50
	OPTIONAL-50	go to state 73
	OperatorVoid	go to state 61
	Subroutine	go to state 56
	HashDereferenced	go to state 55
	PLUS-6	go to state 87
	ArrayReference	go to state 69
	HashReference	go to state 65
	Expression	go to state 66
	VariableDeclaration	go to state 64
	Operator	go to state 62

State 39:

	STAR-4 -> STAR-4 Constant .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 40:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	WORD	shift, and go to state 88

State 41:

	Include -> 'use' WordScoped . ';'	(Rule 33)
	Include -> 'use' WordScoped . 'qw(' PLUS-12 ')' ';'	(Rule 34)

	';'	shift, and go to state 90
	'qw('	shift, and go to state 89

State 42:

	STAR-8 -> STAR-8 Include .	(Rule 20)

	$default	reduce using rule 20 (STAR-8)

State 43:

	STAR-9 -> STAR-9 . Constant	(Rule 22)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 . PLUS-10 '1;' '1;'	(Rule 26)

	'our'	shift, and go to state 74
	'use constant'	shift, and go to state 40

	PLUS-10	go to state 92
	Constant	go to state 91
	Subroutine	go to state 93

State 44:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' . ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 94

State 45:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 103)

	VARIABLE_SYMBOL	shift, and go to state 85

	Variable	go to state 95

State 46:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 123)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayReference	go to state 69
	Expression	go to state 96
	HashReference	go to state 65
	Literal	go to state 76
	Operator	go to state 62
	HashDereferenced	go to state 55

State 47:

	PAREN-49 -> LoopLabel . COLON	(Rule 155)

	COLON	shift, and go to state 98

State 48:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 113)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79
	Expression	go to state 99
	Literal	go to state 76
	HashReference	go to state 65
	ArrayReference	go to state 69
	Operator	go to state 62

State 49:

	Expression -> 'undef' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 50:

	OPTIONAL-50 -> PAREN-49 .	(Rule 156)

	$default	reduce using rule 156 (OPTIONAL-50)

State 51:

	PLUS-6 -> Operation .	(Rule 14)

	$default	reduce using rule 14 (PLUS-6)

State 52:

	Operation -> Statement .	(Rule 99)

	$default	reduce using rule 99 (Operation)

State 53:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 169)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayReference	go to state 69
	Literal	go to state 76
	Expression	go to state 100
	HashReference	go to state 65

State 54:

	Statement -> VariableModification .	(Rule 162)

	$default	reduce using rule 162 (Statement)

State 55:

	Expression -> HashDereferenced .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 56:

	STAR-5 -> STAR-5 Subroutine .	(Rule 11)

	$default	reduce using rule 11 (STAR-5)

State 57:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 185)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 186)

	WORD	shift, and go to state 102

	Type	go to state 101

State 58:

	WordScoped -> WORD .	(Rule 213)
	LoopLabel -> WORD .	(Rule 219)

	'('	reduce using rule 213 (WordScoped)
	COLON	reduce using rule 219 (LoopLabel)

State 59:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 199)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 200)

	'['	shift, and go to state 70
	VARIABLE_SYMBOL	shift, and go to state 85

	Variable	go to state 104
	ArrayReference	go to state 103

State 60:

	HashDereferenced -> '%{' . Variable '}'	(Rule 211)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 212)

	'{'	shift, and go to state 105
	VARIABLE_SYMBOL	shift, and go to state 85

	Variable	go to state 106
	HashReference	go to state 107

State 61:

	Statement -> OperatorVoid .	(Rule 160)

	$default	reduce using rule 160 (Statement)

State 62:

	Expression -> Operator .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 63:

	Operator -> OP01_NAMED . '(' OPTIONAL-42 ')'	(Rule 102)

	'('	shift, and go to state 108

State 64:

	Statement -> VariableDeclaration .	(Rule 161)

	$default	reduce using rule 161 (Statement)

State 65:

	Expression -> HashReference .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 66:

	Operation -> Expression . ';'	(Rule 98)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	';'	shift, and go to state 124
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 67:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 106)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	HashReference	go to state 65
	Literal	go to state 76
	Expression	go to state 126
	ArrayReference	go to state 69
	Operator	go to state 62

State 68:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 107)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	ArrayReference	go to state 69
	Literal	go to state 76
	Expression	go to state 127
	HashReference	go to state 65
	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97

State 69:

	Expression -> ArrayReference .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 70:

	ArrayReference -> '[' . OPTIONAL-59 ']'	(Rule 198)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 131
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	']'	reduce using rule 197 (OPTIONAL-59)

	ListElement	go to state 128
	HashDereferenced	go to state 55
	TypeInner	go to state 129
	OPTIONAL-59	go to state 130
	HashReference	go to state 65
	Expression	go to state 132
	Literal	go to state 76
	ListElements	go to state 134
	ArrayReference	go to state 69
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	Operator	go to state 62

State 71:

	Statement -> Conditional .	(Rule 158)

	$default	reduce using rule 158 (Statement)

State 72:

	Literal -> LITERAL_STRING .	(Rule 220)

	$default	reduce using rule 220 (Literal)

State 73:

	Statement -> OPTIONAL-50 . Loop	(Rule 159)

	'for my integer'	shift, and go to state 137
	'foreach my'	shift, and go to state 135
	'while ('	shift, and go to state 138

	Loop	go to state 139
	LoopForEach	go to state 140
	LoopWhile	go to state 136
	LoopFor	go to state 141

State 74:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	WORD	shift, and go to state 102

	Type	go to state 142

State 75:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 138)

	WORD	shift, and go to state 144

	LoopLabel	go to state 143

State 76:

	Expression -> Literal .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 77:

	Expression -> WordScoped . '(' OPTIONAL-47 ')'	(Rule 152)

	'('	shift, and go to state 145

State 78:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 187)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 188)

	OP02_METHOD_THINARROW	shift, and go to state 149
	OP03_MATH_INC_DEC	shift, and go to state 147
	OP19_VARIABLE_ASSIGN	shift, and go to state 146
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 148

	';'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 79:

	Expression -> ArrayDereferenced .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 80:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 114)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Operator	go to state 62
	ArrayReference	go to state 69
	Expression	go to state 150
	HashReference	go to state 65
	Literal	go to state 76
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	HashDereferenced	go to state 55

State 81:

	Literal -> LITERAL_NUMBER .	(Rule 221)

	$default	reduce using rule 221 (Literal)

State 82:

	Expression -> '(' . Expression ')'	(Rule 154)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79
	Literal	go to state 76
	Expression	go to state 151
	HashReference	go to state 65
	ArrayReference	go to state 69

State 83:

	Expression -> '{' . '}'	(Rule 150)
	HashReference -> '{' . HashEntry STAR-62 '}'	(Rule 210)

	'%{'	shift, and go to state 60
	'}'	shift, and go to state 155
	WORD	shift, and go to state 152

	HashEntry	go to state 154
	HashDereferenced	go to state 153

State 84:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-43 ')' ';'	(Rule 134)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 156
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	'{*'	shift, and go to state 157
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	')'	reduce using rule 127 (OPTIONAL-43)

	TypeInner	go to state 129
	HashDereferenced	go to state 55
	ListElement	go to state 128
	OPTIONAL-43	go to state 158
	Operator	go to state 62
	ArrayReference	go to state 69
	FileHandle	go to state 159
	ListElements	go to state 160
	HashReference	go to state 65
	Literal	go to state 76
	Expression	go to state 132
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77

State 85:

	Variable -> VARIABLE_SYMBOL . STAR-56	(Rule 181)

	$default	reduce using rule 180 (STAR-56)

	STAR-56	go to state 161

State 86:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-45 ';'	(Rule 136)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 156
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	'{*'	shift, and go to state 157
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	';'	reduce using rule 131 (OPTIONAL-45)

	Operator	go to state 62
	HashReference	go to state 65
	Expression	go to state 132
	Literal	go to state 76
	ArrayReference	go to state 69
	FileHandle	go to state 164
	ListElements	go to state 163
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79
	HashDereferenced	go to state 55
	TypeInner	go to state 129
	OPTIONAL-45	go to state 162
	ListElement	go to state 128

State 87:

	PLUS-6 -> PLUS-6 . Operation	(Rule 13)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6 .	(Rule 15)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 57
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_PAREN	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 10

	$end	reduce using rule 15 (Program)
	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	OperatorVoid	go to state 61
	HashDereferenced	go to state 55
	HashReference	go to state 65
	Expression	go to state 66
	ArrayReference	go to state 69
	VariableDeclaration	go to state 64
	Operator	go to state 62
	LoopLabel	go to state 47
	Conditional	go to state 71
	WordScoped	go to state 77
	Variable	go to state 78
	VariableModification	go to state 54
	ArrayDereferenced	go to state 79
	Literal	go to state 76
	Statement	go to state 52
	Operation	go to state 165
	OPTIONAL-50	go to state 73
	PAREN-49	go to state 50

State 88:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	OP20_HASH_FATARROW	shift, and go to state 166

State 89:

	Include -> 'use' WordScoped 'qw(' . PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 167

	PLUS-12	go to state 168

State 90:

	Include -> 'use' WordScoped ';' .	(Rule 33)

	$default	reduce using rule 33 (Include)

State 91:

	STAR-9 -> STAR-9 Constant .	(Rule 22)

	$default	reduce using rule 22 (STAR-9)

State 92:

	PLUS-10 -> PLUS-10 . Subroutine	(Rule 24)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 . '1;' '1;'	(Rule 26)

	'1;'	shift, and go to state 170
	'our'	shift, and go to state 74

	Subroutine	go to state 169

State 93:

	PLUS-10 -> Subroutine .	(Rule 25)

	$default	reduce using rule 25 (PLUS-10)

State 94:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' . Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 30

	Include	go to state 171

State 95:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 96:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125

	')'	reduce using rule 123 (Operator)
	'..'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP23_LOGICAL_AND	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 97:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)

	OP02_METHOD_THINARROW	shift, and go to state 149
	OP03_MATH_INC_DEC	shift, and go to state 147

	')'	reduce using rule 145 (Expression)
	'..'	reduce using rule 145 (Expression)
	';'	reduce using rule 145 (Expression)
	']'	reduce using rule 145 (Expression)
	'}'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP21_LIST_COMMA	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 98:

	PAREN-49 -> LoopLabel COLON .	(Rule 155)

	$default	reduce using rule 155 (PAREN-49)

State 99:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 100:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 169)

	')'	shift, and go to state 172
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 101:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 185)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 186)

	VARIABLE_SYMBOL	shift, and go to state 173

State 102:

	Type -> WORD .	(Rule 218)

	$default	reduce using rule 218 (Type)

State 103:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 200)

	'}'	shift, and go to state 174

State 104:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 199)

	'}'	shift, and go to state 175

State 105:

	HashReference -> '{' . HashEntry STAR-62 '}'	(Rule 210)

	'%{'	shift, and go to state 60
	WORD	shift, and go to state 152

	HashDereferenced	go to state 153
	HashEntry	go to state 154

State 106:

	HashDereferenced -> '%{' Variable . '}'	(Rule 211)

	'}'	shift, and go to state 176

State 107:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 212)

	'}'	shift, and go to state 177

State 108:

	Operator -> OP01_NAMED '(' . OPTIONAL-42 ')'	(Rule 102)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 131
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	')'	reduce using rule 101 (OPTIONAL-42)

	ListElement	go to state 128
	HashDereferenced	go to state 55
	TypeInner	go to state 129
	Expression	go to state 132
	Literal	go to state 76
	HashReference	go to state 65
	ListElements	go to state 179
	ArrayReference	go to state 69
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79
	Operator	go to state 62
	OPTIONAL-42	go to state 178

State 109:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 120)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Operator	go to state 62
	ArrayReference	go to state 69
	HashReference	go to state 65
	Expression	go to state 180
	Literal	go to state 76
	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97
	HashDereferenced	go to state 55

State 110:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 125)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	Literal	go to state 76
	Expression	go to state 181
	HashReference	go to state 65
	ArrayReference	go to state 69
	Operator	go to state 62
	HashDereferenced	go to state 55

State 111:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 108)

	'/'	shift, and go to state 182

State 112:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 105)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	ArrayReference	go to state 69
	Literal	go to state 76
	Expression	go to state 183
	HashReference	go to state 65
	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97

State 113:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 111)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	HashReference	go to state 65
	Literal	go to state 76
	Expression	go to state 184
	ArrayReference	go to state 69
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79

State 114:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 109)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayReference	go to state 69
	HashReference	go to state 65
	Expression	go to state 185
	Literal	go to state 76
	Operator	go to state 62

State 115:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 110)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	Literal	go to state 76
	Expression	go to state 186
	HashReference	go to state 65
	ArrayReference	go to state 69
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79

State 116:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 117)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayReference	go to state 69
	Literal	go to state 76
	HashReference	go to state 65
	Expression	go to state 187
	Operator	go to state 62
	HashDereferenced	go to state 55

State 117:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 116)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	Expression	go to state 188
	HashReference	go to state 65
	Literal	go to state 76
	ArrayReference	go to state 69
	Operator	go to state 62
	HashDereferenced	go to state 55

State 118:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 121)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Expression	go to state 189
	Literal	go to state 76
	HashReference	go to state 65
	ArrayReference	go to state 69
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79
	Operator	go to state 62
	HashDereferenced	go to state 55

State 119:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 115)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	ArrayReference	go to state 69
	HashReference	go to state 65
	Expression	go to state 190
	Literal	go to state 76
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	Operator	go to state 62

State 120:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 124)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Operator	go to state 62
	HashReference	go to state 65
	Literal	go to state 76
	Expression	go to state 191
	ArrayReference	go to state 69
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	HashDereferenced	go to state 55

State 121:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 112)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Operator	go to state 62
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79
	HashReference	go to state 65
	Literal	go to state 76
	Expression	go to state 192
	ArrayReference	go to state 69
	HashDereferenced	go to state 55

State 122:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 118)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Operator	go to state 62
	ArrayReference	go to state 69
	Expression	go to state 193
	Literal	go to state 76
	HashReference	go to state 65
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	HashDereferenced	go to state 55

State 123:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 119)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	ArrayReference	go to state 69
	Literal	go to state 76
	Expression	go to state 194
	HashReference	go to state 65
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	Operator	go to state 62

State 124:

	Operation -> Expression ';' .	(Rule 98)

	$default	reduce using rule 98 (Operation)

State 125:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 85

	Variable	go to state 195

State 126:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP06_REGEX_MATCH	reduce using rule 106 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 106 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 127:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 107)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	')'	shift, and go to state 196
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 128:

	ListElements -> ListElement . STAR-58	(Rule 192)

	$default	reduce using rule 191 (STAR-58)

	STAR-58	go to state 197

State 129:

	ListElement -> TypeInner . Expression	(Rule 194)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	HashReference	go to state 65
	Expression	go to state 198
	Literal	go to state 76
	ArrayReference	go to state 69

State 130:

	ArrayReference -> '[' OPTIONAL-59 . ']'	(Rule 198)

	']'	shift, and go to state 199

State 131:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 102

	Type	go to state 200

State 132:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> Expression .	(Rule 193)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

	')'	reduce using rule 193 (ListElement)
	';'	reduce using rule 193 (ListElement)
	']'	reduce using rule 193 (ListElement)
	OP21_LIST_COMMA	reduce using rule 193 (ListElement)

State 133:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 195)

	'%{'	shift, and go to state 60

	HashDereferenced	go to state 201

State 134:

	OPTIONAL-59 -> ListElements .	(Rule 196)

	$default	reduce using rule 196 (OPTIONAL-59)

State 135:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 174)

	WORD	shift, and go to state 102

	Type	go to state 202

State 136:

	Loop -> LoopWhile .	(Rule 172)

	$default	reduce using rule 172 (Loop)

State 137:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 173)

	VARIABLE_SYMBOL	shift, and go to state 203

State 138:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayReference	go to state 69
	Literal	go to state 76
	Expression	go to state 204
	HashReference	go to state 65

State 139:

	Statement -> OPTIONAL-50 Loop .	(Rule 159)

	$default	reduce using rule 159 (Statement)

State 140:

	Loop -> LoopForEach .	(Rule 171)

	$default	reduce using rule 171 (Loop)

State 141:

	Loop -> LoopFor .	(Rule 170)

	$default	reduce using rule 170 (Loop)

State 142:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	VARIABLE_SYMBOL	shift, and go to state 205

State 143:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 138)

	';'	shift, and go to state 206

State 144:

	LoopLabel -> WORD .	(Rule 219)

	$default	reduce using rule 219 (LoopLabel)

State 145:

	Expression -> WordScoped '(' . OPTIONAL-47 ')'	(Rule 152)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 131
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	')'	reduce using rule 140 (OPTIONAL-47)

	ListElement	go to state 128
	OPTIONAL-47	go to state 208
	TypeInner	go to state 129
	HashDereferenced	go to state 55
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayReference	go to state 69
	ListElements	go to state 207
	Expression	go to state 132
	Literal	go to state 76
	HashReference	go to state 65
	Operator	go to state 62

State 146:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 187)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	HashReference	go to state 65
	Expression	go to state 209
	Literal	go to state 76
	ArrayReference	go to state 69
	Operator	go to state 62
	HashDereferenced	go to state 55

State 147:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 148:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 188)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayReference	go to state 69
	HashReference	go to state 65
	Literal	go to state 76
	Expression	go to state 210
	Operator	go to state 62
	HashDereferenced	go to state 55

State 149:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-48 ')'	(Rule 153)

	WORD	shift, and go to state 211

State 150:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 114)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 114 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 151:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Expression -> '(' Expression . ')'	(Rule 154)

	')'	shift, and go to state 212
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 152:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-60 Expression	(Rule 203)

	OP20_HASH_FATARROW	shift, and go to state 213

State 153:

	HashEntry -> HashDereferenced .	(Rule 204)

	$default	reduce using rule 204 (HashEntry)

State 154:

	HashReference -> '{' HashEntry . STAR-62 '}'	(Rule 210)

	$default	reduce using rule 209 (STAR-62)

	STAR-62	go to state 214

State 155:

	Expression -> '{' '}' .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 156:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 216)
	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'filehandle_ref'	shift, and go to state 215
	WORD	shift, and go to state 102

	Type	go to state 200

State 157:

	FileHandle -> '{*' . WORD '}'	(Rule 215)

	WORD	shift, and go to state 216

State 158:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 . ')' ';'	(Rule 134)

	')'	shift, and go to state 217

State 159:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 131
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	')'	reduce using rule 129 (OPTIONAL-44)

	HashDereferenced	go to state 55
	TypeInner	go to state 129
	ListElement	go to state 128
	Operator	go to state 62
	OPTIONAL-44	go to state 219
	HashReference	go to state 65
	Literal	go to state 76
	Expression	go to state 132
	ListElements	go to state 218
	ArrayReference	go to state 69
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79

State 160:

	OPTIONAL-43 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-43)

State 161:

	STAR-56 -> STAR-56 . VariableRetrieval	(Rule 179)
	Variable -> VARIABLE_SYMBOL STAR-56 .	(Rule 181)

	OP02_ARRAY_THINARROW	shift, and go to state 220
	OP02_HASH_THINARROW	shift, and go to state 222

	')'	reduce using rule 181 (Variable)
	'..'	reduce using rule 181 (Variable)
	';'	reduce using rule 181 (Variable)
	']'	reduce using rule 181 (Variable)
	'}'	reduce using rule 181 (Variable)
	COLON	reduce using rule 181 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 181 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 181 (Variable)
	OP04_MATH_POW	reduce using rule 181 (Variable)
	OP06_REGEX_MATCH	reduce using rule 181 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 181 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 181 (Variable)
	OP08_STRING_CAT	reduce using rule 181 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 181 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 181 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 181 (Variable)
	OP13_BITWISE_AND	reduce using rule 181 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 181 (Variable)
	OP15_LOGICAL_AND	reduce using rule 181 (Variable)
	OP16_LOGICAL_OR	reduce using rule 181 (Variable)
	OP17_LIST_RANGE	reduce using rule 181 (Variable)
	OP18_TERNARY	reduce using rule 181 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 181 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 181 (Variable)
	OP21_LIST_COMMA	reduce using rule 181 (Variable)
	OP23_LOGICAL_AND	reduce using rule 181 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 181 (Variable)

	VariableRetrieval	go to state 221

State 162:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 . ';'	(Rule 136)

	';'	shift, and go to state 223

State 163:

	OPTIONAL-45 -> ListElements .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-45)

State 164:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 131
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	';'	reduce using rule 133 (OPTIONAL-46)

	ListElement	go to state 128
	HashDereferenced	go to state 55
	TypeInner	go to state 129
	OPTIONAL-46	go to state 225
	Expression	go to state 132
	Literal	go to state 76
	HashReference	go to state 65
	ListElements	go to state 224
	ArrayReference	go to state 69
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	Operator	go to state 62

State 165:

	PLUS-6 -> PLUS-6 Operation .	(Rule 13)

	$default	reduce using rule 13 (PLUS-6)

State 166:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 35)

	'my'	shift, and go to state 131

	TypeInner	go to state 226

State 167:

	PLUS-12 -> WORD .	(Rule 32)

	$default	reduce using rule 32 (PLUS-12)

State 168:

	PLUS-12 -> PLUS-12 . WORD	(Rule 31)
	Include -> 'use' WordScoped 'qw(' PLUS-12 . ')' ';'	(Rule 34)

	')'	shift, and go to state 228
	WORD	shift, and go to state 227

State 169:

	PLUS-10 -> PLUS-10 Subroutine .	(Rule 24)

	$default	reduce using rule 24 (PLUS-10)

State 170:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' . '1;'	(Rule 26)

	'1;'	shift, and go to state 229

State 171:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include . STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 230

State 172:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-52 OPTIONAL-54	(Rule 169)

	'{'	shift, and go to state 232

	CodeBlock	go to state 231

State 173:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 185)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 186)

	';'	shift, and go to state 233
	OP19_VARIABLE_ASSIGN	shift, and go to state 234

State 174:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 200)

	$default	reduce using rule 200 (ArrayDereferenced)

State 175:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 199)

	$default	reduce using rule 199 (ArrayDereferenced)

State 176:

	HashDereferenced -> '%{' Variable '}' .	(Rule 211)

	$default	reduce using rule 211 (HashDereferenced)

State 177:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 212)

	$default	reduce using rule 212 (HashDereferenced)

State 178:

	Operator -> OP01_NAMED '(' OPTIONAL-42 . ')'	(Rule 102)

	')'	shift, and go to state 235

State 179:

	OPTIONAL-42 -> ListElements .	(Rule 100)

	$default	reduce using rule 100 (OPTIONAL-42)

State 180:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123

	')'	reduce using rule 120 (Operator)
	'..'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP16_LOGICAL_OR	reduce using rule 120 (Operator)
	OP17_LIST_RANGE	reduce using rule 120 (Operator)
	OP18_TERNARY	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP23_LOGICAL_AND	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 181:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120

	')'	reduce using rule 125 (Operator)
	'..'	reduce using rule 125 (Operator)
	';'	reduce using rule 125 (Operator)
	']'	reduce using rule 125 (Operator)
	'}'	reduce using rule 125 (Operator)
	OP21_LIST_COMMA	reduce using rule 125 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (Operator)

State 182:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 108)

	OP06_REGEX_PATTERN	shift, and go to state 236

State 183:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP06_REGEX_MATCH	reduce using rule 105 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 184:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 185:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 109 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 109 (Operator)
	OP08_STRING_CAT	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 186:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 110 (Operator)
	OP08_STRING_CAT	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 187:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP13_BITWISE_AND	reduce using rule 117 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 188:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP13_BITWISE_AND	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 189:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 121 (Operator)
	'..'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP18_TERNARY	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 190:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 191:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125

	')'	reduce using rule 124 (Operator)
	'..'	reduce using rule 124 (Operator)
	';'	reduce using rule 124 (Operator)
	']'	reduce using rule 124 (Operator)
	'}'	reduce using rule 124 (Operator)
	OP21_LIST_COMMA	reduce using rule 124 (Operator)
	OP23_LOGICAL_AND	reduce using rule 124 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 124 (Operator)

State 192:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 193:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 118 (Operator)
	OP15_LOGICAL_AND	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 194:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP15_LOGICAL_AND	reduce using rule 119 (Operator)
	OP16_LOGICAL_OR	reduce using rule 119 (Operator)
	OP17_LIST_RANGE	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 195:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 122)

	COLON	shift, and go to state 237

State 196:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 197:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 190)
	ListElements -> ListElement STAR-58 .	(Rule 192)

	OP21_LIST_COMMA	shift, and go to state 238

	')'	reduce using rule 192 (ListElements)
	';'	reduce using rule 192 (ListElements)
	']'	reduce using rule 192 (ListElements)

	PAREN-57	go to state 239

State 198:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> TypeInner Expression .	(Rule 194)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

	')'	reduce using rule 194 (ListElement)
	';'	reduce using rule 194 (ListElement)
	']'	reduce using rule 194 (ListElement)
	OP21_LIST_COMMA	reduce using rule 194 (ListElement)

State 199:

	ArrayReference -> '[' OPTIONAL-59 ']' .	(Rule 198)

	$default	reduce using rule 198 (ArrayReference)

State 200:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'$TYPED_'	shift, and go to state 240

State 201:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 195)

	$default	reduce using rule 195 (ListElement)

State 202:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 174)

	VARIABLE_SYMBOL	shift, and go to state 241

State 203:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 173)

	'('	shift, and go to state 242

State 204:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 175)

	')'	shift, and go to state 243
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 205:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'= sub {'	shift, and go to state 244

State 206:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 138)

	$default	reduce using rule 138 (OperatorVoid)

State 207:

	OPTIONAL-47 -> ListElements .	(Rule 139)

	$default	reduce using rule 139 (OPTIONAL-47)

State 208:

	Expression -> WordScoped '(' OPTIONAL-47 . ')'	(Rule 152)

	')'	shift, and go to state 245

State 209:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 187)

	';'	shift, and go to state 246
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 210:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 188)

	';'	shift, and go to state 247
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 211:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-48 ')'	(Rule 153)

	'('	shift, and go to state 248

State 212:

	Expression -> '(' Expression ')' .	(Rule 154)

	$default	reduce using rule 154 (Expression)

State 213:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-60 Expression	(Rule 203)

	'my'	shift, and go to state 131

	'%{'	reduce using rule 202 (OPTIONAL-60)
	'('	reduce using rule 202 (OPTIONAL-60)
	'@{'	reduce using rule 202 (OPTIONAL-60)
	'['	reduce using rule 202 (OPTIONAL-60)
	'undef'	reduce using rule 202 (OPTIONAL-60)
	'{'	reduce using rule 202 (OPTIONAL-60)
	LITERAL_NUMBER	reduce using rule 202 (OPTIONAL-60)
	LITERAL_STRING	reduce using rule 202 (OPTIONAL-60)
	OP01_NAMED	reduce using rule 202 (OPTIONAL-60)
	OP03_MATH_INC_DEC	reduce using rule 202 (OPTIONAL-60)
	OP05_LOGICAL_NEG	reduce using rule 202 (OPTIONAL-60)
	OP05_MATH_NEG	reduce using rule 202 (OPTIONAL-60)
	OP10_NAMED_UNARY	reduce using rule 202 (OPTIONAL-60)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 202 (OPTIONAL-60)
	OP22_LOGICAL_NOT	reduce using rule 202 (OPTIONAL-60)
	VARIABLE_SYMBOL	reduce using rule 202 (OPTIONAL-60)
	WORD	reduce using rule 202 (OPTIONAL-60)
	WORD_SCOPED	reduce using rule 202 (OPTIONAL-60)

	TypeInner	go to state 250
	OPTIONAL-60	go to state 249

State 214:

	STAR-62 -> STAR-62 . PAREN-61	(Rule 208)
	HashReference -> '{' HashEntry STAR-62 . '}'	(Rule 210)

	'}'	shift, and go to state 251
	OP21_LIST_COMMA	shift, and go to state 253

	PAREN-61	go to state 252

State 215:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 216)

	VARIABLE_SYMBOL	shift, and go to state 254

State 216:

	FileHandle -> '{*' WORD . '}'	(Rule 215)

	'}'	shift, and go to state 255

State 217:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' . ';'	(Rule 134)

	';'	shift, and go to state 256

State 218:

	OPTIONAL-44 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-44)

State 219:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 . ')' ';'	(Rule 135)

	')'	shift, and go to state 257

State 220:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 182)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	ArrayReference	go to state 69
	Expression	go to state 258
	HashReference	go to state 65
	Literal	go to state 76
	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97
	Operator	go to state 62
	HashDereferenced	go to state 55

State 221:

	STAR-56 -> STAR-56 VariableRetrieval .	(Rule 179)

	$default	reduce using rule 179 (STAR-56)

State 222:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 183)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 184)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 259
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	Literal	go to state 76
	Expression	go to state 260
	HashReference	go to state 65
	ArrayReference	go to state 69

State 223:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 224:

	OPTIONAL-46 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-46)

State 225:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 . ';'	(Rule 137)

	';'	shift, and go to state 261

State 226:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 35)

	'['	shift, and go to state 264
	'{'	shift, and go to state 263
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72

	Literal	go to state 262
	ConstantValue	go to state 265

State 227:

	PLUS-12 -> PLUS-12 WORD .	(Rule 31)

	$default	reduce using rule 31 (PLUS-12)

State 228:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' . ';'	(Rule 34)

	';'	shift, and go to state 266

State 229:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;' .	(Rule 26)

	$default	reduce using rule 26 (Package)

State 230:

	STAR-28 -> STAR-28 . Critic	(Rule 68)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 . STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'## no critic qw('	shift, and go to state 21

	'our %properties = ('	reduce using rule 71 (STAR-29)
	'use constant'	reduce using rule 71 (STAR-29)
	'use'	reduce using rule 71 (STAR-29)

	Critic	go to state 267
	STAR-29	go to state 268

State 231:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-52 OPTIONAL-54	(Rule 169)

	$default	reduce using rule 165 (STAR-52)

	STAR-52	go to state 269

State 232:

	CodeBlock -> '{' . PLUS-55 '}'	(Rule 178)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 57
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_PAREN	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 10

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Conditional	go to state 71
	LoopLabel	go to state 47
	PAREN-49	go to state 50
	Operation	go to state 271
	PLUS-55	go to state 270
	OPTIONAL-50	go to state 73
	Variable	go to state 78
	WordScoped	go to state 77
	VariableModification	go to state 54
	ArrayDereferenced	go to state 79
	Literal	go to state 76
	Statement	go to state 52
	HashDereferenced	go to state 55
	OperatorVoid	go to state 61
	VariableDeclaration	go to state 64
	Operator	go to state 62
	HashReference	go to state 65
	Expression	go to state 66
	ArrayReference	go to state 69

State 233:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 185)

	$default	reduce using rule 185 (VariableDeclaration)

State 234:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 186)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayReference	go to state 69
	Literal	go to state 76
	HashReference	go to state 65
	Expression	go to state 272
	Operator	go to state 62
	HashDereferenced	go to state 55

State 235:

	Operator -> OP01_NAMED '(' OPTIONAL-42 ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 236:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 108)

	'/'	shift, and go to state 273

State 237:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 85

	Variable	go to state 274

State 238:

	PAREN-57 -> OP21_LIST_COMMA . ListElement	(Rule 189)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 131
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Operator	go to state 62
	ArrayReference	go to state 69
	Literal	go to state 76
	HashReference	go to state 65
	Expression	go to state 132
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	TypeInner	go to state 129
	HashDereferenced	go to state 55
	ListElement	go to state 275

State 239:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 190)

	$default	reduce using rule 190 (STAR-58)

State 240:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 276

State 241:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 174)

	'('	shift, and go to state 277

State 242:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 173)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Operator	go to state 62
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayReference	go to state 69
	Literal	go to state 76
	HashReference	go to state 65
	Expression	go to state 278
	HashDereferenced	go to state 55

State 243:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 175)

	'{'	shift, and go to state 232

	CodeBlock	go to state 279

State 244:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'( my'	shift, and go to state 281

	'%{'	reduce using rule 54 (OPTIONAL-21)
	'('	reduce using rule 54 (OPTIONAL-21)
	'@{'	reduce using rule 54 (OPTIONAL-21)
	'['	reduce using rule 54 (OPTIONAL-21)
	'for my integer'	reduce using rule 54 (OPTIONAL-21)
	'foreach my'	reduce using rule 54 (OPTIONAL-21)
	'if ('	reduce using rule 54 (OPTIONAL-21)
	'my'	reduce using rule 54 (OPTIONAL-21)
	'undef'	reduce using rule 54 (OPTIONAL-21)
	'while ('	reduce using rule 54 (OPTIONAL-21)
	'{'	reduce using rule 54 (OPTIONAL-21)
	LITERAL_NUMBER	reduce using rule 54 (OPTIONAL-21)
	LITERAL_STRING	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID_PAREN	reduce using rule 54 (OPTIONAL-21)
	OP03_MATH_INC_DEC	reduce using rule 54 (OPTIONAL-21)
	OP05_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-21)
	OP05_MATH_NEG	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 54 (OPTIONAL-21)
	OP19_LOOP_CONTROL	reduce using rule 54 (OPTIONAL-21)
	OP22_LOGICAL_NOT	reduce using rule 54 (OPTIONAL-21)
	VARIABLE_SYMBOL	reduce using rule 54 (OPTIONAL-21)
	WORD	reduce using rule 54 (OPTIONAL-21)
	WORD_SCOPED	reduce using rule 54 (OPTIONAL-21)

	SubroutineArguments	go to state 282
	OPTIONAL-21	go to state 280

State 245:

	Expression -> WordScoped '(' OPTIONAL-47 ')' .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 246:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 187)

	$default	reduce using rule 187 (VariableModification)

State 247:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 188)

	$default	reduce using rule 188 (VariableModification)

State 248:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-48 ')'	(Rule 153)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 131
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	')'	reduce using rule 142 (OPTIONAL-48)

	ListElement	go to state 128
	HashDereferenced	go to state 55
	TypeInner	go to state 129
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79
	HashReference	go to state 65
	Literal	go to state 76
	Expression	go to state 132
	ListElements	go to state 283
	OPTIONAL-48	go to state 284
	ArrayReference	go to state 69
	Operator	go to state 62

State 249:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 . Expression	(Rule 203)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	ArrayReference	go to state 69
	Expression	go to state 285
	Literal	go to state 76
	HashReference	go to state 65
	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97
	Operator	go to state 62

State 250:

	OPTIONAL-60 -> TypeInner .	(Rule 201)

	$default	reduce using rule 201 (OPTIONAL-60)

State 251:

	HashReference -> '{' HashEntry STAR-62 '}' .	(Rule 210)

	$default	reduce using rule 210 (HashReference)

State 252:

	STAR-62 -> STAR-62 PAREN-61 .	(Rule 208)

	$default	reduce using rule 208 (STAR-62)

State 253:

	PAREN-61 -> OP21_LIST_COMMA . HashEntry	(Rule 207)

	'%{'	shift, and go to state 60
	WORD	shift, and go to state 152

	HashEntry	go to state 286
	HashDereferenced	go to state 153

State 254:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 216)

	$default	reduce using rule 216 (FileHandle)

State 255:

	FileHandle -> '{*' WORD '}' .	(Rule 215)

	$default	reduce using rule 215 (FileHandle)

State 256:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 257:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' . ';'	(Rule 135)

	';'	shift, and go to state 287

State 258:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 182)

	']'	shift, and go to state 288
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 259:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 184)
	WordScoped -> WORD .	(Rule 213)

	'}'	shift, and go to state 289

	'('	reduce using rule 213 (WordScoped)

State 260:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 183)

	'}'	shift, and go to state 290
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 261:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';' .	(Rule 137)

	$default	reduce using rule 137 (OperatorVoid)

State 262:

	ConstantValue -> Literal .	(Rule 50)

	$default	reduce using rule 50 (ConstantValue)

State 263:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	WORD	shift, and go to state 291

State 264:

	ConstantValue -> '[' . OPTIONAL-13 Literal STAR-16 ']'	(Rule 51)

	'my'	shift, and go to state 131

	LITERAL_NUMBER	reduce using rule 37 (OPTIONAL-13)
	LITERAL_STRING	reduce using rule 37 (OPTIONAL-13)

	OPTIONAL-13	go to state 292
	TypeInner	go to state 293

State 265:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 35)

	';'	shift, and go to state 294

State 266:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';' .	(Rule 34)

	$default	reduce using rule 34 (Include)

State 267:

	STAR-28 -> STAR-28 Critic .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 268:

	STAR-29 -> STAR-29 . Include	(Rule 70)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 . STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 30

	'our %properties = ('	reduce using rule 73 (STAR-30)
	'use constant'	reduce using rule 73 (STAR-30)

	STAR-30	go to state 296
	Include	go to state 295

State 269:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 164)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 . OPTIONAL-54	(Rule 169)

	'else'	shift, and go to state 300
	'elsif ('	shift, and go to state 301

	$end	reduce using rule 168 (OPTIONAL-54)
	'%{'	reduce using rule 168 (OPTIONAL-54)
	'('	reduce using rule 168 (OPTIONAL-54)
	'@{'	reduce using rule 168 (OPTIONAL-54)
	'['	reduce using rule 168 (OPTIONAL-54)
	'for my integer'	reduce using rule 168 (OPTIONAL-54)
	'foreach my'	reduce using rule 168 (OPTIONAL-54)
	'if ('	reduce using rule 168 (OPTIONAL-54)
	'my'	reduce using rule 168 (OPTIONAL-54)
	'undef'	reduce using rule 168 (OPTIONAL-54)
	'while ('	reduce using rule 168 (OPTIONAL-54)
	'{'	reduce using rule 168 (OPTIONAL-54)
	'}'	reduce using rule 168 (OPTIONAL-54)
	LITERAL_NUMBER	reduce using rule 168 (OPTIONAL-54)
	LITERAL_STRING	reduce using rule 168 (OPTIONAL-54)
	OP01_NAMED	reduce using rule 168 (OPTIONAL-54)
	OP01_NAMED_VOID	reduce using rule 168 (OPTIONAL-54)
	OP01_NAMED_VOID_PAREN	reduce using rule 168 (OPTIONAL-54)
	OP03_MATH_INC_DEC	reduce using rule 168 (OPTIONAL-54)
	OP05_LOGICAL_NEG	reduce using rule 168 (OPTIONAL-54)
	OP05_MATH_NEG	reduce using rule 168 (OPTIONAL-54)
	OP10_NAMED_UNARY	reduce using rule 168 (OPTIONAL-54)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 168 (OPTIONAL-54)
	OP19_LOOP_CONTROL	reduce using rule 168 (OPTIONAL-54)
	OP22_LOGICAL_NOT	reduce using rule 168 (OPTIONAL-54)
	VARIABLE_SYMBOL	reduce using rule 168 (OPTIONAL-54)
	WORD	reduce using rule 168 (OPTIONAL-54)
	WORD_SCOPED	reduce using rule 168 (OPTIONAL-54)

	OPTIONAL-54	go to state 297
	PAREN-53	go to state 299
	PAREN-51	go to state 298

State 270:

	PLUS-55 -> PLUS-55 . Operation	(Rule 176)
	CodeBlock -> '{' PLUS-55 . '}'	(Rule 178)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 57
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	'}'	shift, and go to state 303
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_PAREN	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 10

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	HashDereferenced	go to state 55
	OperatorVoid	go to state 61
	VariableDeclaration	go to state 64
	Operator	go to state 62
	HashReference	go to state 65
	Expression	go to state 66
	ArrayReference	go to state 69
	Conditional	go to state 71
	LoopLabel	go to state 47
	PAREN-49	go to state 50
	OPTIONAL-50	go to state 73
	Operation	go to state 302
	WordScoped	go to state 77
	Variable	go to state 78
	VariableModification	go to state 54
	ArrayDereferenced	go to state 79
	Literal	go to state 76
	Statement	go to state 52

State 271:

	PLUS-55 -> Operation .	(Rule 177)

	$default	reduce using rule 177 (PLUS-55)

State 272:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 186)

	';'	shift, and go to state 304
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 273:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 274:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 122)

	$default	reduce using rule 122 (Operator)

State 275:

	PAREN-57 -> OP21_LIST_COMMA ListElement .	(Rule 189)

	$default	reduce using rule 189 (PAREN-57)

State 276:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 217)

	OP19_VARIABLE_ASSIGN	shift, and go to state 305

State 277:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 174)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'my'	shift, and go to state 131
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Operator	go to state 62
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	Literal	go to state 76
	HashReference	go to state 65
	Expression	go to state 132
	ListElements	go to state 306
	ArrayReference	go to state 69
	HashDereferenced	go to state 55
	TypeInner	go to state 129
	ListElement	go to state 128

State 278:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 173)

	'..'	shift, and go to state 307
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 279:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 175)

	$default	reduce using rule 175 (LoopWhile)

State 280:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 . PLUS-22 '}' ';'	(Rule 57)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 57
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_PAREN	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 10

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	OperatorVoid	go to state 61
	HashDereferenced	go to state 55
	ArrayReference	go to state 69
	HashReference	go to state 65
	Expression	go to state 66
	VariableDeclaration	go to state 64
	Operator	go to state 62
	LoopLabel	go to state 47
	Conditional	go to state 71
	PLUS-22	go to state 309
	ArrayDereferenced	go to state 79
	VariableModification	go to state 54
	Variable	go to state 78
	WordScoped	go to state 77
	Statement	go to state 52
	Literal	go to state 76
	OPTIONAL-50	go to state 73
	Operation	go to state 308
	PAREN-49	go to state 50

State 281:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	WORD	shift, and go to state 102

	Type	go to state 310

State 282:

	OPTIONAL-21 -> SubroutineArguments .	(Rule 53)

	$default	reduce using rule 53 (OPTIONAL-21)

State 283:

	OPTIONAL-48 -> ListElements .	(Rule 141)

	$default	reduce using rule 141 (OPTIONAL-48)

State 284:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 . ')'	(Rule 153)

	')'	shift, and go to state 311

State 285:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 Expression .	(Rule 203)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

	'}'	reduce using rule 203 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 203 (HashEntry)

State 286:

	PAREN-61 -> OP21_LIST_COMMA HashEntry .	(Rule 207)

	$default	reduce using rule 207 (PAREN-61)

State 287:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 288:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 182)

	$default	reduce using rule 182 (VariableRetrieval)

State 289:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 184)

	$default	reduce using rule 184 (VariableRetrieval)

State 290:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 183)

	$default	reduce using rule 183 (VariableRetrieval)

State 291:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	OP20_HASH_FATARROW	shift, and go to state 312

State 292:

	ConstantValue -> '[' OPTIONAL-13 . Literal STAR-16 ']'	(Rule 51)

	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72

	Literal	go to state 313

State 293:

	OPTIONAL-13 -> TypeInner .	(Rule 36)

	$default	reduce using rule 36 (OPTIONAL-13)

State 294:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 35)

	$default	reduce using rule 35 (Constant)

State 295:

	STAR-29 -> STAR-29 Include .	(Rule 70)

	$default	reduce using rule 70 (STAR-29)

State 296:

	STAR-30 -> STAR-30 . Constant	(Rule 72)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 . Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'our %properties = ('	shift, and go to state 316
	'use constant'	shift, and go to state 40

	Constant	go to state 314
	Properties	go to state 315

State 297:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54 .	(Rule 169)

	$default	reduce using rule 169 (Conditional)

State 298:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 164)

	$default	reduce using rule 164 (STAR-52)

State 299:

	OPTIONAL-54 -> PAREN-53 .	(Rule 167)

	$default	reduce using rule 167 (OPTIONAL-54)

State 300:

	PAREN-53 -> 'else' . CodeBlock	(Rule 166)

	'{'	shift, and go to state 232

	CodeBlock	go to state 317

State 301:

	PAREN-51 -> 'elsif (' . Expression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	ArrayDereferenced	go to state 79
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayReference	go to state 69
	HashReference	go to state 65
	Literal	go to state 76
	Expression	go to state 318

State 302:

	PLUS-55 -> PLUS-55 Operation .	(Rule 176)

	$default	reduce using rule 176 (PLUS-55)

State 303:

	CodeBlock -> '{' PLUS-55 '}' .	(Rule 178)

	$default	reduce using rule 178 (CodeBlock)

State 304:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 186)

	$default	reduce using rule 186 (VariableDeclaration)

State 305:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 217)

	$default	reduce using rule 217 (TypeInner)

State 306:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 174)

	')'	shift, and go to state 319

State 307:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 173)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayReference	go to state 69
	Expression	go to state 320
	HashReference	go to state 65
	Literal	go to state 76
	Operator	go to state 62

State 308:

	PLUS-22 -> Operation .	(Rule 56)

	$default	reduce using rule 56 (PLUS-22)

State 309:

	PLUS-22 -> PLUS-22 . Operation	(Rule 55)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 . '}' ';'	(Rule 57)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 57
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	'}'	shift, and go to state 321
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_PAREN	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 10

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	OperatorVoid	go to state 61
	HashDereferenced	go to state 55
	Expression	go to state 66
	HashReference	go to state 65
	ArrayReference	go to state 69
	Operator	go to state 62
	VariableDeclaration	go to state 64
	LoopLabel	go to state 47
	Conditional	go to state 71
	Literal	go to state 76
	Statement	go to state 52
	Variable	go to state 78
	WordScoped	go to state 77
	VariableModification	go to state 54
	ArrayDereferenced	go to state 79
	PAREN-49	go to state 50
	OPTIONAL-50	go to state 73
	Operation	go to state 322

State 310:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	VARIABLE_SYMBOL	shift, and go to state 323

State 311:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')' .	(Rule 153)

	$default	reduce using rule 153 (Expression)

State 312:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	'my'	shift, and go to state 131

	LITERAL_NUMBER	reduce using rule 44 (OPTIONAL-17)
	LITERAL_STRING	reduce using rule 44 (OPTIONAL-17)

	OPTIONAL-17	go to state 325
	TypeInner	go to state 324

State 313:

	ConstantValue -> '[' OPTIONAL-13 Literal . STAR-16 ']'	(Rule 51)

	$default	reduce using rule 42 (STAR-16)

	STAR-16	go to state 326

State 314:

	STAR-30 -> STAR-30 Constant .	(Rule 72)

	$default	reduce using rule 72 (STAR-30)

State 315:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties . STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 75 (STAR-31)

	STAR-31	go to state 327

State 316:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-36 ')' ';'	(Rule 85)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 86)

	'%{'	shift, and go to state 60
	')'	shift, and go to state 331
	WORD	shift, and go to state 330

	HashDereferenced	go to state 329
	HashEntryTyped	go to state 328

State 317:

	PAREN-53 -> 'else' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (PAREN-53)

State 318:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	PAREN-51 -> 'elsif (' Expression . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 332
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 319:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 174)

	'{'	shift, and go to state 232

	CodeBlock	go to state 333

State 320:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 173)

	')'	shift, and go to state 334
	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 321:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' . ';'	(Rule 57)

	';'	shift, and go to state 335

State 322:

	PLUS-22 -> PLUS-22 Operation .	(Rule 55)

	$default	reduce using rule 55 (PLUS-22)

State 323:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 336

State 324:

	OPTIONAL-17 -> TypeInner .	(Rule 43)

	$default	reduce using rule 43 (OPTIONAL-17)

State 325:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 . Literal STAR-20 '}'	(Rule 52)

	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72

	Literal	go to state 337

State 326:

	STAR-16 -> STAR-16 . PAREN-15	(Rule 41)
	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 . ']'	(Rule 51)

	']'	shift, and go to state 338
	OP21_LIST_COMMA	shift, and go to state 339

	PAREN-15	go to state 340

State 327:

	STAR-31 -> STAR-31 . Method	(Rule 74)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 . '1;' '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 342
	'our'	shift, and go to state 343

	Method	go to state 341

State 328:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-36 ')' ';'	(Rule 85)

	$default	reduce using rule 84 (STAR-36)

	STAR-36	go to state 344

State 329:

	HashEntryTyped -> HashDereferenced .	(Rule 206)

	$default	reduce using rule 206 (HashEntryTyped)

State 330:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 205)

	OP20_HASH_FATARROW	shift, and go to state 345

State 331:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 86)

	';'	shift, and go to state 346

State 332:

	PAREN-51 -> 'elsif (' Expression ')' . CodeBlock	(Rule 163)

	'{'	shift, and go to state 232

	CodeBlock	go to state 347

State 333:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 174)

	$default	reduce using rule 174 (LoopForEach)

State 334:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 173)

	'{'	shift, and go to state 232

	CodeBlock	go to state 348

State 335:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';' .	(Rule 57)

	$default	reduce using rule 57 (Subroutine)

State 336:

	STAR-24 -> STAR-24 . PAREN-23	(Rule 59)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	')'	shift, and go to state 349
	OP21_LIST_COMMA	shift, and go to state 351

	PAREN-23	go to state 350

State 337:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal . STAR-20 '}'	(Rule 52)

	$default	reduce using rule 49 (STAR-20)

	STAR-20	go to state 352

State 338:

	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']' .	(Rule 51)

	$default	reduce using rule 51 (ConstantValue)

State 339:

	PAREN-15 -> OP21_LIST_COMMA . OPTIONAL-14 Literal	(Rule 40)

	'my'	shift, and go to state 131

	LITERAL_NUMBER	reduce using rule 39 (OPTIONAL-14)
	LITERAL_STRING	reduce using rule 39 (OPTIONAL-14)

	TypeInner	go to state 354
	OPTIONAL-14	go to state 353

State 340:

	STAR-16 -> STAR-16 PAREN-15 .	(Rule 41)

	$default	reduce using rule 41 (STAR-16)

State 341:

	STAR-31 -> STAR-31 Method .	(Rule 74)

	$default	reduce using rule 74 (STAR-31)

State 342:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' . '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 355

State 343:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	WORD	shift, and go to state 102

	Type	go to state 356

State 344:

	STAR-36 -> STAR-36 . PAREN-35	(Rule 83)
	Properties -> 'our %properties = (' HashEntryTyped STAR-36 . ')' ';'	(Rule 85)

	')'	shift, and go to state 359
	OP21_LIST_COMMA	shift, and go to state 358

	PAREN-35	go to state 357

State 345:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 205)

	'my'	shift, and go to state 131

	TypeInner	go to state 360

State 346:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 86)

	$default	reduce using rule 86 (Properties)

State 347:

	PAREN-51 -> 'elsif (' Expression ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (PAREN-51)

State 348:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 173)

	$default	reduce using rule 173 (LoopFor)

State 349:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	OP19_VARIABLE_ASSIGN	shift, and go to state 361

State 350:

	STAR-24 -> STAR-24 PAREN-23 .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 351:

	PAREN-23 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 58)

	'my'	shift, and go to state 362

State 352:

	STAR-20 -> STAR-20 . PAREN-19	(Rule 48)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 . '}'	(Rule 52)

	'}'	shift, and go to state 363
	OP21_LIST_COMMA	shift, and go to state 365

	PAREN-19	go to state 364

State 353:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 . Literal	(Rule 40)

	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72

	Literal	go to state 366

State 354:

	OPTIONAL-14 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-14)

State 355:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' . OPTIONAL-34	(Rule 81)

	'our'	shift, and go to state 74

	$end	reduce using rule 80 (OPTIONAL-34)
	'package'	reduce using rule 80 (OPTIONAL-34)

	Subroutine	go to state 367
	OPTIONAL-34	go to state 368
	PAREN-33	go to state 370
	PLUS-32	go to state 369

State 356:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	VARIABLE_SYMBOL	shift, and go to state 371

State 357:

	STAR-36 -> STAR-36 PAREN-35 .	(Rule 83)

	$default	reduce using rule 83 (STAR-36)

State 358:

	PAREN-35 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 82)

	'%{'	shift, and go to state 60
	WORD	shift, and go to state 330

	HashEntryTyped	go to state 372
	HashDereferenced	go to state 329

State 359:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' . ';'	(Rule 85)

	';'	shift, and go to state 373

State 360:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 205)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	Expression	go to state 374
	Literal	go to state 76
	HashReference	go to state 65
	ArrayReference	go to state 69
	Operator	go to state 62

State 361:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-25	(Rule 63)

	'@_;'	shift, and go to state 375

State 362:

	PAREN-23 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 58)

	WORD	shift, and go to state 102

	Type	go to state 376

State 363:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}' .	(Rule 52)

	$default	reduce using rule 52 (ConstantValue)

State 364:

	STAR-20 -> STAR-20 PAREN-19 .	(Rule 48)

	$default	reduce using rule 48 (STAR-20)

State 365:

	PAREN-19 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	WORD	shift, and go to state 377

State 366:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal .	(Rule 40)

	$default	reduce using rule 40 (PAREN-15)

State 367:

	PLUS-32 -> Subroutine .	(Rule 77)

	$default	reduce using rule 77 (PLUS-32)

State 368:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34 .	(Rule 81)

	$default	reduce using rule 81 (Class)

State 369:

	PLUS-32 -> PLUS-32 . Subroutine	(Rule 76)
	PAREN-33 -> PLUS-32 . '1;' '1;'	(Rule 78)

	'1;'	shift, and go to state 379
	'our'	shift, and go to state 74

	Subroutine	go to state 378

State 370:

	OPTIONAL-34 -> PAREN-33 .	(Rule 79)

	$default	reduce using rule 79 (OPTIONAL-34)

State 371:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'= sub {'	shift, and go to state 380

State 372:

	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 82)

	$default	reduce using rule 82 (PAREN-35)

State 373:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';' .	(Rule 85)

	$default	reduce using rule 85 (Properties)

State 374:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 205)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

	')'	reduce using rule 205 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 205 (HashEntryTyped)

State 375:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-25	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 381

State 376:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 382

State 377:

	PAREN-19 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	OP20_HASH_FATARROW	shift, and go to state 383

State 378:

	PLUS-32 -> PLUS-32 Subroutine .	(Rule 76)

	$default	reduce using rule 76 (PLUS-32)

State 379:

	PAREN-33 -> PLUS-32 '1;' . '1;'	(Rule 78)

	'1;'	shift, and go to state 384

State 380:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'( my'	shift, and go to state 385

	'%{'	reduce using rule 88 (OPTIONAL-37)
	'('	reduce using rule 88 (OPTIONAL-37)
	'@{'	reduce using rule 88 (OPTIONAL-37)
	'['	reduce using rule 88 (OPTIONAL-37)
	'for my integer'	reduce using rule 88 (OPTIONAL-37)
	'foreach my'	reduce using rule 88 (OPTIONAL-37)
	'if ('	reduce using rule 88 (OPTIONAL-37)
	'my'	reduce using rule 88 (OPTIONAL-37)
	'undef'	reduce using rule 88 (OPTIONAL-37)
	'while ('	reduce using rule 88 (OPTIONAL-37)
	'{'	reduce using rule 88 (OPTIONAL-37)
	LITERAL_NUMBER	reduce using rule 88 (OPTIONAL-37)
	LITERAL_STRING	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID_PAREN	reduce using rule 88 (OPTIONAL-37)
	OP03_MATH_INC_DEC	reduce using rule 88 (OPTIONAL-37)
	OP05_LOGICAL_NEG	reduce using rule 88 (OPTIONAL-37)
	OP05_MATH_NEG	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 88 (OPTIONAL-37)
	OP19_LOOP_CONTROL	reduce using rule 88 (OPTIONAL-37)
	OP22_LOGICAL_NOT	reduce using rule 88 (OPTIONAL-37)
	VARIABLE_SYMBOL	reduce using rule 88 (OPTIONAL-37)
	WORD	reduce using rule 88 (OPTIONAL-37)
	WORD_SCOPED	reduce using rule 88 (OPTIONAL-37)

	OPTIONAL-37	go to state 387
	MethodArguments	go to state 386

State 381:

	STAR-25 -> STAR-25 . ArgumentCheck	(Rule 61)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25 .	(Rule 63)

	CHECK_OR_CHECKTRACE	shift, and go to state 389

	'%{'	reduce using rule 63 (SubroutineArguments)
	'('	reduce using rule 63 (SubroutineArguments)
	'@{'	reduce using rule 63 (SubroutineArguments)
	'['	reduce using rule 63 (SubroutineArguments)
	'for my integer'	reduce using rule 63 (SubroutineArguments)
	'foreach my'	reduce using rule 63 (SubroutineArguments)
	'if ('	reduce using rule 63 (SubroutineArguments)
	'my'	reduce using rule 63 (SubroutineArguments)
	'undef'	reduce using rule 63 (SubroutineArguments)
	'while ('	reduce using rule 63 (SubroutineArguments)
	'{'	reduce using rule 63 (SubroutineArguments)
	LITERAL_NUMBER	reduce using rule 63 (SubroutineArguments)
	LITERAL_STRING	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 63 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 63 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 63 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 63 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 63 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 63 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 63 (SubroutineArguments)
	WORD	reduce using rule 63 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 63 (SubroutineArguments)

	ArgumentCheck	go to state 388

State 382:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 58)

	$default	reduce using rule 58 (PAREN-23)

State 383:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-18 Literal	(Rule 47)

	'my'	shift, and go to state 131

	LITERAL_NUMBER	reduce using rule 46 (OPTIONAL-18)
	LITERAL_STRING	reduce using rule 46 (OPTIONAL-18)

	OPTIONAL-18	go to state 390
	TypeInner	go to state 391

State 384:

	PAREN-33 -> PLUS-32 '1;' '1;' .	(Rule 78)

	$default	reduce using rule 78 (PAREN-33)

State 385:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	TYPE_CLASS_OR_SELF	shift, and go to state 392

State 386:

	OPTIONAL-37 -> MethodArguments .	(Rule 87)

	$default	reduce using rule 87 (OPTIONAL-37)

State 387:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 . PLUS-38 '}' ';'	(Rule 91)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 57
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_PAREN	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 10

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Operator	go to state 62
	VariableDeclaration	go to state 64
	ArrayReference	go to state 69
	Expression	go to state 66
	HashReference	go to state 65
	PLUS-38	go to state 393
	HashDereferenced	go to state 55
	OperatorVoid	go to state 61
	Operation	go to state 394
	PAREN-49	go to state 50
	OPTIONAL-50	go to state 73
	Statement	go to state 52
	Literal	go to state 76
	VariableModification	go to state 54
	ArrayDereferenced	go to state 79
	Variable	go to state 78
	WordScoped	go to state 77
	Conditional	go to state 71
	LoopLabel	go to state 47

State 388:

	STAR-25 -> STAR-25 ArgumentCheck .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 389:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'('	shift, and go to state 395

State 390:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 . Literal	(Rule 47)

	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72

	Literal	go to state 396

State 391:

	OPTIONAL-18 -> TypeInner .	(Rule 45)

	$default	reduce using rule 45 (OPTIONAL-18)

State 392:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	$default	reduce using rule 94 (STAR-40)

	STAR-40	go to state 397

State 393:

	PLUS-38 -> PLUS-38 . Operation	(Rule 89)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 . '}' ';'	(Rule 91)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'if ('	shift, and go to state 53
	'my'	shift, and go to state 57
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	'}'	shift, and go to state 399
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_PAREN	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP19_LOOP_CONTROL	shift, and go to state 75
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 58
	WORD_SCOPED	shift, and go to state 10

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	OPTIONAL-50	go to state 73
	PAREN-49	go to state 50
	Operation	go to state 398
	Variable	go to state 78
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	VariableModification	go to state 54
	Literal	go to state 76
	Statement	go to state 52
	Conditional	go to state 71
	LoopLabel	go to state 47
	VariableDeclaration	go to state 64
	Operator	go to state 62
	HashReference	go to state 65
	Expression	go to state 66
	ArrayReference	go to state 69
	HashDereferenced	go to state 55
	OperatorVoid	go to state 61

State 394:

	PLUS-38 -> Operation .	(Rule 90)

	$default	reduce using rule 90 (PLUS-38)

State 395:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	Operator	go to state 62
	Literal	go to state 76
	Expression	go to state 400
	HashReference	go to state 65
	ArrayReference	go to state 69
	WordScoped	go to state 77
	Variable	go to state 97
	ArrayDereferenced	go to state 79
	HashDereferenced	go to state 55

State 396:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal .	(Rule 47)

	$default	reduce using rule 47 (PAREN-19)

State 397:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 93)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	')'	shift, and go to state 403
	OP21_LIST_COMMA	shift, and go to state 402

	PAREN-39	go to state 401

State 398:

	PLUS-38 -> PLUS-38 Operation .	(Rule 89)

	$default	reduce using rule 89 (PLUS-38)

State 399:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' . ';'	(Rule 91)

	';'	shift, and go to state 404

State 400:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-27 ')' ';'	(Rule 67)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP21_LIST_COMMA	shift, and go to state 406
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

	')'	reduce using rule 66 (OPTIONAL-27)

	PAREN-26	go to state 405
	OPTIONAL-27	go to state 407

State 401:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 93)

	$default	reduce using rule 93 (STAR-40)

State 402:

	PAREN-39 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 92)

	'my'	shift, and go to state 408

State 403:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	OP19_VARIABLE_ASSIGN	shift, and go to state 409

State 404:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';' .	(Rule 91)

	$default	reduce using rule 91 (Method)

State 405:

	OPTIONAL-27 -> PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-27)

State 406:

	PAREN-26 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 64)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayDereferenced	go to state 79
	Expression	go to state 410
	HashReference	go to state 65
	Literal	go to state 76
	ArrayReference	go to state 69

State 407:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 . ')' ';'	(Rule 67)

	')'	shift, and go to state 411

State 408:

	PAREN-39 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 92)

	WORD	shift, and go to state 102

	Type	go to state 412

State 409:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-41	(Rule 97)

	'@_;'	shift, and go to state 413

State 410:

	PAREN-26 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP21_LIST_COMMA	shift, and go to state 414
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

State 411:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' . ';'	(Rule 67)

	';'	shift, and go to state 415

State 412:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 92)

	VARIABLE_SYMBOL	shift, and go to state 416

State 413:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-41	(Rule 97)

	$default	reduce using rule 96 (STAR-41)

	STAR-41	go to state 417

State 414:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 64)

	'%{'	shift, and go to state 60
	'('	shift, and go to state 82
	'@{'	shift, and go to state 59
	'['	shift, and go to state 70
	'undef'	shift, and go to state 49
	'{'	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 81
	LITERAL_STRING	shift, and go to state 72
	OP01_NAMED	shift, and go to state 63
	OP03_MATH_INC_DEC	shift, and go to state 45
	OP05_LOGICAL_NEG	shift, and go to state 67
	OP05_MATH_NEG	shift, and go to state 68
	OP10_NAMED_UNARY	shift, and go to state 48
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 80
	OP22_LOGICAL_NOT	shift, and go to state 46
	VARIABLE_SYMBOL	shift, and go to state 85
	WORD	shift, and go to state 9
	WORD_SCOPED	shift, and go to state 10

	HashDereferenced	go to state 55
	Operator	go to state 62
	ArrayDereferenced	go to state 79
	Variable	go to state 97
	WordScoped	go to state 77
	ArrayReference	go to state 69
	Literal	go to state 76
	Expression	go to state 418
	HashReference	go to state 65

State 415:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';' .	(Rule 67)

	$default	reduce using rule 67 (ArgumentCheck)

State 416:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 92)

	$default	reduce using rule 92 (PAREN-39)

State 417:

	STAR-41 -> STAR-41 . ArgumentCheck	(Rule 95)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41 .	(Rule 97)

	CHECK_OR_CHECKTRACE	shift, and go to state 389

	'%{'	reduce using rule 97 (MethodArguments)
	'('	reduce using rule 97 (MethodArguments)
	'@{'	reduce using rule 97 (MethodArguments)
	'['	reduce using rule 97 (MethodArguments)
	'for my integer'	reduce using rule 97 (MethodArguments)
	'foreach my'	reduce using rule 97 (MethodArguments)
	'if ('	reduce using rule 97 (MethodArguments)
	'my'	reduce using rule 97 (MethodArguments)
	'undef'	reduce using rule 97 (MethodArguments)
	'while ('	reduce using rule 97 (MethodArguments)
	'{'	reduce using rule 97 (MethodArguments)
	LITERAL_NUMBER	reduce using rule 97 (MethodArguments)
	LITERAL_STRING	reduce using rule 97 (MethodArguments)
	OP01_NAMED	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 97 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 97 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 97 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 97 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 97 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 97 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 97 (MethodArguments)
	WORD	reduce using rule 97 (MethodArguments)
	WORD_SCOPED	reduce using rule 97 (MethodArguments)

	ArgumentCheck	go to state 419

State 418:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 112
	OP06_REGEX_MATCH	shift, and go to state 111
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 114
	OP08_MATH_ADD_SUB	shift, and go to state 115
	OP08_STRING_CAT	shift, and go to state 113
	OP09_BITWISE_SHIFT	shift, and go to state 121
	OP11_COMPARE_LT_GT	shift, and go to state 119
	OP12_COMPARE_EQ_NEQ	shift, and go to state 117
	OP13_BITWISE_AND	shift, and go to state 116
	OP14_BITWISE_OR_XOR	shift, and go to state 122
	OP15_LOGICAL_AND	shift, and go to state 123
	OP16_LOGICAL_OR	shift, and go to state 109
	OP17_LIST_RANGE	shift, and go to state 118
	OP18_TERNARY	shift, and go to state 125
	OP23_LOGICAL_AND	shift, and go to state 120
	OP24_LOGICAL_OR_XOR	shift, and go to state 110

	')'	reduce using rule 64 (PAREN-26)

State 419:

	STAR-41 -> STAR-41 ArgumentCheck .	(Rule 95)

	$default	reduce using rule 95 (STAR-41)


Summary:
--------
Number of rules         : 222
Number of terminals     : 83
Number of non-terminals : 108
Number of states        : 420
