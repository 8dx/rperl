Conflicts:
----------
Conflict in state 181 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 181 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 181 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 181 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 181 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 181 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 181 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 181 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 181 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 181 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 181 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 181 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 181 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 181 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 181 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 181 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 186 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 186 between rule 94 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 186 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 186 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 94 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 186 between rule 94 and token OP04_MATH_POW resolved as shift.
Conflict in state 186 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 186 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 186 between rule 94 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 186 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 186 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 186 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 186 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 186 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 186 between rule 94 and token OP08_STRING_CAT resolved as shift.
Conflict in state 186 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 186 between rule 94 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 188 between rule 86 and token OP04_MATH_POW resolved as shift.
Conflict in state 188 between rule 86 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 188 between rule 86 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 188 between rule 86 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 188 between rule 86 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 188 between rule 86 and token OP18_TERNARY resolved as reduce.
Conflict in state 188 between rule 86 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 188 between rule 86 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 188 between rule 86 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 188 between rule 86 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 188 between rule 86 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 188 between rule 86 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 188 between rule 86 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 188 between rule 86 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 188 between rule 86 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 188 between rule 86 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 188 between rule 86 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 199 between rule 104 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 199 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 199 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 199 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 199 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 199 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 199 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 199 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 199 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 199 between rule 104 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 199 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 199 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 199 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 199 between rule 104 and token OP18_TERNARY resolved as shift.
Conflict in state 199 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 199 between rule 104 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 199 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 213 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 213 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 213 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 213 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 213 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 213 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 213 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 213 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 213 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 213 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 213 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 213 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 213 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 213 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 219 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 219 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 219 between rule 89 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 219 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 219 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 219 between rule 89 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 219 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 219 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 219 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 219 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 219 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 219 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 219 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 219 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 219 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 220 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 92 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 220 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 220 between rule 92 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 220 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 220 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 220 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 220 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 220 between rule 92 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 220 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 220 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 220 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 220 between rule 92 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 220 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 220 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 221 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 221 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 221 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 221 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 221 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 221 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 221 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 221 between rule 90 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 221 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 221 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 221 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 221 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 221 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 221 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 221 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 90 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 223 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 223 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 223 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 223 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 223 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 223 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 223 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 223 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 223 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 223 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 223 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 223 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 223 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 223 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 223 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 223 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 96 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 224 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 224 between rule 96 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 224 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 224 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 224 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 224 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 224 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 224 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 224 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 96 and token OP08_STRING_CAT resolved as shift.
Conflict in state 224 between rule 96 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 224 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 224 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 224 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 225 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 225 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 225 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 225 between rule 100 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 225 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 225 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 225 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 100 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 225 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 225 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 225 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 225 between rule 100 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 225 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 225 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 225 between rule 100 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 225 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 226 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 226 between rule 93 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 226 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 226 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 93 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 226 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 226 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 226 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 226 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 226 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 226 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 226 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 226 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 226 between rule 93 and token OP08_STRING_CAT resolved as shift.
Conflict in state 226 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 226 between rule 93 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 227 between rule 97 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 227 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 227 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 227 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 227 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 227 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 227 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 227 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 227 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 227 between rule 97 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 227 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 227 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 227 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 227 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 227 between rule 97 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 228 between rule 105 and token OP18_TERNARY resolved as shift.
Conflict in state 228 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 228 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 228 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 228 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 228 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 228 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 228 between rule 105 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 228 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 228 between rule 105 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 228 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 228 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 228 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 228 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 228 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 228 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 228 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 229 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 229 between rule 106 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 229 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 229 between rule 106 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 229 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 229 between rule 106 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 229 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 229 between rule 106 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 229 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 229 between rule 106 and token OP18_TERNARY resolved as shift.
Conflict in state 229 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 229 between rule 106 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 229 between rule 106 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 229 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 229 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 229 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 229 between rule 106 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 230 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 230 between rule 99 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 230 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 230 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 230 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 230 between rule 99 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 230 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 230 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 230 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 230 between rule 99 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 230 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 230 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 230 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 230 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 230 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 231 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 231 between rule 101 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 231 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 231 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 231 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 231 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 231 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 231 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 231 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 231 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 231 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 231 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 231 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 231 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 231 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 231 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 231 between rule 101 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 232 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 232 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 232 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 232 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 232 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 232 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 232 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 232 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 232 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 232 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 232 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 232 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 232 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 232 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 232 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 232 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 233 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 233 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 233 between rule 91 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 233 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 233 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 233 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 233 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 233 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 233 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 233 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 233 between rule 91 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 233 between rule 91 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 233 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 233 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 233 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 233 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 233 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 234 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 234 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 234 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 234 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 234 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 98 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 234 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 234 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 234 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 234 between rule 98 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 234 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 234 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 234 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 234 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 234 between rule 98 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 234 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 369 between rule 102 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 369 between rule 102 and token OP17_LIST_RANGE resolved as error.
Conflict in state 369 between rule 102 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 369 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 369 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 369 between rule 102 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 369 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 369 between rule 102 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 369 between rule 102 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 369 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 369 between rule 102 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 369 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 369 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 369 between rule 102 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 369 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 369 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 369 between rule 102 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 377 between rule 81 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 377 between rule 81 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 377 between rule 81 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 377 between rule 81 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 377 between rule 81 and token OP08_STRING_CAT resolved as shift.
Conflict in state 377 between rule 81 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 377 between rule 81 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 377 between rule 81 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 377 between rule 81 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 377 between rule 81 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 377 between rule 81 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 377 between rule 81 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 377 between rule 81 and token OP18_TERNARY resolved as shift.
Conflict in state 377 between rule 81 and token OP04_MATH_POW resolved as shift.
Conflict in state 377 between rule 81 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 377 between rule 81 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 377 between rule 81 and token OP13_BITWISE_AND resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 MethodOrSubroutine
58:	STAR-23 -> /* empty */
59:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'
60:	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped
61:	STAR-25 -> STAR-25 PAREN-24
62:	STAR-25 -> /* empty */
63:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'
64:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
65:	OPTIONAL-26 -> MethodArguments
66:	OPTIONAL-26 -> /* empty */
67:	PLUS-27 -> PLUS-27 Operation
68:	PLUS-27 -> Operation
69:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'
70:	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
71:	STAR-29 -> STAR-29 PAREN-28
72:	STAR-29 -> /* empty */
73:	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'
74:	MethodOrSubroutine -> Method
75:	MethodOrSubroutine -> Subroutine
76:	Operation -> Expression ';'
77:	Operation -> Statement
78:	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
79:	Operator -> OP01_NAMED SubExpression
80:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
81:	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
82:	Operator -> OP01_CLOSE FH_REF_SYMBOL
83:	Operator -> OP03_MATH_INC_DEC Variable
84:	Operator -> Variable OP03_MATH_INC_DEC
85:	Operator -> SubExpression OP04_MATH_POW SubExpression
86:	Operator -> OP05_LOGICAL_NEG SubExpression
87:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
88:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
89:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
90:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
91:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
92:	Operator -> SubExpression OP08_STRING_CAT SubExpression
93:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
94:	Operator -> OP10_NAMED_UNARY SubExpression
95:	Operator -> OP10_NAMED_UNARY
96:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
97:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
98:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
99:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
100:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
101:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
102:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
103:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
104:	Operator -> OP22_LOGICAL_NEG SubExpression
105:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
106:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
107:	PAREN-30 -> STDOUT_STDERR
108:	OPTIONAL-31 -> PAREN-30
109:	OPTIONAL-31 -> /* empty */
110:	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';'
111:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
112:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
113:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
114:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
115:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
116:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
117:	OPTIONAL-32 -> ListElements
118:	OPTIONAL-32 -> /* empty */
119:	OPTIONAL-33 -> ListElements
120:	OPTIONAL-33 -> /* empty */
121:	Expression -> Operator
122:	Expression -> WordScoped LPAREN OPTIONAL-32 ')'
123:	Expression -> WORD_UPPERCASE LPAREN ')'
124:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'
125:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
126:	SubExpression -> Expression
127:	SubExpression -> 'undef'
128:	SubExpression -> Literal
129:	SubExpression -> Variable
130:	SubExpression -> ArrayReference
131:	SubExpression -> ArrayDereferenced
132:	SubExpression -> HashReference
133:	SubExpression -> HashDereferenced
134:	SubExpression -> LBRACE '}'
135:	SubExpression -> LPAREN SubExpression ')'
136:	SubExpressionOrStdin -> SubExpression
137:	SubExpressionOrStdin -> STDIN
138:	PAREN-34 -> LoopLabel COLON
139:	OPTIONAL-35 -> PAREN-34
140:	OPTIONAL-35 -> /* empty */
141:	Statement -> Conditional
142:	Statement -> OPTIONAL-35 Loop
143:	Statement -> OperatorVoid
144:	Statement -> VariableDeclaration
145:	Statement -> VariableModification
146:	PAREN-36 -> 'elsif (' SubExpression ')' CodeBlock
147:	STAR-37 -> STAR-37 PAREN-36
148:	STAR-37 -> /* empty */
149:	PAREN-38 -> 'else' CodeBlock
150:	OPTIONAL-39 -> PAREN-38
151:	OPTIONAL-39 -> /* empty */
152:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-37 OPTIONAL-39
153:	Loop -> LoopFor
154:	Loop -> LoopForEach
155:	Loop -> LoopWhile
156:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
157:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
158:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
159:	PLUS-40 -> PLUS-40 Operation
160:	PLUS-40 -> Operation
161:	CodeBlock -> LBRACE PLUS-40 '}'
162:	STAR-41 -> STAR-41 VariableRetrieval
163:	STAR-41 -> /* empty */
164:	Variable -> VARIABLE_SYMBOL STAR-41
165:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
166:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
167:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
168:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
169:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
170:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
171:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
172:	PAREN-42 -> OP21_LIST_COMMA ListElement
173:	STAR-43 -> STAR-43 PAREN-42
174:	STAR-43 -> /* empty */
175:	PLUS-44 -> PLUS-44 WORD
176:	PLUS-44 -> WORD
177:	ListElements -> ListElement STAR-43
178:	ListElements -> OP01_QW PLUS-44 ')'
179:	ListElement -> SubExpression
180:	ListElement -> TypeInner SubExpression
181:	ListElement -> KEYS_OR_VALUES HashDereferenced
182:	OPTIONAL-45 -> ListElements
183:	OPTIONAL-45 -> /* empty */
184:	ArrayReference -> LBRACKET OPTIONAL-45 ']'
185:	ArrayDereferenced -> '@{' Variable '}'
186:	ArrayDereferenced -> '@{' ArrayReference '}'
187:	OPTIONAL-46 -> TypeInner
188:	OPTIONAL-46 -> /* empty */
189:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 SubExpression
190:	HashEntry -> HashDereferenced
191:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
192:	HashEntryTyped -> HashDereferenced
193:	PAREN-47 -> OP21_LIST_COMMA HashEntry
194:	STAR-48 -> STAR-48 PAREN-47
195:	STAR-48 -> /* empty */
196:	HashReference -> LBRACE HashEntry STAR-48 '}'
197:	HashDereferenced -> '%{' Variable '}'
198:	HashDereferenced -> '%{' HashReference '}'
199:	WordScoped -> WORD
200:	WordScoped -> WORD_SCOPED
201:	LoopLabel -> WORD_UPPERCASE
202:	Type -> WORD
203:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
204:	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
205:	VariableOrLiteral -> Variable
206:	VariableOrLiteral -> Literal
207:	Literal -> LITERAL_STRING
208:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 9
	SHEBANG	shift, and go to state 2

	'package'	reduce using rule 20 (OPTIONAL-9)

	Critic	go to state 4
	OPTIONAL-9	go to state 1
	PAREN-1	go to state 5
	CompileUnit	go to state 6
	Program	go to state 7
	PLUS-2	go to state 3
	ModuleHeader	go to state 8

State 1:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 10

State 2:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 9

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 11
	OPTIONAL-3	go to state 12

State 3:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 9

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	ModuleHeader	go to state 8
	Critic	go to state 4
	OPTIONAL-9	go to state 1
	PAREN-1	go to state 13

State 4:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 5:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 6:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 14

State 7:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 8:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 19

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	STAR-10	go to state 18
	Class	go to state 15
	Package	go to state 17
	Module	go to state 16

State 9:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 20

	PLUS-14	go to state 21

State 10:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 22

State 11:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 12:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 25

	Header	go to state 26

State 13:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 14:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 15:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 16:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 17:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 18:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 9

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	STAR-11	go to state 28
	Critic	go to state 27

State 19:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 29

State 20:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 21:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 31
	WORD	shift, and go to state 30

State 22:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 32

State 23:

	WordScoped -> WORD .	(Rule 199)

	$default	reduce using rule 199 (WordScoped)

State 24:

	WordScoped -> WORD_SCOPED .	(Rule 200)

	$default	reduce using rule 200 (WordScoped)

State 25:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 33

State 26:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 34

State 27:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 28:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 37

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	Include	go to state 36
	STAR-12	go to state 35

State 29:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	')'	shift, and go to state 38

State 30:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 31:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 32:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 25

	Header	go to state 39

State 33:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 40

State 34:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 9

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	Critic	go to state 42
	STAR-5	go to state 41

State 35:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 47
	'use constant'	shift, and go to state 44

	PLUS-13	go to state 46
	Constant	go to state 43
	Subroutine	go to state 45

State 36:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 37:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 48

State 38:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	';'	shift, and go to state 49

State 39:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 40:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 50

State 41:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 37

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	STAR-6	go to state 52
	Include	go to state 51

State 42:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 43:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 44:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	WORD_UPPERCASE	shift, and go to state 53

State 45:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 46:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 47
	LITERAL_NUMBER	shift, and go to state 55

	Subroutine	go to state 54

State 47:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 56

	Type	go to state 57

State 48:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 58
	'qw('	shift, and go to state 59

State 49:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 37

	Include	go to state 60

State 50:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 61

State 51:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 52:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 44

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	STAR-7	go to state 63
	Constant	go to state 62

State 53:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 64

State 54:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 55:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 65

State 56:

	Type -> WORD .	(Rule 202)

	$default	reduce using rule 202 (Type)

State 57:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 66

State 58:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 59:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 68

	PLUS-15	go to state 67

State 60:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 69

State 61:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 62:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 63:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'if ('	shift, and go to state 73
	'my'	shift, and go to state 106
	'our'	shift, and go to state 47
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 88
	OP01_NAMED_VOID_SCOLON	shift, and go to state 75
	OP01_OPEN	shift, and go to state 83
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 71
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 74

	'for my integer'	reduce using rule 140 (OPTIONAL-35)
	'foreach my'	reduce using rule 140 (OPTIONAL-35)
	'while ('	reduce using rule 140 (OPTIONAL-35)

	Statement	go to state 82
	PAREN-34	go to state 84
	ArrayReference	go to state 101
	VariableDeclaration	go to state 78
	OperatorVoid	go to state 96
	OPTIONAL-35	go to state 98
	HashReference	go to state 76
	PLUS-8	go to state 99
	SubExpression	go to state 77
	Variable	go to state 95
	Subroutine	go to state 92
	Literal	go to state 114
	Expression	go to state 113
	HashDereferenced	go to state 112
	Operation	go to state 90
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Conditional	go to state 108
	LoopLabel	go to state 104
	VariableModification	go to state 85

State 64:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 41)

	'my'	shift, and go to state 116

	TypeInnerConstant	go to state 117

State 65:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 66:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 118

State 67:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 120
	WORD	shift, and go to state 119

State 68:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 69:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'## no critic qw('	shift, and go to state 9

	'our hash_ref $properties'	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 122
	STAR-21	go to state 121

State 70:

	ArrayReference -> LBRACKET . OPTIONAL-45 ']'	(Rule 184)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	']'	reduce using rule 183 (OPTIONAL-45)

	Variable	go to state 130
	ListElements	go to state 129
	TypeInner	go to state 124
	SubExpression	go to state 133
	HashReference	go to state 76
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	WordScoped	go to state 110
	ArrayReference	go to state 101
	OPTIONAL-45	go to state 126
	Literal	go to state 114
	Expression	go to state 127
	HashDereferenced	go to state 112
	ListElement	go to state 131

State 71:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 116)

	WORD_UPPERCASE	shift, and go to state 135

	LoopLabel	go to state 136

State 72:

	SubExpression -> 'undef' .	(Rule 127)

	$default	reduce using rule 127 (SubExpression)

State 73:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 152)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	WordScoped	go to state 110
	SubExpression	go to state 137
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	Operator	go to state 111
	ArrayReference	go to state 101
	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114

State 74:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 123)
	LoopLabel -> WORD_UPPERCASE .	(Rule 201)

	LPAREN	shift, and go to state 138

	COLON	reduce using rule 201 (LoopLabel)

State 75:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 112)

	$default	reduce using rule 112 (OperatorVoid)

State 76:

	SubExpression -> HashReference .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 77:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 78:

	Statement -> VariableDeclaration .	(Rule 144)

	$default	reduce using rule 144 (Statement)

State 79:

	Variable -> VARIABLE_SYMBOL . STAR-41	(Rule 164)

	$default	reduce using rule 163 (STAR-41)

	STAR-41	go to state 156

State 80:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 81:

	Literal -> LITERAL_STRING .	(Rule 207)

	$default	reduce using rule 207 (Literal)

State 82:

	Operation -> Statement .	(Rule 77)

	$default	reduce using rule 77 (Operation)

State 83:

	Operator -> OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	'my'	shift, and go to state 157

State 84:

	OPTIONAL-35 -> PAREN-34 .	(Rule 139)

	$default	reduce using rule 139 (OPTIONAL-35)

State 85:

	Statement -> VariableModification .	(Rule 145)

	$default	reduce using rule 145 (Statement)

State 86:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 87)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Literal	go to state 114
	Expression	go to state 127
	HashDereferenced	go to state 112
	ArrayReference	go to state 101
	SubExpression	go to state 158
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	HashReference	go to state 76
	WordScoped	go to state 110
	Variable	go to state 130

State 87:

	SubExpression -> ArrayDereferenced .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 88:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 113)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	ListElements	go to state 159
	TypeInner	go to state 124
	SubExpression	go to state 133
	HashReference	go to state 76
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127
	ListElement	go to state 131

State 89:

	Literal -> LITERAL_NUMBER .	(Rule 208)

	$default	reduce using rule 208 (Literal)

State 90:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 91:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 83)

	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 160

State 92:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 93:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 82)

	FH_REF_SYMBOL	shift, and go to state 161

State 94:

	HashDereferenced -> '%{' . Variable '}'	(Rule 197)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 198)

	LBRACE	shift, and go to state 163
	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 164
	HashReference	go to state 162

State 95:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 124)
	SubExpression -> Variable .	(Rule 129)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 170)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 171)

	OP02_METHOD_THINARROW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 165
	OP19_VARIABLE_ASSIGN	shift, and go to state 168
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 166

	OP04_MATH_POW	reduce using rule 129 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 129 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 129 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 129 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 129 (SubExpression)
	OP08_STRING_CAT	reduce using rule 129 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 129 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 129 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 129 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 129 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 129 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 129 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 129 (SubExpression)
	OP18_TERNARY	reduce using rule 129 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 129 (SubExpression)

State 96:

	Statement -> OperatorVoid .	(Rule 143)

	$default	reduce using rule 143 (Statement)

State 97:

	Operator -> LPAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 135)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 171
	OP01_OPEN	shift, and go to state 83
	OP01_PRINT	shift, and go to state 170
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 101
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	HashReference	go to state 76
	SubExpression	go to state 169
	Variable	go to state 130

State 98:

	Statement -> OPTIONAL-35 . Loop	(Rule 142)

	'for my integer'	shift, and go to state 174
	'foreach my'	shift, and go to state 173
	'while ('	shift, and go to state 175

	LoopWhile	go to state 178
	Loop	go to state 172
	LoopFor	go to state 176
	LoopForEach	go to state 177

State 99:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'if ('	shift, and go to state 73
	'my'	shift, and go to state 106
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 88
	OP01_NAMED_VOID_SCOLON	shift, and go to state 75
	OP01_OPEN	shift, and go to state 83
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 71
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 74

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 140 (OPTIONAL-35)
	'foreach my'	reduce using rule 140 (OPTIONAL-35)
	'while ('	reduce using rule 140 (OPTIONAL-35)

	VariableDeclaration	go to state 78
	ArrayReference	go to state 101
	PAREN-34	go to state 84
	Statement	go to state 82
	Variable	go to state 95
	SubExpression	go to state 77
	HashReference	go to state 76
	OPTIONAL-35	go to state 98
	OperatorVoid	go to state 96
	Operation	go to state 179
	HashDereferenced	go to state 112
	Expression	go to state 113
	Literal	go to state 114
	VariableModification	go to state 85
	LoopLabel	go to state 104
	Conditional	go to state 108
	WordScoped	go to state 110
	Operator	go to state 111
	ArrayDereferenced	go to state 87

State 100:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 114)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	TypeInner	go to state 124
	Variable	go to state 130
	WordScoped	go to state 110
	SubExpression	go to state 181
	Operator	go to state 111
	HashReference	go to state 76
	ArrayDereferenced	go to state 87
	ArrayReference	go to state 101
	ListElement	go to state 180
	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114

State 101:

	SubExpression -> ArrayReference .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 102:

	OperatorVoid -> OP01_PRINT . OPTIONAL-31 ListElements ';'	(Rule 110)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 111)

	FH_REF_SYMBOL_BRACES	shift, and go to state 182
	STDOUT_STDERR	shift, and go to state 184

	'%{'	reduce using rule 109 (OPTIONAL-31)
	'@{'	reduce using rule 109 (OPTIONAL-31)
	'my'	reduce using rule 109 (OPTIONAL-31)
	'undef'	reduce using rule 109 (OPTIONAL-31)
	KEYS_OR_VALUES	reduce using rule 109 (OPTIONAL-31)
	LBRACE	reduce using rule 109 (OPTIONAL-31)
	LBRACKET	reduce using rule 109 (OPTIONAL-31)
	LITERAL_NUMBER	reduce using rule 109 (OPTIONAL-31)
	LITERAL_STRING	reduce using rule 109 (OPTIONAL-31)
	LPAREN	reduce using rule 109 (OPTIONAL-31)
	OP01_CLOSE	reduce using rule 109 (OPTIONAL-31)
	OP01_NAMED	reduce using rule 109 (OPTIONAL-31)
	OP01_OPEN	reduce using rule 109 (OPTIONAL-31)
	OP01_QW	reduce using rule 109 (OPTIONAL-31)
	OP03_MATH_INC_DEC	reduce using rule 109 (OPTIONAL-31)
	OP05_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	OP05_MATH_NEG_LPAREN	reduce using rule 109 (OPTIONAL-31)
	OP10_NAMED_UNARY	reduce using rule 109 (OPTIONAL-31)
	OP22_LOGICAL_NEG	reduce using rule 109 (OPTIONAL-31)
	VARIABLE_SYMBOL	reduce using rule 109 (OPTIONAL-31)
	WORD	reduce using rule 109 (OPTIONAL-31)
	WORD_SCOPED	reduce using rule 109 (OPTIONAL-31)
	WORD_UPPERCASE	reduce using rule 109 (OPTIONAL-31)

	OPTIONAL-31	go to state 183
	PAREN-30	go to state 185

State 103:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 94)
	Operator -> OP10_NAMED_UNARY .	(Rule 95)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP04_MATH_POW	reduce using rule 95 (Operator)
	OP06_REGEX_MATCH	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP07_STRING_REPEAT	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 101
	WordScoped	go to state 110
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	SubExpression	go to state 186
	HashReference	go to state 76
	Variable	go to state 130

State 104:

	PAREN-34 -> LoopLabel . COLON	(Rule 138)

	COLON	shift, and go to state 187

State 105:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 86)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114
	ArrayReference	go to state 101
	WordScoped	go to state 110
	HashReference	go to state 76
	SubExpression	go to state 188
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	Variable	go to state 130

State 106:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 168)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 169)

	WORD	shift, and go to state 56

	Type	go to state 189

State 107:

	SubExpression -> LBRACE . '}'	(Rule 134)
	HashReference -> LBRACE . HashEntry STAR-48 '}'	(Rule 196)

	'%{'	shift, and go to state 94
	'}'	shift, and go to state 190
	WORD	shift, and go to state 192

	HashEntry	go to state 191
	HashDereferenced	go to state 193

State 108:

	Statement -> Conditional .	(Rule 141)

	$default	reduce using rule 141 (Statement)

State 109:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 185)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 186)

	LBRACKET	shift, and go to state 70
	VARIABLE_SYMBOL	shift, and go to state 79

	Variable	go to state 195
	ArrayReference	go to state 194

State 110:

	Expression -> WordScoped . LPAREN OPTIONAL-32 ')'	(Rule 122)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 125)

	LPAREN	shift, and go to state 196
	OP02_METHOD_THINARROW_NEW	shift, and go to state 197

State 111:

	Expression -> Operator .	(Rule 121)

	$default	reduce using rule 121 (Expression)

State 112:

	SubExpression -> HashDereferenced .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 113:

	Operation -> Expression . ';'	(Rule 76)
	SubExpression -> Expression .	(Rule 126)

	';'	shift, and go to state 198

	OP04_MATH_POW	reduce using rule 126 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 126 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 126 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 126 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 126 (SubExpression)
	OP08_STRING_CAT	reduce using rule 126 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 126 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 126 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 126 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 126 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 126 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 126 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 126 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 126 (SubExpression)
	OP18_TERNARY	reduce using rule 126 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 126 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 126 (SubExpression)

State 114:

	SubExpression -> Literal .	(Rule 128)

	$default	reduce using rule 128 (SubExpression)

State 115:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 104)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127
	Variable	go to state 130
	SubExpression	go to state 199
	HashReference	go to state 76
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110

State 116:

	TypeInnerConstant -> 'my' . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 204)

	WORD	shift, and go to state 56

	Type	go to state 200

State 117:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81

	Literal	go to state 201

State 118:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	LPAREN_MY	shift, and go to state 204

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)
	WORD_UPPERCASE	reduce using rule 43 (OPTIONAL-16)

	OPTIONAL-16	go to state 203
	SubroutineArguments	go to state 202

State 119:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 120:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 205

State 121:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 37

	'our hash_ref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 207
	STAR-22	go to state 206

State 122:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 123:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 203)

	WORD	shift, and go to state 56

	Type	go to state 208

State 124:

	ListElement -> TypeInner . SubExpression	(Rule 180)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	SubExpression	go to state 209
	HashReference	go to state 76
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127

State 125:

	ListElements -> OP01_QW . PLUS-44 ')'	(Rule 178)

	WORD	shift, and go to state 211

	PLUS-44	go to state 210

State 126:

	ArrayReference -> LBRACKET OPTIONAL-45 . ']'	(Rule 184)

	']'	shift, and go to state 212

State 127:

	SubExpression -> Expression .	(Rule 126)

	$default	reduce using rule 126 (SubExpression)

State 128:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127
	ArrayReference	go to state 101
	SubExpression	go to state 213
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	Operator	go to state 111
	WordScoped	go to state 110
	Variable	go to state 130

State 129:

	OPTIONAL-45 -> ListElements .	(Rule 182)

	$default	reduce using rule 182 (OPTIONAL-45)

State 130:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 84)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 124)
	SubExpression -> Variable .	(Rule 129)

	OP02_METHOD_THINARROW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 165

	')'	reduce using rule 129 (SubExpression)
	';'	reduce using rule 129 (SubExpression)
	']'	reduce using rule 129 (SubExpression)
	'}'	reduce using rule 129 (SubExpression)
	OP04_MATH_POW	reduce using rule 129 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 129 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 129 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 129 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 129 (SubExpression)
	OP08_STRING_CAT	reduce using rule 129 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 129 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 129 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 129 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 129 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 129 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 129 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 129 (SubExpression)
	OP18_TERNARY	reduce using rule 129 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 129 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 129 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 129 (SubExpression)

State 131:

	ListElements -> ListElement . STAR-43	(Rule 177)

	$default	reduce using rule 174 (STAR-43)

	STAR-43	go to state 214

State 132:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 181)

	'%{'	shift, and go to state 94

	HashDereferenced	go to state 215

State 133:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 179)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

	')'	reduce using rule 179 (ListElement)
	';'	reduce using rule 179 (ListElement)
	']'	reduce using rule 179 (ListElement)
	OP21_LIST_COMMA	reduce using rule 179 (ListElement)

State 134:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 123)

	LPAREN	shift, and go to state 138

State 135:

	LoopLabel -> WORD_UPPERCASE .	(Rule 201)

	$default	reduce using rule 201 (LoopLabel)

State 136:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 116)

	';'	shift, and go to state 216

State 137:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 152)

	')'	shift, and go to state 217
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 138:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 123)

	')'	shift, and go to state 218

State 139:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 89)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Literal	go to state 114
	Expression	go to state 127
	HashDereferenced	go to state 112
	ArrayReference	go to state 101
	Operator	go to state 111
	HashReference	go to state 76
	SubExpression	go to state 219
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Variable	go to state 130

State 140:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 92)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114
	Variable	go to state 130
	WordScoped	go to state 110
	SubExpression	go to state 220
	HashReference	go to state 76
	ArrayDereferenced	go to state 87
	Operator	go to state 111

State 141:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 90)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	Operator	go to state 111
	SubExpression	go to state 221
	Variable	go to state 130
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114
	ArrayReference	go to state 101

State 142:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 88)

	OP06_REGEX_PATTERN	shift, and go to state 222

State 143:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	WordScoped	go to state 110
	SubExpression	go to state 223
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	Operator	go to state 111
	ArrayReference	go to state 101
	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114

State 144:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 96)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	Operator	go to state 111
	SubExpression	go to state 224
	WordScoped	go to state 110
	Variable	go to state 130
	Literal	go to state 114
	Expression	go to state 127
	HashDereferenced	go to state 112
	ArrayReference	go to state 101

State 145:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 100)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114
	ArrayReference	go to state 101
	WordScoped	go to state 110
	SubExpression	go to state 225
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	Operator	go to state 111
	Variable	go to state 130

State 146:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 93)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Operator	go to state 111
	SubExpression	go to state 226
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	WordScoped	go to state 110
	Variable	go to state 130
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127
	ArrayReference	go to state 101

State 147:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 97)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	WordScoped	go to state 110
	SubExpression	go to state 227
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	Operator	go to state 111
	Variable	go to state 130
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114
	ArrayReference	go to state 101

State 148:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 105)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114
	Variable	go to state 130
	WordScoped	go to state 110
	HashReference	go to state 76
	SubExpression	go to state 228
	ArrayDereferenced	go to state 87
	Operator	go to state 111

State 149:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 106)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	HashReference	go to state 76
	SubExpression	go to state 229
	ArrayReference	go to state 101
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114

State 150:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 99)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	WordScoped	go to state 110
	SubExpression	go to state 230
	HashReference	go to state 76
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	Variable	go to state 130
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114
	ArrayReference	go to state 101

State 151:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 101)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	WordScoped	go to state 110
	Operator	go to state 111
	SubExpression	go to state 231
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	ArrayReference	go to state 101
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114

State 152:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 85)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127
	Variable	go to state 130
	SubExpression	go to state 232
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	WordScoped	go to state 110

State 153:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 91)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	Operator	go to state 111
	HashReference	go to state 76
	SubExpression	go to state 233
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127

State 154:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 98)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114
	Variable	go to state 130
	WordScoped	go to state 110
	Operator	go to state 111
	HashReference	go to state 76
	SubExpression	go to state 234
	ArrayDereferenced	go to state 87

State 155:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79

	Literal	go to state 235
	Variable	go to state 237
	VariableOrLiteral	go to state 236

State 156:

	STAR-41 -> STAR-41 . VariableRetrieval	(Rule 162)
	Variable -> VARIABLE_SYMBOL STAR-41 .	(Rule 164)

	OP02_ARRAY_THINARROW	shift, and go to state 238
	OP02_HASH_THINARROW	shift, and go to state 239

	')'	reduce using rule 164 (Variable)
	';'	reduce using rule 164 (Variable)
	']'	reduce using rule 164 (Variable)
	'}'	reduce using rule 164 (Variable)
	COLON	reduce using rule 164 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 164 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 164 (Variable)
	OP04_MATH_POW	reduce using rule 164 (Variable)
	OP06_REGEX_MATCH	reduce using rule 164 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 164 (Variable)
	OP07_STRING_REPEAT	reduce using rule 164 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 164 (Variable)
	OP08_STRING_CAT	reduce using rule 164 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 164 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 164 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 164 (Variable)
	OP13_BITWISE_AND	reduce using rule 164 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 164 (Variable)
	OP15_LOGICAL_AND	reduce using rule 164 (Variable)
	OP16_LOGICAL_OR	reduce using rule 164 (Variable)
	OP17_LIST_RANGE	reduce using rule 164 (Variable)
	OP18_TERNARY	reduce using rule 164 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 164 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 164 (Variable)
	OP21_LIST_COMMA	reduce using rule 164 (Variable)
	OP23_LOGICAL_AND	reduce using rule 164 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 164 (Variable)

	VariableRetrieval	go to state 240

State 157:

	Operator -> OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	'filehandle_ref'	shift, and go to state 241

State 158:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 87)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	shift, and go to state 242
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 159:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 113)

	';'	shift, and go to state 243

State 160:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 83)

	$default	reduce using rule 83 (Operator)

State 161:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 162:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 198)

	'}'	shift, and go to state 244

State 163:

	HashReference -> LBRACE . HashEntry STAR-48 '}'	(Rule 196)

	'%{'	shift, and go to state 94
	WORD	shift, and go to state 192

	HashDereferenced	go to state 193
	HashEntry	go to state 191

State 164:

	HashDereferenced -> '%{' Variable . '}'	(Rule 197)

	'}'	shift, and go to state 245

State 165:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 84)

	$default	reduce using rule 84 (Operator)

State 166:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 171)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127
	Variable	go to state 130
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	SubExpression	go to state 246
	HashReference	go to state 76
	WordScoped	go to state 110

State 167:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-33 ')'	(Rule 124)

	LPAREN	shift, and go to state 247

State 168:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 170)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	STDIN	shift, and go to state 249
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114
	Variable	go to state 130
	WordScoped	go to state 110
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	SubExpression	go to state 248
	SubExpressionOrStdin	go to state 250

State 169:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 135)

	')'	shift, and go to state 251
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 170:

	Operator -> LPAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)

	FH_REF_SYMBOL_BRACES	shift, and go to state 252

State 171:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Literal	go to state 114
	ListElement	go to state 253
	HashDereferenced	go to state 112
	Expression	go to state 127
	Variable	go to state 130
	TypeInner	go to state 124
	HashReference	go to state 76
	Operator	go to state 111
	SubExpression	go to state 181
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110

State 172:

	Statement -> OPTIONAL-35 Loop .	(Rule 142)

	$default	reduce using rule 142 (Statement)

State 173:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 157)

	WORD	shift, and go to state 56

	Type	go to state 254

State 174:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 156)

	VARIABLE_SYMBOL	shift, and go to state 255

State 175:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 158)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	WordScoped	go to state 110
	HashReference	go to state 76
	ArrayDereferenced	go to state 87
	SubExpression	go to state 256
	Operator	go to state 111
	ArrayReference	go to state 101
	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114

State 176:

	Loop -> LoopFor .	(Rule 153)

	$default	reduce using rule 153 (Loop)

State 177:

	Loop -> LoopForEach .	(Rule 154)

	$default	reduce using rule 154 (Loop)

State 178:

	Loop -> LoopWhile .	(Rule 155)

	$default	reduce using rule 155 (Loop)

State 179:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 180:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 114)

	OP21_LIST_COMMA	shift, and go to state 257

State 181:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> SubExpression .	(Rule 179)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 179 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 182:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 111)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ListElement	go to state 131
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114
	ArrayReference	go to state 101
	WordScoped	go to state 110
	SubExpression	go to state 133
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	Operator	go to state 111
	TypeInner	go to state 124
	ListElements	go to state 258
	Variable	go to state 130

State 183:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 . ListElements ';'	(Rule 110)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Literal	go to state 114
	ListElement	go to state 131
	Expression	go to state 127
	HashDereferenced	go to state 112
	ListElements	go to state 259
	Variable	go to state 130
	TypeInner	go to state 124
	SubExpression	go to state 133
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	WordScoped	go to state 110

State 184:

	PAREN-30 -> STDOUT_STDERR .	(Rule 107)

	$default	reduce using rule 107 (PAREN-30)

State 185:

	OPTIONAL-31 -> PAREN-30 .	(Rule 108)

	$default	reduce using rule 108 (OPTIONAL-31)

State 186:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 94)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 187:

	PAREN-34 -> LoopLabel COLON .	(Rule 138)

	$default	reduce using rule 138 (PAREN-34)

State 188:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 86)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152

	')'	reduce using rule 86 (Operator)
	';'	reduce using rule 86 (Operator)
	']'	reduce using rule 86 (Operator)
	'}'	reduce using rule 86 (Operator)
	OP06_REGEX_MATCH	reduce using rule 86 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 86 (Operator)
	OP07_STRING_REPEAT	reduce using rule 86 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 86 (Operator)
	OP08_STRING_CAT	reduce using rule 86 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 86 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 86 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 86 (Operator)
	OP13_BITWISE_AND	reduce using rule 86 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 86 (Operator)
	OP15_LOGICAL_AND	reduce using rule 86 (Operator)
	OP16_LOGICAL_OR	reduce using rule 86 (Operator)
	OP17_LIST_RANGE	reduce using rule 86 (Operator)
	OP18_TERNARY	reduce using rule 86 (Operator)
	OP21_LIST_COMMA	reduce using rule 86 (Operator)
	OP23_LOGICAL_AND	reduce using rule 86 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 86 (Operator)

State 189:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 168)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 169)

	VARIABLE_SYMBOL	shift, and go to state 260

State 190:

	SubExpression -> LBRACE '}' .	(Rule 134)

	$default	reduce using rule 134 (SubExpression)

State 191:

	HashReference -> LBRACE HashEntry . STAR-48 '}'	(Rule 196)

	$default	reduce using rule 195 (STAR-48)

	STAR-48	go to state 261

State 192:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-46 SubExpression	(Rule 189)

	OP20_HASH_FATARROW	shift, and go to state 262

State 193:

	HashEntry -> HashDereferenced .	(Rule 190)

	$default	reduce using rule 190 (HashEntry)

State 194:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 186)

	'}'	shift, and go to state 263

State 195:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 185)

	'}'	shift, and go to state 264

State 196:

	Expression -> WordScoped LPAREN . OPTIONAL-32 ')'	(Rule 122)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	')'	reduce using rule 118 (OPTIONAL-32)

	Operator	go to state 111
	HashReference	go to state 76
	SubExpression	go to state 133
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	OPTIONAL-32	go to state 265
	Variable	go to state 130
	ListElements	go to state 266
	TypeInner	go to state 124
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127
	ListElement	go to state 131
	ArrayReference	go to state 101

State 197:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 125)

	')'	shift, and go to state 267

State 198:

	Operation -> Expression ';' .	(Rule 76)

	$default	reduce using rule 76 (Operation)

State 199:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 104)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 200:

	TypeInnerConstant -> 'my' Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 204)

	'$TYPED_'	shift, and go to state 268

State 201:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 41)

	';'	shift, and go to state 269

State 202:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 203:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'if ('	shift, and go to state 73
	'my'	shift, and go to state 106
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 88
	OP01_NAMED_VOID_SCOLON	shift, and go to state 75
	OP01_OPEN	shift, and go to state 83
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 71
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 74

	'for my integer'	reduce using rule 140 (OPTIONAL-35)
	'foreach my'	reduce using rule 140 (OPTIONAL-35)
	'while ('	reduce using rule 140 (OPTIONAL-35)

	Operation	go to state 271
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 113
	Conditional	go to state 108
	LoopLabel	go to state 104
	VariableModification	go to state 85
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	WordScoped	go to state 110
	PLUS-17	go to state 270
	VariableDeclaration	go to state 78
	ArrayReference	go to state 101
	PAREN-34	go to state 84
	Statement	go to state 82
	Variable	go to state 95
	SubExpression	go to state 77
	HashReference	go to state 76
	OperatorVoid	go to state 96
	OPTIONAL-35	go to state 98

State 204:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 56

	Type	go to state 272

State 205:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 206:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'our hash_ref $properties'	shift, and go to state 273
	'use constant'	shift, and go to state 44

	Properties	go to state 275
	Constant	go to state 274

State 207:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 208:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 203)

	'$TYPED_'	shift, and go to state 276

State 209:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	ListElement -> TypeInner SubExpression .	(Rule 180)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

	')'	reduce using rule 180 (ListElement)
	';'	reduce using rule 180 (ListElement)
	']'	reduce using rule 180 (ListElement)
	OP21_LIST_COMMA	reduce using rule 180 (ListElement)

State 210:

	PLUS-44 -> PLUS-44 . WORD	(Rule 175)
	ListElements -> OP01_QW PLUS-44 . ')'	(Rule 178)

	')'	shift, and go to state 277
	WORD	shift, and go to state 278

State 211:

	PLUS-44 -> WORD .	(Rule 176)

	$default	reduce using rule 176 (PLUS-44)

State 212:

	ArrayReference -> LBRACKET OPTIONAL-45 ']' .	(Rule 184)

	$default	reduce using rule 184 (ArrayReference)

State 213:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	']'	reduce using rule 79 (Operator)
	'}'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 79 (Operator)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 214:

	STAR-43 -> STAR-43 . PAREN-42	(Rule 173)
	ListElements -> ListElement STAR-43 .	(Rule 177)

	OP21_LIST_COMMA	shift, and go to state 280

	')'	reduce using rule 177 (ListElements)
	';'	reduce using rule 177 (ListElements)
	']'	reduce using rule 177 (ListElements)

	PAREN-42	go to state 279

State 215:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 181)

	$default	reduce using rule 181 (ListElement)

State 216:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 116)

	$default	reduce using rule 116 (OperatorVoid)

State 217:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-37 OPTIONAL-39	(Rule 152)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 282

State 218:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 123)

	$default	reduce using rule 123 (Expression)

State 219:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP07_STRING_REPEAT	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 220:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP08_STRING_CAT	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 221:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_STRING_REPEAT	shift, and go to state 139

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 222:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 88)

	$default	reduce using rule 88 (Operator)

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 224:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 225:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 226:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 227:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 228:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 229:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 230:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 231:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 232:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 233:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP13_BITWISE_AND	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 235:

	VariableOrLiteral -> Literal .	(Rule 206)

	$default	reduce using rule 206 (VariableOrLiteral)

State 236:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 103)

	COLON	shift, and go to state 283

State 237:

	VariableOrLiteral -> Variable .	(Rule 205)

	$default	reduce using rule 205 (VariableOrLiteral)

State 238:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 165)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 101
	WordScoped	go to state 110
	SubExpression	go to state 284
	Operator	go to state 111
	HashReference	go to state 76
	ArrayDereferenced	go to state 87
	Variable	go to state 130

State 239:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 166)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 167)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 286
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114
	Variable	go to state 130
	WordScoped	go to state 110
	SubExpression	go to state 285
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	Operator	go to state 111

State 240:

	STAR-41 -> STAR-41 VariableRetrieval .	(Rule 162)

	$default	reduce using rule 162 (STAR-41)

State 241:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	FH_REF_SYMBOL	shift, and go to state 287

State 242:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 243:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 113)

	$default	reduce using rule 113 (OperatorVoid)

State 244:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 198)

	$default	reduce using rule 198 (HashDereferenced)

State 245:

	HashDereferenced -> '%{' Variable '}' .	(Rule 197)

	$default	reduce using rule 197 (HashDereferenced)

State 246:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 171)

	';'	shift, and go to state 288
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 247:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-33 ')'	(Rule 124)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	')'	reduce using rule 120 (OPTIONAL-33)

	TypeInner	go to state 124
	Variable	go to state 130
	ListElements	go to state 289
	WordScoped	go to state 110
	SubExpression	go to state 133
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	HashReference	go to state 76
	ArrayReference	go to state 101
	OPTIONAL-33	go to state 290
	HashDereferenced	go to state 112
	Expression	go to state 127
	ListElement	go to state 131
	Literal	go to state 114

State 248:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	SubExpressionOrStdin -> SubExpression .	(Rule 136)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

	';'	reduce using rule 136 (SubExpressionOrStdin)

State 249:

	SubExpressionOrStdin -> STDIN .	(Rule 137)

	$default	reduce using rule 137 (SubExpressionOrStdin)

State 250:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 170)

	';'	shift, and go to state 291

State 251:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 135)

	$default	reduce using rule 135 (SubExpression)

State 252:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 78)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	TypeInner	go to state 124
	ListElements	go to state 292
	Variable	go to state 130
	WordScoped	go to state 110
	HashReference	go to state 76
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	SubExpression	go to state 133
	ArrayReference	go to state 101
	ListElement	go to state 131
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114

State 253:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 80)

	OP21_LIST_COMMA	shift, and go to state 293

State 254:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 157)

	VARIABLE_SYMBOL	shift, and go to state 294

State 255:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 156)

	LPAREN	shift, and go to state 295

State 256:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 158)

	')'	shift, and go to state 296
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 257:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 114)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Literal	go to state 114
	Expression	go to state 127
	HashDereferenced	go to state 112
	ListElement	go to state 131
	ArrayReference	go to state 101
	HashReference	go to state 76
	SubExpression	go to state 133
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	Variable	go to state 130
	ListElements	go to state 297
	TypeInner	go to state 124

State 258:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 111)

	';'	shift, and go to state 298

State 259:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements . ';'	(Rule 110)

	';'	shift, and go to state 299

State 260:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 168)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 169)

	';'	shift, and go to state 301
	OP19_VARIABLE_ASSIGN	shift, and go to state 300

State 261:

	STAR-48 -> STAR-48 . PAREN-47	(Rule 194)
	HashReference -> LBRACE HashEntry STAR-48 . '}'	(Rule 196)

	'}'	shift, and go to state 304
	OP21_LIST_COMMA	shift, and go to state 303

	PAREN-47	go to state 302

State 262:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-46 SubExpression	(Rule 189)

	'my'	shift, and go to state 123

	'%{'	reduce using rule 188 (OPTIONAL-46)
	'@{'	reduce using rule 188 (OPTIONAL-46)
	'undef'	reduce using rule 188 (OPTIONAL-46)
	LBRACE	reduce using rule 188 (OPTIONAL-46)
	LBRACKET	reduce using rule 188 (OPTIONAL-46)
	LITERAL_NUMBER	reduce using rule 188 (OPTIONAL-46)
	LITERAL_STRING	reduce using rule 188 (OPTIONAL-46)
	LPAREN	reduce using rule 188 (OPTIONAL-46)
	OP01_CLOSE	reduce using rule 188 (OPTIONAL-46)
	OP01_NAMED	reduce using rule 188 (OPTIONAL-46)
	OP01_OPEN	reduce using rule 188 (OPTIONAL-46)
	OP03_MATH_INC_DEC	reduce using rule 188 (OPTIONAL-46)
	OP05_LOGICAL_NEG	reduce using rule 188 (OPTIONAL-46)
	OP05_MATH_NEG_LPAREN	reduce using rule 188 (OPTIONAL-46)
	OP10_NAMED_UNARY	reduce using rule 188 (OPTIONAL-46)
	OP22_LOGICAL_NEG	reduce using rule 188 (OPTIONAL-46)
	VARIABLE_SYMBOL	reduce using rule 188 (OPTIONAL-46)
	WORD	reduce using rule 188 (OPTIONAL-46)
	WORD_SCOPED	reduce using rule 188 (OPTIONAL-46)
	WORD_UPPERCASE	reduce using rule 188 (OPTIONAL-46)

	TypeInner	go to state 306
	OPTIONAL-46	go to state 305

State 263:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 186)

	$default	reduce using rule 186 (ArrayDereferenced)

State 264:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 185)

	$default	reduce using rule 185 (ArrayDereferenced)

State 265:

	Expression -> WordScoped LPAREN OPTIONAL-32 . ')'	(Rule 122)

	')'	shift, and go to state 307

State 266:

	OPTIONAL-32 -> ListElements .	(Rule 117)

	$default	reduce using rule 117 (OPTIONAL-32)

State 267:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 125)

	$default	reduce using rule 125 (Expression)

State 268:

	TypeInnerConstant -> 'my' Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 204)

	WORD_UPPERCASE	shift, and go to state 308

State 269:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 270:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'if ('	shift, and go to state 73
	'my'	shift, and go to state 106
	'undef'	shift, and go to state 72
	'}'	shift, and go to state 310
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 88
	OP01_NAMED_VOID_SCOLON	shift, and go to state 75
	OP01_OPEN	shift, and go to state 83
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 71
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 74

	'for my integer'	reduce using rule 140 (OPTIONAL-35)
	'foreach my'	reduce using rule 140 (OPTIONAL-35)
	'while ('	reduce using rule 140 (OPTIONAL-35)

	Variable	go to state 95
	SubExpression	go to state 77
	HashReference	go to state 76
	OperatorVoid	go to state 96
	OPTIONAL-35	go to state 98
	ArrayReference	go to state 101
	VariableDeclaration	go to state 78
	PAREN-34	go to state 84
	Statement	go to state 82
	LoopLabel	go to state 104
	VariableModification	go to state 85
	Conditional	go to state 108
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	Operation	go to state 309
	Expression	go to state 113
	HashDereferenced	go to state 112
	Literal	go to state 114

State 271:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 272:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 311

State 273:

	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 64)

	OP19_VARIABLE_ASSIGN	shift, and go to state 312

State 274:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 275:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 313

State 276:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 203)

	WORD	shift, and go to state 314

State 277:

	ListElements -> OP01_QW PLUS-44 ')' .	(Rule 178)

	$default	reduce using rule 178 (ListElements)

State 278:

	PLUS-44 -> PLUS-44 WORD .	(Rule 175)

	$default	reduce using rule 175 (PLUS-44)

State 279:

	STAR-43 -> STAR-43 PAREN-42 .	(Rule 173)

	$default	reduce using rule 173 (STAR-43)

State 280:

	PAREN-42 -> OP21_LIST_COMMA . ListElement	(Rule 172)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Literal	go to state 114
	Expression	go to state 127
	HashDereferenced	go to state 112
	ListElement	go to state 315
	Variable	go to state 130
	TypeInner	go to state 124
	ArrayDereferenced	go to state 87
	SubExpression	go to state 133
	HashReference	go to state 76
	Operator	go to state 111
	WordScoped	go to state 110

State 281:

	CodeBlock -> LBRACE . PLUS-40 '}'	(Rule 161)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'if ('	shift, and go to state 73
	'my'	shift, and go to state 106
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 88
	OP01_NAMED_VOID_SCOLON	shift, and go to state 75
	OP01_OPEN	shift, and go to state 83
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 71
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 74

	'for my integer'	reduce using rule 140 (OPTIONAL-35)
	'foreach my'	reduce using rule 140 (OPTIONAL-35)
	'while ('	reduce using rule 140 (OPTIONAL-35)

	OPTIONAL-35	go to state 98
	OperatorVoid	go to state 96
	SubExpression	go to state 77
	HashReference	go to state 76
	Variable	go to state 95
	Statement	go to state 82
	PAREN-34	go to state 84
	VariableDeclaration	go to state 78
	ArrayReference	go to state 101
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	LoopLabel	go to state 104
	VariableModification	go to state 85
	Conditional	go to state 108
	Expression	go to state 113
	HashDereferenced	go to state 112
	Literal	go to state 114
	PLUS-40	go to state 316
	Operation	go to state 317

State 282:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-37 OPTIONAL-39	(Rule 152)

	$default	reduce using rule 148 (STAR-37)

	STAR-37	go to state 318

State 283:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 103)

	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	VARIABLE_SYMBOL	shift, and go to state 79

	Literal	go to state 235
	Variable	go to state 237
	VariableOrLiteral	go to state 319

State 284:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 165)

	']'	shift, and go to state 320
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 285:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 166)

	'}'	shift, and go to state 321
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 286:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 167)
	WordScoped -> WORD .	(Rule 199)

	'}'	shift, and go to state 322

	LPAREN	reduce using rule 199 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 199 (WordScoped)

State 287:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 323

State 288:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 171)

	$default	reduce using rule 171 (VariableModification)

State 289:

	OPTIONAL-33 -> ListElements .	(Rule 119)

	$default	reduce using rule 119 (OPTIONAL-33)

State 290:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 . ')'	(Rule 124)

	')'	shift, and go to state 324

State 291:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 170)

	$default	reduce using rule 170 (VariableModification)

State 292:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 78)

	')'	shift, and go to state 325

State 293:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 80)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	WordScoped	go to state 110
	Operator	go to state 111
	HashReference	go to state 76
	SubExpression	go to state 133
	ArrayDereferenced	go to state 87
	TypeInner	go to state 124
	ListElements	go to state 326
	Variable	go to state 130
	ListElement	go to state 131
	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 101

State 294:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 157)

	LPAREN	shift, and go to state 327

State 295:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 156)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 101
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	SubExpression	go to state 328
	HashReference	go to state 76
	Variable	go to state 130

State 296:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 158)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 329

State 297:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 114)

	';'	shift, and go to state 330

State 298:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 111)

	$default	reduce using rule 111 (OperatorVoid)

State 299:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';' .	(Rule 110)

	$default	reduce using rule 110 (OperatorVoid)

State 300:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 169)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	STDIN	shift, and go to state 249
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127
	Variable	go to state 130
	SubExpressionOrStdin	go to state 331
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	SubExpression	go to state 248
	Operator	go to state 111
	WordScoped	go to state 110

State 301:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 168)

	$default	reduce using rule 168 (VariableDeclaration)

State 302:

	STAR-48 -> STAR-48 PAREN-47 .	(Rule 194)

	$default	reduce using rule 194 (STAR-48)

State 303:

	PAREN-47 -> OP21_LIST_COMMA . HashEntry	(Rule 193)

	'%{'	shift, and go to state 94
	WORD	shift, and go to state 192

	HashDereferenced	go to state 193
	HashEntry	go to state 332

State 304:

	HashReference -> LBRACE HashEntry STAR-48 '}' .	(Rule 196)

	$default	reduce using rule 196 (HashReference)

State 305:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 . SubExpression	(Rule 189)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	SubExpression	go to state 333
	Operator	go to state 111
	HashReference	go to state 76
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127

State 306:

	OPTIONAL-46 -> TypeInner .	(Rule 187)

	$default	reduce using rule 187 (OPTIONAL-46)

State 307:

	Expression -> WordScoped LPAREN OPTIONAL-32 ')' .	(Rule 122)

	$default	reduce using rule 122 (Expression)

State 308:

	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 204)

	OP19_VARIABLE_ASSIGN	shift, and go to state 334

State 309:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 310:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 335

State 311:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 336

State 312:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 64)

	LBRACE	shift, and go to state 337

State 313:

	STAR-23 -> STAR-23 . MethodOrSubroutine	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 . LITERAL_NUMBER ';'	(Rule 59)

	'our'	shift, and go to state 339
	LITERAL_NUMBER	shift, and go to state 342

	MethodOrSubroutine	go to state 338
	Subroutine	go to state 341
	Method	go to state 340

State 314:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 203)

	OP19_VARIABLE_ASSIGN	shift, and go to state 343

State 315:

	PAREN-42 -> OP21_LIST_COMMA ListElement .	(Rule 172)

	$default	reduce using rule 172 (PAREN-42)

State 316:

	PLUS-40 -> PLUS-40 . Operation	(Rule 159)
	CodeBlock -> LBRACE PLUS-40 . '}'	(Rule 161)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'if ('	shift, and go to state 73
	'my'	shift, and go to state 106
	'undef'	shift, and go to state 72
	'}'	shift, and go to state 344
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 88
	OP01_NAMED_VOID_SCOLON	shift, and go to state 75
	OP01_OPEN	shift, and go to state 83
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 71
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 74

	'for my integer'	reduce using rule 140 (OPTIONAL-35)
	'foreach my'	reduce using rule 140 (OPTIONAL-35)
	'while ('	reduce using rule 140 (OPTIONAL-35)

	OPTIONAL-35	go to state 98
	OperatorVoid	go to state 96
	SubExpression	go to state 77
	HashReference	go to state 76
	Variable	go to state 95
	Statement	go to state 82
	PAREN-34	go to state 84
	VariableDeclaration	go to state 78
	ArrayReference	go to state 101
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	WordScoped	go to state 110
	Conditional	go to state 108
	VariableModification	go to state 85
	LoopLabel	go to state 104
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 113
	Operation	go to state 345

State 317:

	PLUS-40 -> Operation .	(Rule 160)

	$default	reduce using rule 160 (PLUS-40)

State 318:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 147)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-37 . OPTIONAL-39	(Rule 152)

	'else'	shift, and go to state 349
	'elsif ('	shift, and go to state 350

	$end	reduce using rule 151 (OPTIONAL-39)
	'%{'	reduce using rule 151 (OPTIONAL-39)
	'@{'	reduce using rule 151 (OPTIONAL-39)
	'for my integer'	reduce using rule 151 (OPTIONAL-39)
	'foreach my'	reduce using rule 151 (OPTIONAL-39)
	'if ('	reduce using rule 151 (OPTIONAL-39)
	'my'	reduce using rule 151 (OPTIONAL-39)
	'undef'	reduce using rule 151 (OPTIONAL-39)
	'while ('	reduce using rule 151 (OPTIONAL-39)
	'}'	reduce using rule 151 (OPTIONAL-39)
	LBRACE	reduce using rule 151 (OPTIONAL-39)
	LBRACKET	reduce using rule 151 (OPTIONAL-39)
	LITERAL_NUMBER	reduce using rule 151 (OPTIONAL-39)
	LITERAL_STRING	reduce using rule 151 (OPTIONAL-39)
	LPAREN	reduce using rule 151 (OPTIONAL-39)
	OP01_CLOSE	reduce using rule 151 (OPTIONAL-39)
	OP01_NAMED	reduce using rule 151 (OPTIONAL-39)
	OP01_NAMED_VOID	reduce using rule 151 (OPTIONAL-39)
	OP01_NAMED_VOID_SCOLON	reduce using rule 151 (OPTIONAL-39)
	OP01_OPEN	reduce using rule 151 (OPTIONAL-39)
	OP01_PRINT	reduce using rule 151 (OPTIONAL-39)
	OP03_MATH_INC_DEC	reduce using rule 151 (OPTIONAL-39)
	OP05_LOGICAL_NEG	reduce using rule 151 (OPTIONAL-39)
	OP05_MATH_NEG_LPAREN	reduce using rule 151 (OPTIONAL-39)
	OP10_NAMED_UNARY	reduce using rule 151 (OPTIONAL-39)
	OP19_LOOP_CONTROL	reduce using rule 151 (OPTIONAL-39)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 151 (OPTIONAL-39)
	OP22_LOGICAL_NEG	reduce using rule 151 (OPTIONAL-39)
	VARIABLE_SYMBOL	reduce using rule 151 (OPTIONAL-39)
	WORD	reduce using rule 151 (OPTIONAL-39)
	WORD_SCOPED	reduce using rule 151 (OPTIONAL-39)
	WORD_UPPERCASE	reduce using rule 151 (OPTIONAL-39)

	PAREN-38	go to state 347
	PAREN-36	go to state 346
	OPTIONAL-39	go to state 348

State 319:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 320:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 165)

	$default	reduce using rule 165 (VariableRetrieval)

State 321:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 166)

	$default	reduce using rule 166 (VariableRetrieval)

State 322:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 167)

	$default	reduce using rule 167 (VariableRetrieval)

State 323:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 81)

	LITERAL_STRING	shift, and go to state 351

State 324:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')' .	(Rule 124)

	$default	reduce using rule 124 (Expression)

State 325:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 78)

	$default	reduce using rule 78 (Operator)

State 326:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 80)

	')'	shift, and go to state 352

State 327:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 157)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'my'	shift, and go to state 123
	'undef'	shift, and go to state 72
	KEYS_OR_VALUES	shift, and go to state 132
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP01_QW	shift, and go to state 125
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ListElement	go to state 131
	HashDereferenced	go to state 112
	Expression	go to state 127
	Literal	go to state 114
	ArrayReference	go to state 101
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	SubExpression	go to state 133
	HashReference	go to state 76
	Operator	go to state 111
	TypeInner	go to state 124
	ListElements	go to state 353
	Variable	go to state 130

State 328:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 156)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 354
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 329:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (LoopWhile)

State 330:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 331:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 169)

	';'	shift, and go to state 355

State 332:

	PAREN-47 -> OP21_LIST_COMMA HashEntry .	(Rule 193)

	$default	reduce using rule 193 (PAREN-47)

State 333:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 SubExpression .	(Rule 189)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

	'}'	reduce using rule 189 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 189 (HashEntry)

State 334:

	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 204)

	$default	reduce using rule 204 (TypeInnerConstant)

State 335:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 336:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 358
	OP21_LIST_COMMA	shift, and go to state 356

	PAREN-18	go to state 357

State 337:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 64)

	'%{'	shift, and go to state 94
	'}'	shift, and go to state 359
	WORD	shift, and go to state 360

	HashDereferenced	go to state 361
	HashEntryTyped	go to state 362

State 338:

	STAR-23 -> STAR-23 MethodOrSubroutine .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 339:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	TYPE_METHOD	shift, and go to state 363
	WORD	shift, and go to state 56

	Type	go to state 57

State 340:

	MethodOrSubroutine -> Method .	(Rule 74)

	$default	reduce using rule 74 (MethodOrSubroutine)

State 341:

	MethodOrSubroutine -> Subroutine .	(Rule 75)

	$default	reduce using rule 75 (MethodOrSubroutine)

State 342:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER . ';'	(Rule 59)

	';'	shift, and go to state 364

State 343:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 203)

	$default	reduce using rule 203 (TypeInner)

State 344:

	CodeBlock -> LBRACE PLUS-40 '}' .	(Rule 161)

	$default	reduce using rule 161 (CodeBlock)

State 345:

	PLUS-40 -> PLUS-40 Operation .	(Rule 159)

	$default	reduce using rule 159 (PLUS-40)

State 346:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 147)

	$default	reduce using rule 147 (STAR-37)

State 347:

	OPTIONAL-39 -> PAREN-38 .	(Rule 150)

	$default	reduce using rule 150 (OPTIONAL-39)

State 348:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-37 OPTIONAL-39 .	(Rule 152)

	$default	reduce using rule 152 (Conditional)

State 349:

	PAREN-38 -> 'else' . CodeBlock	(Rule 149)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 365

State 350:

	PAREN-36 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 146)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	ArrayReference	go to state 101
	Literal	go to state 114
	Expression	go to state 127
	HashDereferenced	go to state 112
	Variable	go to state 130
	ArrayDereferenced	go to state 87
	HashReference	go to state 76
	SubExpression	go to state 366
	Operator	go to state 111
	WordScoped	go to state 110

State 351:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 81)

	OP21_LIST_COMMA	shift, and go to state 367

State 352:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 80)

	$default	reduce using rule 80 (Operator)

State 353:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 157)

	')'	shift, and go to state 368

State 354:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 102)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 156)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	HashReference	go to state 76
	SubExpression	go to state 369
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	WordScoped	go to state 110
	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127

State 355:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 169)

	$default	reduce using rule 169 (VariableDeclaration)

State 356:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 370

State 357:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 358:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 371

State 359:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 64)

	';'	shift, and go to state 372

State 360:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 191)

	OP20_HASH_FATARROW	shift, and go to state 373

State 361:

	HashEntryTyped -> HashDereferenced .	(Rule 192)

	$default	reduce using rule 192 (HashEntryTyped)

State 362:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-25 '}' ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 374

State 363:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	VARIABLE_SYMBOL	shift, and go to state 375

State 364:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';' .	(Rule 59)

	$default	reduce using rule 59 (Class)

State 365:

	PAREN-38 -> 'else' CodeBlock .	(Rule 149)

	$default	reduce using rule 149 (PAREN-38)

State 366:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	PAREN-36 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 146)

	')'	shift, and go to state 376
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

State 367:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 81)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Variable	go to state 130
	SubExpression	go to state 377
	HashReference	go to state 76
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	WordScoped	go to state 110
	ArrayReference	go to state 101
	Literal	go to state 114
	HashDereferenced	go to state 112
	Expression	go to state 127

State 368:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 157)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 378

State 369:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 156)

	')'	shift, and go to state 379
	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 370:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 56

	Type	go to state 380

State 371:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 381

State 372:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 64)

	$default	reduce using rule 64 (Properties)

State 373:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 191)

	'my'	shift, and go to state 123

	TypeInner	go to state 382

State 374:

	STAR-25 -> STAR-25 . PAREN-24	(Rule 61)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 . '}' ';'	(Rule 63)

	'}'	shift, and go to state 383
	OP21_LIST_COMMA	shift, and go to state 384

	PAREN-24	go to state 385

State 375:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	'= sub {'	shift, and go to state 386

State 376:

	PAREN-36 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 146)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 387

State 377:

	Operator -> OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 81)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155

	')'	reduce using rule 81 (Operator)
	';'	reduce using rule 81 (Operator)
	']'	reduce using rule 81 (Operator)
	'}'	reduce using rule 81 (Operator)
	OP21_LIST_COMMA	reduce using rule 81 (Operator)
	OP23_LOGICAL_AND	reduce using rule 81 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 81 (Operator)

State 378:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 157)

	$default	reduce using rule 157 (LoopForEach)

State 379:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 156)

	LBRACE	shift, and go to state 281

	CodeBlock	go to state 388

State 380:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 389

State 381:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 382:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 191)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 128
	OP01_OPEN	shift, and go to state 83
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 134

	Expression	go to state 127
	HashDereferenced	go to state 112
	Literal	go to state 114
	ArrayReference	go to state 101
	WordScoped	go to state 110
	ArrayDereferenced	go to state 87
	SubExpression	go to state 390
	HashReference	go to state 76
	Operator	go to state 111
	Variable	go to state 130

State 383:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' . ';'	(Rule 63)

	';'	shift, and go to state 391

State 384:

	PAREN-24 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 60)

	'%{'	shift, and go to state 94
	WORD	shift, and go to state 360

	HashEntryTyped	go to state 392
	HashDereferenced	go to state 361

State 385:

	STAR-25 -> STAR-25 PAREN-24 .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 386:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	LPAREN_MY	shift, and go to state 393

	'%{'	reduce using rule 66 (OPTIONAL-26)
	'@{'	reduce using rule 66 (OPTIONAL-26)
	'for my integer'	reduce using rule 66 (OPTIONAL-26)
	'foreach my'	reduce using rule 66 (OPTIONAL-26)
	'if ('	reduce using rule 66 (OPTIONAL-26)
	'my'	reduce using rule 66 (OPTIONAL-26)
	'undef'	reduce using rule 66 (OPTIONAL-26)
	'while ('	reduce using rule 66 (OPTIONAL-26)
	LBRACE	reduce using rule 66 (OPTIONAL-26)
	LBRACKET	reduce using rule 66 (OPTIONAL-26)
	LITERAL_NUMBER	reduce using rule 66 (OPTIONAL-26)
	LITERAL_STRING	reduce using rule 66 (OPTIONAL-26)
	LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP01_CLOSE	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP01_OPEN	reduce using rule 66 (OPTIONAL-26)
	OP01_PRINT	reduce using rule 66 (OPTIONAL-26)
	OP03_MATH_INC_DEC	reduce using rule 66 (OPTIONAL-26)
	OP05_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	OP05_MATH_NEG_LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP10_NAMED_UNARY	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP22_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	VARIABLE_SYMBOL	reduce using rule 66 (OPTIONAL-26)
	WORD	reduce using rule 66 (OPTIONAL-26)
	WORD_SCOPED	reduce using rule 66 (OPTIONAL-26)
	WORD_UPPERCASE	reduce using rule 66 (OPTIONAL-26)

	MethodArguments	go to state 394
	OPTIONAL-26	go to state 395

State 387:

	PAREN-36 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 146)

	$default	reduce using rule 146 (PAREN-36)

State 388:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (LoopFor)

State 389:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 390:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 88)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 89)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 91)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 92)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 96)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 97)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 98)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 99)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 100)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 101)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 102)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 105)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 106)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 191)

	OP04_MATH_POW	shift, and go to state 152
	OP06_REGEX_MATCH	shift, and go to state 142
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 141
	OP07_STRING_REPEAT	shift, and go to state 139
	OP08_MATH_ADD_SUB	shift, and go to state 153
	OP08_STRING_CAT	shift, and go to state 140
	OP09_BITWISE_SHIFT	shift, and go to state 146
	OP11_COMPARE_LT_GT	shift, and go to state 144
	OP12_COMPARE_EQ_NE	shift, and go to state 147
	OP13_BITWISE_AND	shift, and go to state 154
	OP14_BITWISE_OR_XOR	shift, and go to state 150
	OP15_LOGICAL_AND	shift, and go to state 145
	OP16_LOGICAL_OR	shift, and go to state 151
	OP17_LIST_RANGE	shift, and go to state 143
	OP18_TERNARY	shift, and go to state 155
	OP23_LOGICAL_AND	shift, and go to state 148
	OP24_LOGICAL_OR_XOR	shift, and go to state 149

	'}'	reduce using rule 191 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 191 (HashEntryTyped)

State 391:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';' .	(Rule 63)

	$default	reduce using rule 63 (Properties)

State 392:

	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 60)

	$default	reduce using rule 60 (PAREN-24)

State 393:

	MethodArguments -> LPAREN_MY . TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	TYPE_SELF	shift, and go to state 396

State 394:

	OPTIONAL-26 -> MethodArguments .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-26)

State 395:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 . PLUS-27 '}' ';'	(Rule 69)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'if ('	shift, and go to state 73
	'my'	shift, and go to state 106
	'undef'	shift, and go to state 72
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 88
	OP01_NAMED_VOID_SCOLON	shift, and go to state 75
	OP01_OPEN	shift, and go to state 83
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 71
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 74

	'for my integer'	reduce using rule 140 (OPTIONAL-35)
	'foreach my'	reduce using rule 140 (OPTIONAL-35)
	'while ('	reduce using rule 140 (OPTIONAL-35)

	Statement	go to state 82
	PAREN-34	go to state 84
	ArrayReference	go to state 101
	VariableDeclaration	go to state 78
	OPTIONAL-35	go to state 98
	OperatorVoid	go to state 96
	HashReference	go to state 76
	SubExpression	go to state 77
	Variable	go to state 95
	Literal	go to state 114
	PLUS-27	go to state 397
	HashDereferenced	go to state 112
	Expression	go to state 113
	Operation	go to state 398
	ArrayDereferenced	go to state 87
	Operator	go to state 111
	WordScoped	go to state 110
	Conditional	go to state 108
	VariableModification	go to state 85
	LoopLabel	go to state 104

State 396:

	MethodArguments -> LPAREN_MY TYPE_SELF . STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 399

State 397:

	PLUS-27 -> PLUS-27 . Operation	(Rule 67)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 . '}' ';'	(Rule 69)

	'%{'	shift, and go to state 94
	'@{'	shift, and go to state 109
	'if ('	shift, and go to state 73
	'my'	shift, and go to state 106
	'undef'	shift, and go to state 72
	'}'	shift, and go to state 400
	LBRACE	shift, and go to state 107
	LBRACKET	shift, and go to state 70
	LITERAL_NUMBER	shift, and go to state 89
	LITERAL_STRING	shift, and go to state 81
	LPAREN	shift, and go to state 97
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 100
	OP01_NAMED_VOID	shift, and go to state 88
	OP01_NAMED_VOID_SCOLON	shift, and go to state 75
	OP01_OPEN	shift, and go to state 83
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 91
	OP05_LOGICAL_NEG	shift, and go to state 105
	OP05_MATH_NEG_LPAREN	shift, and go to state 86
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 71
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 80
	OP22_LOGICAL_NEG	shift, and go to state 115
	VARIABLE_SYMBOL	shift, and go to state 79
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 74

	'for my integer'	reduce using rule 140 (OPTIONAL-35)
	'foreach my'	reduce using rule 140 (OPTIONAL-35)
	'while ('	reduce using rule 140 (OPTIONAL-35)

	VariableModification	go to state 85
	LoopLabel	go to state 104
	Conditional	go to state 108
	WordScoped	go to state 110
	Operator	go to state 111
	ArrayDereferenced	go to state 87
	Operation	go to state 401
	Expression	go to state 113
	HashDereferenced	go to state 112
	Literal	go to state 114
	Variable	go to state 95
	OPTIONAL-35	go to state 98
	OperatorVoid	go to state 96
	SubExpression	go to state 77
	HashReference	go to state 76
	VariableDeclaration	go to state 78
	ArrayReference	go to state 101
	Statement	go to state 82
	PAREN-34	go to state 84

State 398:

	PLUS-27 -> Operation .	(Rule 68)

	$default	reduce using rule 68 (PLUS-27)

State 399:

	STAR-29 -> STAR-29 . PAREN-28	(Rule 71)
	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	')'	shift, and go to state 403
	OP21_LIST_COMMA	shift, and go to state 404

	PAREN-28	go to state 402

State 400:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' . ';'	(Rule 69)

	';'	shift, and go to state 405

State 401:

	PLUS-27 -> PLUS-27 Operation .	(Rule 67)

	$default	reduce using rule 67 (PLUS-27)

State 402:

	STAR-29 -> STAR-29 PAREN-28 .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 403:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	OP19_VARIABLE_ASSIGN	shift, and go to state 406

State 404:

	PAREN-28 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 70)

	'my'	shift, and go to state 407

State 405:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';' .	(Rule 69)

	$default	reduce using rule 69 (Method)

State 406:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 73)

	'@_;'	shift, and go to state 408

State 407:

	PAREN-28 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 70)

	WORD	shift, and go to state 56

	Type	go to state 409

State 408:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 73)

	$default	reduce using rule 73 (MethodArguments)

State 409:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 70)

	VARIABLE_SYMBOL	shift, and go to state 410

State 410:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 70)

	$default	reduce using rule 70 (PAREN-28)


Summary:
--------
Number of rules         : 209
Number of terminals     : 90
Number of non-terminals : 97
Number of states        : 411
