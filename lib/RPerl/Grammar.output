Conflicts:
----------
Conflict in state 91 between rule 52 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 91 between rule 52 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 91 between rule 52 and token OP04_MATH_POW resolved as shift.
Conflict in state 91 between rule 52 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 91 between rule 52 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 91 between rule 52 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 91 between rule 52 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 91 between rule 52 and token OP18_TERNARY resolved as reduce.
Conflict in state 91 between rule 52 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 91 between rule 52 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 91 between rule 52 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 91 between rule 52 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 91 between rule 52 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 91 between rule 52 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 91 between rule 52 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 91 between rule 52 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 92 between rule 51 and token OP18_TERNARY resolved as reduce.
Conflict in state 92 between rule 51 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 92 between rule 51 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 92 between rule 51 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 92 between rule 51 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 92 between rule 51 and token OP04_MATH_POW resolved as shift.
Conflict in state 92 between rule 51 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 92 between rule 51 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 92 between rule 51 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 92 between rule 51 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 92 between rule 51 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 92 between rule 51 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 92 between rule 51 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 92 between rule 51 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 92 between rule 51 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 92 between rule 51 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 94 between rule 67 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 94 between rule 67 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 94 between rule 67 and token OP18_TERNARY resolved as shift.
Conflict in state 94 between rule 67 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 94 between rule 67 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 94 between rule 67 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 94 between rule 67 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 94 between rule 67 and token OP08_STRING_CAT resolved as shift.
Conflict in state 94 between rule 67 and token OP04_MATH_POW resolved as shift.
Conflict in state 94 between rule 67 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 94 between rule 67 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 94 between rule 67 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 94 between rule 67 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 94 between rule 67 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 94 between rule 67 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 94 between rule 67 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 97 between rule 58 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 97 between rule 58 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 97 between rule 58 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 97 between rule 58 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 97 between rule 58 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 97 between rule 58 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 97 between rule 58 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 97 between rule 58 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 97 between rule 58 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 97 between rule 58 and token OP08_STRING_CAT resolved as shift.
Conflict in state 97 between rule 58 and token OP04_MATH_POW resolved as shift.
Conflict in state 97 between rule 58 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 97 between rule 58 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 97 between rule 58 and token OP18_TERNARY resolved as reduce.
Conflict in state 97 between rule 58 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 97 between rule 58 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 130 between rule 60 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 130 between rule 60 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 130 between rule 60 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 130 between rule 60 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 130 between rule 60 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 130 between rule 60 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 130 between rule 60 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 130 between rule 60 and token OP08_STRING_CAT resolved as shift.
Conflict in state 130 between rule 60 and token OP04_MATH_POW resolved as shift.
Conflict in state 130 between rule 60 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 130 between rule 60 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 130 between rule 60 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 130 between rule 60 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 130 between rule 60 and token OP18_TERNARY resolved as reduce.
Conflict in state 130 between rule 60 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 130 between rule 60 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 131 between rule 61 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 131 between rule 61 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 131 between rule 61 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 131 between rule 61 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 131 between rule 61 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 131 between rule 61 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 131 between rule 61 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 131 between rule 61 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 131 between rule 61 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 131 between rule 61 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 131 between rule 61 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 131 between rule 61 and token OP08_STRING_CAT resolved as shift.
Conflict in state 131 between rule 61 and token OP04_MATH_POW resolved as shift.
Conflict in state 131 between rule 61 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 131 between rule 61 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 131 between rule 61 and token OP18_TERNARY resolved as reduce.
Conflict in state 132 between rule 64 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 132 between rule 64 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 132 between rule 64 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 132 between rule 64 and token OP04_MATH_POW resolved as shift.
Conflict in state 132 between rule 64 and token OP08_STRING_CAT resolved as shift.
Conflict in state 132 between rule 64 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 132 between rule 64 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 132 between rule 64 and token OP18_TERNARY resolved as reduce.
Conflict in state 132 between rule 64 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 132 between rule 64 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 132 between rule 64 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 132 between rule 64 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 132 between rule 64 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 132 between rule 64 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 132 between rule 64 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 132 between rule 64 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 134 between rule 59 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 134 between rule 59 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 134 between rule 59 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 134 between rule 59 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 134 between rule 59 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 134 between rule 59 and token OP04_MATH_POW resolved as shift.
Conflict in state 134 between rule 59 and token OP08_STRING_CAT resolved as shift.
Conflict in state 134 between rule 59 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 134 between rule 59 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 134 between rule 59 and token OP18_TERNARY resolved as reduce.
Conflict in state 134 between rule 59 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 134 between rule 59 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 134 between rule 59 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 134 between rule 59 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 134 between rule 59 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 134 between rule 59 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 135 between rule 63 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 135 between rule 63 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 135 between rule 63 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 135 between rule 63 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 135 between rule 63 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 135 between rule 63 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 135 between rule 63 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 135 between rule 63 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 135 between rule 63 and token OP18_TERNARY resolved as reduce.
Conflict in state 135 between rule 63 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 135 between rule 63 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 135 between rule 63 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 135 between rule 63 and token OP04_MATH_POW resolved as shift.
Conflict in state 135 between rule 63 and token OP08_STRING_CAT resolved as shift.
Conflict in state 135 between rule 63 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 135 between rule 63 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 136 between rule 55 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 136 between rule 55 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 136 between rule 55 and token OP18_TERNARY resolved as reduce.
Conflict in state 136 between rule 55 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 136 between rule 55 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 136 between rule 55 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 136 between rule 55 and token OP04_MATH_POW resolved as shift.
Conflict in state 136 between rule 55 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 136 between rule 55 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 136 between rule 55 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 136 between rule 55 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 136 between rule 55 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 136 between rule 55 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 136 between rule 55 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 136 between rule 55 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 136 between rule 55 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 137 between rule 50 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 137 between rule 50 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 137 between rule 50 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 137 between rule 50 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 137 between rule 50 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 137 between rule 50 and token OP04_MATH_POW resolved as shift.
Conflict in state 137 between rule 50 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 137 between rule 50 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 137 between rule 50 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 137 between rule 50 and token OP18_TERNARY resolved as reduce.
Conflict in state 137 between rule 50 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 137 between rule 50 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 137 between rule 50 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 137 between rule 50 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 137 between rule 50 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 137 between rule 50 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 138 between rule 62 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 138 between rule 62 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 138 between rule 62 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 138 between rule 62 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 138 between rule 62 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 138 between rule 62 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 138 between rule 62 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 138 between rule 62 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 138 between rule 62 and token OP18_TERNARY resolved as reduce.
Conflict in state 138 between rule 62 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 138 between rule 62 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 138 between rule 62 and token OP08_STRING_CAT resolved as shift.
Conflict in state 138 between rule 62 and token OP04_MATH_POW resolved as shift.
Conflict in state 138 between rule 62 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 138 between rule 62 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 138 between rule 62 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 139 between rule 68 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 139 between rule 68 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 139 between rule 68 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 139 between rule 68 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 139 between rule 68 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 139 between rule 68 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 139 between rule 68 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 139 between rule 68 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 139 between rule 68 and token OP18_TERNARY resolved as shift.
Conflict in state 139 between rule 68 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 139 between rule 68 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 139 between rule 68 and token OP04_MATH_POW resolved as shift.
Conflict in state 139 between rule 68 and token OP08_STRING_CAT resolved as shift.
Conflict in state 139 between rule 68 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 139 between rule 68 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 139 between rule 68 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 140 between rule 65 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 140 between rule 65 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 140 between rule 65 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 140 between rule 65 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 140 between rule 65 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 140 between rule 65 and token OP04_MATH_POW resolved as shift.
Conflict in state 140 between rule 65 and token OP08_STRING_CAT resolved as shift.
Conflict in state 140 between rule 65 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 140 between rule 65 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 140 between rule 65 and token OP18_TERNARY resolved as reduce.
Conflict in state 140 between rule 65 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 140 between rule 65 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 140 between rule 65 and token OP17_LIST_RANGE resolved as error.
Conflict in state 140 between rule 65 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 140 between rule 65 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 140 between rule 65 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 141 between rule 54 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 141 between rule 54 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 141 between rule 54 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 141 between rule 54 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 141 between rule 54 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 141 between rule 54 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 141 between rule 54 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 141 between rule 54 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 141 between rule 54 and token OP18_TERNARY resolved as reduce.
Conflict in state 141 between rule 54 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 141 between rule 54 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 141 between rule 54 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 141 between rule 54 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 141 between rule 54 and token OP04_MATH_POW resolved as shift.
Conflict in state 141 between rule 54 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 141 between rule 54 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 143 between rule 69 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 143 between rule 69 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 143 between rule 69 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 143 between rule 69 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 143 between rule 69 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 143 between rule 69 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 143 between rule 69 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 143 between rule 69 and token OP04_MATH_POW resolved as shift.
Conflict in state 143 between rule 69 and token OP08_STRING_CAT resolved as shift.
Conflict in state 143 between rule 69 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 143 between rule 69 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 143 between rule 69 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 143 between rule 69 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 143 between rule 69 and token OP18_TERNARY resolved as shift.
Conflict in state 143 between rule 69 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 143 between rule 69 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 144 between rule 56 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 144 between rule 56 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 144 between rule 56 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 144 between rule 56 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 144 between rule 56 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 144 between rule 56 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 144 between rule 56 and token OP18_TERNARY resolved as reduce.
Conflict in state 144 between rule 56 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 144 between rule 56 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 144 between rule 56 and token OP04_MATH_POW resolved as shift.
Conflict in state 144 between rule 56 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 144 between rule 56 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 144 between rule 56 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 144 between rule 56 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 144 between rule 56 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 144 between rule 56 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 145 between rule 57 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 145 between rule 57 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 145 between rule 57 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 145 between rule 57 and token OP08_STRING_CAT resolved as shift.
Conflict in state 145 between rule 57 and token OP04_MATH_POW resolved as shift.
Conflict in state 145 between rule 57 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 145 between rule 57 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 145 between rule 57 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 145 between rule 57 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 145 between rule 57 and token OP18_TERNARY resolved as reduce.
Conflict in state 145 between rule 57 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 145 between rule 57 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 145 between rule 57 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 145 between rule 57 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 145 between rule 57 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 145 between rule 57 and token OP12_COMPARE_EQ_NEQ resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Subroutine
6:	STAR-2 -> /* empty */
7:	PLUS-3 -> PLUS-3 Operation
8:	PLUS-3 -> Operation
9:	Program -> SHEBANG Header STAR-2 PLUS-3
10:	Module -> Package
11:	Module -> Class
12:	PLUS-4 -> PLUS-4 Subroutine
13:	PLUS-4 -> Subroutine
14:	Package -> 'package' WordScoped ';' Header PLUS-4 '1;'
15:	STAR-5 -> STAR-5 Include
16:	STAR-5 -> /* empty */
17:	STAR-6 -> STAR-6 Constant
18:	STAR-6 -> /* empty */
19:	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' STAR-5 STAR-6
20:	PLUS-7 -> PLUS-7 WORD
21:	PLUS-7 -> WORD
22:	Include -> 'use' WordScoped ';'
23:	Include -> 'use' WordScoped 'qw(' PLUS-7 ');'
24:	Constant -> 'use constant' WORD OP20_HASH_FATARROW Constant_Value ';'
25:	PAREN-8 -> OP21_LIST_COMMA LITERAL
26:	STAR-9 -> STAR-9 PAREN-8
27:	STAR-9 -> /* empty */
28:	PAREN-10 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW LITERAL
29:	STAR-11 -> STAR-11 PAREN-10
30:	STAR-11 -> /* empty */
31:	Constant_Value -> LITERAL
32:	Constant_Value -> '[' LITERAL STAR-9 ']'
33:	Constant_Value -> '{' WORD OP20_HASH_FATARROW LITERAL STAR-11 '}'
34:	OPTIONAL-12 -> SubroutineArguments
35:	OPTIONAL-12 -> /* empty */
36:	PLUS-13 -> PLUS-13 Operation
37:	PLUS-13 -> Operation
38:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-12 PLUS-13 '};'
39:	PAREN-14 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
40:	STAR-15 -> STAR-15 PAREN-14
41:	STAR-15 -> /* empty */
42:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-15 ') = @_;'
43:	Operation -> Expression ';'
44:	Operation -> Statement
45:	OPTIONAL-16 -> ListElements
46:	OPTIONAL-16 -> /* empty */
47:	Operator -> OP01_NAMED '(' OPTIONAL-16 ')'
48:	Operator -> OP03_MATH_INC_DEC Variable
49:	Operator -> Variable OP03_MATH_INC_DEC
50:	Operator -> Expression OP04_MATH_POW Expression
51:	Operator -> OP05_LOGICAL_NEG Expression
52:	Operator -> OP05_MATH_NEG Expression
53:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
54:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
55:	Operator -> Expression OP08_MATH_ADD_SUB Expression
56:	Operator -> Expression OP08_STRING_CAT Expression
57:	Operator -> Expression OP09_BITWISE_SHIFT Expression
58:	Operator -> OP10_NAMED_UNARY Expression
59:	Operator -> Expression OP11_COMPARE_LT_GT Expression
60:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
61:	Operator -> Expression OP13_BITWISE_AND Expression
62:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
63:	Operator -> Expression OP15_LOGICAL_AND Expression
64:	Operator -> Expression OP16_LOGICAL_OR Expression
65:	Operator -> Expression OP17_LIST_RANGE Expression
66:	Operator -> Expression OP18_TERNARY Variable ':' Variable
67:	Operator -> OP22_LOGICAL_NOT Expression
68:	Operator -> Expression OP23_LOGICAL_AND Expression
69:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
70:	OPTIONAL-17 -> ListElements
71:	OPTIONAL-17 -> /* empty */
72:	OPTIONAL-18 -> ListElements
73:	OPTIONAL-18 -> /* empty */
74:	OPTIONAL-19 -> ListElements
75:	OPTIONAL-19 -> /* empty */
76:	OPTIONAL-20 -> ListElements
77:	OPTIONAL-20 -> /* empty */
78:	OperatorVoid -> OP01_NAMED_VOID '(' OPTIONAL-17 ');'
79:	OperatorVoid -> OP01_NAMED_VOID '(' FileHandle OPTIONAL-18 ');'
80:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-19 ';'
81:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-20 ';'
82:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
83:	OPTIONAL-21 -> ListElements
84:	OPTIONAL-21 -> /* empty */
85:	OPTIONAL-22 -> HashEntries
86:	OPTIONAL-22 -> /* empty */
87:	OPTIONAL-23 -> ListElements
88:	OPTIONAL-23 -> /* empty */
89:	OPTIONAL-24 -> ListElements
90:	OPTIONAL-24 -> /* empty */
91:	Expression -> LITERAL
92:	Expression -> Variable
93:	Expression -> '[' OPTIONAL-21 ']'
94:	Expression -> '{' OPTIONAL-22 '}'
95:	Expression -> Operator
96:	Expression -> WordScoped '(' OPTIONAL-23 ')'
97:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-24 ')'
98:	Expression -> '(' Expression ')'
99:	PAREN-25 -> LoopLabel ':'
100:	OPTIONAL-26 -> PAREN-25
101:	OPTIONAL-26 -> /* empty */
102:	Statement -> Conditional
103:	Statement -> OPTIONAL-26 Loop
104:	Statement -> OperatorVoid
105:	Statement -> VariableDeclaration
106:	Statement -> VariableModification
107:	PAREN-27 -> 'elsif (' Expression ')' CodeBlock
108:	STAR-28 -> STAR-28 PAREN-27
109:	STAR-28 -> /* empty */
110:	PAREN-29 -> 'else' CodeBlock
111:	OPTIONAL-30 -> PAREN-29
112:	OPTIONAL-30 -> /* empty */
113:	Conditional -> 'if (' Expression ')' CodeBlock STAR-28 OPTIONAL-30
114:	Loop -> LoopFor
115:	Loop -> LoopForEach
116:	Loop -> LoopWhile
117:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
118:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
119:	LoopWhile -> 'while (' Expression ')' CodeBlock
120:	PLUS-31 -> PLUS-31 Operation
121:	PLUS-31 -> Operation
122:	CodeBlock -> '{' PLUS-31 '}'
123:	STAR-32 -> STAR-32 VariableRetrieval
124:	STAR-32 -> /* empty */
125:	Variable -> VARIABLE_SYMBOL STAR-32
126:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
127:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
128:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
129:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'
130:	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';'
131:	PAREN-33 -> OP21_LIST_COMMA ListElementValue
132:	STAR-34 -> STAR-34 PAREN-33
133:	STAR-34 -> /* empty */
134:	ListElements -> ListElementValue STAR-34
135:	ListElementValue -> Expression
136:	ListElementValue -> '@{' Variable '}'
137:	ListElementValue -> KEYS_OR_VALUES '%{' Variable '}'
138:	PAREN-35 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW HashEntryValue
139:	STAR-36 -> STAR-36 PAREN-35
140:	STAR-36 -> /* empty */
141:	HashEntries -> WORD OP20_HASH_FATARROW HashEntryValue STAR-36
142:	HashEntryValue -> Expression
143:	HashEntryValue -> '%{' Variable '}'
144:	PLUS-37 -> PLUS-37 WordScoped
145:	PLUS-37 -> WordScoped
146:	STAR-38 -> STAR-38 Method
147:	STAR-38 -> /* empty */
148:	PLUS-39 -> PLUS-39 Subroutine
149:	PLUS-39 -> Subroutine
150:	PAREN-40 -> PLUS-39 '1;'
151:	OPTIONAL-41 -> PAREN-40
152:	OPTIONAL-41 -> /* empty */
153:	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-37 ');' Properties STAR-38 '1;' OPTIONAL-41
154:	OPTIONAL-42 -> HashEntries
155:	OPTIONAL-42 -> /* empty */
156:	Properties -> 'our %properties = (' OPTIONAL-42 ');'
157:	OPTIONAL-43 -> MethodArguments
158:	OPTIONAL-43 -> /* empty */
159:	PLUS-44 -> PLUS-44 Operation
160:	PLUS-44 -> Operation
161:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-43 PLUS-44 '};'
162:	PAREN-45 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
163:	STAR-46 -> STAR-46 PAREN-45
164:	STAR-46 -> /* empty */
165:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-46 ') = @_;'
166:	PAREN-47 -> '::' WORD
167:	STAR-48 -> STAR-48 PAREN-47
168:	STAR-48 -> /* empty */
169:	WordScoped -> WORD STAR-48
170:	FileHandle -> '{*' WORD '}'
171:	Type -> WORD
172:	LoopLabel -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 2
	SHEBANG	shift, and go to state 6

	Package	go to state 7
	CompileUnit	go to state 8
	Module	go to state 4
	Program	go to state 1
	Class	go to state 5
	PLUS-1	go to state 3

State 1:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 2:

	Package -> 'package' . WordScoped ';' Header PLUS-4 '1;'	(Rule 14)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' PLUS-37 ');' Properties STAR-38 '1;' OPTIONAL-41	(Rule 153)

	WORD	shift, and go to state 10

	WordScoped	go to state 9

State 3:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 2

	$end	reduce using rule 4 (CompileUnit)

	Module	go to state 11
	Package	go to state 7
	Class	go to state 5

State 4:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 5:

	Module -> Class .	(Rule 11)

	$default	reduce using rule 11 (Module)

State 6:

	Program -> SHEBANG . Header STAR-2 PLUS-3	(Rule 9)

	'use strict;'	shift, and go to state 13

	Header	go to state 12

State 7:

	Module -> Package .	(Rule 10)

	$default	reduce using rule 10 (Module)

State 8:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 14

State 9:

	Package -> 'package' WordScoped . ';' Header PLUS-4 '1;'	(Rule 14)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' PLUS-37 ');' Properties STAR-38 '1;' OPTIONAL-41	(Rule 153)

	';'	shift, and go to state 15

State 10:

	WordScoped -> WORD . STAR-48	(Rule 169)

	$default	reduce using rule 168 (STAR-48)

	STAR-48	go to state 16

State 11:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 12:

	Program -> SHEBANG Header . STAR-2 PLUS-3	(Rule 9)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 17

State 13:

	Header -> 'use strict;' . 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' STAR-5 STAR-6	(Rule 19)

	'use warnings;'	shift, and go to state 18

State 14:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 15:

	Package -> 'package' WordScoped ';' . Header PLUS-4 '1;'	(Rule 14)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' PLUS-37 ');' Properties STAR-38 '1;' OPTIONAL-41	(Rule 153)

	'use strict;'	shift, and go to state 13

	Header	go to state 19

State 16:

	STAR-48 -> STAR-48 . PAREN-47	(Rule 167)
	WordScoped -> WORD STAR-48 .	(Rule 169)

	'::'	shift, and go to state 20

	'('	reduce using rule 169 (WordScoped)
	');'	reduce using rule 169 (WordScoped)
	';'	reduce using rule 169 (WordScoped)
	'qw('	reduce using rule 169 (WordScoped)
	WORD	reduce using rule 169 (WordScoped)

	PAREN-47	go to state 21

State 17:

	STAR-2 -> STAR-2 . Subroutine	(Rule 5)
	Program -> SHEBANG Header STAR-2 . PLUS-3	(Rule 9)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'if ('	shift, and go to state 46
	'my'	shift, and go to state 53
	'our'	shift, and go to state 48
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 50
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP19_LOOP_CONTROL	shift, and go to state 34
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 45

	'for my integer'	reduce using rule 101 (OPTIONAL-26)
	'foreach my'	reduce using rule 101 (OPTIONAL-26)
	'while ('	reduce using rule 101 (OPTIONAL-26)

	Variable	go to state 41
	WordScoped	go to state 39
	Operation	go to state 40
	OPTIONAL-26	go to state 26
	VariableModification	go to state 51
	Statement	go to state 44
	Subroutine	go to state 23
	LoopLabel	go to state 25
	Conditional	go to state 24
	OperatorVoid	go to state 37
	Expression	go to state 27
	Operator	go to state 28
	VariableDeclaration	go to state 47
	PAREN-25	go to state 49
	PLUS-3	go to state 38

State 18:

	Header -> 'use strict;' 'use warnings;' . 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' STAR-5 STAR-6	(Rule 19)

	'our $VERSION ='	shift, and go to state 54

State 19:

	Package -> 'package' WordScoped ';' Header . PLUS-4 '1;'	(Rule 14)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' PLUS-37 ');' Properties STAR-38 '1;' OPTIONAL-41	(Rule 153)

	'our'	shift, and go to state 48
	'use parent qw('	shift, and go to state 55

	PLUS-4	go to state 57
	Subroutine	go to state 56

State 20:

	PAREN-47 -> '::' . WORD	(Rule 166)

	WORD	shift, and go to state 58

State 21:

	STAR-48 -> STAR-48 PAREN-47 .	(Rule 167)

	$default	reduce using rule 167 (STAR-48)

State 22:

	Expression -> '[' . OPTIONAL-21 ']'	(Rule 93)

	'('	shift, and go to state 32
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	']'	reduce using rule 84 (OPTIONAL-21)

	ListElementValue	go to state 64
	OPTIONAL-21	go to state 65
	Variable	go to state 63
	ListElements	go to state 62
	Operator	go to state 28
	Expression	go to state 59
	WordScoped	go to state 39

State 23:

	STAR-2 -> STAR-2 Subroutine .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 24:

	Statement -> Conditional .	(Rule 102)

	$default	reduce using rule 102 (Statement)

State 25:

	PAREN-25 -> LoopLabel . ':'	(Rule 99)

	':'	shift, and go to state 66

State 26:

	Statement -> OPTIONAL-26 . Loop	(Rule 103)

	'for my integer'	shift, and go to state 67
	'foreach my'	shift, and go to state 72
	'while ('	shift, and go to state 70

	LoopWhile	go to state 73
	Loop	go to state 69
	LoopForEach	go to state 68
	LoopFor	go to state 71

State 27:

	Operation -> Expression . ';'	(Rule 43)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	';'	shift, and go to state 75
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 28:

	Expression -> Operator .	(Rule 95)

	$default	reduce using rule 95 (Expression)

State 29:

	Operator -> OP05_MATH_NEG . Expression	(Rule 52)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Operator	go to state 28
	WordScoped	go to state 39
	Expression	go to state 91
	Variable	go to state 63

State 30:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 51)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	Operator	go to state 28
	WordScoped	go to state 39
	Expression	go to state 92

State 31:

	Expression -> LITERAL .	(Rule 91)

	$default	reduce using rule 91 (Expression)

State 32:

	Expression -> '(' . Expression ')'	(Rule 98)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Expression	go to state 93
	WordScoped	go to state 39
	Operator	go to state 28
	Variable	go to state 63

State 33:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 67)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	WordScoped	go to state 39
	Expression	go to state 94
	Operator	go to state 28

State 34:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 82)

	WORD	shift, and go to state 95

	LoopLabel	go to state 96

State 35:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 58)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	Operator	go to state 28
	Expression	go to state 97
	WordScoped	go to state 39

State 36:

	Expression -> '{' . OPTIONAL-22 '}'	(Rule 94)

	WORD	shift, and go to state 99

	'}'	reduce using rule 86 (OPTIONAL-22)

	OPTIONAL-22	go to state 100
	HashEntries	go to state 98

State 37:

	Statement -> OperatorVoid .	(Rule 104)

	$default	reduce using rule 104 (Statement)

State 38:

	PLUS-3 -> PLUS-3 . Operation	(Rule 7)
	Program -> SHEBANG Header STAR-2 PLUS-3 .	(Rule 9)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'if ('	shift, and go to state 46
	'my'	shift, and go to state 53
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 50
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP19_LOOP_CONTROL	shift, and go to state 34
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 45

	$end	reduce using rule 9 (Program)
	'for my integer'	reduce using rule 101 (OPTIONAL-26)
	'foreach my'	reduce using rule 101 (OPTIONAL-26)
	'while ('	reduce using rule 101 (OPTIONAL-26)

	VariableDeclaration	go to state 47
	PAREN-25	go to state 49
	OperatorVoid	go to state 37
	Expression	go to state 27
	Operator	go to state 28
	VariableModification	go to state 51
	OPTIONAL-26	go to state 26
	Statement	go to state 44
	LoopLabel	go to state 25
	Conditional	go to state 24
	Variable	go to state 41
	WordScoped	go to state 39
	Operation	go to state 101

State 39:

	Expression -> WordScoped . '(' OPTIONAL-23 ')'	(Rule 96)

	'('	shift, and go to state 102

State 40:

	PLUS-3 -> Operation .	(Rule 8)

	$default	reduce using rule 8 (PLUS-3)

State 41:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 49)
	Expression -> Variable .	(Rule 92)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-24 ')'	(Rule 97)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 130)

	OP02_METHOD_THINARROW	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 104
	OP19_VARIABLE_ASSIGN	shift, and go to state 103

	';'	reduce using rule 92 (Expression)
	OP04_MATH_POW	reduce using rule 92 (Expression)
	OP06_REGEX_MATCH	reduce using rule 92 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Expression)
	OP08_STRING_CAT	reduce using rule 92 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 92 (Expression)
	OP13_BITWISE_AND	reduce using rule 92 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Expression)
	OP15_LOGICAL_AND	reduce using rule 92 (Expression)
	OP16_LOGICAL_OR	reduce using rule 92 (Expression)
	OP17_LIST_RANGE	reduce using rule 92 (Expression)
	OP18_TERNARY	reduce using rule 92 (Expression)
	OP23_LOGICAL_AND	reduce using rule 92 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Expression)

State 42:

	Operator -> OP01_NAMED . '(' OPTIONAL-16 ')'	(Rule 47)

	'('	shift, and go to state 106

State 43:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 48)

	VARIABLE_SYMBOL	shift, and go to state 52

	Variable	go to state 107

State 44:

	Operation -> Statement .	(Rule 44)

	$default	reduce using rule 44 (Operation)

State 45:

	WordScoped -> WORD . STAR-48	(Rule 169)
	LoopLabel -> WORD .	(Rule 172)

	'('	reduce using rule 168 (STAR-48)
	':'	reduce using rule 172 (LoopLabel)
	'::'	reduce using rule 168 (STAR-48)

	STAR-48	go to state 16

State 46:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-28 OPTIONAL-30	(Rule 113)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Expression	go to state 108
	WordScoped	go to state 39
	Operator	go to state 28
	Variable	go to state 63

State 47:

	Statement -> VariableDeclaration .	(Rule 105)

	$default	reduce using rule 105 (Statement)

State 48:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-12 PLUS-13 '};'	(Rule 38)

	WORD	shift, and go to state 109

	Type	go to state 110

State 49:

	OPTIONAL-26 -> PAREN-25 .	(Rule 100)

	$default	reduce using rule 100 (OPTIONAL-26)

State 50:

	OperatorVoid -> OP01_NAMED_VOID . '(' OPTIONAL-17 ');'	(Rule 78)
	OperatorVoid -> OP01_NAMED_VOID . '(' FileHandle OPTIONAL-18 ');'	(Rule 79)
	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-19 ';'	(Rule 80)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-20 ';'	(Rule 81)

	'('	shift, and go to state 115
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	'{*'	shift, and go to state 113
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	';'	reduce using rule 75 (OPTIONAL-19)

	ListElementValue	go to state 64
	ListElements	go to state 112
	Variable	go to state 63
	WordScoped	go to state 39
	FileHandle	go to state 111
	OPTIONAL-19	go to state 114
	Expression	go to state 59
	Operator	go to state 28

State 51:

	Statement -> VariableModification .	(Rule 106)

	$default	reduce using rule 106 (Statement)

State 52:

	Variable -> VARIABLE_SYMBOL . STAR-32	(Rule 125)

	$default	reduce using rule 124 (STAR-32)

	STAR-32	go to state 116

State 53:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 128)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 129)

	WORD	shift, and go to state 109

	Type	go to state 117

State 54:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' . VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' STAR-5 STAR-6	(Rule 19)

	VERSION_NUMBER	shift, and go to state 118

State 55:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . PLUS-37 ');' Properties STAR-38 '1;' OPTIONAL-41	(Rule 153)

	WORD	shift, and go to state 10

	PLUS-37	go to state 119
	WordScoped	go to state 120

State 56:

	PLUS-4 -> Subroutine .	(Rule 13)

	$default	reduce using rule 13 (PLUS-4)

State 57:

	PLUS-4 -> PLUS-4 . Subroutine	(Rule 12)
	Package -> 'package' WordScoped ';' Header PLUS-4 . '1;'	(Rule 14)

	'1;'	shift, and go to state 122
	'our'	shift, and go to state 48

	Subroutine	go to state 121

State 58:

	PAREN-47 -> '::' WORD .	(Rule 166)

	$default	reduce using rule 166 (PAREN-47)

State 59:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	ListElementValue -> Expression .	(Rule 135)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

	')'	reduce using rule 135 (ListElementValue)
	');'	reduce using rule 135 (ListElementValue)
	';'	reduce using rule 135 (ListElementValue)
	']'	reduce using rule 135 (ListElementValue)
	OP21_LIST_COMMA	reduce using rule 135 (ListElementValue)

State 60:

	ListElementValue -> KEYS_OR_VALUES . '%{' Variable '}'	(Rule 137)

	'%{'	shift, and go to state 123

State 61:

	ListElementValue -> '@{' . Variable '}'	(Rule 136)

	VARIABLE_SYMBOL	shift, and go to state 52

	Variable	go to state 124

State 62:

	OPTIONAL-21 -> ListElements .	(Rule 83)

	$default	reduce using rule 83 (OPTIONAL-21)

State 63:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 49)
	Expression -> Variable .	(Rule 92)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-24 ')'	(Rule 97)

	OP02_METHOD_THINARROW	shift, and go to state 105
	OP03_MATH_INC_DEC	shift, and go to state 104

	')'	reduce using rule 92 (Expression)
	');'	reduce using rule 92 (Expression)
	'..'	reduce using rule 92 (Expression)
	';'	reduce using rule 92 (Expression)
	']'	reduce using rule 92 (Expression)
	'}'	reduce using rule 92 (Expression)
	OP04_MATH_POW	reduce using rule 92 (Expression)
	OP06_REGEX_MATCH	reduce using rule 92 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 92 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 92 (Expression)
	OP08_STRING_CAT	reduce using rule 92 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 92 (Expression)
	OP13_BITWISE_AND	reduce using rule 92 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Expression)
	OP15_LOGICAL_AND	reduce using rule 92 (Expression)
	OP16_LOGICAL_OR	reduce using rule 92 (Expression)
	OP17_LIST_RANGE	reduce using rule 92 (Expression)
	OP18_TERNARY	reduce using rule 92 (Expression)
	OP21_LIST_COMMA	reduce using rule 92 (Expression)
	OP23_LOGICAL_AND	reduce using rule 92 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Expression)

State 64:

	ListElements -> ListElementValue . STAR-34	(Rule 134)

	$default	reduce using rule 133 (STAR-34)

	STAR-34	go to state 125

State 65:

	Expression -> '[' OPTIONAL-21 . ']'	(Rule 93)

	']'	shift, and go to state 126

State 66:

	PAREN-25 -> LoopLabel ':' .	(Rule 99)

	$default	reduce using rule 99 (PAREN-25)

State 67:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 117)

	VARIABLE_SYMBOL	shift, and go to state 127

State 68:

	Loop -> LoopForEach .	(Rule 115)

	$default	reduce using rule 115 (Loop)

State 69:

	Statement -> OPTIONAL-26 Loop .	(Rule 103)

	$default	reduce using rule 103 (Statement)

State 70:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 119)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	WordScoped	go to state 39
	Expression	go to state 128
	Operator	go to state 28

State 71:

	Loop -> LoopFor .	(Rule 114)

	$default	reduce using rule 114 (Loop)

State 72:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 118)

	WORD	shift, and go to state 109

	Type	go to state 129

State 73:

	Loop -> LoopWhile .	(Rule 116)

	$default	reduce using rule 116 (Loop)

State 74:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 60)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	Operator	go to state 28
	Expression	go to state 130
	WordScoped	go to state 39

State 75:

	Operation -> Expression ';' .	(Rule 43)

	$default	reduce using rule 43 (Operation)

State 76:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 61)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Expression	go to state 131
	WordScoped	go to state 39
	Operator	go to state 28
	Variable	go to state 63

State 77:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 64)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	Operator	go to state 28
	Expression	go to state 132
	WordScoped	go to state 39

State 78:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 53)

	'/'	shift, and go to state 133

State 79:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 59)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	WordScoped	go to state 39
	Expression	go to state 134
	Operator	go to state 28

State 80:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 63)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	Operator	go to state 28
	WordScoped	go to state 39
	Expression	go to state 135

State 81:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 55)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Operator	go to state 28
	WordScoped	go to state 39
	Expression	go to state 136
	Variable	go to state 63

State 82:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 50)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Expression	go to state 137
	WordScoped	go to state 39
	Operator	go to state 28
	Variable	go to state 63

State 83:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 62)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Operator	go to state 28
	Expression	go to state 138
	WordScoped	go to state 39
	Variable	go to state 63

State 84:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 68)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	Operator	go to state 28
	Expression	go to state 139
	WordScoped	go to state 39

State 85:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 65)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Expression	go to state 140
	WordScoped	go to state 39
	Operator	go to state 28
	Variable	go to state 63

State 86:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 54)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Operator	go to state 28
	Expression	go to state 141
	WordScoped	go to state 39
	Variable	go to state 63

State 87:

	Operator -> Expression OP18_TERNARY . Variable ':' Variable	(Rule 66)

	VARIABLE_SYMBOL	shift, and go to state 52

	Variable	go to state 142

State 88:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 69)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	WordScoped	go to state 39
	Expression	go to state 143
	Operator	go to state 28
	Variable	go to state 63

State 89:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 56)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	WordScoped	go to state 39
	Expression	go to state 144
	Operator	go to state 28

State 90:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 57)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	WordScoped	go to state 39
	Expression	go to state 145
	Operator	go to state 28

State 91:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> OP05_MATH_NEG Expression .	(Rule 52)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82

	')'	reduce using rule 52 (Operator)
	');'	reduce using rule 52 (Operator)
	'..'	reduce using rule 52 (Operator)
	';'	reduce using rule 52 (Operator)
	']'	reduce using rule 52 (Operator)
	'}'	reduce using rule 52 (Operator)
	OP06_REGEX_MATCH	reduce using rule 52 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 52 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 52 (Operator)
	OP08_STRING_CAT	reduce using rule 52 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 52 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 52 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 52 (Operator)
	OP13_BITWISE_AND	reduce using rule 52 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 52 (Operator)
	OP15_LOGICAL_AND	reduce using rule 52 (Operator)
	OP16_LOGICAL_OR	reduce using rule 52 (Operator)
	OP17_LIST_RANGE	reduce using rule 52 (Operator)
	OP18_TERNARY	reduce using rule 52 (Operator)
	OP21_LIST_COMMA	reduce using rule 52 (Operator)
	OP23_LOGICAL_AND	reduce using rule 52 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 52 (Operator)

State 92:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 51)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82

	')'	reduce using rule 51 (Operator)
	');'	reduce using rule 51 (Operator)
	'..'	reduce using rule 51 (Operator)
	';'	reduce using rule 51 (Operator)
	']'	reduce using rule 51 (Operator)
	'}'	reduce using rule 51 (Operator)
	OP06_REGEX_MATCH	reduce using rule 51 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 51 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 51 (Operator)
	OP08_STRING_CAT	reduce using rule 51 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 51 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 51 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 51 (Operator)
	OP13_BITWISE_AND	reduce using rule 51 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 51 (Operator)
	OP15_LOGICAL_AND	reduce using rule 51 (Operator)
	OP16_LOGICAL_OR	reduce using rule 51 (Operator)
	OP17_LIST_RANGE	reduce using rule 51 (Operator)
	OP18_TERNARY	reduce using rule 51 (Operator)
	OP21_LIST_COMMA	reduce using rule 51 (Operator)
	OP23_LOGICAL_AND	reduce using rule 51 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 51 (Operator)

State 93:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	Expression -> '(' Expression . ')'	(Rule 98)

	')'	shift, and go to state 146
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 94:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 67)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87

	')'	reduce using rule 67 (Operator)
	');'	reduce using rule 67 (Operator)
	'..'	reduce using rule 67 (Operator)
	';'	reduce using rule 67 (Operator)
	']'	reduce using rule 67 (Operator)
	'}'	reduce using rule 67 (Operator)
	OP21_LIST_COMMA	reduce using rule 67 (Operator)
	OP23_LOGICAL_AND	reduce using rule 67 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 67 (Operator)

State 95:

	LoopLabel -> WORD .	(Rule 172)

	$default	reduce using rule 172 (LoopLabel)

State 96:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 82)

	';'	shift, and go to state 147

State 97:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 58)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90

	')'	reduce using rule 58 (Operator)
	');'	reduce using rule 58 (Operator)
	'..'	reduce using rule 58 (Operator)
	';'	reduce using rule 58 (Operator)
	']'	reduce using rule 58 (Operator)
	'}'	reduce using rule 58 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 58 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 58 (Operator)
	OP13_BITWISE_AND	reduce using rule 58 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 58 (Operator)
	OP15_LOGICAL_AND	reduce using rule 58 (Operator)
	OP16_LOGICAL_OR	reduce using rule 58 (Operator)
	OP17_LIST_RANGE	reduce using rule 58 (Operator)
	OP18_TERNARY	reduce using rule 58 (Operator)
	OP21_LIST_COMMA	reduce using rule 58 (Operator)
	OP23_LOGICAL_AND	reduce using rule 58 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 58 (Operator)

State 98:

	OPTIONAL-22 -> HashEntries .	(Rule 85)

	$default	reduce using rule 85 (OPTIONAL-22)

State 99:

	HashEntries -> WORD . OP20_HASH_FATARROW HashEntryValue STAR-36	(Rule 141)

	OP20_HASH_FATARROW	shift, and go to state 148

State 100:

	Expression -> '{' OPTIONAL-22 . '}'	(Rule 94)

	'}'	shift, and go to state 149

State 101:

	PLUS-3 -> PLUS-3 Operation .	(Rule 7)

	$default	reduce using rule 7 (PLUS-3)

State 102:

	Expression -> WordScoped '(' . OPTIONAL-23 ')'	(Rule 96)

	'('	shift, and go to state 32
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	')'	reduce using rule 88 (OPTIONAL-23)

	OPTIONAL-23	go to state 150
	ListElementValue	go to state 64
	WordScoped	go to state 39
	Expression	go to state 59
	Operator	go to state 28
	ListElements	go to state 151
	Variable	go to state 63

State 103:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 130)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	Operator	go to state 28
	WordScoped	go to state 39
	Expression	go to state 152

State 104:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 49)

	$default	reduce using rule 49 (Operator)

State 105:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-24 ')'	(Rule 97)

	WORD	shift, and go to state 153

State 106:

	Operator -> OP01_NAMED '(' . OPTIONAL-16 ')'	(Rule 47)

	'('	shift, and go to state 32
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	')'	reduce using rule 46 (OPTIONAL-16)

	ListElements	go to state 154
	OPTIONAL-16	go to state 155
	Variable	go to state 63
	Expression	go to state 59
	WordScoped	go to state 39
	Operator	go to state 28
	ListElementValue	go to state 64

State 107:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 48)

	$default	reduce using rule 48 (Operator)

State 108:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-28 OPTIONAL-30	(Rule 113)

	')'	shift, and go to state 156
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 109:

	Type -> WORD .	(Rule 171)

	$default	reduce using rule 171 (Type)

State 110:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-12 PLUS-13 '};'	(Rule 38)

	VARIABLE_SYMBOL	shift, and go to state 157

State 111:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-20 ';'	(Rule 81)

	'('	shift, and go to state 32
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	';'	reduce using rule 77 (OPTIONAL-20)

	ListElements	go to state 159
	Variable	go to state 63
	Expression	go to state 59
	WordScoped	go to state 39
	Operator	go to state 28
	ListElementValue	go to state 64
	OPTIONAL-20	go to state 158

State 112:

	OPTIONAL-19 -> ListElements .	(Rule 74)

	$default	reduce using rule 74 (OPTIONAL-19)

State 113:

	FileHandle -> '{*' . WORD '}'	(Rule 170)

	WORD	shift, and go to state 160

State 114:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-19 . ';'	(Rule 80)

	';'	shift, and go to state 161

State 115:

	OperatorVoid -> OP01_NAMED_VOID '(' . OPTIONAL-17 ');'	(Rule 78)
	OperatorVoid -> OP01_NAMED_VOID '(' . FileHandle OPTIONAL-18 ');'	(Rule 79)
	Expression -> '(' . Expression ')'	(Rule 98)

	'('	shift, and go to state 32
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	'{*'	shift, and go to state 113
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	');'	reduce using rule 71 (OPTIONAL-17)

	ListElementValue	go to state 64
	ListElements	go to state 164
	Variable	go to state 63
	WordScoped	go to state 39
	FileHandle	go to state 165
	OPTIONAL-17	go to state 163
	Expression	go to state 162
	Operator	go to state 28

State 116:

	STAR-32 -> STAR-32 . VariableRetrieval	(Rule 123)
	Variable -> VARIABLE_SYMBOL STAR-32 .	(Rule 125)

	OP02_ARRAY_THINARROW	shift, and go to state 168
	OP02_HASH_THINARROW	shift, and go to state 167

	')'	reduce using rule 125 (Variable)
	');'	reduce using rule 125 (Variable)
	'..'	reduce using rule 125 (Variable)
	':'	reduce using rule 125 (Variable)
	';'	reduce using rule 125 (Variable)
	']'	reduce using rule 125 (Variable)
	'}'	reduce using rule 125 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 125 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 125 (Variable)
	OP04_MATH_POW	reduce using rule 125 (Variable)
	OP06_REGEX_MATCH	reduce using rule 125 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 125 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 125 (Variable)
	OP08_STRING_CAT	reduce using rule 125 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 125 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 125 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 125 (Variable)
	OP13_BITWISE_AND	reduce using rule 125 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 125 (Variable)
	OP15_LOGICAL_AND	reduce using rule 125 (Variable)
	OP16_LOGICAL_OR	reduce using rule 125 (Variable)
	OP17_LIST_RANGE	reduce using rule 125 (Variable)
	OP18_TERNARY	reduce using rule 125 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 125 (Variable)
	OP21_LIST_COMMA	reduce using rule 125 (Variable)
	OP23_LOGICAL_AND	reduce using rule 125 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (Variable)

	VariableRetrieval	go to state 166

State 117:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 128)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 129)

	VARIABLE_SYMBOL	shift, and go to state 169

State 118:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER . ';' 'use Carp;' 'use RPerl;' STAR-5 STAR-6	(Rule 19)

	';'	shift, and go to state 170

State 119:

	PLUS-37 -> PLUS-37 . WordScoped	(Rule 144)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-37 . ');' Properties STAR-38 '1;' OPTIONAL-41	(Rule 153)

	');'	shift, and go to state 171
	WORD	shift, and go to state 10

	WordScoped	go to state 172

State 120:

	PLUS-37 -> WordScoped .	(Rule 145)

	$default	reduce using rule 145 (PLUS-37)

State 121:

	PLUS-4 -> PLUS-4 Subroutine .	(Rule 12)

	$default	reduce using rule 12 (PLUS-4)

State 122:

	Package -> 'package' WordScoped ';' Header PLUS-4 '1;' .	(Rule 14)

	$default	reduce using rule 14 (Package)

State 123:

	ListElementValue -> KEYS_OR_VALUES '%{' . Variable '}'	(Rule 137)

	VARIABLE_SYMBOL	shift, and go to state 52

	Variable	go to state 173

State 124:

	ListElementValue -> '@{' Variable . '}'	(Rule 136)

	'}'	shift, and go to state 174

State 125:

	STAR-34 -> STAR-34 . PAREN-33	(Rule 132)
	ListElements -> ListElementValue STAR-34 .	(Rule 134)

	OP21_LIST_COMMA	shift, and go to state 175

	')'	reduce using rule 134 (ListElements)
	');'	reduce using rule 134 (ListElements)
	';'	reduce using rule 134 (ListElements)
	']'	reduce using rule 134 (ListElements)

	PAREN-33	go to state 176

State 126:

	Expression -> '[' OPTIONAL-21 ']' .	(Rule 93)

	$default	reduce using rule 93 (Expression)

State 127:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 117)

	'('	shift, and go to state 177

State 128:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 119)

	')'	shift, and go to state 178
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 129:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 118)

	VARIABLE_SYMBOL	shift, and go to state 179

State 130:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 60 (Operator)
	');'	reduce using rule 60 (Operator)
	'..'	reduce using rule 60 (Operator)
	';'	reduce using rule 60 (Operator)
	']'	reduce using rule 60 (Operator)
	'}'	reduce using rule 60 (Operator)
	OP13_BITWISE_AND	reduce using rule 60 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 60 (Operator)
	OP15_LOGICAL_AND	reduce using rule 60 (Operator)
	OP16_LOGICAL_OR	reduce using rule 60 (Operator)
	OP17_LIST_RANGE	reduce using rule 60 (Operator)
	OP18_TERNARY	reduce using rule 60 (Operator)
	OP21_LIST_COMMA	reduce using rule 60 (Operator)
	OP23_LOGICAL_AND	reduce using rule 60 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 60 (Operator)

State 131:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74

	')'	reduce using rule 61 (Operator)
	');'	reduce using rule 61 (Operator)
	'..'	reduce using rule 61 (Operator)
	';'	reduce using rule 61 (Operator)
	']'	reduce using rule 61 (Operator)
	'}'	reduce using rule 61 (Operator)
	OP13_BITWISE_AND	reduce using rule 61 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 61 (Operator)
	OP15_LOGICAL_AND	reduce using rule 61 (Operator)
	OP16_LOGICAL_OR	reduce using rule 61 (Operator)
	OP17_LIST_RANGE	reduce using rule 61 (Operator)
	OP18_TERNARY	reduce using rule 61 (Operator)
	OP21_LIST_COMMA	reduce using rule 61 (Operator)
	OP23_LOGICAL_AND	reduce using rule 61 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 61 (Operator)

State 132:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80

	')'	reduce using rule 64 (Operator)
	');'	reduce using rule 64 (Operator)
	'..'	reduce using rule 64 (Operator)
	';'	reduce using rule 64 (Operator)
	']'	reduce using rule 64 (Operator)
	'}'	reduce using rule 64 (Operator)
	OP16_LOGICAL_OR	reduce using rule 64 (Operator)
	OP17_LIST_RANGE	reduce using rule 64 (Operator)
	OP18_TERNARY	reduce using rule 64 (Operator)
	OP21_LIST_COMMA	reduce using rule 64 (Operator)
	OP23_LOGICAL_AND	reduce using rule 64 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 64 (Operator)

State 133:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 53)

	OP06_REGEX_PATTERN	shift, and go to state 180

State 134:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 59 (Operator)
	');'	reduce using rule 59 (Operator)
	'..'	reduce using rule 59 (Operator)
	';'	reduce using rule 59 (Operator)
	']'	reduce using rule 59 (Operator)
	'}'	reduce using rule 59 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 59 (Operator)
	OP13_BITWISE_AND	reduce using rule 59 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 59 (Operator)
	OP15_LOGICAL_AND	reduce using rule 59 (Operator)
	OP16_LOGICAL_OR	reduce using rule 59 (Operator)
	OP17_LIST_RANGE	reduce using rule 59 (Operator)
	OP18_TERNARY	reduce using rule 59 (Operator)
	OP21_LIST_COMMA	reduce using rule 59 (Operator)
	OP23_LOGICAL_AND	reduce using rule 59 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 59 (Operator)

State 135:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83

	')'	reduce using rule 63 (Operator)
	');'	reduce using rule 63 (Operator)
	'..'	reduce using rule 63 (Operator)
	';'	reduce using rule 63 (Operator)
	']'	reduce using rule 63 (Operator)
	'}'	reduce using rule 63 (Operator)
	OP15_LOGICAL_AND	reduce using rule 63 (Operator)
	OP16_LOGICAL_OR	reduce using rule 63 (Operator)
	OP17_LIST_RANGE	reduce using rule 63 (Operator)
	OP18_TERNARY	reduce using rule 63 (Operator)
	OP21_LIST_COMMA	reduce using rule 63 (Operator)
	OP23_LOGICAL_AND	reduce using rule 63 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 63 (Operator)

State 136:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86

	')'	reduce using rule 55 (Operator)
	');'	reduce using rule 55 (Operator)
	'..'	reduce using rule 55 (Operator)
	';'	reduce using rule 55 (Operator)
	']'	reduce using rule 55 (Operator)
	'}'	reduce using rule 55 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 55 (Operator)
	OP08_STRING_CAT	reduce using rule 55 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 55 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 55 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 55 (Operator)
	OP13_BITWISE_AND	reduce using rule 55 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 55 (Operator)
	OP15_LOGICAL_AND	reduce using rule 55 (Operator)
	OP16_LOGICAL_OR	reduce using rule 55 (Operator)
	OP17_LIST_RANGE	reduce using rule 55 (Operator)
	OP18_TERNARY	reduce using rule 55 (Operator)
	OP21_LIST_COMMA	reduce using rule 55 (Operator)
	OP23_LOGICAL_AND	reduce using rule 55 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 55 (Operator)

State 137:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82

	')'	reduce using rule 50 (Operator)
	');'	reduce using rule 50 (Operator)
	'..'	reduce using rule 50 (Operator)
	';'	reduce using rule 50 (Operator)
	']'	reduce using rule 50 (Operator)
	'}'	reduce using rule 50 (Operator)
	OP06_REGEX_MATCH	reduce using rule 50 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 50 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 50 (Operator)
	OP08_STRING_CAT	reduce using rule 50 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 50 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 50 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 50 (Operator)
	OP13_BITWISE_AND	reduce using rule 50 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 50 (Operator)
	OP15_LOGICAL_AND	reduce using rule 50 (Operator)
	OP16_LOGICAL_OR	reduce using rule 50 (Operator)
	OP17_LIST_RANGE	reduce using rule 50 (Operator)
	OP18_TERNARY	reduce using rule 50 (Operator)
	OP21_LIST_COMMA	reduce using rule 50 (Operator)
	OP23_LOGICAL_AND	reduce using rule 50 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 50 (Operator)

State 138:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76

	')'	reduce using rule 62 (Operator)
	');'	reduce using rule 62 (Operator)
	'..'	reduce using rule 62 (Operator)
	';'	reduce using rule 62 (Operator)
	']'	reduce using rule 62 (Operator)
	'}'	reduce using rule 62 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 62 (Operator)
	OP15_LOGICAL_AND	reduce using rule 62 (Operator)
	OP16_LOGICAL_OR	reduce using rule 62 (Operator)
	OP17_LIST_RANGE	reduce using rule 62 (Operator)
	OP18_TERNARY	reduce using rule 62 (Operator)
	OP21_LIST_COMMA	reduce using rule 62 (Operator)
	OP23_LOGICAL_AND	reduce using rule 62 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 62 (Operator)

State 139:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87

	')'	reduce using rule 68 (Operator)
	');'	reduce using rule 68 (Operator)
	'..'	reduce using rule 68 (Operator)
	';'	reduce using rule 68 (Operator)
	']'	reduce using rule 68 (Operator)
	'}'	reduce using rule 68 (Operator)
	OP21_LIST_COMMA	reduce using rule 68 (Operator)
	OP23_LOGICAL_AND	reduce using rule 68 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 68 (Operator)

State 140:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 65 (Operator)
	');'	reduce using rule 65 (Operator)
	'..'	reduce using rule 65 (Operator)
	';'	reduce using rule 65 (Operator)
	']'	reduce using rule 65 (Operator)
	'}'	reduce using rule 65 (Operator)
	OP18_TERNARY	reduce using rule 65 (Operator)
	OP21_LIST_COMMA	reduce using rule 65 (Operator)
	OP23_LOGICAL_AND	reduce using rule 65 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 65 (Operator)

State 141:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78

	')'	reduce using rule 54 (Operator)
	');'	reduce using rule 54 (Operator)
	'..'	reduce using rule 54 (Operator)
	';'	reduce using rule 54 (Operator)
	']'	reduce using rule 54 (Operator)
	'}'	reduce using rule 54 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 54 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 54 (Operator)
	OP08_STRING_CAT	reduce using rule 54 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 54 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 54 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 54 (Operator)
	OP13_BITWISE_AND	reduce using rule 54 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 54 (Operator)
	OP15_LOGICAL_AND	reduce using rule 54 (Operator)
	OP16_LOGICAL_OR	reduce using rule 54 (Operator)
	OP17_LIST_RANGE	reduce using rule 54 (Operator)
	OP18_TERNARY	reduce using rule 54 (Operator)
	OP21_LIST_COMMA	reduce using rule 54 (Operator)
	OP23_LOGICAL_AND	reduce using rule 54 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 54 (Operator)

State 142:

	Operator -> Expression OP18_TERNARY Variable . ':' Variable	(Rule 66)

	':'	shift, and go to state 181

State 143:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84

	')'	reduce using rule 69 (Operator)
	');'	reduce using rule 69 (Operator)
	'..'	reduce using rule 69 (Operator)
	';'	reduce using rule 69 (Operator)
	']'	reduce using rule 69 (Operator)
	'}'	reduce using rule 69 (Operator)
	OP21_LIST_COMMA	reduce using rule 69 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 69 (Operator)

State 144:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81

	')'	reduce using rule 56 (Operator)
	');'	reduce using rule 56 (Operator)
	'..'	reduce using rule 56 (Operator)
	';'	reduce using rule 56 (Operator)
	']'	reduce using rule 56 (Operator)
	'}'	reduce using rule 56 (Operator)
	OP08_STRING_CAT	reduce using rule 56 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 56 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 56 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 56 (Operator)
	OP13_BITWISE_AND	reduce using rule 56 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 56 (Operator)
	OP15_LOGICAL_AND	reduce using rule 56 (Operator)
	OP16_LOGICAL_OR	reduce using rule 56 (Operator)
	OP17_LIST_RANGE	reduce using rule 56 (Operator)
	OP18_TERNARY	reduce using rule 56 (Operator)
	OP21_LIST_COMMA	reduce using rule 56 (Operator)
	OP23_LOGICAL_AND	reduce using rule 56 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 56 (Operator)

State 145:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89

	')'	reduce using rule 57 (Operator)
	');'	reduce using rule 57 (Operator)
	'..'	reduce using rule 57 (Operator)
	';'	reduce using rule 57 (Operator)
	']'	reduce using rule 57 (Operator)
	'}'	reduce using rule 57 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 57 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 57 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 57 (Operator)
	OP13_BITWISE_AND	reduce using rule 57 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 57 (Operator)
	OP15_LOGICAL_AND	reduce using rule 57 (Operator)
	OP16_LOGICAL_OR	reduce using rule 57 (Operator)
	OP17_LIST_RANGE	reduce using rule 57 (Operator)
	OP18_TERNARY	reduce using rule 57 (Operator)
	OP21_LIST_COMMA	reduce using rule 57 (Operator)
	OP23_LOGICAL_AND	reduce using rule 57 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 57 (Operator)

State 146:

	Expression -> '(' Expression ')' .	(Rule 98)

	$default	reduce using rule 98 (Expression)

State 147:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 82)

	$default	reduce using rule 82 (OperatorVoid)

State 148:

	HashEntries -> WORD OP20_HASH_FATARROW . HashEntryValue STAR-36	(Rule 141)

	'%{'	shift, and go to state 182
	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Operator	go to state 28
	WordScoped	go to state 39
	Expression	go to state 184
	Variable	go to state 63
	HashEntryValue	go to state 183

State 149:

	Expression -> '{' OPTIONAL-22 '}' .	(Rule 94)

	$default	reduce using rule 94 (Expression)

State 150:

	Expression -> WordScoped '(' OPTIONAL-23 . ')'	(Rule 96)

	')'	shift, and go to state 185

State 151:

	OPTIONAL-23 -> ListElements .	(Rule 87)

	$default	reduce using rule 87 (OPTIONAL-23)

State 152:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 130)

	';'	shift, and go to state 186
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 153:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-24 ')'	(Rule 97)

	'('	shift, and go to state 187

State 154:

	OPTIONAL-16 -> ListElements .	(Rule 45)

	$default	reduce using rule 45 (OPTIONAL-16)

State 155:

	Operator -> OP01_NAMED '(' OPTIONAL-16 . ')'	(Rule 47)

	')'	shift, and go to state 188

State 156:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-28 OPTIONAL-30	(Rule 113)

	'{'	shift, and go to state 189

	CodeBlock	go to state 190

State 157:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-12 PLUS-13 '};'	(Rule 38)

	'= sub {'	shift, and go to state 191

State 158:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-20 . ';'	(Rule 81)

	';'	shift, and go to state 192

State 159:

	OPTIONAL-20 -> ListElements .	(Rule 76)

	$default	reduce using rule 76 (OPTIONAL-20)

State 160:

	FileHandle -> '{*' WORD . '}'	(Rule 170)

	'}'	shift, and go to state 193

State 161:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-19 ';' .	(Rule 80)

	$default	reduce using rule 80 (OperatorVoid)

State 162:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	Expression -> '(' Expression . ')'	(Rule 98)
	ListElementValue -> Expression .	(Rule 135)

	')'	shift, and go to state 146
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

	');'	reduce using rule 135 (ListElementValue)
	OP21_LIST_COMMA	reduce using rule 135 (ListElementValue)

State 163:

	OperatorVoid -> OP01_NAMED_VOID '(' OPTIONAL-17 . ');'	(Rule 78)

	');'	shift, and go to state 194

State 164:

	OPTIONAL-17 -> ListElements .	(Rule 70)

	$default	reduce using rule 70 (OPTIONAL-17)

State 165:

	OperatorVoid -> OP01_NAMED_VOID '(' FileHandle . OPTIONAL-18 ');'	(Rule 79)

	'('	shift, and go to state 32
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	');'	reduce using rule 73 (OPTIONAL-18)

	ListElementValue	go to state 64
	OPTIONAL-18	go to state 196
	Variable	go to state 63
	ListElements	go to state 195
	Operator	go to state 28
	Expression	go to state 59
	WordScoped	go to state 39

State 166:

	STAR-32 -> STAR-32 VariableRetrieval .	(Rule 123)

	$default	reduce using rule 123 (STAR-32)

State 167:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 127)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	WordScoped	go to state 39
	Expression	go to state 197
	Operator	go to state 28

State 168:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 126)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	Expression	go to state 198
	WordScoped	go to state 39
	Operator	go to state 28

State 169:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 128)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 129)

	';'	shift, and go to state 199
	OP19_VARIABLE_ASSIGN	shift, and go to state 200

State 170:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' . 'use Carp;' 'use RPerl;' STAR-5 STAR-6	(Rule 19)

	'use Carp;'	shift, and go to state 201

State 171:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-37 ');' . Properties STAR-38 '1;' OPTIONAL-41	(Rule 153)

	'our %properties = ('	shift, and go to state 202

	Properties	go to state 203

State 172:

	PLUS-37 -> PLUS-37 WordScoped .	(Rule 144)

	$default	reduce using rule 144 (PLUS-37)

State 173:

	ListElementValue -> KEYS_OR_VALUES '%{' Variable . '}'	(Rule 137)

	'}'	shift, and go to state 204

State 174:

	ListElementValue -> '@{' Variable '}' .	(Rule 136)

	$default	reduce using rule 136 (ListElementValue)

State 175:

	PAREN-33 -> OP21_LIST_COMMA . ListElementValue	(Rule 131)

	'('	shift, and go to state 32
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	ListElementValue	go to state 205
	WordScoped	go to state 39
	Expression	go to state 59
	Operator	go to state 28
	Variable	go to state 63

State 176:

	STAR-34 -> STAR-34 PAREN-33 .	(Rule 132)

	$default	reduce using rule 132 (STAR-34)

State 177:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 117)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Expression	go to state 206
	WordScoped	go to state 39
	Operator	go to state 28
	Variable	go to state 63

State 178:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 119)

	'{'	shift, and go to state 189

	CodeBlock	go to state 207

State 179:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 118)

	'('	shift, and go to state 208

State 180:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 53)

	'/'	shift, and go to state 209

State 181:

	Operator -> Expression OP18_TERNARY Variable ':' . Variable	(Rule 66)

	VARIABLE_SYMBOL	shift, and go to state 52

	Variable	go to state 210

State 182:

	HashEntryValue -> '%{' . Variable '}'	(Rule 143)

	VARIABLE_SYMBOL	shift, and go to state 52

	Variable	go to state 211

State 183:

	HashEntries -> WORD OP20_HASH_FATARROW HashEntryValue . STAR-36	(Rule 141)

	$default	reduce using rule 140 (STAR-36)

	STAR-36	go to state 212

State 184:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	HashEntryValue -> Expression .	(Rule 142)

	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

	');'	reduce using rule 142 (HashEntryValue)
	'}'	reduce using rule 142 (HashEntryValue)
	OP21_LIST_COMMA	reduce using rule 142 (HashEntryValue)

State 185:

	Expression -> WordScoped '(' OPTIONAL-23 ')' .	(Rule 96)

	$default	reduce using rule 96 (Expression)

State 186:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 130)

	$default	reduce using rule 130 (VariableModification)

State 187:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-24 ')'	(Rule 97)

	'('	shift, and go to state 32
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	')'	reduce using rule 90 (OPTIONAL-24)

	Operator	go to state 28
	Expression	go to state 59
	WordScoped	go to state 39
	Variable	go to state 63
	ListElements	go to state 213
	OPTIONAL-24	go to state 214
	ListElementValue	go to state 64

State 188:

	Operator -> OP01_NAMED '(' OPTIONAL-16 ')' .	(Rule 47)

	$default	reduce using rule 47 (Operator)

State 189:

	CodeBlock -> '{' . PLUS-31 '}'	(Rule 122)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'if ('	shift, and go to state 46
	'my'	shift, and go to state 53
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 50
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP19_LOOP_CONTROL	shift, and go to state 34
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 45

	'for my integer'	reduce using rule 101 (OPTIONAL-26)
	'foreach my'	reduce using rule 101 (OPTIONAL-26)
	'while ('	reduce using rule 101 (OPTIONAL-26)

	VariableDeclaration	go to state 47
	PAREN-25	go to state 49
	OperatorVoid	go to state 37
	PLUS-31	go to state 215
	Expression	go to state 27
	Operator	go to state 28
	VariableModification	go to state 51
	Statement	go to state 44
	OPTIONAL-26	go to state 26
	Conditional	go to state 24
	LoopLabel	go to state 25
	Variable	go to state 41
	WordScoped	go to state 39
	Operation	go to state 216

State 190:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-28 OPTIONAL-30	(Rule 113)

	$default	reduce using rule 109 (STAR-28)

	STAR-28	go to state 217

State 191:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-12 PLUS-13 '};'	(Rule 38)

	'( my'	shift, and go to state 220

	'('	reduce using rule 35 (OPTIONAL-12)
	'['	reduce using rule 35 (OPTIONAL-12)
	'for my integer'	reduce using rule 35 (OPTIONAL-12)
	'foreach my'	reduce using rule 35 (OPTIONAL-12)
	'if ('	reduce using rule 35 (OPTIONAL-12)
	'my'	reduce using rule 35 (OPTIONAL-12)
	'while ('	reduce using rule 35 (OPTIONAL-12)
	'{'	reduce using rule 35 (OPTIONAL-12)
	LITERAL	reduce using rule 35 (OPTIONAL-12)
	OP01_NAMED	reduce using rule 35 (OPTIONAL-12)
	OP01_NAMED_VOID	reduce using rule 35 (OPTIONAL-12)
	OP03_MATH_INC_DEC	reduce using rule 35 (OPTIONAL-12)
	OP05_LOGICAL_NEG	reduce using rule 35 (OPTIONAL-12)
	OP05_MATH_NEG	reduce using rule 35 (OPTIONAL-12)
	OP10_NAMED_UNARY	reduce using rule 35 (OPTIONAL-12)
	OP19_LOOP_CONTROL	reduce using rule 35 (OPTIONAL-12)
	OP22_LOGICAL_NOT	reduce using rule 35 (OPTIONAL-12)
	VARIABLE_SYMBOL	reduce using rule 35 (OPTIONAL-12)
	WORD	reduce using rule 35 (OPTIONAL-12)

	SubroutineArguments	go to state 219
	OPTIONAL-12	go to state 218

State 192:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-20 ';' .	(Rule 81)

	$default	reduce using rule 81 (OperatorVoid)

State 193:

	FileHandle -> '{*' WORD '}' .	(Rule 170)

	$default	reduce using rule 170 (FileHandle)

State 194:

	OperatorVoid -> OP01_NAMED_VOID '(' OPTIONAL-17 ');' .	(Rule 78)

	$default	reduce using rule 78 (OperatorVoid)

State 195:

	OPTIONAL-18 -> ListElements .	(Rule 72)

	$default	reduce using rule 72 (OPTIONAL-18)

State 196:

	OperatorVoid -> OP01_NAMED_VOID '(' FileHandle OPTIONAL-18 . ');'	(Rule 79)

	');'	shift, and go to state 221

State 197:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 127)

	'}'	shift, and go to state 222
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 198:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 126)

	']'	shift, and go to state 223
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 199:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 128)

	$default	reduce using rule 128 (VariableDeclaration)

State 200:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 129)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Operator	go to state 28
	Expression	go to state 224
	WordScoped	go to state 39
	Variable	go to state 63

State 201:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' . 'use RPerl;' STAR-5 STAR-6	(Rule 19)

	'use RPerl;'	shift, and go to state 225

State 202:

	Properties -> 'our %properties = (' . OPTIONAL-42 ');'	(Rule 156)

	WORD	shift, and go to state 99

	');'	reduce using rule 155 (OPTIONAL-42)

	HashEntries	go to state 227
	OPTIONAL-42	go to state 226

State 203:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-37 ');' Properties . STAR-38 '1;' OPTIONAL-41	(Rule 153)

	$default	reduce using rule 147 (STAR-38)

	STAR-38	go to state 228

State 204:

	ListElementValue -> KEYS_OR_VALUES '%{' Variable '}' .	(Rule 137)

	$default	reduce using rule 137 (ListElementValue)

State 205:

	PAREN-33 -> OP21_LIST_COMMA ListElementValue .	(Rule 131)

	$default	reduce using rule 131 (PAREN-33)

State 206:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 117)

	'..'	shift, and go to state 229
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 207:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 119)

	$default	reduce using rule 119 (LoopWhile)

State 208:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 118)

	'('	shift, and go to state 32
	'@{'	shift, and go to state 61
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	KEYS_OR_VALUES	shift, and go to state 60
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	ListElementValue	go to state 64
	Variable	go to state 63
	ListElements	go to state 230
	Operator	go to state 28
	Expression	go to state 59
	WordScoped	go to state 39

State 209:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 53)

	$default	reduce using rule 53 (Operator)

State 210:

	Operator -> Expression OP18_TERNARY Variable ':' Variable .	(Rule 66)

	$default	reduce using rule 66 (Operator)

State 211:

	HashEntryValue -> '%{' Variable . '}'	(Rule 143)

	'}'	shift, and go to state 231

State 212:

	STAR-36 -> STAR-36 . PAREN-35	(Rule 139)
	HashEntries -> WORD OP20_HASH_FATARROW HashEntryValue STAR-36 .	(Rule 141)

	OP21_LIST_COMMA	shift, and go to state 232

	');'	reduce using rule 141 (HashEntries)
	'}'	reduce using rule 141 (HashEntries)

	PAREN-35	go to state 233

State 213:

	OPTIONAL-24 -> ListElements .	(Rule 89)

	$default	reduce using rule 89 (OPTIONAL-24)

State 214:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-24 . ')'	(Rule 97)

	')'	shift, and go to state 234

State 215:

	PLUS-31 -> PLUS-31 . Operation	(Rule 120)
	CodeBlock -> '{' PLUS-31 . '}'	(Rule 122)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'if ('	shift, and go to state 46
	'my'	shift, and go to state 53
	'{'	shift, and go to state 36
	'}'	shift, and go to state 235
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 50
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP19_LOOP_CONTROL	shift, and go to state 34
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 45

	'for my integer'	reduce using rule 101 (OPTIONAL-26)
	'foreach my'	reduce using rule 101 (OPTIONAL-26)
	'while ('	reduce using rule 101 (OPTIONAL-26)

	LoopLabel	go to state 25
	Conditional	go to state 24
	OPTIONAL-26	go to state 26
	Statement	go to state 44
	VariableModification	go to state 51
	WordScoped	go to state 39
	Operation	go to state 236
	Variable	go to state 41
	VariableDeclaration	go to state 47
	PAREN-25	go to state 49
	Expression	go to state 27
	Operator	go to state 28
	OperatorVoid	go to state 37

State 216:

	PLUS-31 -> Operation .	(Rule 121)

	$default	reduce using rule 121 (PLUS-31)

State 217:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 108)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-28 . OPTIONAL-30	(Rule 113)

	'else'	shift, and go to state 240
	'elsif ('	shift, and go to state 241

	$end	reduce using rule 112 (OPTIONAL-30)
	'('	reduce using rule 112 (OPTIONAL-30)
	'['	reduce using rule 112 (OPTIONAL-30)
	'for my integer'	reduce using rule 112 (OPTIONAL-30)
	'foreach my'	reduce using rule 112 (OPTIONAL-30)
	'if ('	reduce using rule 112 (OPTIONAL-30)
	'my'	reduce using rule 112 (OPTIONAL-30)
	'while ('	reduce using rule 112 (OPTIONAL-30)
	'{'	reduce using rule 112 (OPTIONAL-30)
	'}'	reduce using rule 112 (OPTIONAL-30)
	'};'	reduce using rule 112 (OPTIONAL-30)
	LITERAL	reduce using rule 112 (OPTIONAL-30)
	OP01_NAMED	reduce using rule 112 (OPTIONAL-30)
	OP01_NAMED_VOID	reduce using rule 112 (OPTIONAL-30)
	OP03_MATH_INC_DEC	reduce using rule 112 (OPTIONAL-30)
	OP05_LOGICAL_NEG	reduce using rule 112 (OPTIONAL-30)
	OP05_MATH_NEG	reduce using rule 112 (OPTIONAL-30)
	OP10_NAMED_UNARY	reduce using rule 112 (OPTIONAL-30)
	OP19_LOOP_CONTROL	reduce using rule 112 (OPTIONAL-30)
	OP22_LOGICAL_NOT	reduce using rule 112 (OPTIONAL-30)
	VARIABLE_SYMBOL	reduce using rule 112 (OPTIONAL-30)
	WORD	reduce using rule 112 (OPTIONAL-30)

	OPTIONAL-30	go to state 237
	PAREN-29	go to state 239
	PAREN-27	go to state 238

State 218:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-12 . PLUS-13 '};'	(Rule 38)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'if ('	shift, and go to state 46
	'my'	shift, and go to state 53
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 50
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP19_LOOP_CONTROL	shift, and go to state 34
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 45

	'for my integer'	reduce using rule 101 (OPTIONAL-26)
	'foreach my'	reduce using rule 101 (OPTIONAL-26)
	'while ('	reduce using rule 101 (OPTIONAL-26)

	Operator	go to state 28
	Expression	go to state 27
	OperatorVoid	go to state 37
	PAREN-25	go to state 49
	VariableDeclaration	go to state 47
	Operation	go to state 242
	WordScoped	go to state 39
	PLUS-13	go to state 243
	Variable	go to state 41
	Conditional	go to state 24
	LoopLabel	go to state 25
	Statement	go to state 44
	OPTIONAL-26	go to state 26
	VariableModification	go to state 51

State 219:

	OPTIONAL-12 -> SubroutineArguments .	(Rule 34)

	$default	reduce using rule 34 (OPTIONAL-12)

State 220:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-15 ') = @_;'	(Rule 42)

	WORD	shift, and go to state 109

	Type	go to state 244

State 221:

	OperatorVoid -> OP01_NAMED_VOID '(' FileHandle OPTIONAL-18 ');' .	(Rule 79)

	$default	reduce using rule 79 (OperatorVoid)

State 222:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 127)

	$default	reduce using rule 127 (VariableRetrieval)

State 223:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 126)

	$default	reduce using rule 126 (VariableRetrieval)

State 224:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 129)

	';'	shift, and go to state 245
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 225:

	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' . STAR-5 STAR-6	(Rule 19)

	$default	reduce using rule 16 (STAR-5)

	STAR-5	go to state 246

State 226:

	Properties -> 'our %properties = (' OPTIONAL-42 . ');'	(Rule 156)

	');'	shift, and go to state 247

State 227:

	OPTIONAL-42 -> HashEntries .	(Rule 154)

	$default	reduce using rule 154 (OPTIONAL-42)

State 228:

	STAR-38 -> STAR-38 . Method	(Rule 146)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-37 ');' Properties STAR-38 . '1;' OPTIONAL-41	(Rule 153)

	'1;'	shift, and go to state 249
	'our'	shift, and go to state 248

	Method	go to state 250

State 229:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 117)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	Expression	go to state 251
	WordScoped	go to state 39
	Operator	go to state 28

State 230:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 118)

	')'	shift, and go to state 252

State 231:

	HashEntryValue -> '%{' Variable '}' .	(Rule 143)

	$default	reduce using rule 143 (HashEntryValue)

State 232:

	PAREN-35 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW HashEntryValue	(Rule 138)

	WORD	shift, and go to state 253

State 233:

	STAR-36 -> STAR-36 PAREN-35 .	(Rule 139)

	$default	reduce using rule 139 (STAR-36)

State 234:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-24 ')' .	(Rule 97)

	$default	reduce using rule 97 (Expression)

State 235:

	CodeBlock -> '{' PLUS-31 '}' .	(Rule 122)

	$default	reduce using rule 122 (CodeBlock)

State 236:

	PLUS-31 -> PLUS-31 Operation .	(Rule 120)

	$default	reduce using rule 120 (PLUS-31)

State 237:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-28 OPTIONAL-30 .	(Rule 113)

	$default	reduce using rule 113 (Conditional)

State 238:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 108)

	$default	reduce using rule 108 (STAR-28)

State 239:

	OPTIONAL-30 -> PAREN-29 .	(Rule 111)

	$default	reduce using rule 111 (OPTIONAL-30)

State 240:

	PAREN-29 -> 'else' . CodeBlock	(Rule 110)

	'{'	shift, and go to state 189

	CodeBlock	go to state 254

State 241:

	PAREN-27 -> 'elsif (' . Expression ')' CodeBlock	(Rule 107)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	Variable	go to state 63
	WordScoped	go to state 39
	Expression	go to state 255
	Operator	go to state 28

State 242:

	PLUS-13 -> Operation .	(Rule 37)

	$default	reduce using rule 37 (PLUS-13)

State 243:

	PLUS-13 -> PLUS-13 . Operation	(Rule 36)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-12 PLUS-13 . '};'	(Rule 38)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'if ('	shift, and go to state 46
	'my'	shift, and go to state 53
	'{'	shift, and go to state 36
	'};'	shift, and go to state 256
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 50
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP19_LOOP_CONTROL	shift, and go to state 34
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 45

	'for my integer'	reduce using rule 101 (OPTIONAL-26)
	'foreach my'	reduce using rule 101 (OPTIONAL-26)
	'while ('	reduce using rule 101 (OPTIONAL-26)

	OperatorVoid	go to state 37
	Operator	go to state 28
	Expression	go to state 27
	PAREN-25	go to state 49
	VariableDeclaration	go to state 47
	Variable	go to state 41
	Operation	go to state 257
	WordScoped	go to state 39
	OPTIONAL-26	go to state 26
	VariableModification	go to state 51
	Statement	go to state 44
	Conditional	go to state 24
	LoopLabel	go to state 25

State 244:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-15 ') = @_;'	(Rule 42)

	VARIABLE_SYMBOL	shift, and go to state 258

State 245:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 129)

	$default	reduce using rule 129 (VariableDeclaration)

State 246:

	STAR-5 -> STAR-5 . Include	(Rule 15)
	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' STAR-5 . STAR-6	(Rule 19)

	'use'	shift, and go to state 261

	'('	reduce using rule 18 (STAR-6)
	'['	reduce using rule 18 (STAR-6)
	'for my integer'	reduce using rule 18 (STAR-6)
	'foreach my'	reduce using rule 18 (STAR-6)
	'if ('	reduce using rule 18 (STAR-6)
	'my'	reduce using rule 18 (STAR-6)
	'our'	reduce using rule 18 (STAR-6)
	'use constant'	reduce using rule 18 (STAR-6)
	'use parent qw('	reduce using rule 18 (STAR-6)
	'while ('	reduce using rule 18 (STAR-6)
	'{'	reduce using rule 18 (STAR-6)
	LITERAL	reduce using rule 18 (STAR-6)
	OP01_NAMED	reduce using rule 18 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 18 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 18 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 18 (STAR-6)
	OP05_MATH_NEG	reduce using rule 18 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 18 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 18 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 18 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 18 (STAR-6)
	WORD	reduce using rule 18 (STAR-6)

	Include	go to state 259
	STAR-6	go to state 260

State 247:

	Properties -> 'our %properties = (' OPTIONAL-42 ');' .	(Rule 156)

	$default	reduce using rule 156 (Properties)

State 248:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-43 PLUS-44 '};'	(Rule 161)

	WORD	shift, and go to state 109

	Type	go to state 262

State 249:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-37 ');' Properties STAR-38 '1;' . OPTIONAL-41	(Rule 153)

	'our'	shift, and go to state 48

	$end	reduce using rule 152 (OPTIONAL-41)
	'package'	reduce using rule 152 (OPTIONAL-41)

	Subroutine	go to state 266
	PLUS-39	go to state 264
	PAREN-40	go to state 265
	OPTIONAL-41	go to state 263

State 250:

	STAR-38 -> STAR-38 Method .	(Rule 146)

	$default	reduce using rule 146 (STAR-38)

State 251:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 117)

	')'	shift, and go to state 267
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 252:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 118)

	'{'	shift, and go to state 189

	CodeBlock	go to state 268

State 253:

	PAREN-35 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW HashEntryValue	(Rule 138)

	OP20_HASH_FATARROW	shift, and go to state 269

State 254:

	PAREN-29 -> 'else' CodeBlock .	(Rule 110)

	$default	reduce using rule 110 (PAREN-29)

State 255:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 50)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 53)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 54)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 55)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 56)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 57)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 59)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 60)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 61)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 62)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 63)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 64)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 65)
	Operator -> Expression . OP18_TERNARY Variable ':' Variable	(Rule 66)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 68)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 69)
	PAREN-27 -> 'elsif (' Expression . ')' CodeBlock	(Rule 107)

	')'	shift, and go to state 270
	OP04_MATH_POW	shift, and go to state 82
	OP06_REGEX_MATCH	shift, and go to state 78
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 86
	OP08_MATH_ADD_SUB	shift, and go to state 81
	OP08_STRING_CAT	shift, and go to state 89
	OP09_BITWISE_SHIFT	shift, and go to state 90
	OP11_COMPARE_LT_GT	shift, and go to state 79
	OP12_COMPARE_EQ_NEQ	shift, and go to state 74
	OP13_BITWISE_AND	shift, and go to state 76
	OP14_BITWISE_OR_XOR	shift, and go to state 83
	OP15_LOGICAL_AND	shift, and go to state 80
	OP16_LOGICAL_OR	shift, and go to state 77
	OP17_LIST_RANGE	shift, and go to state 85
	OP18_TERNARY	shift, and go to state 87
	OP23_LOGICAL_AND	shift, and go to state 84
	OP24_LOGICAL_OR_XOR	shift, and go to state 88

State 256:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-12 PLUS-13 '};' .	(Rule 38)

	$default	reduce using rule 38 (Subroutine)

State 257:

	PLUS-13 -> PLUS-13 Operation .	(Rule 36)

	$default	reduce using rule 36 (PLUS-13)

State 258:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-15 ') = @_;'	(Rule 42)

	$default	reduce using rule 41 (STAR-15)

	STAR-15	go to state 271

State 259:

	STAR-5 -> STAR-5 Include .	(Rule 15)

	$default	reduce using rule 15 (STAR-5)

State 260:

	STAR-6 -> STAR-6 . Constant	(Rule 17)
	Header -> 'use strict;' 'use warnings;' 'our $VERSION =' VERSION_NUMBER ';' 'use Carp;' 'use RPerl;' STAR-5 STAR-6 .	(Rule 19)

	'use constant'	shift, and go to state 273

	'('	reduce using rule 19 (Header)
	'['	reduce using rule 19 (Header)
	'for my integer'	reduce using rule 19 (Header)
	'foreach my'	reduce using rule 19 (Header)
	'if ('	reduce using rule 19 (Header)
	'my'	reduce using rule 19 (Header)
	'our'	reduce using rule 19 (Header)
	'use parent qw('	reduce using rule 19 (Header)
	'while ('	reduce using rule 19 (Header)
	'{'	reduce using rule 19 (Header)
	LITERAL	reduce using rule 19 (Header)
	OP01_NAMED	reduce using rule 19 (Header)
	OP01_NAMED_VOID	reduce using rule 19 (Header)
	OP03_MATH_INC_DEC	reduce using rule 19 (Header)
	OP05_LOGICAL_NEG	reduce using rule 19 (Header)
	OP05_MATH_NEG	reduce using rule 19 (Header)
	OP10_NAMED_UNARY	reduce using rule 19 (Header)
	OP19_LOOP_CONTROL	reduce using rule 19 (Header)
	OP22_LOGICAL_NOT	reduce using rule 19 (Header)
	VARIABLE_SYMBOL	reduce using rule 19 (Header)
	WORD	reduce using rule 19 (Header)

	Constant	go to state 272

State 261:

	Include -> 'use' . WordScoped ';'	(Rule 22)
	Include -> 'use' . WordScoped 'qw(' PLUS-7 ');'	(Rule 23)

	WORD	shift, and go to state 10

	WordScoped	go to state 274

State 262:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-43 PLUS-44 '};'	(Rule 161)

	VARIABLE_SYMBOL	shift, and go to state 275

State 263:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' PLUS-37 ');' Properties STAR-38 '1;' OPTIONAL-41 .	(Rule 153)

	$default	reduce using rule 153 (Class)

State 264:

	PLUS-39 -> PLUS-39 . Subroutine	(Rule 148)
	PAREN-40 -> PLUS-39 . '1;'	(Rule 150)

	'1;'	shift, and go to state 277
	'our'	shift, and go to state 48

	Subroutine	go to state 276

State 265:

	OPTIONAL-41 -> PAREN-40 .	(Rule 151)

	$default	reduce using rule 151 (OPTIONAL-41)

State 266:

	PLUS-39 -> Subroutine .	(Rule 149)

	$default	reduce using rule 149 (PLUS-39)

State 267:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 117)

	'{'	shift, and go to state 189

	CodeBlock	go to state 278

State 268:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 118)

	$default	reduce using rule 118 (LoopForEach)

State 269:

	PAREN-35 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . HashEntryValue	(Rule 138)

	'%{'	shift, and go to state 182
	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 10

	WordScoped	go to state 39
	Expression	go to state 184
	Operator	go to state 28
	HashEntryValue	go to state 279
	Variable	go to state 63

State 270:

	PAREN-27 -> 'elsif (' Expression ')' . CodeBlock	(Rule 107)

	'{'	shift, and go to state 189

	CodeBlock	go to state 280

State 271:

	STAR-15 -> STAR-15 . PAREN-14	(Rule 40)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-15 . ') = @_;'	(Rule 42)

	') = @_;'	shift, and go to state 282
	OP21_LIST_COMMA	shift, and go to state 283

	PAREN-14	go to state 281

State 272:

	STAR-6 -> STAR-6 Constant .	(Rule 17)

	$default	reduce using rule 17 (STAR-6)

State 273:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW Constant_Value ';'	(Rule 24)

	WORD	shift, and go to state 284

State 274:

	Include -> 'use' WordScoped . ';'	(Rule 22)
	Include -> 'use' WordScoped . 'qw(' PLUS-7 ');'	(Rule 23)

	';'	shift, and go to state 286
	'qw('	shift, and go to state 285

State 275:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-43 PLUS-44 '};'	(Rule 161)

	'= sub {'	shift, and go to state 287

State 276:

	PLUS-39 -> PLUS-39 Subroutine .	(Rule 148)

	$default	reduce using rule 148 (PLUS-39)

State 277:

	PAREN-40 -> PLUS-39 '1;' .	(Rule 150)

	$default	reduce using rule 150 (PAREN-40)

State 278:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 117)

	$default	reduce using rule 117 (LoopFor)

State 279:

	PAREN-35 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW HashEntryValue .	(Rule 138)

	$default	reduce using rule 138 (PAREN-35)

State 280:

	PAREN-27 -> 'elsif (' Expression ')' CodeBlock .	(Rule 107)

	$default	reduce using rule 107 (PAREN-27)

State 281:

	STAR-15 -> STAR-15 PAREN-14 .	(Rule 40)

	$default	reduce using rule 40 (STAR-15)

State 282:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-15 ') = @_;' .	(Rule 42)

	$default	reduce using rule 42 (SubroutineArguments)

State 283:

	PAREN-14 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 39)

	'my'	shift, and go to state 288

State 284:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW Constant_Value ';'	(Rule 24)

	OP20_HASH_FATARROW	shift, and go to state 289

State 285:

	Include -> 'use' WordScoped 'qw(' . PLUS-7 ');'	(Rule 23)

	WORD	shift, and go to state 290

	PLUS-7	go to state 291

State 286:

	Include -> 'use' WordScoped ';' .	(Rule 22)

	$default	reduce using rule 22 (Include)

State 287:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-43 PLUS-44 '};'	(Rule 161)

	'( my'	shift, and go to state 293

	'('	reduce using rule 158 (OPTIONAL-43)
	'['	reduce using rule 158 (OPTIONAL-43)
	'for my integer'	reduce using rule 158 (OPTIONAL-43)
	'foreach my'	reduce using rule 158 (OPTIONAL-43)
	'if ('	reduce using rule 158 (OPTIONAL-43)
	'my'	reduce using rule 158 (OPTIONAL-43)
	'while ('	reduce using rule 158 (OPTIONAL-43)
	'{'	reduce using rule 158 (OPTIONAL-43)
	LITERAL	reduce using rule 158 (OPTIONAL-43)
	OP01_NAMED	reduce using rule 158 (OPTIONAL-43)
	OP01_NAMED_VOID	reduce using rule 158 (OPTIONAL-43)
	OP03_MATH_INC_DEC	reduce using rule 158 (OPTIONAL-43)
	OP05_LOGICAL_NEG	reduce using rule 158 (OPTIONAL-43)
	OP05_MATH_NEG	reduce using rule 158 (OPTIONAL-43)
	OP10_NAMED_UNARY	reduce using rule 158 (OPTIONAL-43)
	OP19_LOOP_CONTROL	reduce using rule 158 (OPTIONAL-43)
	OP22_LOGICAL_NOT	reduce using rule 158 (OPTIONAL-43)
	VARIABLE_SYMBOL	reduce using rule 158 (OPTIONAL-43)
	WORD	reduce using rule 158 (OPTIONAL-43)

	MethodArguments	go to state 294
	OPTIONAL-43	go to state 292

State 288:

	PAREN-14 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 39)

	WORD	shift, and go to state 109

	Type	go to state 295

State 289:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . Constant_Value ';'	(Rule 24)

	'['	shift, and go to state 297
	'{'	shift, and go to state 296
	LITERAL	shift, and go to state 298

	Constant_Value	go to state 299

State 290:

	PLUS-7 -> WORD .	(Rule 21)

	$default	reduce using rule 21 (PLUS-7)

State 291:

	PLUS-7 -> PLUS-7 . WORD	(Rule 20)
	Include -> 'use' WordScoped 'qw(' PLUS-7 . ');'	(Rule 23)

	');'	shift, and go to state 300
	WORD	shift, and go to state 301

State 292:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-43 . PLUS-44 '};'	(Rule 161)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'if ('	shift, and go to state 46
	'my'	shift, and go to state 53
	'{'	shift, and go to state 36
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 50
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP19_LOOP_CONTROL	shift, and go to state 34
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 45

	'for my integer'	reduce using rule 101 (OPTIONAL-26)
	'foreach my'	reduce using rule 101 (OPTIONAL-26)
	'while ('	reduce using rule 101 (OPTIONAL-26)

	VariableDeclaration	go to state 47
	PAREN-25	go to state 49
	OperatorVoid	go to state 37
	Expression	go to state 27
	PLUS-44	go to state 302
	Operator	go to state 28
	OPTIONAL-26	go to state 26
	VariableModification	go to state 51
	Statement	go to state 44
	Conditional	go to state 24
	LoopLabel	go to state 25
	Variable	go to state 41
	WordScoped	go to state 39
	Operation	go to state 303

State 293:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-46 ') = @_;'	(Rule 165)

	TYPE_CLASS_OR_SELF	shift, and go to state 304

State 294:

	OPTIONAL-43 -> MethodArguments .	(Rule 157)

	$default	reduce using rule 157 (OPTIONAL-43)

State 295:

	PAREN-14 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 39)

	VARIABLE_SYMBOL	shift, and go to state 305

State 296:

	Constant_Value -> '{' . WORD OP20_HASH_FATARROW LITERAL STAR-11 '}'	(Rule 33)

	WORD	shift, and go to state 306

State 297:

	Constant_Value -> '[' . LITERAL STAR-9 ']'	(Rule 32)

	LITERAL	shift, and go to state 307

State 298:

	Constant_Value -> LITERAL .	(Rule 31)

	$default	reduce using rule 31 (Constant_Value)

State 299:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW Constant_Value . ';'	(Rule 24)

	';'	shift, and go to state 308

State 300:

	Include -> 'use' WordScoped 'qw(' PLUS-7 ');' .	(Rule 23)

	$default	reduce using rule 23 (Include)

State 301:

	PLUS-7 -> PLUS-7 WORD .	(Rule 20)

	$default	reduce using rule 20 (PLUS-7)

State 302:

	PLUS-44 -> PLUS-44 . Operation	(Rule 159)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-43 PLUS-44 . '};'	(Rule 161)

	'('	shift, and go to state 32
	'['	shift, and go to state 22
	'if ('	shift, and go to state 46
	'my'	shift, and go to state 53
	'{'	shift, and go to state 36
	'};'	shift, and go to state 310
	LITERAL	shift, and go to state 31
	OP01_NAMED	shift, and go to state 42
	OP01_NAMED_VOID	shift, and go to state 50
	OP03_MATH_INC_DEC	shift, and go to state 43
	OP05_LOGICAL_NEG	shift, and go to state 30
	OP05_MATH_NEG	shift, and go to state 29
	OP10_NAMED_UNARY	shift, and go to state 35
	OP19_LOOP_CONTROL	shift, and go to state 34
	OP22_LOGICAL_NOT	shift, and go to state 33
	VARIABLE_SYMBOL	shift, and go to state 52
	WORD	shift, and go to state 45

	'for my integer'	reduce using rule 101 (OPTIONAL-26)
	'foreach my'	reduce using rule 101 (OPTIONAL-26)
	'while ('	reduce using rule 101 (OPTIONAL-26)

	VariableDeclaration	go to state 47
	PAREN-25	go to state 49
	Expression	go to state 27
	Operator	go to state 28
	OperatorVoid	go to state 37
	LoopLabel	go to state 25
	Conditional	go to state 24
	VariableModification	go to state 51
	OPTIONAL-26	go to state 26
	Statement	go to state 44
	WordScoped	go to state 39
	Operation	go to state 309
	Variable	go to state 41

State 303:

	PLUS-44 -> Operation .	(Rule 160)

	$default	reduce using rule 160 (PLUS-44)

State 304:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-46 ') = @_;'	(Rule 165)

	$default	reduce using rule 164 (STAR-46)

	STAR-46	go to state 311

State 305:

	PAREN-14 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 39)

	$default	reduce using rule 39 (PAREN-14)

State 306:

	Constant_Value -> '{' WORD . OP20_HASH_FATARROW LITERAL STAR-11 '}'	(Rule 33)

	OP20_HASH_FATARROW	shift, and go to state 312

State 307:

	Constant_Value -> '[' LITERAL . STAR-9 ']'	(Rule 32)

	$default	reduce using rule 27 (STAR-9)

	STAR-9	go to state 313

State 308:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW Constant_Value ';' .	(Rule 24)

	$default	reduce using rule 24 (Constant)

State 309:

	PLUS-44 -> PLUS-44 Operation .	(Rule 159)

	$default	reduce using rule 159 (PLUS-44)

State 310:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-43 PLUS-44 '};' .	(Rule 161)

	$default	reduce using rule 161 (Method)

State 311:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 163)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-46 . ') = @_;'	(Rule 165)

	') = @_;'	shift, and go to state 314
	OP21_LIST_COMMA	shift, and go to state 315

	PAREN-45	go to state 316

State 312:

	Constant_Value -> '{' WORD OP20_HASH_FATARROW . LITERAL STAR-11 '}'	(Rule 33)

	LITERAL	shift, and go to state 317

State 313:

	STAR-9 -> STAR-9 . PAREN-8	(Rule 26)
	Constant_Value -> '[' LITERAL STAR-9 . ']'	(Rule 32)

	']'	shift, and go to state 320
	OP21_LIST_COMMA	shift, and go to state 319

	PAREN-8	go to state 318

State 314:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-46 ') = @_;' .	(Rule 165)

	$default	reduce using rule 165 (MethodArguments)

State 315:

	PAREN-45 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 162)

	'my'	shift, and go to state 321

State 316:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 163)

	$default	reduce using rule 163 (STAR-46)

State 317:

	Constant_Value -> '{' WORD OP20_HASH_FATARROW LITERAL . STAR-11 '}'	(Rule 33)

	$default	reduce using rule 30 (STAR-11)

	STAR-11	go to state 322

State 318:

	STAR-9 -> STAR-9 PAREN-8 .	(Rule 26)

	$default	reduce using rule 26 (STAR-9)

State 319:

	PAREN-8 -> OP21_LIST_COMMA . LITERAL	(Rule 25)

	LITERAL	shift, and go to state 323

State 320:

	Constant_Value -> '[' LITERAL STAR-9 ']' .	(Rule 32)

	$default	reduce using rule 32 (Constant_Value)

State 321:

	PAREN-45 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 162)

	WORD	shift, and go to state 109

	Type	go to state 324

State 322:

	STAR-11 -> STAR-11 . PAREN-10	(Rule 29)
	Constant_Value -> '{' WORD OP20_HASH_FATARROW LITERAL STAR-11 . '}'	(Rule 33)

	'}'	shift, and go to state 325
	OP21_LIST_COMMA	shift, and go to state 326

	PAREN-10	go to state 327

State 323:

	PAREN-8 -> OP21_LIST_COMMA LITERAL .	(Rule 25)

	$default	reduce using rule 25 (PAREN-8)

State 324:

	PAREN-45 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 162)

	VARIABLE_SYMBOL	shift, and go to state 328

State 325:

	Constant_Value -> '{' WORD OP20_HASH_FATARROW LITERAL STAR-11 '}' .	(Rule 33)

	$default	reduce using rule 33 (Constant_Value)

State 326:

	PAREN-10 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW LITERAL	(Rule 28)

	WORD	shift, and go to state 329

State 327:

	STAR-11 -> STAR-11 PAREN-10 .	(Rule 29)

	$default	reduce using rule 29 (STAR-11)

State 328:

	PAREN-45 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 162)

	$default	reduce using rule 162 (PAREN-45)

State 329:

	PAREN-10 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW LITERAL	(Rule 28)

	OP20_HASH_FATARROW	shift, and go to state 330

State 330:

	PAREN-10 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . LITERAL	(Rule 28)

	LITERAL	shift, and go to state 331

State 331:

	PAREN-10 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW LITERAL .	(Rule 28)

	$default	reduce using rule 28 (PAREN-10)


Summary:
--------
Number of rules         : 173
Number of terminals     : 78
Number of non-terminals : 86
Number of states        : 332
