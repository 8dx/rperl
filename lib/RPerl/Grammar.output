Conflicts:
----------
Conflict in state 143 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 143 between rule 113 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 143 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 143 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 143 between rule 113 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 143 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 143 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 143 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 143 between rule 113 and token OP18_TERNARY resolved as shift.
Conflict in state 143 between rule 113 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 143 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 143 between rule 113 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 143 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 143 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 143 between rule 113 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 143 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 148 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 148 between rule 96 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 148 between rule 96 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 148 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 148 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 148 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 148 between rule 96 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 148 between rule 96 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 148 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 148 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 148 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 148 between rule 96 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 148 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 148 between rule 96 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 148 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 148 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 170 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 170 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 170 between rule 103 and token OP18_TERNARY resolved as reduce.
Conflict in state 170 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 170 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 170 between rule 103 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 170 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 170 between rule 103 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 170 between rule 103 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 170 between rule 103 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 170 between rule 103 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 170 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 170 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 170 between rule 103 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 170 between rule 103 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 170 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 176 between rule 104 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 176 between rule 104 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 176 between rule 104 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 176 between rule 104 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 176 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 176 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 176 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 176 between rule 104 and token OP18_TERNARY resolved as reduce.
Conflict in state 176 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 176 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 176 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 176 between rule 104 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 176 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 176 between rule 104 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 176 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 176 between rule 104 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 250 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 250 between rule 111 and token OP08_STRING_CAT resolved as shift.
Conflict in state 250 between rule 111 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 250 between rule 111 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 250 between rule 111 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 250 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 250 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 250 between rule 111 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 250 between rule 111 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 250 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 250 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 250 between rule 111 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 250 between rule 111 and token OP17_LIST_RANGE resolved as error.
Conflict in state 250 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 250 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 250 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 251 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 251 between rule 109 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 251 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 251 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 251 between rule 109 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 251 between rule 109 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 251 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 251 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 251 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 251 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 251 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 251 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 251 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 251 between rule 109 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 251 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 252 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 252 between rule 110 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 252 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 252 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 252 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 252 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 252 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 252 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 252 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 252 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 252 between rule 110 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 252 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 252 between rule 110 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 252 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 252 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 252 between rule 110 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 253 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 253 between rule 108 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 253 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 253 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 253 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 253 between rule 108 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 253 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 253 between rule 108 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 253 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 253 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 253 between rule 108 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 253 between rule 108 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 253 between rule 108 and token OP08_STRING_CAT resolved as shift.
Conflict in state 253 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 253 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 254 between rule 101 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 254 between rule 101 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 254 between rule 101 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 254 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 254 between rule 101 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 254 between rule 101 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 254 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 254 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 254 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 254 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 254 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 254 between rule 101 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 254 between rule 101 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 254 between rule 101 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 254 between rule 101 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 254 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 255 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 255 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 255 between rule 107 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 255 between rule 107 and token OP08_STRING_CAT resolved as shift.
Conflict in state 255 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 255 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 255 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 255 between rule 107 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 255 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 255 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 255 between rule 107 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 255 between rule 107 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 255 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 255 between rule 107 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 255 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 256 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 256 between rule 95 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 256 between rule 95 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 256 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 256 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 256 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 256 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 256 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 256 between rule 95 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 256 between rule 95 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 256 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 256 between rule 95 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 256 between rule 95 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 256 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 256 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 257 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 257 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 257 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 257 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 257 between rule 102 and token OP08_STRING_CAT resolved as shift.
Conflict in state 257 between rule 102 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 257 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 257 between rule 102 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 257 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 257 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 257 between rule 102 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 257 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 257 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 257 between rule 102 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 257 between rule 102 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 258 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 258 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 258 between rule 100 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 258 between rule 100 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 258 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 258 between rule 100 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 258 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 258 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 258 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 258 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 258 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 258 between rule 100 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 258 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 258 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 258 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 259 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 259 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 259 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 259 between rule 114 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 259 between rule 114 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 259 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 259 between rule 114 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 259 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 259 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 259 between rule 114 and token OP18_TERNARY resolved as shift.
Conflict in state 259 between rule 114 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 259 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 259 between rule 114 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 259 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 259 between rule 114 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 259 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 260 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 260 between rule 106 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 260 between rule 106 and token OP08_STRING_CAT resolved as shift.
Conflict in state 260 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 260 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 260 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 260 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 260 between rule 106 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 260 between rule 106 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 260 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 260 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 260 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 260 between rule 106 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 260 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 261 between rule 115 and token OP18_TERNARY resolved as shift.
Conflict in state 261 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 261 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 261 between rule 115 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 261 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 261 between rule 115 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 261 between rule 115 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 261 between rule 115 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 261 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 261 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 261 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 261 between rule 115 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 261 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 261 between rule 115 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 261 between rule 115 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 261 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 262 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 262 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 262 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 262 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 262 between rule 105 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 262 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 262 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 262 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 262 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 262 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 262 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 262 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 262 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 262 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 262 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 263 between rule 99 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 263 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 263 between rule 99 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 263 between rule 99 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 263 between rule 99 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 263 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 263 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 263 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 263 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 263 between rule 99 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 263 between rule 99 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 263 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 263 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 263 between rule 99 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 263 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	OPTIONAL-23 -> PropertiesClass
58:	OPTIONAL-23 -> /* empty */
59:	STAR-24 -> STAR-24 MethodOrSubroutine
60:	STAR-24 -> /* empty */
61:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'
62:	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped
63:	STAR-26 -> STAR-26 PAREN-25
64:	STAR-26 -> /* empty */
65:	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';'
66:	Properties -> 'our %properties = (' ')' ';' Critic
67:	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped
68:	STAR-28 -> STAR-28 PAREN-27
69:	STAR-28 -> /* empty */
70:	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';'
71:	OPTIONAL-29 -> MethodArguments
72:	OPTIONAL-29 -> /* empty */
73:	PLUS-30 -> PLUS-30 Operation
74:	PLUS-30 -> Operation
75:	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'
76:	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
77:	STAR-32 -> STAR-32 PAREN-31
78:	STAR-32 -> /* empty */
79:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'
80:	MethodOrSubroutine -> Method
81:	MethodOrSubroutine -> Subroutine
82:	Operation -> Expression ';'
83:	Operation -> Statement
84:	OPTIONAL-33 -> ListElements
85:	OPTIONAL-33 -> /* empty */
86:	OPTIONAL-34 -> ListElements
87:	OPTIONAL-34 -> /* empty */
88:	OPTIONAL-35 -> ListElements
89:	OPTIONAL-35 -> /* empty */
90:	Operator -> OP01_NAMED '(' OPTIONAL-33 ')'
91:	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-34 ')' ';'
92:	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-35 ';'
93:	Operator -> OP03_MATH_INC_DEC Variable
94:	Operator -> Variable OP03_MATH_INC_DEC
95:	Operator -> Expression OP04_MATH_POW Expression
96:	Operator -> OP05_LOGICAL_NEG Expression
97:	Operator -> OP05_MATH_NEG Expression ')'
98:	Operator -> Expression OP06_REGEX_MATCH OP06_REGEX_PATTERN
99:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
100:	Operator -> Expression OP08_MATH_ADD_SUB Expression
101:	Operator -> Expression OP08_STRING_CAT Expression
102:	Operator -> Expression OP09_BITWISE_SHIFT Expression
103:	Operator -> OP10_NAMED_UNARY Expression
104:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
105:	Operator -> Expression OP11_COMPARE_LT_GT Expression
106:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
107:	Operator -> Expression OP13_BITWISE_AND Expression
108:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
109:	Operator -> Expression OP15_LOGICAL_AND Expression
110:	Operator -> Expression OP16_LOGICAL_OR Expression
111:	Operator -> Expression OP17_LIST_RANGE Expression
112:	Operator -> Expression OP18_TERNARY Variable COLON Variable
113:	Operator -> OP22_LOGICAL_NOT Expression
114:	Operator -> Expression OP23_LOGICAL_AND Expression
115:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
116:	OPTIONAL-36 -> ListElements
117:	OPTIONAL-36 -> /* empty */
118:	OPTIONAL-37 -> ListElements
119:	OPTIONAL-37 -> /* empty */
120:	OPTIONAL-38 -> ListElements
121:	OPTIONAL-38 -> /* empty */
122:	OPTIONAL-39 -> ListElements
123:	OPTIONAL-39 -> /* empty */
124:	OPTIONAL-40 -> ListElements
125:	OPTIONAL-40 -> /* empty */
126:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-36 ')' ';'
127:	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-37 ')' ';'
128:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-38 ';'
129:	OperatorVoid -> OP01_PRINT_VOID OPTIONAL-39 ';'
130:	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-40 ';'
131:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
132:	OPTIONAL-41 -> ListElements
133:	OPTIONAL-41 -> /* empty */
134:	OPTIONAL-42 -> ListElements
135:	OPTIONAL-42 -> /* empty */
136:	Expression -> 'undef'
137:	Expression -> Literal
138:	Expression -> Variable
139:	Expression -> ArrayReference
140:	Expression -> ArrayDereferenced
141:	Expression -> HashReference
142:	Expression -> HashDereferenced
143:	Expression -> '{' '}'
144:	Expression -> Operator
145:	Expression -> WordScoped '(' OPTIONAL-41 ')'
146:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-42 ')'
147:	Expression -> '(' Expression ')'
148:	ExpressionOrStdin -> Expression
149:	ExpressionOrStdin -> '<STDIN>'
150:	PAREN-43 -> LoopLabel COLON
151:	OPTIONAL-44 -> PAREN-43
152:	OPTIONAL-44 -> /* empty */
153:	Statement -> Conditional
154:	Statement -> OPTIONAL-44 Loop
155:	Statement -> OperatorVoid
156:	Statement -> VariableDeclaration
157:	Statement -> VariableModification
158:	PAREN-45 -> 'elsif (' Expression ')' CodeBlock
159:	STAR-46 -> STAR-46 PAREN-45
160:	STAR-46 -> /* empty */
161:	PAREN-47 -> 'else' CodeBlock
162:	OPTIONAL-48 -> PAREN-47
163:	OPTIONAL-48 -> /* empty */
164:	Conditional -> 'if (' Expression ')' CodeBlock STAR-46 OPTIONAL-48
165:	Loop -> LoopFor
166:	Loop -> LoopForEach
167:	Loop -> LoopWhile
168:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
169:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
170:	LoopWhile -> 'while (' Expression ')' CodeBlock
171:	PLUS-49 -> PLUS-49 Operation
172:	PLUS-49 -> Operation
173:	CodeBlock -> '{' PLUS-49 '}'
174:	STAR-50 -> STAR-50 VariableRetrieval
175:	STAR-50 -> /* empty */
176:	Variable -> VARIABLE_SYMBOL STAR-50
177:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
178:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
179:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
180:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
181:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
182:	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'
183:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
184:	PAREN-51 -> OP21_LIST_COMMA ListElement
185:	STAR-52 -> STAR-52 PAREN-51
186:	STAR-52 -> /* empty */
187:	PLUS-53 -> PLUS-53 WORD
188:	PLUS-53 -> WORD
189:	ListElements -> ListElement STAR-52
190:	ListElements -> OP01_QW '(' PLUS-53 ')'
191:	ListElement -> Expression
192:	ListElement -> TypeInner Expression
193:	ListElement -> KEYS_OR_VALUES HashDereferenced
194:	OPTIONAL-54 -> ListElements
195:	OPTIONAL-54 -> /* empty */
196:	ArrayReference -> '[' OPTIONAL-54 ']'
197:	ArrayDereferenced -> '@{' Variable '}'
198:	ArrayDereferenced -> '@{' ArrayReference '}'
199:	OPTIONAL-55 -> TypeInner
200:	OPTIONAL-55 -> /* empty */
201:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-55 Expression
202:	HashEntry -> HashDereferenced
203:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
204:	HashEntryTyped -> HashDereferenced
205:	PAREN-56 -> OP21_LIST_COMMA HashEntry
206:	STAR-57 -> STAR-57 PAREN-56
207:	STAR-57 -> /* empty */
208:	HashReference -> '{' HashEntry STAR-57 '}'
209:	HashDereferenced -> '%{' Variable '}'
210:	HashDereferenced -> '%{' HashReference '}'
211:	WordScoped -> WORD
212:	WordScoped -> WORD_SCOPED
213:	LoopLabel -> WORD
214:	Type -> WORD
215:	TypeMethod -> WORD '__method'
216:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
217:	FileHandle -> '{*' WORD '}'
218:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
219:	Literal -> LITERAL_STRING
220:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 2
	SHEBANG	shift, and go to state 5

	'package'	reduce using rule 20 (OPTIONAL-9)

	PLUS-2	go to state 4
	OPTIONAL-9	go to state 1
	Critic	go to state 3
	Program	go to state 7
	CompileUnit	go to state 8
	PAREN-1	go to state 6
	ModuleHeader	go to state 9

State 1:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 10

State 2:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 12

	PLUS-14	go to state 11

State 3:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 4:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 2

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	PAREN-1	go to state 13
	ModuleHeader	go to state 9
	Critic	go to state 3
	OPTIONAL-9	go to state 1

State 5:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 2

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	OPTIONAL-3	go to state 14
	Critic	go to state 15

State 6:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 7:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 8:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 16

State 9:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 20

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Package	go to state 18
	STAR-10	go to state 17
	Module	go to state 21
	Class	go to state 19

State 10:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 24

State 11:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 26
	WORD	shift, and go to state 25

State 12:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 13:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 14:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 27

	Header	go to state 28

State 15:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 16:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 17:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 2

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 29
	STAR-11	go to state 30

State 18:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 19:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 20:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 31

State 21:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 22:

	WordScoped -> WORD_SCOPED .	(Rule 212)

	$default	reduce using rule 212 (WordScoped)

State 23:

	WordScoped -> WORD .	(Rule 211)

	$default	reduce using rule 211 (WordScoped)

State 24:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 32

State 25:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 26:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 27:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 33

State 28:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 34

State 29:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 30:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 36

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 37
	Include	go to state 35

State 31:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	')'	shift, and go to state 38

State 32:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 27

	Header	go to state 39

State 33:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 40

State 34:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 2

	'%{'	reduce using rule 11 (STAR-5)
	'('	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'['	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	'{'	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 11 (STAR-5)
	OP01_OPEN_CLOSE	reduce using rule 11 (STAR-5)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID	reduce using rule 11 (STAR-5)
	OP01_PRINT_VOID_PAREN	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)

	Critic	go to state 42
	STAR-5	go to state 41

State 35:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 36:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 43

State 37:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 47
	'use constant'	shift, and go to state 46

	Subroutine	go to state 44
	PLUS-13	go to state 48
	Constant	go to state 45

State 38:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	';'	shift, and go to state 49

State 39:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 40:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 50

State 41:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 36

	'%{'	reduce using rule 13 (STAR-6)
	'('	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'['	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	'{'	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_PAREN	reduce using rule 13 (STAR-6)
	OP01_OPEN_CLOSE	reduce using rule 13 (STAR-6)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID	reduce using rule 13 (STAR-6)
	OP01_PRINT_VOID_PAREN	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NOT	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)

	Include	go to state 52
	STAR-6	go to state 51

State 42:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 43:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 54
	'qw('	shift, and go to state 53

State 44:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 45:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 46:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	WORD	shift, and go to state 55

State 47:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 57

	Type	go to state 56

State 48:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 47
	LITERAL_NUMBER	shift, and go to state 59

	Subroutine	go to state 58

State 49:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 36

	Include	go to state 60

State 50:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 61

State 51:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 46

	'%{'	reduce using rule 15 (STAR-7)
	'('	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'['	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	'{'	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_PAREN	reduce using rule 15 (STAR-7)
	OP01_OPEN_CLOSE	reduce using rule 15 (STAR-7)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID	reduce using rule 15 (STAR-7)
	OP01_PRINT_VOID_PAREN	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NOT	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)

	Constant	go to state 62
	STAR-7	go to state 63

State 52:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 53:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 65

	PLUS-15	go to state 64

State 54:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 55:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 66

State 56:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 67

State 57:

	Type -> WORD .	(Rule 214)

	$default	reduce using rule 214 (Type)

State 58:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 59:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 68

State 60:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 69

State 61:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 62:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 63:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 93
	'our'	shift, and go to state 47
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_NAMED_VOID	shift, and go to state 76
	OP01_NAMED_VOID_PAREN	shift, and go to state 73
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 86
	OP01_PRINT_VOID_PAREN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP19_LOOP_CONTROL	shift, and go to state 111
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 77
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 152 (OPTIONAL-44)
	'foreach my'	reduce using rule 152 (OPTIONAL-44)
	'while ('	reduce using rule 152 (OPTIONAL-44)

	Subroutine	go to state 96
	ArrayReference	go to state 75
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	PLUS-8	go to state 72
	VariableModification	go to state 74
	OperatorVoid	go to state 92
	Literal	go to state 115
	Expression	go to state 113
	HashReference	go to state 91
	LoopLabel	go to state 82
	WordScoped	go to state 106
	PAREN-43	go to state 100
	VariableDeclaration	go to state 102
	Conditional	go to state 105
	Variable	go to state 104
	Statement	go to state 89
	Operation	go to state 109
	Operator	go to state 108
	OPTIONAL-44	go to state 84

State 64:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 117
	WORD	shift, and go to state 116

State 65:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 66:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner Literal ';'	(Rule 41)

	'my'	shift, and go to state 119

	TypeInner	go to state 118

State 67:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 120

State 68:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 69:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'## no critic qw('	shift, and go to state 2

	'our %properties = ('	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	Critic	go to state 121
	STAR-21	go to state 122

State 70:

	HashDereferenced -> '%{' . Variable '}'	(Rule 209)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 210)

	'{'	shift, and go to state 124
	VARIABLE_SYMBOL	shift, and go to state 87

	Variable	go to state 123
	HashReference	go to state 125

State 71:

	ArrayReference -> '[' . OPTIONAL-54 ']'	(Rule 196)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	']'	reduce using rule 195 (OPTIONAL-54)

	Variable	go to state 126
	ListElements	go to state 127
	WordScoped	go to state 106
	Operator	go to state 108
	OPTIONAL-54	go to state 132
	TypeInner	go to state 130
	Expression	go to state 129
	HashReference	go to state 91
	ArrayReference	go to state 75
	Literal	go to state 115
	ListElement	go to state 131
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99

State 72:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 93
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_NAMED_VOID	shift, and go to state 76
	OP01_NAMED_VOID_PAREN	shift, and go to state 73
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 86
	OP01_PRINT_VOID_PAREN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP19_LOOP_CONTROL	shift, and go to state 111
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 77
	WORD_SCOPED	shift, and go to state 22

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 152 (OPTIONAL-44)
	'foreach my'	reduce using rule 152 (OPTIONAL-44)
	'while ('	reduce using rule 152 (OPTIONAL-44)

	VariableModification	go to state 74
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	ArrayReference	go to state 75
	Statement	go to state 89
	OPTIONAL-44	go to state 84
	Operator	go to state 108
	Operation	go to state 134
	WordScoped	go to state 106
	LoopLabel	go to state 82
	Variable	go to state 104
	Conditional	go to state 105
	PAREN-43	go to state 100
	VariableDeclaration	go to state 102
	Literal	go to state 115
	OperatorVoid	go to state 92
	Expression	go to state 113
	HashReference	go to state 91

State 73:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-36 ')' ';'	(Rule 126)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 117 (OPTIONAL-36)

	TypeInner	go to state 130
	HashReference	go to state 91
	Expression	go to state 129
	Literal	go to state 115
	ArrayReference	go to state 75
	ListElement	go to state 131
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Variable	go to state 126
	ListElements	go to state 135
	WordScoped	go to state 106
	OPTIONAL-36	go to state 136
	Operator	go to state 108

State 74:

	Statement -> VariableModification .	(Rule 157)

	$default	reduce using rule 157 (Statement)

State 75:

	Expression -> ArrayReference .	(Rule 139)

	$default	reduce using rule 139 (Expression)

State 76:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-38 ';'	(Rule 128)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	';'	reduce using rule 121 (OPTIONAL-38)

	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	OPTIONAL-38	go to state 137
	TypeInner	go to state 130
	Expression	go to state 129
	HashReference	go to state 91
	Literal	go to state 115
	ArrayReference	go to state 75
	ListElement	go to state 131
	Operator	go to state 108
	Variable	go to state 126
	ListElements	go to state 138
	WordScoped	go to state 106

State 77:

	WordScoped -> WORD .	(Rule 211)
	LoopLabel -> WORD .	(Rule 213)

	'('	reduce using rule 211 (WordScoped)
	COLON	reduce using rule 213 (LoopLabel)

State 78:

	Expression -> '{' . '}'	(Rule 143)
	HashReference -> '{' . HashEntry STAR-57 '}'	(Rule 208)

	'%{'	shift, and go to state 70
	'}'	shift, and go to state 139
	WORD	shift, and go to state 142

	HashEntry	go to state 141
	HashDereferenced	go to state 140

State 79:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 113)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Expression	go to state 143
	HashReference	go to state 91
	Literal	go to state 115
	ArrayReference	go to state 75

State 80:

	Literal -> LITERAL_NUMBER .	(Rule 220)

	$default	reduce using rule 220 (Literal)

State 81:

	Operator -> OP01_OPEN_CLOSE_PAREN . FileHandle OPTIONAL-34 ')' ';'	(Rule 91)

	'my'	shift, and go to state 146
	'{*'	shift, and go to state 145

	FileHandle	go to state 144

State 82:

	PAREN-43 -> LoopLabel . COLON	(Rule 150)

	COLON	shift, and go to state 147

State 83:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 96)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 126
	WordScoped	go to state 106
	Operator	go to state 108
	Expression	go to state 148
	HashReference	go to state 91
	Literal	go to state 115
	ArrayReference	go to state 75
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99

State 84:

	Statement -> OPTIONAL-44 . Loop	(Rule 154)

	'for my integer'	shift, and go to state 150
	'foreach my'	shift, and go to state 155
	'while ('	shift, and go to state 153

	LoopWhile	go to state 154
	Loop	go to state 152
	LoopFor	go to state 149
	LoopForEach	go to state 151

State 85:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 93)

	VARIABLE_SYMBOL	shift, and go to state 87

	Variable	go to state 156

State 86:

	OperatorVoid -> OP01_PRINT_VOID . OPTIONAL-39 ';'	(Rule 129)
	OperatorVoid -> OP01_PRINT_VOID . FileHandle OPTIONAL-40 ';'	(Rule 130)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 157
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	'{*'	shift, and go to state 145
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	';'	reduce using rule 123 (OPTIONAL-39)

	HashReference	go to state 91
	Expression	go to state 129
	TypeInner	go to state 130
	OPTIONAL-39	go to state 160
	ListElement	go to state 131
	ArrayReference	go to state 75
	Literal	go to state 115
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Variable	go to state 126
	FileHandle	go to state 158
	WordScoped	go to state 106
	ListElements	go to state 159
	Operator	go to state 108

State 87:

	Variable -> VARIABLE_SYMBOL . STAR-50	(Rule 176)

	$default	reduce using rule 175 (STAR-50)

	STAR-50	go to state 161

State 88:

	Operator -> OP01_NAMED . '(' OPTIONAL-33 ')'	(Rule 90)

	'('	shift, and go to state 162

State 89:

	Operation -> Statement .	(Rule 83)

	$default	reduce using rule 83 (Operation)

State 90:

	Operator -> OP01_OPEN_CLOSE . FileHandle OPTIONAL-35 ';'	(Rule 92)

	'my'	shift, and go to state 146
	'{*'	shift, and go to state 145

	FileHandle	go to state 163

State 91:

	Expression -> HashReference .	(Rule 141)

	$default	reduce using rule 141 (Expression)

State 92:

	Statement -> OperatorVoid .	(Rule 155)

	$default	reduce using rule 155 (Statement)

State 93:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 180)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 181)

	WORD	shift, and go to state 57

	Type	go to state 164

State 94:

	OperatorVoid -> OP01_PRINT_VOID_PAREN . FileHandle OPTIONAL-37 ')' ';'	(Rule 127)

	'my'	shift, and go to state 146
	'{*'	shift, and go to state 145

	FileHandle	go to state 165

State 95:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 97)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 106
	Variable	go to state 126
	Operator	go to state 108
	ArrayReference	go to state 75
	Literal	go to state 115
	Expression	go to state 166
	HashReference	go to state 91
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98

State 96:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 97:

	Expression -> '(' . Expression ')'	(Rule 147)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Literal	go to state 115
	ArrayReference	go to state 75
	HashReference	go to state 91
	Expression	go to state 167
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	WordScoped	go to state 106
	Variable	go to state 126
	Operator	go to state 108

State 98:

	Expression -> HashDereferenced .	(Rule 142)

	$default	reduce using rule 142 (Expression)

State 99:

	Expression -> ArrayDereferenced .	(Rule 140)

	$default	reduce using rule 140 (Expression)

State 100:

	OPTIONAL-44 -> PAREN-43 .	(Rule 151)

	$default	reduce using rule 151 (OPTIONAL-44)

State 101:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 197)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 198)

	'['	shift, and go to state 71
	VARIABLE_SYMBOL	shift, and go to state 87

	ArrayReference	go to state 169
	Variable	go to state 168

State 102:

	Statement -> VariableDeclaration .	(Rule 156)

	$default	reduce using rule 156 (Statement)

State 103:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 103)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 91
	Expression	go to state 170
	Literal	go to state 115
	ArrayReference	go to state 75
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Variable	go to state 126
	WordScoped	go to state 106
	Operator	go to state 108

State 104:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 94)
	Expression -> Variable .	(Rule 138)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-42 ')'	(Rule 146)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 182)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 183)

	OP02_METHOD_THINARROW	shift, and go to state 172
	OP03_MATH_INC_DEC	shift, and go to state 171
	OP19_VARIABLE_ASSIGN	shift, and go to state 174
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 173

	';'	reduce using rule 138 (Expression)
	OP04_MATH_POW	reduce using rule 138 (Expression)
	OP06_REGEX_MATCH	reduce using rule 138 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 138 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 138 (Expression)
	OP08_STRING_CAT	reduce using rule 138 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 138 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 138 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 138 (Expression)
	OP13_BITWISE_AND	reduce using rule 138 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 138 (Expression)
	OP15_LOGICAL_AND	reduce using rule 138 (Expression)
	OP16_LOGICAL_OR	reduce using rule 138 (Expression)
	OP17_LIST_RANGE	reduce using rule 138 (Expression)
	OP18_TERNARY	reduce using rule 138 (Expression)
	OP23_LOGICAL_AND	reduce using rule 138 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 138 (Expression)

State 105:

	Statement -> Conditional .	(Rule 153)

	$default	reduce using rule 153 (Statement)

State 106:

	Expression -> WordScoped . '(' OPTIONAL-41 ')'	(Rule 145)

	'('	shift, and go to state 175

State 107:

	Expression -> 'undef' .	(Rule 136)

	$default	reduce using rule 136 (Expression)

State 108:

	Expression -> Operator .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 109:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 110:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 104)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 106
	Variable	go to state 126
	Operator	go to state 108
	Literal	go to state 115
	ArrayReference	go to state 75
	HashReference	go to state 91
	Expression	go to state 176
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98

State 111:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 131)

	WORD	shift, and go to state 177

	LoopLabel	go to state 178

State 112:

	Literal -> LITERAL_STRING .	(Rule 219)

	$default	reduce using rule 219 (Literal)

State 113:

	Operation -> Expression . ';'	(Rule 82)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	';'	shift, and go to state 185
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 114:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-46 OPTIONAL-48	(Rule 164)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 106
	Variable	go to state 126
	Operator	go to state 108
	ArrayReference	go to state 75
	Literal	go to state 115
	HashReference	go to state 91
	Expression	go to state 196
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98

State 115:

	Expression -> Literal .	(Rule 137)

	$default	reduce using rule 137 (Expression)

State 116:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 117:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 197

State 118:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112

	Literal	go to state 198

State 119:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 216)

	WORD	shift, and go to state 57

	Type	go to state 199

State 120:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'( my'	shift, and go to state 201

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'('	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'['	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	'{'	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT_VOID_PAREN	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NOT	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 200
	OPTIONAL-16	go to state 202

State 121:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 122:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'use'	shift, and go to state 36

	'our %properties = ('	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 203
	STAR-22	go to state 204

State 123:

	HashDereferenced -> '%{' Variable . '}'	(Rule 209)

	'}'	shift, and go to state 205

State 124:

	HashReference -> '{' . HashEntry STAR-57 '}'	(Rule 208)

	'%{'	shift, and go to state 70
	WORD	shift, and go to state 142

	HashEntry	go to state 141
	HashDereferenced	go to state 140

State 125:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 210)

	'}'	shift, and go to state 206

State 126:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 94)
	Expression -> Variable .	(Rule 138)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-42 ')'	(Rule 146)

	OP02_METHOD_THINARROW	shift, and go to state 172
	OP03_MATH_INC_DEC	shift, and go to state 171

	')'	reduce using rule 138 (Expression)
	'..'	reduce using rule 138 (Expression)
	';'	reduce using rule 138 (Expression)
	']'	reduce using rule 138 (Expression)
	'}'	reduce using rule 138 (Expression)
	OP04_MATH_POW	reduce using rule 138 (Expression)
	OP06_REGEX_MATCH	reduce using rule 138 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 138 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 138 (Expression)
	OP08_STRING_CAT	reduce using rule 138 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 138 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 138 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 138 (Expression)
	OP13_BITWISE_AND	reduce using rule 138 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 138 (Expression)
	OP15_LOGICAL_AND	reduce using rule 138 (Expression)
	OP16_LOGICAL_OR	reduce using rule 138 (Expression)
	OP17_LIST_RANGE	reduce using rule 138 (Expression)
	OP18_TERNARY	reduce using rule 138 (Expression)
	OP21_LIST_COMMA	reduce using rule 138 (Expression)
	OP23_LOGICAL_AND	reduce using rule 138 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 138 (Expression)

State 127:

	OPTIONAL-54 -> ListElements .	(Rule 194)

	$default	reduce using rule 194 (OPTIONAL-54)

State 128:

	ListElements -> OP01_QW . '(' PLUS-53 ')'	(Rule 190)

	'('	shift, and go to state 207

State 129:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	ListElement -> Expression .	(Rule 191)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

	')'	reduce using rule 191 (ListElement)
	';'	reduce using rule 191 (ListElement)
	']'	reduce using rule 191 (ListElement)
	OP21_LIST_COMMA	reduce using rule 191 (ListElement)

State 130:

	ListElement -> TypeInner . Expression	(Rule 192)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 91
	Expression	go to state 208
	ArrayReference	go to state 75
	Literal	go to state 115
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Variable	go to state 126
	WordScoped	go to state 106
	Operator	go to state 108

State 131:

	ListElements -> ListElement . STAR-52	(Rule 189)

	$default	reduce using rule 186 (STAR-52)

	STAR-52	go to state 209

State 132:

	ArrayReference -> '[' OPTIONAL-54 . ']'	(Rule 196)

	']'	shift, and go to state 210

State 133:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 193)

	'%{'	shift, and go to state 70

	HashDereferenced	go to state 211

State 134:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 135:

	OPTIONAL-36 -> ListElements .	(Rule 116)

	$default	reduce using rule 116 (OPTIONAL-36)

State 136:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-36 . ')' ';'	(Rule 126)

	')'	shift, and go to state 212

State 137:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-38 . ';'	(Rule 128)

	';'	shift, and go to state 213

State 138:

	OPTIONAL-38 -> ListElements .	(Rule 120)

	$default	reduce using rule 120 (OPTIONAL-38)

State 139:

	Expression -> '{' '}' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 140:

	HashEntry -> HashDereferenced .	(Rule 202)

	$default	reduce using rule 202 (HashEntry)

State 141:

	HashReference -> '{' HashEntry . STAR-57 '}'	(Rule 208)

	$default	reduce using rule 207 (STAR-57)

	STAR-57	go to state 214

State 142:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-55 Expression	(Rule 201)

	OP20_HASH_FATARROW	shift, and go to state 215

State 143:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 113)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 144:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle . OPTIONAL-34 ')' ';'	(Rule 91)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 87 (OPTIONAL-34)

	TypeInner	go to state 130
	Expression	go to state 129
	HashReference	go to state 91
	ArrayReference	go to state 75
	Literal	go to state 115
	ListElement	go to state 131
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	OPTIONAL-34	go to state 217
	Variable	go to state 126
	WordScoped	go to state 106
	ListElements	go to state 216
	Operator	go to state 108

State 145:

	FileHandle -> '{*' . WORD '}'	(Rule 217)

	WORD	shift, and go to state 218

State 146:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 218)

	'filehandle_ref'	shift, and go to state 219

State 147:

	PAREN-43 -> LoopLabel COLON .	(Rule 150)

	$default	reduce using rule 150 (PAREN-43)

State 148:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 96)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188

	')'	reduce using rule 96 (Operator)
	'..'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP06_REGEX_MATCH	reduce using rule 96 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 96 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 96 (Operator)
	OP08_STRING_CAT	reduce using rule 96 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 96 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 96 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 149:

	Loop -> LoopFor .	(Rule 165)

	$default	reduce using rule 165 (Loop)

State 150:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 168)

	VARIABLE_SYMBOL	shift, and go to state 220

State 151:

	Loop -> LoopForEach .	(Rule 166)

	$default	reduce using rule 166 (Loop)

State 152:

	Statement -> OPTIONAL-44 Loop .	(Rule 154)

	$default	reduce using rule 154 (Statement)

State 153:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 170)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	WordScoped	go to state 106
	Variable	go to state 126
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	ArrayReference	go to state 75
	Literal	go to state 115
	HashReference	go to state 91
	Expression	go to state 221

State 154:

	Loop -> LoopWhile .	(Rule 167)

	$default	reduce using rule 167 (Loop)

State 155:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 169)

	WORD	shift, and go to state 57

	Type	go to state 222

State 156:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 157:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 216)
	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 218)

	'filehandle_ref'	shift, and go to state 219
	WORD	shift, and go to state 57

	Type	go to state 199

State 158:

	OperatorVoid -> OP01_PRINT_VOID FileHandle . OPTIONAL-40 ';'	(Rule 130)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	';'	reduce using rule 125 (OPTIONAL-40)

	Operator	go to state 108
	Variable	go to state 126
	ListElements	go to state 223
	WordScoped	go to state 106
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	OPTIONAL-40	go to state 224
	HashReference	go to state 91
	Expression	go to state 129
	TypeInner	go to state 130
	ListElement	go to state 131
	ArrayReference	go to state 75
	Literal	go to state 115

State 159:

	OPTIONAL-39 -> ListElements .	(Rule 122)

	$default	reduce using rule 122 (OPTIONAL-39)

State 160:

	OperatorVoid -> OP01_PRINT_VOID OPTIONAL-39 . ';'	(Rule 129)

	';'	shift, and go to state 225

State 161:

	STAR-50 -> STAR-50 . VariableRetrieval	(Rule 174)
	Variable -> VARIABLE_SYMBOL STAR-50 .	(Rule 176)

	OP02_ARRAY_THINARROW	shift, and go to state 228
	OP02_HASH_THINARROW	shift, and go to state 227

	')'	reduce using rule 176 (Variable)
	'..'	reduce using rule 176 (Variable)
	';'	reduce using rule 176 (Variable)
	']'	reduce using rule 176 (Variable)
	'}'	reduce using rule 176 (Variable)
	COLON	reduce using rule 176 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 176 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 176 (Variable)
	OP04_MATH_POW	reduce using rule 176 (Variable)
	OP06_REGEX_MATCH	reduce using rule 176 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 176 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 176 (Variable)
	OP08_STRING_CAT	reduce using rule 176 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 176 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 176 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 176 (Variable)
	OP13_BITWISE_AND	reduce using rule 176 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 176 (Variable)
	OP15_LOGICAL_AND	reduce using rule 176 (Variable)
	OP16_LOGICAL_OR	reduce using rule 176 (Variable)
	OP17_LIST_RANGE	reduce using rule 176 (Variable)
	OP18_TERNARY	reduce using rule 176 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 176 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 176 (Variable)
	OP21_LIST_COMMA	reduce using rule 176 (Variable)
	OP23_LOGICAL_AND	reduce using rule 176 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 176 (Variable)

	VariableRetrieval	go to state 226

State 162:

	Operator -> OP01_NAMED '(' . OPTIONAL-33 ')'	(Rule 90)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 85 (OPTIONAL-33)

	Variable	go to state 126
	WordScoped	go to state 106
	ListElements	go to state 230
	OPTIONAL-33	go to state 229
	Operator	go to state 108
	Expression	go to state 129
	HashReference	go to state 91
	TypeInner	go to state 130
	ListElement	go to state 131
	Literal	go to state 115
	ArrayReference	go to state 75
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99

State 163:

	Operator -> OP01_OPEN_CLOSE FileHandle . OPTIONAL-35 ';'	(Rule 92)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	';'	reduce using rule 89 (OPTIONAL-35)

	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	HashReference	go to state 91
	Expression	go to state 129
	TypeInner	go to state 130
	ListElement	go to state 131
	Literal	go to state 115
	ArrayReference	go to state 75
	OPTIONAL-35	go to state 232
	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106
	ListElements	go to state 231

State 164:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 180)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 181)

	VARIABLE_SYMBOL	shift, and go to state 233

State 165:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle . OPTIONAL-37 ')' ';'	(Rule 127)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 119 (OPTIONAL-37)

	Operator	go to state 108
	OPTIONAL-37	go to state 234
	Variable	go to state 126
	WordScoped	go to state 106
	ListElements	go to state 235
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	TypeInner	go to state 130
	Expression	go to state 129
	HashReference	go to state 91
	Literal	go to state 115
	ArrayReference	go to state 75
	ListElement	go to state 131

State 166:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 97)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	')'	shift, and go to state 236
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 167:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	Expression -> '(' Expression . ')'	(Rule 147)

	')'	shift, and go to state 237
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 168:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 197)

	'}'	shift, and go to state 238

State 169:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 198)

	'}'	shift, and go to state 239

State 170:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 103)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189

	')'	reduce using rule 103 (Operator)
	'..'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 103 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 103 (Operator)
	OP13_BITWISE_AND	reduce using rule 103 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 103 (Operator)
	OP15_LOGICAL_AND	reduce using rule 103 (Operator)
	OP16_LOGICAL_OR	reduce using rule 103 (Operator)
	OP17_LIST_RANGE	reduce using rule 103 (Operator)
	OP18_TERNARY	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 171:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 94)

	$default	reduce using rule 94 (Operator)

State 172:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-42 ')'	(Rule 146)

	WORD	shift, and go to state 240

State 173:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 183)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	WordScoped	go to state 106
	Variable	go to state 126
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	Literal	go to state 115
	ArrayReference	go to state 75
	HashReference	go to state 91
	Expression	go to state 241

State 174:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 182)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'<STDIN>'	shift, and go to state 242
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	ExpressionOrStdin	go to state 244
	Expression	go to state 243
	HashReference	go to state 91
	ArrayReference	go to state 75
	Literal	go to state 115
	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106

State 175:

	Expression -> WordScoped '(' . OPTIONAL-41 ')'	(Rule 145)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 133 (OPTIONAL-41)

	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	TypeInner	go to state 130
	OPTIONAL-41	go to state 246
	Expression	go to state 129
	HashReference	go to state 91
	ArrayReference	go to state 75
	Literal	go to state 115
	ListElement	go to state 131
	Operator	go to state 108
	Variable	go to state 126
	ListElements	go to state 245
	WordScoped	go to state 106

State 176:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 104)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189

	')'	reduce using rule 104 (Operator)
	'..'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 104 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 104 (Operator)
	OP13_BITWISE_AND	reduce using rule 104 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 104 (Operator)
	OP15_LOGICAL_AND	reduce using rule 104 (Operator)
	OP16_LOGICAL_OR	reduce using rule 104 (Operator)
	OP17_LIST_RANGE	reduce using rule 104 (Operator)
	OP18_TERNARY	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 177:

	LoopLabel -> WORD .	(Rule 213)

	$default	reduce using rule 213 (LoopLabel)

State 178:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 131)

	';'	shift, and go to state 247

State 179:

	Operator -> Expression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 98)

	OP06_REGEX_PATTERN	shift, and go to state 248

State 180:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 112)

	VARIABLE_SYMBOL	shift, and go to state 87

	Variable	go to state 249

State 181:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 111)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	WordScoped	go to state 106
	Variable	go to state 126
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	Literal	go to state 115
	ArrayReference	go to state 75
	HashReference	go to state 91
	Expression	go to state 250

State 182:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 109)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	WordScoped	go to state 106
	Variable	go to state 126
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	Literal	go to state 115
	ArrayReference	go to state 75
	HashReference	go to state 91
	Expression	go to state 251

State 183:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 110)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	Literal	go to state 115
	ArrayReference	go to state 75
	Expression	go to state 252
	HashReference	go to state 91
	Operator	go to state 108
	WordScoped	go to state 106
	Variable	go to state 126

State 184:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 108)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 91
	Expression	go to state 253
	ArrayReference	go to state 75
	Literal	go to state 115
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Variable	go to state 126
	WordScoped	go to state 106
	Operator	go to state 108

State 185:

	Operation -> Expression ';' .	(Rule 82)

	$default	reduce using rule 82 (Operation)

State 186:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 101)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	HashReference	go to state 91
	Expression	go to state 254
	Literal	go to state 115
	ArrayReference	go to state 75

State 187:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 107)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Expression	go to state 255
	HashReference	go to state 91
	ArrayReference	go to state 75
	Literal	go to state 115

State 188:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 95)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	WordScoped	go to state 106
	Variable	go to state 126
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	Literal	go to state 115
	ArrayReference	go to state 75
	Expression	go to state 256
	HashReference	go to state 91

State 189:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 102)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	ArrayReference	go to state 75
	Literal	go to state 115
	HashReference	go to state 91
	Expression	go to state 257
	Operator	go to state 108
	WordScoped	go to state 106
	Variable	go to state 126

State 190:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 100)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Expression	go to state 258
	HashReference	go to state 91
	ArrayReference	go to state 75
	Literal	go to state 115
	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106

State 191:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 114)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashReference	go to state 91
	Expression	go to state 259
	Literal	go to state 115
	ArrayReference	go to state 75
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Variable	go to state 126
	WordScoped	go to state 106
	Operator	go to state 108

State 192:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 106)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Expression	go to state 260
	HashReference	go to state 91
	Literal	go to state 115
	ArrayReference	go to state 75

State 193:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 115)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	WordScoped	go to state 106
	Variable	go to state 126
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	ArrayReference	go to state 75
	Literal	go to state 115
	HashReference	go to state 91
	Expression	go to state 261

State 194:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 105)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Expression	go to state 262
	HashReference	go to state 91
	Literal	go to state 115
	ArrayReference	go to state 75
	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106

State 195:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 99)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	HashReference	go to state 91
	Expression	go to state 263
	Literal	go to state 115
	ArrayReference	go to state 75
	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106

State 196:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-46 OPTIONAL-48	(Rule 164)

	')'	shift, and go to state 264
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 197:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 198:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal . ';'	(Rule 41)

	';'	shift, and go to state 265

State 199:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 216)

	'$TYPED_'	shift, and go to state 266

State 200:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 201:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 57

	Type	go to state 267

State 202:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 93
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_NAMED_VOID	shift, and go to state 76
	OP01_NAMED_VOID_PAREN	shift, and go to state 73
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 86
	OP01_PRINT_VOID_PAREN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP19_LOOP_CONTROL	shift, and go to state 111
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 77
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 152 (OPTIONAL-44)
	'foreach my'	reduce using rule 152 (OPTIONAL-44)
	'while ('	reduce using rule 152 (OPTIONAL-44)

	VariableModification	go to state 74
	ArrayReference	go to state 75
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	LoopLabel	go to state 82
	WordScoped	go to state 106
	PAREN-43	go to state 100
	PLUS-17	go to state 268
	VariableDeclaration	go to state 102
	Variable	go to state 104
	Conditional	go to state 105
	Statement	go to state 89
	Operation	go to state 269
	OPTIONAL-44	go to state 84
	Operator	go to state 108
	OperatorVoid	go to state 92
	Literal	go to state 115
	Expression	go to state 113
	HashReference	go to state 91

State 203:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 204:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties = ('	shift, and go to state 272
	'use constant'	shift, and go to state 46

	Constant	go to state 271
	Properties	go to state 270

State 205:

	HashDereferenced -> '%{' Variable '}' .	(Rule 209)

	$default	reduce using rule 209 (HashDereferenced)

State 206:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 210)

	$default	reduce using rule 210 (HashDereferenced)

State 207:

	ListElements -> OP01_QW '(' . PLUS-53 ')'	(Rule 190)

	WORD	shift, and go to state 274

	PLUS-53	go to state 273

State 208:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	ListElement -> TypeInner Expression .	(Rule 192)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

	')'	reduce using rule 192 (ListElement)
	';'	reduce using rule 192 (ListElement)
	']'	reduce using rule 192 (ListElement)
	OP21_LIST_COMMA	reduce using rule 192 (ListElement)

State 209:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 185)
	ListElements -> ListElement STAR-52 .	(Rule 189)

	OP21_LIST_COMMA	shift, and go to state 276

	')'	reduce using rule 189 (ListElements)
	';'	reduce using rule 189 (ListElements)
	']'	reduce using rule 189 (ListElements)

	PAREN-51	go to state 275

State 210:

	ArrayReference -> '[' OPTIONAL-54 ']' .	(Rule 196)

	$default	reduce using rule 196 (ArrayReference)

State 211:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 193)

	$default	reduce using rule 193 (ListElement)

State 212:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-36 ')' . ';'	(Rule 126)

	';'	shift, and go to state 277

State 213:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-38 ';' .	(Rule 128)

	$default	reduce using rule 128 (OperatorVoid)

State 214:

	STAR-57 -> STAR-57 . PAREN-56	(Rule 206)
	HashReference -> '{' HashEntry STAR-57 . '}'	(Rule 208)

	'}'	shift, and go to state 280
	OP21_LIST_COMMA	shift, and go to state 279

	PAREN-56	go to state 278

State 215:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-55 Expression	(Rule 201)

	'my'	shift, and go to state 119

	'%{'	reduce using rule 200 (OPTIONAL-55)
	'('	reduce using rule 200 (OPTIONAL-55)
	'@{'	reduce using rule 200 (OPTIONAL-55)
	'['	reduce using rule 200 (OPTIONAL-55)
	'undef'	reduce using rule 200 (OPTIONAL-55)
	'{'	reduce using rule 200 (OPTIONAL-55)
	LITERAL_NUMBER	reduce using rule 200 (OPTIONAL-55)
	LITERAL_STRING	reduce using rule 200 (OPTIONAL-55)
	OP01_NAMED	reduce using rule 200 (OPTIONAL-55)
	OP01_OPEN_CLOSE	reduce using rule 200 (OPTIONAL-55)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 200 (OPTIONAL-55)
	OP03_MATH_INC_DEC	reduce using rule 200 (OPTIONAL-55)
	OP05_LOGICAL_NEG	reduce using rule 200 (OPTIONAL-55)
	OP05_MATH_NEG	reduce using rule 200 (OPTIONAL-55)
	OP10_NAMED_UNARY	reduce using rule 200 (OPTIONAL-55)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 200 (OPTIONAL-55)
	OP22_LOGICAL_NOT	reduce using rule 200 (OPTIONAL-55)
	VARIABLE_SYMBOL	reduce using rule 200 (OPTIONAL-55)
	WORD	reduce using rule 200 (OPTIONAL-55)
	WORD_SCOPED	reduce using rule 200 (OPTIONAL-55)

	OPTIONAL-55	go to state 281
	TypeInner	go to state 282

State 216:

	OPTIONAL-34 -> ListElements .	(Rule 86)

	$default	reduce using rule 86 (OPTIONAL-34)

State 217:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-34 . ')' ';'	(Rule 91)

	')'	shift, and go to state 283

State 218:

	FileHandle -> '{*' WORD . '}'	(Rule 217)

	'}'	shift, and go to state 284

State 219:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 218)

	VARIABLE_SYMBOL	shift, and go to state 285

State 220:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 168)

	'('	shift, and go to state 286

State 221:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 170)

	')'	shift, and go to state 287
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 222:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 169)

	VARIABLE_SYMBOL	shift, and go to state 288

State 223:

	OPTIONAL-40 -> ListElements .	(Rule 124)

	$default	reduce using rule 124 (OPTIONAL-40)

State 224:

	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-40 . ';'	(Rule 130)

	';'	shift, and go to state 289

State 225:

	OperatorVoid -> OP01_PRINT_VOID OPTIONAL-39 ';' .	(Rule 129)

	$default	reduce using rule 129 (OperatorVoid)

State 226:

	STAR-50 -> STAR-50 VariableRetrieval .	(Rule 174)

	$default	reduce using rule 174 (STAR-50)

State 227:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 178)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 179)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 291
	WORD_SCOPED	shift, and go to state 22

	Expression	go to state 290
	HashReference	go to state 91
	ArrayReference	go to state 75
	Literal	go to state 115
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	Variable	go to state 126
	WordScoped	go to state 106
	Operator	go to state 108

State 228:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 177)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	HashReference	go to state 91
	Expression	go to state 292
	ArrayReference	go to state 75
	Literal	go to state 115
	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106

State 229:

	Operator -> OP01_NAMED '(' OPTIONAL-33 . ')'	(Rule 90)

	')'	shift, and go to state 293

State 230:

	OPTIONAL-33 -> ListElements .	(Rule 84)

	$default	reduce using rule 84 (OPTIONAL-33)

State 231:

	OPTIONAL-35 -> ListElements .	(Rule 88)

	$default	reduce using rule 88 (OPTIONAL-35)

State 232:

	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-35 . ';'	(Rule 92)

	';'	shift, and go to state 294

State 233:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 180)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN ExpressionOrStdin ';'	(Rule 181)

	';'	shift, and go to state 296
	OP19_VARIABLE_ASSIGN	shift, and go to state 295

State 234:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-37 . ')' ';'	(Rule 127)

	')'	shift, and go to state 297

State 235:

	OPTIONAL-37 -> ListElements .	(Rule 118)

	$default	reduce using rule 118 (OPTIONAL-37)

State 236:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 97)

	$default	reduce using rule 97 (Operator)

State 237:

	Expression -> '(' Expression ')' .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 238:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 197)

	$default	reduce using rule 197 (ArrayDereferenced)

State 239:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 198)

	$default	reduce using rule 198 (ArrayDereferenced)

State 240:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-42 ')'	(Rule 146)

	'('	shift, and go to state 298

State 241:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 183)

	';'	shift, and go to state 299
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 242:

	ExpressionOrStdin -> '<STDIN>' .	(Rule 149)

	$default	reduce using rule 149 (ExpressionOrStdin)

State 243:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	ExpressionOrStdin -> Expression .	(Rule 148)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

	';'	reduce using rule 148 (ExpressionOrStdin)

State 244:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 182)

	';'	shift, and go to state 300

State 245:

	OPTIONAL-41 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-41)

State 246:

	Expression -> WordScoped '(' OPTIONAL-41 . ')'	(Rule 145)

	')'	shift, and go to state 301

State 247:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 131)

	$default	reduce using rule 131 (OperatorVoid)

State 248:

	Operator -> Expression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 98)

	$default	reduce using rule 98 (Operator)

State 249:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 112)

	COLON	shift, and go to state 302

State 250:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 251:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 252:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 253:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187

	')'	reduce using rule 108 (Operator)
	'..'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 254:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190

	')'	reduce using rule 101 (Operator)
	'..'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP08_STRING_CAT	reduce using rule 101 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 101 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 101 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 101 (Operator)
	OP13_BITWISE_AND	reduce using rule 101 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 101 (Operator)
	OP15_LOGICAL_AND	reduce using rule 101 (Operator)
	OP16_LOGICAL_OR	reduce using rule 101 (Operator)
	OP17_LIST_RANGE	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 255:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192

	')'	reduce using rule 107 (Operator)
	'..'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 256:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188

	')'	reduce using rule 95 (Operator)
	'..'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP06_REGEX_MATCH	reduce using rule 95 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 95 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 95 (Operator)
	OP08_STRING_CAT	reduce using rule 95 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 95 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 257:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186

	')'	reduce using rule 102 (Operator)
	'..'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 102 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 102 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 258:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195

	')'	reduce using rule 100 (Operator)
	'..'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 100 (Operator)
	OP08_STRING_CAT	reduce using rule 100 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 259:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 260:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 261:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 262:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 263:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179

	')'	reduce using rule 99 (Operator)
	'..'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 99 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 99 (Operator)
	OP08_STRING_CAT	reduce using rule 99 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 99 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 99 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 99 (Operator)
	OP13_BITWISE_AND	reduce using rule 99 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 264:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-46 OPTIONAL-48	(Rule 164)

	'{'	shift, and go to state 304

	CodeBlock	go to state 303

State 265:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 266:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 216)

	WORD	shift, and go to state 305

State 267:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 306

State 268:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 93
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	'}'	shift, and go to state 307
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_NAMED_VOID	shift, and go to state 76
	OP01_NAMED_VOID_PAREN	shift, and go to state 73
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 86
	OP01_PRINT_VOID_PAREN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP19_LOOP_CONTROL	shift, and go to state 111
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 77
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 152 (OPTIONAL-44)
	'foreach my'	reduce using rule 152 (OPTIONAL-44)
	'while ('	reduce using rule 152 (OPTIONAL-44)

	Literal	go to state 115
	OperatorVoid	go to state 92
	HashReference	go to state 91
	Expression	go to state 113
	Statement	go to state 89
	Operation	go to state 308
	OPTIONAL-44	go to state 84
	Operator	go to state 108
	WordScoped	go to state 106
	LoopLabel	go to state 82
	Variable	go to state 104
	Conditional	go to state 105
	VariableDeclaration	go to state 102
	PAREN-43	go to state 100
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	ArrayReference	go to state 75
	VariableModification	go to state 74

State 269:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 270:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . OPTIONAL-23 STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	'our %properties_class = ('	shift, and go to state 311

	'our'	reduce using rule 58 (OPTIONAL-23)
	LITERAL_NUMBER	reduce using rule 58 (OPTIONAL-23)

	OPTIONAL-23	go to state 310
	PropertiesClass	go to state 309

State 271:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 272:

	Properties -> 'our %properties = (' . Critic HashEntryTyped STAR-26 ')' ';'	(Rule 65)
	Properties -> 'our %properties = (' . ')' ';' Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 2
	')'	shift, and go to state 312

	Critic	go to state 313

State 273:

	PLUS-53 -> PLUS-53 . WORD	(Rule 187)
	ListElements -> OP01_QW '(' PLUS-53 . ')'	(Rule 190)

	')'	shift, and go to state 314
	WORD	shift, and go to state 315

State 274:

	PLUS-53 -> WORD .	(Rule 188)

	$default	reduce using rule 188 (PLUS-53)

State 275:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 185)

	$default	reduce using rule 185 (STAR-52)

State 276:

	PAREN-51 -> OP21_LIST_COMMA . ListElement	(Rule 184)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 106
	Variable	go to state 126
	Operator	go to state 108
	Literal	go to state 115
	ArrayReference	go to state 75
	ListElement	go to state 316
	TypeInner	go to state 130
	HashReference	go to state 91
	Expression	go to state 129
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98

State 277:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-36 ')' ';' .	(Rule 126)

	$default	reduce using rule 126 (OperatorVoid)

State 278:

	STAR-57 -> STAR-57 PAREN-56 .	(Rule 206)

	$default	reduce using rule 206 (STAR-57)

State 279:

	PAREN-56 -> OP21_LIST_COMMA . HashEntry	(Rule 205)

	'%{'	shift, and go to state 70
	WORD	shift, and go to state 142

	HashDereferenced	go to state 140
	HashEntry	go to state 317

State 280:

	HashReference -> '{' HashEntry STAR-57 '}' .	(Rule 208)

	$default	reduce using rule 208 (HashReference)

State 281:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-55 . Expression	(Rule 201)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	WordScoped	go to state 106
	Variable	go to state 126
	Operator	go to state 108
	ArrayReference	go to state 75
	Literal	go to state 115
	HashReference	go to state 91
	Expression	go to state 318
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98

State 282:

	OPTIONAL-55 -> TypeInner .	(Rule 199)

	$default	reduce using rule 199 (OPTIONAL-55)

State 283:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-34 ')' . ';'	(Rule 91)

	';'	shift, and go to state 319

State 284:

	FileHandle -> '{*' WORD '}' .	(Rule 217)

	$default	reduce using rule 217 (FileHandle)

State 285:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 218)

	$default	reduce using rule 218 (FileHandle)

State 286:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 168)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	HashReference	go to state 91
	Expression	go to state 320
	ArrayReference	go to state 75
	Literal	go to state 115
	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106

State 287:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 170)

	'{'	shift, and go to state 304

	CodeBlock	go to state 321

State 288:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 169)

	'('	shift, and go to state 322

State 289:

	OperatorVoid -> OP01_PRINT_VOID FileHandle OPTIONAL-40 ';' .	(Rule 130)

	$default	reduce using rule 130 (OperatorVoid)

State 290:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 178)

	'}'	shift, and go to state 323
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 291:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 179)
	WordScoped -> WORD .	(Rule 211)

	'}'	shift, and go to state 324

	'('	reduce using rule 211 (WordScoped)

State 292:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 177)

	']'	shift, and go to state 325
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 293:

	Operator -> OP01_NAMED '(' OPTIONAL-33 ')' .	(Rule 90)

	$default	reduce using rule 90 (Operator)

State 294:

	Operator -> OP01_OPEN_CLOSE FileHandle OPTIONAL-35 ';' .	(Rule 92)

	$default	reduce using rule 92 (Operator)

State 295:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . ExpressionOrStdin ';'	(Rule 181)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'<STDIN>'	shift, and go to state 242
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	HashDereferenced	go to state 98
	ExpressionOrStdin	go to state 326
	ArrayDereferenced	go to state 99
	Expression	go to state 243
	HashReference	go to state 91
	ArrayReference	go to state 75
	Literal	go to state 115
	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106

State 296:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 180)

	$default	reduce using rule 180 (VariableDeclaration)

State 297:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-37 ')' . ';'	(Rule 127)

	';'	shift, and go to state 327

State 298:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-42 ')'	(Rule 146)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	')'	reduce using rule 135 (OPTIONAL-42)

	Variable	go to state 126
	WordScoped	go to state 106
	ListElements	go to state 328
	Operator	go to state 108
	OPTIONAL-42	go to state 329
	TypeInner	go to state 130
	HashReference	go to state 91
	Expression	go to state 129
	Literal	go to state 115
	ArrayReference	go to state 75
	ListElement	go to state 131
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99

State 299:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 183)

	$default	reduce using rule 183 (VariableModification)

State 300:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 182)

	$default	reduce using rule 182 (VariableModification)

State 301:

	Expression -> WordScoped '(' OPTIONAL-41 ')' .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 302:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 112)

	VARIABLE_SYMBOL	shift, and go to state 87

	Variable	go to state 330

State 303:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-46 OPTIONAL-48	(Rule 164)

	$default	reduce using rule 160 (STAR-46)

	STAR-46	go to state 331

State 304:

	CodeBlock -> '{' . PLUS-49 '}'	(Rule 173)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 93
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_NAMED_VOID	shift, and go to state 76
	OP01_NAMED_VOID_PAREN	shift, and go to state 73
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 86
	OP01_PRINT_VOID_PAREN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP19_LOOP_CONTROL	shift, and go to state 111
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 77
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 152 (OPTIONAL-44)
	'foreach my'	reduce using rule 152 (OPTIONAL-44)
	'while ('	reduce using rule 152 (OPTIONAL-44)

	ArrayReference	go to state 75
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	VariableModification	go to state 74
	OperatorVoid	go to state 92
	Literal	go to state 115
	HashReference	go to state 91
	Expression	go to state 113
	LoopLabel	go to state 82
	PLUS-49	go to state 332
	WordScoped	go to state 106
	PAREN-43	go to state 100
	VariableDeclaration	go to state 102
	Variable	go to state 104
	Conditional	go to state 105
	Statement	go to state 89
	Operation	go to state 333
	Operator	go to state 108
	OPTIONAL-44	go to state 84

State 305:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 216)

	OP19_VARIABLE_ASSIGN	shift, and go to state 334

State 306:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 335

State 307:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 336

State 308:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 309:

	OPTIONAL-23 -> PropertiesClass .	(Rule 57)

	$default	reduce using rule 57 (OPTIONAL-23)

State 310:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 . STAR-24 LITERAL_NUMBER ';'	(Rule 61)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 337

State 311:

	PropertiesClass -> 'our %properties_class = (' . Critic HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'## no critic qw('	shift, and go to state 2

	Critic	go to state 338

State 312:

	Properties -> 'our %properties = (' ')' . ';' Critic	(Rule 66)

	';'	shift, and go to state 339

State 313:

	Properties -> 'our %properties = (' Critic . HashEntryTyped STAR-26 ')' ';'	(Rule 65)

	'%{'	shift, and go to state 70
	WORD	shift, and go to state 341

	HashDereferenced	go to state 342
	HashEntryTyped	go to state 340

State 314:

	ListElements -> OP01_QW '(' PLUS-53 ')' .	(Rule 190)

	$default	reduce using rule 190 (ListElements)

State 315:

	PLUS-53 -> PLUS-53 WORD .	(Rule 187)

	$default	reduce using rule 187 (PLUS-53)

State 316:

	PAREN-51 -> OP21_LIST_COMMA ListElement .	(Rule 184)

	$default	reduce using rule 184 (PAREN-51)

State 317:

	PAREN-56 -> OP21_LIST_COMMA HashEntry .	(Rule 205)

	$default	reduce using rule 205 (PAREN-56)

State 318:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-55 Expression .	(Rule 201)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

	'}'	reduce using rule 201 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 201 (HashEntry)

State 319:

	Operator -> OP01_OPEN_CLOSE_PAREN FileHandle OPTIONAL-34 ')' ';' .	(Rule 91)

	$default	reduce using rule 91 (Operator)

State 320:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 168)

	'..'	shift, and go to state 343
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 321:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 170)

	$default	reduce using rule 170 (LoopWhile)

State 322:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 169)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'my'	shift, and go to state 119
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	KEYS_OR_VALUES	shift, and go to state 133
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_QW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	ArrayReference	go to state 75
	Literal	go to state 115
	ListElement	go to state 131
	TypeInner	go to state 130
	Expression	go to state 129
	HashReference	go to state 91
	Operator	go to state 108
	WordScoped	go to state 106
	ListElements	go to state 344
	Variable	go to state 126

State 323:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 178)

	$default	reduce using rule 178 (VariableRetrieval)

State 324:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 179)

	$default	reduce using rule 179 (VariableRetrieval)

State 325:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 177)

	$default	reduce using rule 177 (VariableRetrieval)

State 326:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin . ';'	(Rule 181)

	';'	shift, and go to state 345

State 327:

	OperatorVoid -> OP01_PRINT_VOID_PAREN FileHandle OPTIONAL-37 ')' ';' .	(Rule 127)

	$default	reduce using rule 127 (OperatorVoid)

State 328:

	OPTIONAL-42 -> ListElements .	(Rule 134)

	$default	reduce using rule 134 (OPTIONAL-42)

State 329:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-42 . ')'	(Rule 146)

	')'	shift, and go to state 346

State 330:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 112)

	$default	reduce using rule 112 (Operator)

State 331:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 159)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-46 . OPTIONAL-48	(Rule 164)

	'else'	shift, and go to state 349
	'elsif ('	shift, and go to state 348

	$end	reduce using rule 163 (OPTIONAL-48)
	'%{'	reduce using rule 163 (OPTIONAL-48)
	'('	reduce using rule 163 (OPTIONAL-48)
	'@{'	reduce using rule 163 (OPTIONAL-48)
	'['	reduce using rule 163 (OPTIONAL-48)
	'for my integer'	reduce using rule 163 (OPTIONAL-48)
	'foreach my'	reduce using rule 163 (OPTIONAL-48)
	'if ('	reduce using rule 163 (OPTIONAL-48)
	'my'	reduce using rule 163 (OPTIONAL-48)
	'undef'	reduce using rule 163 (OPTIONAL-48)
	'while ('	reduce using rule 163 (OPTIONAL-48)
	'{'	reduce using rule 163 (OPTIONAL-48)
	'}'	reduce using rule 163 (OPTIONAL-48)
	LITERAL_NUMBER	reduce using rule 163 (OPTIONAL-48)
	LITERAL_STRING	reduce using rule 163 (OPTIONAL-48)
	OP01_NAMED	reduce using rule 163 (OPTIONAL-48)
	OP01_NAMED_VOID	reduce using rule 163 (OPTIONAL-48)
	OP01_NAMED_VOID_PAREN	reduce using rule 163 (OPTIONAL-48)
	OP01_OPEN_CLOSE	reduce using rule 163 (OPTIONAL-48)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 163 (OPTIONAL-48)
	OP01_PRINT_VOID	reduce using rule 163 (OPTIONAL-48)
	OP01_PRINT_VOID_PAREN	reduce using rule 163 (OPTIONAL-48)
	OP03_MATH_INC_DEC	reduce using rule 163 (OPTIONAL-48)
	OP05_LOGICAL_NEG	reduce using rule 163 (OPTIONAL-48)
	OP05_MATH_NEG	reduce using rule 163 (OPTIONAL-48)
	OP10_NAMED_UNARY	reduce using rule 163 (OPTIONAL-48)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 163 (OPTIONAL-48)
	OP19_LOOP_CONTROL	reduce using rule 163 (OPTIONAL-48)
	OP22_LOGICAL_NOT	reduce using rule 163 (OPTIONAL-48)
	VARIABLE_SYMBOL	reduce using rule 163 (OPTIONAL-48)
	WORD	reduce using rule 163 (OPTIONAL-48)
	WORD_SCOPED	reduce using rule 163 (OPTIONAL-48)

	PAREN-45	go to state 347
	OPTIONAL-48	go to state 351
	PAREN-47	go to state 350

State 332:

	PLUS-49 -> PLUS-49 . Operation	(Rule 171)
	CodeBlock -> '{' PLUS-49 . '}'	(Rule 173)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 93
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	'}'	shift, and go to state 353
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_NAMED_VOID	shift, and go to state 76
	OP01_NAMED_VOID_PAREN	shift, and go to state 73
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 86
	OP01_PRINT_VOID_PAREN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP19_LOOP_CONTROL	shift, and go to state 111
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 77
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 152 (OPTIONAL-44)
	'foreach my'	reduce using rule 152 (OPTIONAL-44)
	'while ('	reduce using rule 152 (OPTIONAL-44)

	Literal	go to state 115
	OperatorVoid	go to state 92
	HashReference	go to state 91
	Expression	go to state 113
	Statement	go to state 89
	Operator	go to state 108
	Operation	go to state 352
	OPTIONAL-44	go to state 84
	WordScoped	go to state 106
	LoopLabel	go to state 82
	Conditional	go to state 105
	Variable	go to state 104
	VariableDeclaration	go to state 102
	PAREN-43	go to state 100
	ArrayDereferenced	go to state 99
	HashDereferenced	go to state 98
	ArrayReference	go to state 75
	VariableModification	go to state 74

State 333:

	PLUS-49 -> Operation .	(Rule 172)

	$default	reduce using rule 172 (PLUS-49)

State 334:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 216)

	$default	reduce using rule 216 (TypeInner)

State 335:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 354
	OP21_LIST_COMMA	shift, and go to state 356

	PAREN-18	go to state 355

State 336:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 337:

	STAR-24 -> STAR-24 . MethodOrSubroutine	(Rule 59)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 . LITERAL_NUMBER ';'	(Rule 61)

	'our'	shift, and go to state 359
	LITERAL_NUMBER	shift, and go to state 357

	Subroutine	go to state 358
	MethodOrSubroutine	go to state 361
	Method	go to state 360

State 338:

	PropertiesClass -> 'our %properties_class = (' Critic . HashEntryTyped STAR-28 ')' ';'	(Rule 70)

	'%{'	shift, and go to state 70
	WORD	shift, and go to state 341

	HashDereferenced	go to state 342
	HashEntryTyped	go to state 362

State 339:

	Properties -> 'our %properties = (' ')' ';' . Critic	(Rule 66)

	'## no critic qw('	shift, and go to state 2

	Critic	go to state 363

State 340:

	Properties -> 'our %properties = (' Critic HashEntryTyped . STAR-26 ')' ';'	(Rule 65)

	$default	reduce using rule 64 (STAR-26)

	STAR-26	go to state 364

State 341:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 203)

	OP20_HASH_FATARROW	shift, and go to state 365

State 342:

	HashEntryTyped -> HashDereferenced .	(Rule 204)

	$default	reduce using rule 204 (HashEntryTyped)

State 343:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 168)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 126
	WordScoped	go to state 106
	Operator	go to state 108
	HashReference	go to state 91
	Expression	go to state 366
	ArrayReference	go to state 75
	Literal	go to state 115
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99

State 344:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 169)

	')'	shift, and go to state 367

State 345:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN ExpressionOrStdin ';' .	(Rule 181)

	$default	reduce using rule 181 (VariableDeclaration)

State 346:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-42 ')' .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 347:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 159)

	$default	reduce using rule 159 (STAR-46)

State 348:

	PAREN-45 -> 'elsif (' . Expression ')' CodeBlock	(Rule 158)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Variable	go to state 126
	WordScoped	go to state 106
	Operator	go to state 108
	Expression	go to state 368
	HashReference	go to state 91
	ArrayReference	go to state 75
	Literal	go to state 115
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99

State 349:

	PAREN-47 -> 'else' . CodeBlock	(Rule 161)

	'{'	shift, and go to state 304

	CodeBlock	go to state 369

State 350:

	OPTIONAL-48 -> PAREN-47 .	(Rule 162)

	$default	reduce using rule 162 (OPTIONAL-48)

State 351:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-46 OPTIONAL-48 .	(Rule 164)

	$default	reduce using rule 164 (Conditional)

State 352:

	PLUS-49 -> PLUS-49 Operation .	(Rule 171)

	$default	reduce using rule 171 (PLUS-49)

State 353:

	CodeBlock -> '{' PLUS-49 '}' .	(Rule 173)

	$default	reduce using rule 173 (CodeBlock)

State 354:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 370

State 355:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 356:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 371

State 357:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER . ';'	(Rule 61)

	';'	shift, and go to state 372

State 358:

	MethodOrSubroutine -> Subroutine .	(Rule 81)

	$default	reduce using rule 81 (MethodOrSubroutine)

State 359:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	WORD	shift, and go to state 373

	TypeMethod	go to state 374
	Type	go to state 56

State 360:

	MethodOrSubroutine -> Method .	(Rule 80)

	$default	reduce using rule 80 (MethodOrSubroutine)

State 361:

	STAR-24 -> STAR-24 MethodOrSubroutine .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 362:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped . STAR-28 ')' ';'	(Rule 70)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 375

State 363:

	Properties -> 'our %properties = (' ')' ';' Critic .	(Rule 66)

	$default	reduce using rule 66 (Properties)

State 364:

	STAR-26 -> STAR-26 . PAREN-25	(Rule 63)
	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 . ')' ';'	(Rule 65)

	')'	shift, and go to state 376
	OP21_LIST_COMMA	shift, and go to state 378

	PAREN-25	go to state 377

State 365:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 203)

	'my'	shift, and go to state 119

	TypeInner	go to state 379

State 366:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 168)

	')'	shift, and go to state 380
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 367:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 169)

	'{'	shift, and go to state 304

	CodeBlock	go to state 381

State 368:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	PAREN-45 -> 'elsif (' Expression . ')' CodeBlock	(Rule 158)

	')'	shift, and go to state 382
	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

State 369:

	PAREN-47 -> 'else' CodeBlock .	(Rule 161)

	$default	reduce using rule 161 (PAREN-47)

State 370:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 383

State 371:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 57

	Type	go to state 384

State 372:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties OPTIONAL-23 STAR-24 LITERAL_NUMBER ';' .	(Rule 61)

	$default	reduce using rule 61 (Class)

State 373:

	Type -> WORD .	(Rule 214)
	TypeMethod -> WORD . '__method'	(Rule 215)

	'__method'	shift, and go to state 385

	VARIABLE_SYMBOL	reduce using rule 214 (Type)

State 374:

	Method -> 'our' TypeMethod . VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	VARIABLE_SYMBOL	shift, and go to state 386

State 375:

	STAR-28 -> STAR-28 . PAREN-27	(Rule 68)
	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 . ')' ';'	(Rule 70)

	')'	shift, and go to state 387
	OP21_LIST_COMMA	shift, and go to state 389

	PAREN-27	go to state 388

State 376:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' . ';'	(Rule 65)

	';'	shift, and go to state 390

State 377:

	STAR-26 -> STAR-26 PAREN-25 .	(Rule 63)

	$default	reduce using rule 63 (STAR-26)

State 378:

	PAREN-25 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 62)

	'%{'	shift, and go to state 70
	WORD	shift, and go to state 341

	HashDereferenced	go to state 342
	HashEntryTyped	go to state 391

State 379:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 203)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 22

	Operator	go to state 108
	Variable	go to state 126
	WordScoped	go to state 106
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	HashReference	go to state 91
	Expression	go to state 392
	ArrayReference	go to state 75
	Literal	go to state 115

State 380:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 168)

	'{'	shift, and go to state 304

	CodeBlock	go to state 393

State 381:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 169)

	$default	reduce using rule 169 (LoopForEach)

State 382:

	PAREN-45 -> 'elsif (' Expression ')' . CodeBlock	(Rule 158)

	'{'	shift, and go to state 304

	CodeBlock	go to state 394

State 383:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 384:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 395

State 385:

	TypeMethod -> WORD '__method' .	(Rule 215)

	$default	reduce using rule 215 (TypeMethod)

State 386:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL . '= sub {' OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'= sub {'	shift, and go to state 396

State 387:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' . ';'	(Rule 70)

	';'	shift, and go to state 397

State 388:

	STAR-28 -> STAR-28 PAREN-27 .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 389:

	PAREN-27 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 67)

	'%{'	shift, and go to state 70
	WORD	shift, and go to state 341

	HashEntryTyped	go to state 398
	HashDereferenced	go to state 342

State 390:

	Properties -> 'our %properties = (' Critic HashEntryTyped STAR-26 ')' ';' .	(Rule 65)

	$default	reduce using rule 65 (Properties)

State 391:

	PAREN-25 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 62)

	$default	reduce using rule 62 (PAREN-25)

State 392:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 95)
	Operator -> Expression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 98)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 99)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 100)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 101)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 102)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 105)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 106)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 107)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 108)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 109)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 110)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 111)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 112)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 114)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 115)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 203)

	OP04_MATH_POW	shift, and go to state 188
	OP06_REGEX_MATCH	shift, and go to state 179
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 195
	OP08_MATH_ADD_SUB	shift, and go to state 190
	OP08_STRING_CAT	shift, and go to state 186
	OP09_BITWISE_SHIFT	shift, and go to state 189
	OP11_COMPARE_LT_GT	shift, and go to state 194
	OP12_COMPARE_EQ_NEQ	shift, and go to state 192
	OP13_BITWISE_AND	shift, and go to state 187
	OP14_BITWISE_OR_XOR	shift, and go to state 184
	OP15_LOGICAL_AND	shift, and go to state 182
	OP16_LOGICAL_OR	shift, and go to state 183
	OP17_LIST_RANGE	shift, and go to state 181
	OP18_TERNARY	shift, and go to state 180
	OP23_LOGICAL_AND	shift, and go to state 191
	OP24_LOGICAL_OR_XOR	shift, and go to state 193

	')'	reduce using rule 203 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 203 (HashEntryTyped)

State 393:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 168)

	$default	reduce using rule 168 (LoopFor)

State 394:

	PAREN-45 -> 'elsif (' Expression ')' CodeBlock .	(Rule 158)

	$default	reduce using rule 158 (PAREN-45)

State 395:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 396:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' . OPTIONAL-29 PLUS-30 '}' ';'	(Rule 75)

	'( my'	shift, and go to state 399

	'%{'	reduce using rule 72 (OPTIONAL-29)
	'('	reduce using rule 72 (OPTIONAL-29)
	'@{'	reduce using rule 72 (OPTIONAL-29)
	'['	reduce using rule 72 (OPTIONAL-29)
	'for my integer'	reduce using rule 72 (OPTIONAL-29)
	'foreach my'	reduce using rule 72 (OPTIONAL-29)
	'if ('	reduce using rule 72 (OPTIONAL-29)
	'my'	reduce using rule 72 (OPTIONAL-29)
	'undef'	reduce using rule 72 (OPTIONAL-29)
	'while ('	reduce using rule 72 (OPTIONAL-29)
	'{'	reduce using rule 72 (OPTIONAL-29)
	LITERAL_NUMBER	reduce using rule 72 (OPTIONAL-29)
	LITERAL_STRING	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_NAMED_VOID_PAREN	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN_CLOSE	reduce using rule 72 (OPTIONAL-29)
	OP01_OPEN_CLOSE_PAREN	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT_VOID	reduce using rule 72 (OPTIONAL-29)
	OP01_PRINT_VOID_PAREN	reduce using rule 72 (OPTIONAL-29)
	OP03_MATH_INC_DEC	reduce using rule 72 (OPTIONAL-29)
	OP05_LOGICAL_NEG	reduce using rule 72 (OPTIONAL-29)
	OP05_MATH_NEG	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY	reduce using rule 72 (OPTIONAL-29)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 72 (OPTIONAL-29)
	OP19_LOOP_CONTROL	reduce using rule 72 (OPTIONAL-29)
	OP22_LOGICAL_NOT	reduce using rule 72 (OPTIONAL-29)
	VARIABLE_SYMBOL	reduce using rule 72 (OPTIONAL-29)
	WORD	reduce using rule 72 (OPTIONAL-29)
	WORD_SCOPED	reduce using rule 72 (OPTIONAL-29)

	MethodArguments	go to state 400
	OPTIONAL-29	go to state 401

State 397:

	PropertiesClass -> 'our %properties_class = (' Critic HashEntryTyped STAR-28 ')' ';' .	(Rule 70)

	$default	reduce using rule 70 (PropertiesClass)

State 398:

	PAREN-27 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 67)

	$default	reduce using rule 67 (PAREN-27)

State 399:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	TYPE_CLASS_OR_SELF	shift, and go to state 402

State 400:

	OPTIONAL-29 -> MethodArguments .	(Rule 71)

	$default	reduce using rule 71 (OPTIONAL-29)

State 401:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-29 . PLUS-30 '}' ';'	(Rule 75)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 93
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_NAMED_VOID	shift, and go to state 76
	OP01_NAMED_VOID_PAREN	shift, and go to state 73
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 86
	OP01_PRINT_VOID_PAREN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP19_LOOP_CONTROL	shift, and go to state 111
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 77
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 152 (OPTIONAL-44)
	'foreach my'	reduce using rule 152 (OPTIONAL-44)
	'while ('	reduce using rule 152 (OPTIONAL-44)

	Expression	go to state 113
	HashReference	go to state 91
	OperatorVoid	go to state 92
	Literal	go to state 115
	VariableDeclaration	go to state 102
	PAREN-43	go to state 100
	Variable	go to state 104
	Conditional	go to state 105
	LoopLabel	go to state 82
	WordScoped	go to state 106
	Operation	go to state 404
	OPTIONAL-44	go to state 84
	Operator	go to state 108
	Statement	go to state 89
	PLUS-30	go to state 403
	ArrayReference	go to state 75
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	VariableModification	go to state 74

State 402:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	$default	reduce using rule 78 (STAR-32)

	STAR-32	go to state 405

State 403:

	PLUS-30 -> PLUS-30 . Operation	(Rule 73)
	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 . '}' ';'	(Rule 75)

	'%{'	shift, and go to state 70
	'('	shift, and go to state 97
	'@{'	shift, and go to state 101
	'['	shift, and go to state 71
	'if ('	shift, and go to state 114
	'my'	shift, and go to state 93
	'undef'	shift, and go to state 107
	'{'	shift, and go to state 78
	'}'	shift, and go to state 407
	LITERAL_NUMBER	shift, and go to state 80
	LITERAL_STRING	shift, and go to state 112
	OP01_NAMED	shift, and go to state 88
	OP01_NAMED_VOID	shift, and go to state 76
	OP01_NAMED_VOID_PAREN	shift, and go to state 73
	OP01_OPEN_CLOSE	shift, and go to state 90
	OP01_OPEN_CLOSE_PAREN	shift, and go to state 81
	OP01_PRINT_VOID	shift, and go to state 86
	OP01_PRINT_VOID_PAREN	shift, and go to state 94
	OP03_MATH_INC_DEC	shift, and go to state 85
	OP05_LOGICAL_NEG	shift, and go to state 83
	OP05_MATH_NEG	shift, and go to state 95
	OP10_NAMED_UNARY	shift, and go to state 103
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 110
	OP19_LOOP_CONTROL	shift, and go to state 111
	OP22_LOGICAL_NOT	shift, and go to state 79
	VARIABLE_SYMBOL	shift, and go to state 87
	WORD	shift, and go to state 77
	WORD_SCOPED	shift, and go to state 22

	'for my integer'	reduce using rule 152 (OPTIONAL-44)
	'foreach my'	reduce using rule 152 (OPTIONAL-44)
	'while ('	reduce using rule 152 (OPTIONAL-44)

	Operator	go to state 108
	Operation	go to state 406
	OPTIONAL-44	go to state 84
	Statement	go to state 89
	Variable	go to state 104
	Conditional	go to state 105
	PAREN-43	go to state 100
	VariableDeclaration	go to state 102
	WordScoped	go to state 106
	LoopLabel	go to state 82
	Expression	go to state 113
	HashReference	go to state 91
	Literal	go to state 115
	OperatorVoid	go to state 92
	VariableModification	go to state 74
	HashDereferenced	go to state 98
	ArrayDereferenced	go to state 99
	ArrayReference	go to state 75

State 404:

	PLUS-30 -> Operation .	(Rule 74)

	$default	reduce using rule 74 (PLUS-30)

State 405:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 77)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	')'	shift, and go to state 409
	OP21_LIST_COMMA	shift, and go to state 410

	PAREN-31	go to state 408

State 406:

	PLUS-30 -> PLUS-30 Operation .	(Rule 73)

	$default	reduce using rule 73 (PLUS-30)

State 407:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' . ';'	(Rule 75)

	';'	shift, and go to state 411

State 408:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 77)

	$default	reduce using rule 77 (STAR-32)

State 409:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 79)

	OP19_VARIABLE_ASSIGN	shift, and go to state 412

State 410:

	PAREN-31 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 76)

	'my'	shift, and go to state 413

State 411:

	Method -> 'our' TypeMethod VARIABLE_SYMBOL '= sub {' OPTIONAL-29 PLUS-30 '}' ';' .	(Rule 75)

	$default	reduce using rule 75 (Method)

State 412:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 79)

	'@_;'	shift, and go to state 414

State 413:

	PAREN-31 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 76)

	WORD	shift, and go to state 57

	Type	go to state 415

State 414:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-32 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 79)

	$default	reduce using rule 79 (MethodArguments)

State 415:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 76)

	VARIABLE_SYMBOL	shift, and go to state 416

State 416:

	PAREN-31 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 76)

	$default	reduce using rule 76 (PAREN-31)


Summary:
--------
Number of rules         : 221
Number of terminals     : 88
Number of non-terminals : 106
Number of states        : 417
