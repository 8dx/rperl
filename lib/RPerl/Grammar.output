Conflicts:
----------
Conflict in state 156 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 156 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 156 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 156 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 156 between rule 113 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 156 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 156 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 156 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 156 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 156 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 156 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 156 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 156 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 156 between rule 113 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 156 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 156 between rule 113 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 162 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 162 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 162 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 162 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 162 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 162 between rule 114 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 162 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 162 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 162 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 162 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 162 between rule 114 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 162 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 162 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 162 between rule 114 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 162 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 162 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 163 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 163 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 163 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 163 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 163 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 163 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 163 between rule 123 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 163 between rule 123 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 163 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 163 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 163 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 163 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 163 between rule 123 and token OP18_TERNARY resolved as shift.
Conflict in state 163 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 163 between rule 123 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 163 between rule 123 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 164 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 164 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 164 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 164 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 164 between rule 106 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 164 between rule 106 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 164 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 164 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 164 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 164 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 164 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 164 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 164 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 164 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 164 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 164 between rule 106 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 202 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 202 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 202 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 202 between rule 118 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 202 between rule 118 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 202 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 202 between rule 118 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 202 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 202 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 202 between rule 118 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 202 between rule 118 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 202 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 202 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 202 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 202 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 202 between rule 118 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 203 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 203 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 203 between rule 115 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 203 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 203 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 203 between rule 115 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 203 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 203 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 203 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 203 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 203 between rule 115 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 203 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 203 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 203 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 203 between rule 115 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 204 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 204 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 204 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 204 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 204 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 204 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 204 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 204 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 204 between rule 105 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 204 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 204 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 204 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 204 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 204 between rule 105 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 204 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 204 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 205 between rule 111 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 205 between rule 111 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 205 between rule 111 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 205 between rule 111 and token OP18_TERNARY resolved as reduce.
Conflict in state 205 between rule 111 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 205 between rule 111 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 205 between rule 111 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 205 between rule 111 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 205 between rule 111 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 205 between rule 111 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 205 between rule 111 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 205 between rule 111 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 205 between rule 111 and token OP04_MATH_POW resolved as shift.
Conflict in state 205 between rule 111 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 205 between rule 111 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 205 between rule 111 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 206 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 206 between rule 110 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 206 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 206 between rule 110 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 206 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 206 between rule 110 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 206 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 206 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 206 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 206 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 206 between rule 110 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 206 between rule 110 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 206 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 206 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 206 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 207 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 207 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 207 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 207 between rule 117 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 207 between rule 117 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 117 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 207 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 207 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 207 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 207 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 207 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 207 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 207 between rule 117 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 207 between rule 117 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 207 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 207 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 208 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 208 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 208 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 208 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 208 between rule 121 and token OP18_TERNARY resolved as reduce.
Conflict in state 208 between rule 121 and token OP17_LIST_RANGE resolved as error.
Conflict in state 208 between rule 121 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 208 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 208 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 208 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 208 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 208 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 208 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 208 between rule 121 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 208 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 208 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 119 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 209 between rule 119 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 209 between rule 119 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 209 between rule 119 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 209 between rule 119 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 209 between rule 119 and token OP18_TERNARY resolved as reduce.
Conflict in state 209 between rule 119 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 209 between rule 119 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 209 between rule 119 and token OP04_MATH_POW resolved as shift.
Conflict in state 209 between rule 119 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 209 between rule 119 and token OP08_STRING_CAT resolved as shift.
Conflict in state 209 between rule 119 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 209 between rule 119 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 209 between rule 119 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 209 between rule 119 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 209 between rule 119 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 210 between rule 125 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 210 between rule 125 and token OP18_TERNARY resolved as shift.
Conflict in state 210 between rule 125 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 210 between rule 125 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 210 between rule 125 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 210 between rule 125 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 210 between rule 125 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 210 between rule 125 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 210 between rule 125 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 210 between rule 125 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 210 between rule 125 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 210 between rule 125 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 210 between rule 125 and token OP08_STRING_CAT resolved as shift.
Conflict in state 210 between rule 125 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 210 between rule 125 and token OP04_MATH_POW resolved as shift.
Conflict in state 210 between rule 125 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 211 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 211 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 116 and token OP12_COMPARE_EQ_NEQ resolved as error.
Conflict in state 211 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 211 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 211 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 211 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 211 between rule 116 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 211 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 211 between rule 116 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 211 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 211 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 211 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 211 between rule 116 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 211 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 211 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 212 between rule 109 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 212 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 212 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 212 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 212 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 212 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 212 between rule 109 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 212 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 212 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 212 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 212 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 212 between rule 109 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 212 between rule 109 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 212 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 212 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 124 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 213 between rule 124 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 124 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 124 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 213 between rule 124 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 213 between rule 124 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 213 between rule 124 and token OP04_MATH_POW resolved as shift.
Conflict in state 213 between rule 124 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 213 between rule 124 and token OP08_STRING_CAT resolved as shift.
Conflict in state 213 between rule 124 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 213 between rule 124 and token OP18_TERNARY resolved as shift.
Conflict in state 213 between rule 124 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 213 between rule 124 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 213 between rule 124 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 213 between rule 124 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 213 between rule 124 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 214 between rule 120 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 214 between rule 120 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 214 between rule 120 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 214 between rule 120 and token OP08_STRING_CAT resolved as shift.
Conflict in state 214 between rule 120 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 214 between rule 120 and token OP04_MATH_POW resolved as shift.
Conflict in state 214 between rule 120 and token OP12_COMPARE_EQ_NEQ resolved as shift.
Conflict in state 214 between rule 120 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 214 between rule 120 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 214 between rule 120 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 214 between rule 120 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 214 between rule 120 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 214 between rule 120 and token OP18_TERNARY resolved as reduce.
Conflict in state 214 between rule 120 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 214 between rule 120 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 214 between rule 120 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 215 between rule 112 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 215 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 215 between rule 112 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 215 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 215 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 215 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 215 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 215 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 215 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 112 and token OP12_COMPARE_EQ_NEQ resolved as reduce.
Conflict in state 215 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 215 between rule 112 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 215 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 215 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 215 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 215 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.

Rules:
------
0:	$start -> CompileUnit $end
1:	PLUS-1 -> PLUS-1 Module
2:	PLUS-1 -> Module
3:	CompileUnit -> Program
4:	CompileUnit -> PLUS-1
5:	STAR-2 -> STAR-2 Critic
6:	STAR-2 -> /* empty */
7:	STAR-3 -> STAR-3 Include
8:	STAR-3 -> /* empty */
9:	STAR-4 -> STAR-4 Constant
10:	STAR-4 -> /* empty */
11:	STAR-5 -> STAR-5 Subroutine
12:	STAR-5 -> /* empty */
13:	PLUS-6 -> PLUS-6 Operation
14:	PLUS-6 -> Operation
15:	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6
16:	Module -> Package
17:	Module -> Class
18:	STAR-7 -> STAR-7 Critic
19:	STAR-7 -> /* empty */
20:	STAR-8 -> STAR-8 Include
21:	STAR-8 -> /* empty */
22:	STAR-9 -> STAR-9 Constant
23:	STAR-9 -> /* empty */
24:	PLUS-10 -> PLUS-10 Subroutine
25:	PLUS-10 -> Subroutine
26:	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'
27:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
28:	PLUS-11 -> PLUS-11 WORD
29:	PLUS-11 -> WORD
30:	Critic -> '## no critic qw(' PLUS-11 ')'
31:	PLUS-12 -> PLUS-12 WORD
32:	PLUS-12 -> WORD
33:	Include -> 'use' WordScoped ';'
34:	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';'
35:	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'
36:	OPTIONAL-13 -> TypeInner
37:	OPTIONAL-13 -> /* empty */
38:	OPTIONAL-14 -> TypeInner
39:	OPTIONAL-14 -> /* empty */
40:	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal
41:	STAR-16 -> STAR-16 PAREN-15
42:	STAR-16 -> /* empty */
43:	OPTIONAL-17 -> TypeInner
44:	OPTIONAL-17 -> /* empty */
45:	OPTIONAL-18 -> TypeInner
46:	OPTIONAL-18 -> /* empty */
47:	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal
48:	STAR-20 -> STAR-20 PAREN-19
49:	STAR-20 -> /* empty */
50:	ConstantValue -> Literal
51:	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']'
52:	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'
53:	OPTIONAL-21 -> SubroutineArguments
54:	OPTIONAL-21 -> /* empty */
55:	PLUS-22 -> PLUS-22 Operation
56:	PLUS-22 -> Operation
57:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'
58:	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
59:	STAR-24 -> STAR-24 PAREN-23
60:	STAR-24 -> /* empty */
61:	STAR-25 -> STAR-25 ArgumentCheck
62:	STAR-25 -> /* empty */
63:	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25
64:	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression
65:	OPTIONAL-27 -> PAREN-26
66:	OPTIONAL-27 -> /* empty */
67:	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';'
68:	STAR-28 -> STAR-28 Critic
69:	STAR-28 -> /* empty */
70:	STAR-29 -> STAR-29 Include
71:	STAR-29 -> /* empty */
72:	STAR-30 -> STAR-30 Constant
73:	STAR-30 -> /* empty */
74:	STAR-31 -> STAR-31 Method
75:	STAR-31 -> /* empty */
76:	PLUS-32 -> PLUS-32 Subroutine
77:	PLUS-32 -> Subroutine
78:	PAREN-33 -> PLUS-32 '1;' '1;'
79:	OPTIONAL-34 -> PAREN-33
80:	OPTIONAL-34 -> /* empty */
81:	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34
82:	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped
83:	STAR-36 -> STAR-36 PAREN-35
84:	STAR-36 -> /* empty */
85:	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';'
86:	Properties -> 'our %properties = (' ')' ';'
87:	OPTIONAL-37 -> MethodArguments
88:	OPTIONAL-37 -> /* empty */
89:	PLUS-38 -> PLUS-38 Operation
90:	PLUS-38 -> Operation
91:	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'
92:	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
93:	STAR-40 -> STAR-40 PAREN-39
94:	STAR-40 -> /* empty */
95:	STAR-41 -> STAR-41 ArgumentCheck
96:	STAR-41 -> /* empty */
97:	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41
98:	Operation -> Expression ';'
99:	Operation -> Statement
100:	OPTIONAL-42 -> ListElements
101:	OPTIONAL-42 -> /* empty */
102:	Operator -> OP01_NAMED '(' OPTIONAL-42 ')'
103:	Operator -> OP03_MATH_INC_DEC Variable
104:	Operator -> Variable OP03_MATH_INC_DEC
105:	Operator -> Expression OP04_MATH_POW Expression
106:	Operator -> OP05_LOGICAL_NEG Expression
107:	Operator -> OP05_MATH_NEG Expression ')'
108:	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'
109:	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression
110:	Operator -> Expression OP08_MATH_ADD_SUB Expression
111:	Operator -> Expression OP08_STRING_CAT Expression
112:	Operator -> Expression OP09_BITWISE_SHIFT Expression
113:	Operator -> OP10_NAMED_UNARY Expression
114:	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression
115:	Operator -> Expression OP11_COMPARE_LT_GT Expression
116:	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression
117:	Operator -> Expression OP13_BITWISE_AND Expression
118:	Operator -> Expression OP14_BITWISE_OR_XOR Expression
119:	Operator -> Expression OP15_LOGICAL_AND Expression
120:	Operator -> Expression OP16_LOGICAL_OR Expression
121:	Operator -> Expression OP17_LIST_RANGE Expression
122:	Operator -> Expression OP18_TERNARY Variable COLON Variable
123:	Operator -> OP22_LOGICAL_NOT Expression
124:	Operator -> Expression OP23_LOGICAL_AND Expression
125:	Operator -> Expression OP24_LOGICAL_OR_XOR Expression
126:	OPTIONAL-43 -> ListElements
127:	OPTIONAL-43 -> /* empty */
128:	OPTIONAL-44 -> ListElements
129:	OPTIONAL-44 -> /* empty */
130:	OPTIONAL-45 -> ListElements
131:	OPTIONAL-45 -> /* empty */
132:	OPTIONAL-46 -> ListElements
133:	OPTIONAL-46 -> /* empty */
134:	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';'
135:	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';'
136:	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';'
137:	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';'
138:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
139:	OPTIONAL-47 -> ListElements
140:	OPTIONAL-47 -> /* empty */
141:	OPTIONAL-48 -> ListElements
142:	OPTIONAL-48 -> /* empty */
143:	Expression -> 'undef'
144:	Expression -> Literal
145:	Expression -> Variable
146:	Expression -> ArrayReference
147:	Expression -> ArrayDereferenced
148:	Expression -> HashReference
149:	Expression -> HashDereferenced
150:	Expression -> '{' '}'
151:	Expression -> Operator
152:	Expression -> WordScoped '(' OPTIONAL-47 ')'
153:	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'
154:	Expression -> '(' Expression ')'
155:	PAREN-49 -> LoopLabel COLON
156:	OPTIONAL-50 -> PAREN-49
157:	OPTIONAL-50 -> /* empty */
158:	Statement -> Conditional
159:	Statement -> OPTIONAL-50 Loop
160:	Statement -> OperatorVoid
161:	Statement -> VariableDeclaration
162:	Statement -> VariableModification
163:	PAREN-51 -> 'elsif (' Expression ')' CodeBlock
164:	STAR-52 -> STAR-52 PAREN-51
165:	STAR-52 -> /* empty */
166:	PAREN-53 -> 'else' CodeBlock
167:	OPTIONAL-54 -> PAREN-53
168:	OPTIONAL-54 -> /* empty */
169:	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54
170:	Loop -> LoopFor
171:	Loop -> LoopForEach
172:	Loop -> LoopWhile
173:	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock
174:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock
175:	LoopWhile -> 'while (' Expression ')' CodeBlock
176:	PLUS-55 -> PLUS-55 Operation
177:	PLUS-55 -> Operation
178:	CodeBlock -> '{' PLUS-55 '}'
179:	STAR-56 -> STAR-56 VariableRetrieval
180:	STAR-56 -> /* empty */
181:	Variable -> VARIABLE_SYMBOL STAR-56
182:	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']'
183:	VariableRetrieval -> OP02_HASH_THINARROW Expression '}'
184:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
185:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
186:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'
187:	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';'
188:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';'
189:	PAREN-57 -> OP21_LIST_COMMA ListElement
190:	STAR-58 -> STAR-58 PAREN-57
191:	STAR-58 -> /* empty */
192:	ListElements -> ListElement STAR-58
193:	ListElement -> Expression
194:	ListElement -> TypeInner Expression
195:	ListElement -> KEYS_OR_VALUES HashDereferenced
196:	OPTIONAL-59 -> ListElements
197:	OPTIONAL-59 -> /* empty */
198:	ArrayReference -> '[' OPTIONAL-59 ']'
199:	ArrayDereferenced -> '@{' Variable '}'
200:	ArrayDereferenced -> '@{' ArrayReference '}'
201:	OPTIONAL-60 -> TypeInner
202:	OPTIONAL-60 -> /* empty */
203:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 Expression
204:	HashEntry -> HashDereferenced
205:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression
206:	HashEntryTyped -> HashDereferenced
207:	PAREN-61 -> OP21_LIST_COMMA HashEntry
208:	STAR-62 -> STAR-62 PAREN-61
209:	STAR-62 -> /* empty */
210:	HashReference -> '{' HashEntry STAR-62 '}'
211:	HashDereferenced -> '%{' Variable '}'
212:	HashDereferenced -> '%{' HashReference '}'
213:	WordScoped -> WORD
214:	WordScoped -> WORD_SCOPED
215:	FileHandle -> '{*' WORD '}'
216:	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL
217:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
218:	Type -> WORD
219:	LoopLabel -> WORD
220:	Literal -> LITERAL_STRING
221:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'package'	shift, and go to state 1
	SHEBANG	shift, and go to state 2

	PLUS-1	go to state 3
	Class	go to state 4
	Program	go to state 6
	CompileUnit	go to state 5
	Package	go to state 7
	Module	go to state 8

State 1:

	Package -> 'package' . WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' . WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 9

State 2:

	Program -> SHEBANG . Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use strict;'	shift, and go to state 12

	Header	go to state 13

State 3:

	PLUS-1 -> PLUS-1 . Module	(Rule 1)
	CompileUnit -> PLUS-1 .	(Rule 4)

	'package'	shift, and go to state 1

	$end	reduce using rule 4 (CompileUnit)

	Module	go to state 14
	Package	go to state 7
	Class	go to state 4

State 4:

	Module -> Class .	(Rule 17)

	$default	reduce using rule 17 (Module)

State 5:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 15

State 6:

	CompileUnit -> Program .	(Rule 3)

	$default	reduce using rule 3 (CompileUnit)

State 7:

	Module -> Package .	(Rule 16)

	$default	reduce using rule 16 (Module)

State 8:

	PLUS-1 -> Module .	(Rule 2)

	$default	reduce using rule 2 (PLUS-1)

State 9:

	Package -> 'package' WordScoped . ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped . ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 16

State 10:

	WordScoped -> WORD .	(Rule 213)

	$default	reduce using rule 213 (WordScoped)

State 11:

	WordScoped -> WORD_SCOPED .	(Rule 214)

	$default	reduce using rule 214 (WordScoped)

State 12:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'use warnings;'	shift, and go to state 17

State 13:

	Program -> SHEBANG Header . STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	$default	reduce using rule 6 (STAR-2)

	STAR-2	go to state 18

State 14:

	PLUS-1 -> PLUS-1 Module .	(Rule 1)

	$default	reduce using rule 1 (PLUS-1)

State 15:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 16:

	Package -> 'package' WordScoped ';' . Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' . Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use strict;'	shift, and go to state 12

	Header	go to state 19

State 17:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'use RPerl;'	shift, and go to state 20

State 18:

	STAR-2 -> STAR-2 . Critic	(Rule 5)
	Program -> SHEBANG Header STAR-2 . STAR-3 STAR-4 STAR-5 PLUS-6	(Rule 15)

	'## no critic qw('	shift, and go to state 23

	'%{'	reduce using rule 8 (STAR-3)
	'('	reduce using rule 8 (STAR-3)
	'@{'	reduce using rule 8 (STAR-3)
	'['	reduce using rule 8 (STAR-3)
	'for my integer'	reduce using rule 8 (STAR-3)
	'foreach my'	reduce using rule 8 (STAR-3)
	'if ('	reduce using rule 8 (STAR-3)
	'my'	reduce using rule 8 (STAR-3)
	'our'	reduce using rule 8 (STAR-3)
	'undef'	reduce using rule 8 (STAR-3)
	'use constant'	reduce using rule 8 (STAR-3)
	'use'	reduce using rule 8 (STAR-3)
	'while ('	reduce using rule 8 (STAR-3)
	'{'	reduce using rule 8 (STAR-3)
	LITERAL_NUMBER	reduce using rule 8 (STAR-3)
	LITERAL_STRING	reduce using rule 8 (STAR-3)
	OP01_NAMED	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID	reduce using rule 8 (STAR-3)
	OP01_NAMED_VOID_PAREN	reduce using rule 8 (STAR-3)
	OP03_MATH_INC_DEC	reduce using rule 8 (STAR-3)
	OP05_LOGICAL_NEG	reduce using rule 8 (STAR-3)
	OP05_MATH_NEG	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY	reduce using rule 8 (STAR-3)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 8 (STAR-3)
	OP19_LOOP_CONTROL	reduce using rule 8 (STAR-3)
	OP22_LOGICAL_NOT	reduce using rule 8 (STAR-3)
	VARIABLE_SYMBOL	reduce using rule 8 (STAR-3)
	WORD	reduce using rule 8 (STAR-3)
	WORD_SCOPED	reduce using rule 8 (STAR-3)

	Critic	go to state 22
	STAR-3	go to state 21

State 19:

	Package -> 'package' WordScoped ';' Header . STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)
	Class -> 'package' WordScoped ';' Header . 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use parent qw('	shift, and go to state 24

	'## no critic qw('	reduce using rule 19 (STAR-7)
	'our'	reduce using rule 19 (STAR-7)
	'use constant'	reduce using rule 19 (STAR-7)
	'use'	reduce using rule 19 (STAR-7)

	STAR-7	go to state 25

State 20:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 27)

	'our'	shift, and go to state 26

State 21:

	STAR-3 -> STAR-3 . Include	(Rule 7)
	Program -> SHEBANG Header STAR-2 STAR-3 . STAR-4 STAR-5 PLUS-6	(Rule 15)

	'use'	shift, and go to state 28

	'%{'	reduce using rule 10 (STAR-4)
	'('	reduce using rule 10 (STAR-4)
	'@{'	reduce using rule 10 (STAR-4)
	'['	reduce using rule 10 (STAR-4)
	'for my integer'	reduce using rule 10 (STAR-4)
	'foreach my'	reduce using rule 10 (STAR-4)
	'if ('	reduce using rule 10 (STAR-4)
	'my'	reduce using rule 10 (STAR-4)
	'our'	reduce using rule 10 (STAR-4)
	'undef'	reduce using rule 10 (STAR-4)
	'use constant'	reduce using rule 10 (STAR-4)
	'while ('	reduce using rule 10 (STAR-4)
	'{'	reduce using rule 10 (STAR-4)
	LITERAL_NUMBER	reduce using rule 10 (STAR-4)
	LITERAL_STRING	reduce using rule 10 (STAR-4)
	OP01_NAMED	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID	reduce using rule 10 (STAR-4)
	OP01_NAMED_VOID_PAREN	reduce using rule 10 (STAR-4)
	OP03_MATH_INC_DEC	reduce using rule 10 (STAR-4)
	OP05_LOGICAL_NEG	reduce using rule 10 (STAR-4)
	OP05_MATH_NEG	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY	reduce using rule 10 (STAR-4)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 10 (STAR-4)
	OP19_LOOP_CONTROL	reduce using rule 10 (STAR-4)
	OP22_LOGICAL_NOT	reduce using rule 10 (STAR-4)
	VARIABLE_SYMBOL	reduce using rule 10 (STAR-4)
	WORD	reduce using rule 10 (STAR-4)
	WORD_SCOPED	reduce using rule 10 (STAR-4)

	STAR-4	go to state 27
	Include	go to state 29

State 22:

	STAR-2 -> STAR-2 Critic .	(Rule 5)

	$default	reduce using rule 5 (STAR-2)

State 23:

	Critic -> '## no critic qw(' . PLUS-11 ')'	(Rule 30)

	WORD	shift, and go to state 30

	PLUS-11	go to state 31

State 24:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' . WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 32

State 25:

	STAR-7 -> STAR-7 . Critic	(Rule 18)
	Package -> 'package' WordScoped ';' Header STAR-7 . STAR-8 STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'## no critic qw('	shift, and go to state 23

	'our'	reduce using rule 21 (STAR-8)
	'use constant'	reduce using rule 21 (STAR-8)
	'use'	reduce using rule 21 (STAR-8)

	STAR-8	go to state 33
	Critic	go to state 34

State 26:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 27)

	VERSION_NUMBER_ASSIGN	shift, and go to state 35

State 27:

	STAR-4 -> STAR-4 . Constant	(Rule 9)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 . STAR-5 PLUS-6	(Rule 15)

	'use constant'	shift, and go to state 37

	'%{'	reduce using rule 12 (STAR-5)
	'('	reduce using rule 12 (STAR-5)
	'@{'	reduce using rule 12 (STAR-5)
	'['	reduce using rule 12 (STAR-5)
	'for my integer'	reduce using rule 12 (STAR-5)
	'foreach my'	reduce using rule 12 (STAR-5)
	'if ('	reduce using rule 12 (STAR-5)
	'my'	reduce using rule 12 (STAR-5)
	'our'	reduce using rule 12 (STAR-5)
	'undef'	reduce using rule 12 (STAR-5)
	'while ('	reduce using rule 12 (STAR-5)
	'{'	reduce using rule 12 (STAR-5)
	LITERAL_NUMBER	reduce using rule 12 (STAR-5)
	LITERAL_STRING	reduce using rule 12 (STAR-5)
	OP01_NAMED	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 12 (STAR-5)
	OP01_NAMED_VOID_PAREN	reduce using rule 12 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 12 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 12 (STAR-5)
	OP05_MATH_NEG	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 12 (STAR-5)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 12 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 12 (STAR-5)
	OP22_LOGICAL_NOT	reduce using rule 12 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 12 (STAR-5)
	WORD	reduce using rule 12 (STAR-5)
	WORD_SCOPED	reduce using rule 12 (STAR-5)

	STAR-5	go to state 38
	Constant	go to state 36

State 28:

	Include -> 'use' . WordScoped ';'	(Rule 33)
	Include -> 'use' . WordScoped 'qw(' PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	WordScoped	go to state 39

State 29:

	STAR-3 -> STAR-3 Include .	(Rule 7)

	$default	reduce using rule 7 (STAR-3)

State 30:

	PLUS-11 -> WORD .	(Rule 29)

	$default	reduce using rule 29 (PLUS-11)

State 31:

	PLUS-11 -> PLUS-11 . WORD	(Rule 28)
	Critic -> '## no critic qw(' PLUS-11 . ')'	(Rule 30)

	')'	shift, and go to state 40
	WORD	shift, and go to state 41

State 32:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped . ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	')'	shift, and go to state 42

State 33:

	STAR-8 -> STAR-8 . Include	(Rule 20)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 . STAR-9 PLUS-10 '1;' '1;'	(Rule 26)

	'use'	shift, and go to state 28

	'our'	reduce using rule 23 (STAR-9)
	'use constant'	reduce using rule 23 (STAR-9)

	STAR-9	go to state 44
	Include	go to state 43

State 34:

	STAR-7 -> STAR-7 Critic .	(Rule 18)

	$default	reduce using rule 18 (STAR-7)

State 35:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 27)

	$default	reduce using rule 27 (Header)

State 36:

	STAR-4 -> STAR-4 Constant .	(Rule 9)

	$default	reduce using rule 9 (STAR-4)

State 37:

	Constant -> 'use constant' . WORD OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	WORD	shift, and go to state 45

State 38:

	STAR-5 -> STAR-5 . Subroutine	(Rule 11)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 . PLUS-6	(Rule 15)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'if ('	shift, and go to state 71
	'my'	shift, and go to state 61
	'our'	shift, and go to state 62
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_NAMED_VOID_PAREN	shift, and go to state 51
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 86
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 87
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Variable	go to state 59
	WordScoped	go to state 60
	HashReference	go to state 56
	LoopLabel	go to state 52
	Subroutine	go to state 50
	ArrayDereferenced	go to state 74
	Conditional	go to state 53
	Operator	go to state 55
	PLUS-6	go to state 73
	OPTIONAL-50	go to state 48
	HashDereferenced	go to state 88
	VariableDeclaration	go to state 67
	Statement	go to state 66
	Expression	go to state 68
	PAREN-49	go to state 65
	Literal	go to state 81
	Operation	go to state 79
	OperatorVoid	go to state 80
	VariableModification	go to state 82
	ArrayReference	go to state 63

State 39:

	Include -> 'use' WordScoped . ';'	(Rule 33)
	Include -> 'use' WordScoped . 'qw(' PLUS-12 ')' ';'	(Rule 34)

	';'	shift, and go to state 89
	'qw('	shift, and go to state 90

State 40:

	Critic -> '## no critic qw(' PLUS-11 ')' .	(Rule 30)

	$default	reduce using rule 30 (Critic)

State 41:

	PLUS-11 -> PLUS-11 WORD .	(Rule 28)

	$default	reduce using rule 28 (PLUS-11)

State 42:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' . ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	';'	shift, and go to state 91

State 43:

	STAR-8 -> STAR-8 Include .	(Rule 20)

	$default	reduce using rule 20 (STAR-8)

State 44:

	STAR-9 -> STAR-9 . Constant	(Rule 22)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 . PLUS-10 '1;' '1;'	(Rule 26)

	'our'	shift, and go to state 62
	'use constant'	shift, and go to state 37

	Constant	go to state 93
	PLUS-10	go to state 94
	Subroutine	go to state 92

State 45:

	Constant -> 'use constant' WORD . OP20_HASH_FATARROW TypeInner ConstantValue ';'	(Rule 35)

	OP20_HASH_FATARROW	shift, and go to state 95

State 46:

	Expression -> '{' . '}'	(Rule 150)
	HashReference -> '{' . HashEntry STAR-62 '}'	(Rule 210)

	'%{'	shift, and go to state 54
	'}'	shift, and go to state 99
	WORD	shift, and go to state 98

	HashDereferenced	go to state 97
	HashEntry	go to state 96

State 47:

	Variable -> VARIABLE_SYMBOL . STAR-56	(Rule 181)

	$default	reduce using rule 180 (STAR-56)

	STAR-56	go to state 100

State 48:

	Statement -> OPTIONAL-50 . Loop	(Rule 159)

	'for my integer'	shift, and go to state 104
	'foreach my'	shift, and go to state 101
	'while ('	shift, and go to state 103

	LoopWhile	go to state 102
	Loop	go to state 106
	LoopForEach	go to state 107
	LoopFor	go to state 105

State 49:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 103)

	VARIABLE_SYMBOL	shift, and go to state 47

	Variable	go to state 108

State 50:

	STAR-5 -> STAR-5 Subroutine .	(Rule 11)

	$default	reduce using rule 11 (STAR-5)

State 51:

	OperatorVoid -> OP01_NAMED_VOID_PAREN . OPTIONAL-43 ')' ';'	(Rule 134)
	OperatorVoid -> OP01_NAMED_VOID_PAREN . FileHandle OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	'{*'	shift, and go to state 113
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 127 (OPTIONAL-43)

	OPTIONAL-43	go to state 117
	ArrayDereferenced	go to state 74
	TypeInner	go to state 116
	Operator	go to state 55
	HashReference	go to state 56
	ListElements	go to state 109
	Expression	go to state 112
	Variable	go to state 111
	HashDereferenced	go to state 88
	FileHandle	go to state 110
	WordScoped	go to state 60
	ListElement	go to state 115
	ArrayReference	go to state 63
	Literal	go to state 81

State 52:

	PAREN-49 -> LoopLabel . COLON	(Rule 155)

	COLON	shift, and go to state 119

State 53:

	Statement -> Conditional .	(Rule 158)

	$default	reduce using rule 158 (Statement)

State 54:

	HashDereferenced -> '%{' . Variable '}'	(Rule 211)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 212)

	'{'	shift, and go to state 120
	VARIABLE_SYMBOL	shift, and go to state 47

	HashReference	go to state 121
	Variable	go to state 122

State 55:

	Expression -> Operator .	(Rule 151)

	$default	reduce using rule 151 (Expression)

State 56:

	Expression -> HashReference .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 57:

	Expression -> '(' . Expression ')'	(Rule 154)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	Expression	go to state 123
	HashReference	go to state 56
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	Literal	go to state 81
	ArrayReference	go to state 63

State 58:

	Operator -> OP01_NAMED . '(' OPTIONAL-42 ')'	(Rule 102)

	'('	shift, and go to state 124

State 59:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 187)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY Expression ';'	(Rule 188)

	OP02_METHOD_THINARROW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 127
	OP19_VARIABLE_ASSIGN	shift, and go to state 125
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 126

	';'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 60:

	Expression -> WordScoped . '(' OPTIONAL-47 ')'	(Rule 152)

	'('	shift, and go to state 129

State 61:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 185)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 186)

	WORD	shift, and go to state 131

	Type	go to state 130

State 62:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	WORD	shift, and go to state 131

	Type	go to state 132

State 63:

	Expression -> ArrayReference .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 64:

	Expression -> 'undef' .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 65:

	OPTIONAL-50 -> PAREN-49 .	(Rule 156)

	$default	reduce using rule 156 (OPTIONAL-50)

State 66:

	Operation -> Statement .	(Rule 99)

	$default	reduce using rule 99 (Operation)

State 67:

	Statement -> VariableDeclaration .	(Rule 161)

	$default	reduce using rule 161 (Statement)

State 68:

	Operation -> Expression . ';'	(Rule 98)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	';'	shift, and go to state 142
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 69:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 199)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 200)

	'['	shift, and go to state 77
	VARIABLE_SYMBOL	shift, and go to state 47

	ArrayReference	go to state 150
	Variable	go to state 151

State 70:

	OperatorVoid -> OP01_NAMED_VOID . OPTIONAL-45 ';'	(Rule 136)
	OperatorVoid -> OP01_NAMED_VOID . FileHandle OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 114
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	'{*'	shift, and go to state 113
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	';'	reduce using rule 131 (OPTIONAL-45)

	HashReference	go to state 56
	ListElements	go to state 152
	Expression	go to state 112
	Variable	go to state 111
	FileHandle	go to state 153
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	TypeInner	go to state 116
	OPTIONAL-45	go to state 154
	ListElement	go to state 115
	ArrayReference	go to state 63
	Literal	go to state 81

State 71:

	Conditional -> 'if (' . Expression ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 169)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Operator	go to state 55
	ArrayDereferenced	go to state 74
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	Expression	go to state 155
	HashReference	go to state 56
	Literal	go to state 81
	ArrayReference	go to state 63

State 72:

	Operator -> OP10_NAMED_UNARY . Expression	(Rule 113)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	Expression	go to state 156
	HashReference	go to state 56
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	Operator	go to state 55
	ArrayDereferenced	go to state 74

State 73:

	PLUS-6 -> PLUS-6 . Operation	(Rule 13)
	Program -> SHEBANG Header STAR-2 STAR-3 STAR-4 STAR-5 PLUS-6 .	(Rule 15)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'if ('	shift, and go to state 71
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_NAMED_VOID_PAREN	shift, and go to state 51
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 86
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 87
	WORD_SCOPED	shift, and go to state 11

	$end	reduce using rule 15 (Program)
	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	ArrayReference	go to state 63
	Literal	go to state 81
	Operation	go to state 157
	OperatorVoid	go to state 80
	VariableModification	go to state 82
	VariableDeclaration	go to state 67
	Statement	go to state 66
	Expression	go to state 68
	HashDereferenced	go to state 88
	PAREN-49	go to state 65
	OPTIONAL-50	go to state 48
	HashReference	go to state 56
	Variable	go to state 59
	WordScoped	go to state 60
	LoopLabel	go to state 52
	Operator	go to state 55
	Conditional	go to state 53
	ArrayDereferenced	go to state 74

State 74:

	Expression -> ArrayDereferenced .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 75:

	Literal -> LITERAL_NUMBER .	(Rule 221)

	$default	reduce using rule 221 (Literal)

State 76:

	Operator -> OP05_MATH_NEG . Expression ')'	(Rule 107)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	Expression	go to state 158
	HashReference	go to state 56
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	ArrayDereferenced	go to state 74
	Operator	go to state 55

State 77:

	ArrayReference -> '[' . OPTIONAL-59 ']'	(Rule 198)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 161
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	']'	reduce using rule 197 (OPTIONAL-59)

	ArrayReference	go to state 63
	ListElement	go to state 115
	Literal	go to state 81
	ListElements	go to state 159
	Expression	go to state 112
	HashReference	go to state 56
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	OPTIONAL-59	go to state 160
	Variable	go to state 111
	TypeInner	go to state 116
	Operator	go to state 55
	ArrayDereferenced	go to state 74

State 78:

	Literal -> LITERAL_STRING .	(Rule 220)

	$default	reduce using rule 220 (Literal)

State 79:

	PLUS-6 -> Operation .	(Rule 14)

	$default	reduce using rule 14 (PLUS-6)

State 80:

	Statement -> OperatorVoid .	(Rule 160)

	$default	reduce using rule 160 (Statement)

State 81:

	Expression -> Literal .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 82:

	Statement -> VariableModification .	(Rule 162)

	$default	reduce using rule 162 (Statement)

State 83:

	Operator -> OP10_NAMED_UNARY_STRINGIFY . Expression	(Rule 114)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	HashReference	go to state 56
	Expression	go to state 162
	Variable	go to state 111
	WordScoped	go to state 60
	HashDereferenced	go to state 88

State 84:

	Operator -> OP22_LOGICAL_NOT . Expression	(Rule 123)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	Variable	go to state 111
	Expression	go to state 163
	HashReference	go to state 56

State 85:

	Operator -> OP05_LOGICAL_NEG . Expression	(Rule 106)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	Variable	go to state 111
	Expression	go to state 164
	HashReference	go to state 56
	Operator	go to state 55
	ArrayDereferenced	go to state 74

State 86:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 138)

	WORD	shift, and go to state 165

	LoopLabel	go to state 166

State 87:

	WordScoped -> WORD .	(Rule 213)
	LoopLabel -> WORD .	(Rule 219)

	'('	reduce using rule 213 (WordScoped)
	COLON	reduce using rule 219 (LoopLabel)

State 88:

	Expression -> HashDereferenced .	(Rule 149)

	$default	reduce using rule 149 (Expression)

State 89:

	Include -> 'use' WordScoped ';' .	(Rule 33)

	$default	reduce using rule 33 (Include)

State 90:

	Include -> 'use' WordScoped 'qw(' . PLUS-12 ')' ';'	(Rule 34)

	WORD	shift, and go to state 167

	PLUS-12	go to state 168

State 91:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' . Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 28

	Include	go to state 169

State 92:

	PLUS-10 -> Subroutine .	(Rule 25)

	$default	reduce using rule 25 (PLUS-10)

State 93:

	STAR-9 -> STAR-9 Constant .	(Rule 22)

	$default	reduce using rule 22 (STAR-9)

State 94:

	PLUS-10 -> PLUS-10 . Subroutine	(Rule 24)
	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 . '1;' '1;'	(Rule 26)

	'1;'	shift, and go to state 171
	'our'	shift, and go to state 62

	Subroutine	go to state 170

State 95:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW . TypeInner ConstantValue ';'	(Rule 35)

	'my'	shift, and go to state 161

	TypeInner	go to state 172

State 96:

	HashReference -> '{' HashEntry . STAR-62 '}'	(Rule 210)

	$default	reduce using rule 209 (STAR-62)

	STAR-62	go to state 173

State 97:

	HashEntry -> HashDereferenced .	(Rule 204)

	$default	reduce using rule 204 (HashEntry)

State 98:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-60 Expression	(Rule 203)

	OP20_HASH_FATARROW	shift, and go to state 174

State 99:

	Expression -> '{' '}' .	(Rule 150)

	$default	reduce using rule 150 (Expression)

State 100:

	STAR-56 -> STAR-56 . VariableRetrieval	(Rule 179)
	Variable -> VARIABLE_SYMBOL STAR-56 .	(Rule 181)

	OP02_ARRAY_THINARROW	shift, and go to state 176
	OP02_HASH_THINARROW	shift, and go to state 177

	')'	reduce using rule 181 (Variable)
	'..'	reduce using rule 181 (Variable)
	';'	reduce using rule 181 (Variable)
	']'	reduce using rule 181 (Variable)
	'}'	reduce using rule 181 (Variable)
	COLON	reduce using rule 181 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 181 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 181 (Variable)
	OP04_MATH_POW	reduce using rule 181 (Variable)
	OP06_REGEX_MATCH	reduce using rule 181 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 181 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 181 (Variable)
	OP08_STRING_CAT	reduce using rule 181 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 181 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 181 (Variable)
	OP12_COMPARE_EQ_NEQ	reduce using rule 181 (Variable)
	OP13_BITWISE_AND	reduce using rule 181 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 181 (Variable)
	OP15_LOGICAL_AND	reduce using rule 181 (Variable)
	OP16_LOGICAL_OR	reduce using rule 181 (Variable)
	OP17_LIST_RANGE	reduce using rule 181 (Variable)
	OP18_TERNARY	reduce using rule 181 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 181 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 181 (Variable)
	OP21_LIST_COMMA	reduce using rule 181 (Variable)
	OP23_LOGICAL_AND	reduce using rule 181 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 181 (Variable)

	VariableRetrieval	go to state 175

State 101:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 174)

	WORD	shift, and go to state 131

	Type	go to state 178

State 102:

	Loop -> LoopWhile .	(Rule 172)

	$default	reduce using rule 172 (Loop)

State 103:

	LoopWhile -> 'while (' . Expression ')' CodeBlock	(Rule 175)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	Expression	go to state 179
	HashReference	go to state 56
	Operator	go to state 55
	ArrayDereferenced	go to state 74

State 104:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock	(Rule 173)

	VARIABLE_SYMBOL	shift, and go to state 180

State 105:

	Loop -> LoopFor .	(Rule 170)

	$default	reduce using rule 170 (Loop)

State 106:

	Statement -> OPTIONAL-50 Loop .	(Rule 159)

	$default	reduce using rule 159 (Statement)

State 107:

	Loop -> LoopForEach .	(Rule 171)

	$default	reduce using rule 171 (Loop)

State 108:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 109:

	OPTIONAL-43 -> ListElements .	(Rule 126)

	$default	reduce using rule 126 (OPTIONAL-43)

State 110:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle . OPTIONAL-44 ')' ';'	(Rule 135)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 161
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 129 (OPTIONAL-44)

	ListElement	go to state 115
	ArrayReference	go to state 63
	Literal	go to state 81
	OPTIONAL-44	go to state 181
	TypeInner	go to state 116
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	HashReference	go to state 56
	ListElements	go to state 182
	Expression	go to state 112
	Variable	go to state 111
	WordScoped	go to state 60
	HashDereferenced	go to state 88

State 111:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 104)
	Expression -> Variable .	(Rule 145)
	Expression -> Variable . OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')'	(Rule 153)

	OP02_METHOD_THINARROW	shift, and go to state 128
	OP03_MATH_INC_DEC	shift, and go to state 127

	')'	reduce using rule 145 (Expression)
	'..'	reduce using rule 145 (Expression)
	';'	reduce using rule 145 (Expression)
	']'	reduce using rule 145 (Expression)
	'}'	reduce using rule 145 (Expression)
	OP04_MATH_POW	reduce using rule 145 (Expression)
	OP06_REGEX_MATCH	reduce using rule 145 (Expression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 145 (Expression)
	OP08_MATH_ADD_SUB	reduce using rule 145 (Expression)
	OP08_STRING_CAT	reduce using rule 145 (Expression)
	OP09_BITWISE_SHIFT	reduce using rule 145 (Expression)
	OP11_COMPARE_LT_GT	reduce using rule 145 (Expression)
	OP12_COMPARE_EQ_NEQ	reduce using rule 145 (Expression)
	OP13_BITWISE_AND	reduce using rule 145 (Expression)
	OP14_BITWISE_OR_XOR	reduce using rule 145 (Expression)
	OP15_LOGICAL_AND	reduce using rule 145 (Expression)
	OP16_LOGICAL_OR	reduce using rule 145 (Expression)
	OP17_LIST_RANGE	reduce using rule 145 (Expression)
	OP18_TERNARY	reduce using rule 145 (Expression)
	OP21_LIST_COMMA	reduce using rule 145 (Expression)
	OP23_LOGICAL_AND	reduce using rule 145 (Expression)
	OP24_LOGICAL_OR_XOR	reduce using rule 145 (Expression)

State 112:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> Expression .	(Rule 193)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

	')'	reduce using rule 193 (ListElement)
	';'	reduce using rule 193 (ListElement)
	']'	reduce using rule 193 (ListElement)
	OP21_LIST_COMMA	reduce using rule 193 (ListElement)

State 113:

	FileHandle -> '{*' . WORD '}'	(Rule 215)

	WORD	shift, and go to state 183

State 114:

	FileHandle -> 'my' . 'filehandle_ref' VARIABLE_SYMBOL	(Rule 216)
	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'filehandle_ref'	shift, and go to state 185
	WORD	shift, and go to state 131

	Type	go to state 184

State 115:

	ListElements -> ListElement . STAR-58	(Rule 192)

	$default	reduce using rule 191 (STAR-58)

	STAR-58	go to state 186

State 116:

	ListElement -> TypeInner . Expression	(Rule 194)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	HashReference	go to state 56
	Expression	go to state 187
	Variable	go to state 111
	WordScoped	go to state 60
	HashDereferenced	go to state 88

State 117:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 . ')' ';'	(Rule 134)

	')'	shift, and go to state 188

State 118:

	ListElement -> KEYS_OR_VALUES . HashDereferenced	(Rule 195)

	'%{'	shift, and go to state 54

	HashDereferenced	go to state 189

State 119:

	PAREN-49 -> LoopLabel COLON .	(Rule 155)

	$default	reduce using rule 155 (PAREN-49)

State 120:

	HashReference -> '{' . HashEntry STAR-62 '}'	(Rule 210)

	'%{'	shift, and go to state 54
	WORD	shift, and go to state 98

	HashDereferenced	go to state 97
	HashEntry	go to state 96

State 121:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 212)

	'}'	shift, and go to state 190

State 122:

	HashDereferenced -> '%{' Variable . '}'	(Rule 211)

	'}'	shift, and go to state 191

State 123:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Expression -> '(' Expression . ')'	(Rule 154)

	')'	shift, and go to state 192
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 124:

	Operator -> OP01_NAMED '(' . OPTIONAL-42 ')'	(Rule 102)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 161
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 101 (OPTIONAL-42)

	ArrayReference	go to state 63
	OPTIONAL-42	go to state 193
	ListElement	go to state 115
	Literal	go to state 81
	ListElements	go to state 194
	Expression	go to state 112
	HashReference	go to state 56
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	Variable	go to state 111
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	TypeInner	go to state 116

State 125:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 187)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	HashReference	go to state 56
	Expression	go to state 195
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	Literal	go to state 81
	ArrayReference	go to state 63

State 126:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . Expression ';'	(Rule 188)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	HashReference	go to state 56
	Expression	go to state 196
	Variable	go to state 111
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	ArrayDereferenced	go to state 74
	Operator	go to state 55

State 127:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 128:

	Expression -> Variable OP02_METHOD_THINARROW . WORD '(' OPTIONAL-48 ')'	(Rule 153)

	WORD	shift, and go to state 197

State 129:

	Expression -> WordScoped '(' . OPTIONAL-47 ')'	(Rule 152)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 161
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 140 (OPTIONAL-47)

	ArrayDereferenced	go to state 74
	TypeInner	go to state 116
	Operator	go to state 55
	OPTIONAL-47	go to state 199
	Expression	go to state 112
	ListElements	go to state 198
	HashReference	go to state 56
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	ArrayReference	go to state 63
	ListElement	go to state 115
	Literal	go to state 81

State 130:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 185)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';'	(Rule 186)

	VARIABLE_SYMBOL	shift, and go to state 200

State 131:

	Type -> WORD .	(Rule 218)

	$default	reduce using rule 218 (Type)

State 132:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	VARIABLE_SYMBOL	shift, and go to state 201

State 133:

	Operator -> Expression OP14_BITWISE_OR_XOR . Expression	(Rule 118)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	Expression	go to state 202
	HashReference	go to state 56
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111

State 134:

	Operator -> Expression OP11_COMPARE_LT_GT . Expression	(Rule 115)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	Expression	go to state 203
	HashReference	go to state 56
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	Variable	go to state 111
	ArrayDereferenced	go to state 74
	Operator	go to state 55

State 135:

	Operator -> Expression OP04_MATH_POW . Expression	(Rule 105)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	HashReference	go to state 56
	Expression	go to state 204
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	ArrayDereferenced	go to state 74
	Operator	go to state 55

State 136:

	Operator -> Expression OP08_STRING_CAT . Expression	(Rule 111)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	Variable	go to state 111
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	HashReference	go to state 56
	Expression	go to state 205

State 137:

	Operator -> Expression OP08_MATH_ADD_SUB . Expression	(Rule 110)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	HashReference	go to state 56
	Expression	go to state 206
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	ArrayReference	go to state 63
	Literal	go to state 81

State 138:

	Operator -> Expression OP13_BITWISE_AND . Expression	(Rule 117)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	Expression	go to state 207
	HashReference	go to state 56
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111

State 139:

	Operator -> Expression OP17_LIST_RANGE . Expression	(Rule 121)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	HashReference	go to state 56
	Expression	go to state 208
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	Literal	go to state 81
	ArrayReference	go to state 63

State 140:

	Operator -> Expression OP15_LOGICAL_AND . Expression	(Rule 119)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	Variable	go to state 111
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	HashReference	go to state 56
	Expression	go to state 209
	Operator	go to state 55
	ArrayDereferenced	go to state 74

State 141:

	Operator -> Expression OP24_LOGICAL_OR_XOR . Expression	(Rule 125)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	HashReference	go to state 56
	Expression	go to state 210
	Operator	go to state 55
	ArrayDereferenced	go to state 74

State 142:

	Operation -> Expression ';' .	(Rule 98)

	$default	reduce using rule 98 (Operation)

State 143:

	Operator -> Expression OP12_COMPARE_EQ_NEQ . Expression	(Rule 116)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 211
	HashReference	go to state 56
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	ArrayReference	go to state 63
	Literal	go to state 81

State 144:

	Operator -> Expression OP07_MATH_MULT_DIV_MOD . Expression	(Rule 109)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 212
	HashReference	go to state 56
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	Variable	go to state 111
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	ArrayReference	go to state 63
	Literal	go to state 81

State 145:

	Operator -> Expression OP23_LOGICAL_AND . Expression	(Rule 124)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Expression	go to state 213
	HashReference	go to state 56
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	Variable	go to state 111
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	ArrayReference	go to state 63
	Literal	go to state 81

State 146:

	Operator -> Expression OP16_LOGICAL_OR . Expression	(Rule 120)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Operator	go to state 55
	ArrayDereferenced	go to state 74
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	HashReference	go to state 56
	Expression	go to state 214
	Literal	go to state 81
	ArrayReference	go to state 63

State 147:

	Operator -> Expression OP09_BITWISE_SHIFT . Expression	(Rule 112)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	Expression	go to state 215
	HashReference	go to state 56
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111

State 148:

	Operator -> Expression OP18_TERNARY . Variable COLON Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 47

	Variable	go to state 216

State 149:

	Operator -> Expression OP06_REGEX_MATCH . '/' OP06_REGEX_PATTERN '/'	(Rule 108)

	'/'	shift, and go to state 217

State 150:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 200)

	'}'	shift, and go to state 218

State 151:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 199)

	'}'	shift, and go to state 219

State 152:

	OPTIONAL-45 -> ListElements .	(Rule 130)

	$default	reduce using rule 130 (OPTIONAL-45)

State 153:

	OperatorVoid -> OP01_NAMED_VOID FileHandle . OPTIONAL-46 ';'	(Rule 137)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 161
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	';'	reduce using rule 133 (OPTIONAL-46)

	WordScoped	go to state 60
	HashDereferenced	go to state 88
	Variable	go to state 111
	ListElements	go to state 221
	Expression	go to state 112
	HashReference	go to state 56
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	TypeInner	go to state 116
	OPTIONAL-46	go to state 220
	Literal	go to state 81
	ArrayReference	go to state 63
	ListElement	go to state 115

State 154:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 . ';'	(Rule 136)

	';'	shift, and go to state 222

State 155:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Conditional -> 'if (' Expression . ')' CodeBlock STAR-52 OPTIONAL-54	(Rule 169)

	')'	shift, and go to state 223
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 156:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY Expression .	(Rule 113)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147

	')'	reduce using rule 113 (Operator)
	'..'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 113 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 157:

	PLUS-6 -> PLUS-6 Operation .	(Rule 13)

	$default	reduce using rule 13 (PLUS-6)

State 158:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_MATH_NEG Expression . ')'	(Rule 107)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	')'	shift, and go to state 224
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 159:

	OPTIONAL-59 -> ListElements .	(Rule 196)

	$default	reduce using rule 196 (OPTIONAL-59)

State 160:

	ArrayReference -> '[' OPTIONAL-59 . ']'	(Rule 198)

	']'	shift, and go to state 225

State 161:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 131

	Type	go to state 184

State 162:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> OP10_NAMED_UNARY_STRINGIFY Expression .	(Rule 114)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147

	')'	reduce using rule 114 (Operator)
	'..'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 114 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 163:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> OP22_LOGICAL_NOT Expression .	(Rule 123)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148

	')'	reduce using rule 123 (Operator)
	'..'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP23_LOGICAL_AND	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 164:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> OP05_LOGICAL_NEG Expression .	(Rule 106)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135

	')'	reduce using rule 106 (Operator)
	'..'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP06_REGEX_MATCH	reduce using rule 106 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 106 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 165:

	LoopLabel -> WORD .	(Rule 219)

	$default	reduce using rule 219 (LoopLabel)

State 166:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 138)

	';'	shift, and go to state 226

State 167:

	PLUS-12 -> WORD .	(Rule 32)

	$default	reduce using rule 32 (PLUS-12)

State 168:

	PLUS-12 -> PLUS-12 . WORD	(Rule 31)
	Include -> 'use' WordScoped 'qw(' PLUS-12 . ')' ';'	(Rule 34)

	')'	shift, and go to state 227
	WORD	shift, and go to state 228

State 169:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include . STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 69 (STAR-28)

	STAR-28	go to state 229

State 170:

	PLUS-10 -> PLUS-10 Subroutine .	(Rule 24)

	$default	reduce using rule 24 (PLUS-10)

State 171:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' . '1;'	(Rule 26)

	'1;'	shift, and go to state 230

State 172:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner . ConstantValue ';'	(Rule 35)

	'['	shift, and go to state 232
	'{'	shift, and go to state 234
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78

	ConstantValue	go to state 233
	Literal	go to state 231

State 173:

	STAR-62 -> STAR-62 . PAREN-61	(Rule 208)
	HashReference -> '{' HashEntry STAR-62 . '}'	(Rule 210)

	'}'	shift, and go to state 236
	OP21_LIST_COMMA	shift, and go to state 235

	PAREN-61	go to state 237

State 174:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-60 Expression	(Rule 203)

	'my'	shift, and go to state 161

	'%{'	reduce using rule 202 (OPTIONAL-60)
	'('	reduce using rule 202 (OPTIONAL-60)
	'@{'	reduce using rule 202 (OPTIONAL-60)
	'['	reduce using rule 202 (OPTIONAL-60)
	'undef'	reduce using rule 202 (OPTIONAL-60)
	'{'	reduce using rule 202 (OPTIONAL-60)
	LITERAL_NUMBER	reduce using rule 202 (OPTIONAL-60)
	LITERAL_STRING	reduce using rule 202 (OPTIONAL-60)
	OP01_NAMED	reduce using rule 202 (OPTIONAL-60)
	OP03_MATH_INC_DEC	reduce using rule 202 (OPTIONAL-60)
	OP05_LOGICAL_NEG	reduce using rule 202 (OPTIONAL-60)
	OP05_MATH_NEG	reduce using rule 202 (OPTIONAL-60)
	OP10_NAMED_UNARY	reduce using rule 202 (OPTIONAL-60)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 202 (OPTIONAL-60)
	OP22_LOGICAL_NOT	reduce using rule 202 (OPTIONAL-60)
	VARIABLE_SYMBOL	reduce using rule 202 (OPTIONAL-60)
	WORD	reduce using rule 202 (OPTIONAL-60)
	WORD_SCOPED	reduce using rule 202 (OPTIONAL-60)

	TypeInner	go to state 238
	OPTIONAL-60	go to state 239

State 175:

	STAR-56 -> STAR-56 VariableRetrieval .	(Rule 179)

	$default	reduce using rule 179 (STAR-56)

State 176:

	VariableRetrieval -> OP02_ARRAY_THINARROW . Expression ']'	(Rule 182)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	Expression	go to state 240
	HashReference	go to state 56
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111

State 177:

	VariableRetrieval -> OP02_HASH_THINARROW . Expression '}'	(Rule 183)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 184)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 241
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	HashReference	go to state 56
	Expression	go to state 242
	Operator	go to state 55
	ArrayDereferenced	go to state 74

State 178:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL '(' ListElements ')' CodeBlock	(Rule 174)

	VARIABLE_SYMBOL	shift, and go to state 243

State 179:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopWhile -> 'while (' Expression . ')' CodeBlock	(Rule 175)

	')'	shift, and go to state 244
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 180:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . '(' Expression '..' Expression ')' CodeBlock	(Rule 173)

	'('	shift, and go to state 245

State 181:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 . ')' ';'	(Rule 135)

	')'	shift, and go to state 246

State 182:

	OPTIONAL-44 -> ListElements .	(Rule 128)

	$default	reduce using rule 128 (OPTIONAL-44)

State 183:

	FileHandle -> '{*' WORD . '}'	(Rule 215)

	'}'	shift, and go to state 247

State 184:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	'$TYPED_'	shift, and go to state 248

State 185:

	FileHandle -> 'my' 'filehandle_ref' . VARIABLE_SYMBOL	(Rule 216)

	VARIABLE_SYMBOL	shift, and go to state 249

State 186:

	STAR-58 -> STAR-58 . PAREN-57	(Rule 190)
	ListElements -> ListElement STAR-58 .	(Rule 192)

	OP21_LIST_COMMA	shift, and go to state 250

	')'	reduce using rule 192 (ListElements)
	';'	reduce using rule 192 (ListElements)
	']'	reduce using rule 192 (ListElements)

	PAREN-57	go to state 251

State 187:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	ListElement -> TypeInner Expression .	(Rule 194)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

	')'	reduce using rule 194 (ListElement)
	';'	reduce using rule 194 (ListElement)
	']'	reduce using rule 194 (ListElement)
	OP21_LIST_COMMA	reduce using rule 194 (ListElement)

State 188:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' . ';'	(Rule 134)

	';'	shift, and go to state 252

State 189:

	ListElement -> KEYS_OR_VALUES HashDereferenced .	(Rule 195)

	$default	reduce using rule 195 (ListElement)

State 190:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 212)

	$default	reduce using rule 212 (HashDereferenced)

State 191:

	HashDereferenced -> '%{' Variable '}' .	(Rule 211)

	$default	reduce using rule 211 (HashDereferenced)

State 192:

	Expression -> '(' Expression ')' .	(Rule 154)

	$default	reduce using rule 154 (Expression)

State 193:

	Operator -> OP01_NAMED '(' OPTIONAL-42 . ')'	(Rule 102)

	')'	shift, and go to state 253

State 194:

	OPTIONAL-42 -> ListElements .	(Rule 100)

	$default	reduce using rule 100 (OPTIONAL-42)

State 195:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 187)

	';'	shift, and go to state 254
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 196:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression . ';'	(Rule 188)

	';'	shift, and go to state 255
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 197:

	Expression -> Variable OP02_METHOD_THINARROW WORD . '(' OPTIONAL-48 ')'	(Rule 153)

	'('	shift, and go to state 256

State 198:

	OPTIONAL-47 -> ListElements .	(Rule 139)

	$default	reduce using rule 139 (OPTIONAL-47)

State 199:

	Expression -> WordScoped '(' OPTIONAL-47 . ')'	(Rule 152)

	')'	shift, and go to state 257

State 200:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 185)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN Expression ';'	(Rule 186)

	';'	shift, and go to state 258
	OP19_VARIABLE_ASSIGN	shift, and go to state 259

State 201:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'= sub {'	shift, and go to state 260

State 202:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression OP14_BITWISE_OR_XOR Expression .	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138

	')'	reduce using rule 118 (Operator)
	'..'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 118 (Operator)
	OP15_LOGICAL_AND	reduce using rule 118 (Operator)
	OP16_LOGICAL_OR	reduce using rule 118 (Operator)
	OP17_LIST_RANGE	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 203:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression OP11_COMPARE_LT_GT Expression .	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 115 (Operator)
	'..'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 115 (Operator)
	OP13_BITWISE_AND	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 204:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression OP04_MATH_POW Expression .	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135

	')'	reduce using rule 105 (Operator)
	'..'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP06_REGEX_MATCH	reduce using rule 105 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 205:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression OP08_STRING_CAT Expression .	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137

	')'	reduce using rule 111 (Operator)
	'..'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

State 206:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression OP08_MATH_ADD_SUB Expression .	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144

	')'	reduce using rule 110 (Operator)
	'..'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 110 (Operator)
	OP08_STRING_CAT	reduce using rule 110 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 207:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression OP13_BITWISE_AND Expression .	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143

	')'	reduce using rule 117 (Operator)
	'..'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP13_BITWISE_AND	reduce using rule 117 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 117 (Operator)
	OP15_LOGICAL_AND	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 208:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression OP17_LIST_RANGE Expression .	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 121 (Operator)
	'..'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP18_TERNARY	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 209:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression OP15_LOGICAL_AND Expression .	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133

	')'	reduce using rule 119 (Operator)
	'..'	reduce using rule 119 (Operator)
	';'	reduce using rule 119 (Operator)
	']'	reduce using rule 119 (Operator)
	'}'	reduce using rule 119 (Operator)
	OP15_LOGICAL_AND	reduce using rule 119 (Operator)
	OP16_LOGICAL_OR	reduce using rule 119 (Operator)
	OP17_LIST_RANGE	reduce using rule 119 (Operator)
	OP18_TERNARY	reduce using rule 119 (Operator)
	OP21_LIST_COMMA	reduce using rule 119 (Operator)
	OP23_LOGICAL_AND	reduce using rule 119 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 119 (Operator)

State 210:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	Operator -> Expression OP24_LOGICAL_OR_XOR Expression .	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145

	')'	reduce using rule 125 (Operator)
	'..'	reduce using rule 125 (Operator)
	';'	reduce using rule 125 (Operator)
	']'	reduce using rule 125 (Operator)
	'}'	reduce using rule 125 (Operator)
	OP21_LIST_COMMA	reduce using rule 125 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (Operator)

State 211:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression OP12_COMPARE_EQ_NEQ Expression .	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134

	OP12_COMPARE_EQ_NEQ	error (nonassociative)

	')'	reduce using rule 116 (Operator)
	'..'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP13_BITWISE_AND	reduce using rule 116 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 212:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression OP07_MATH_MULT_DIV_MOD Expression .	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149

	')'	reduce using rule 109 (Operator)
	'..'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 109 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 109 (Operator)
	OP08_STRING_CAT	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 213:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression OP23_LOGICAL_AND Expression .	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148

	')'	reduce using rule 124 (Operator)
	'..'	reduce using rule 124 (Operator)
	';'	reduce using rule 124 (Operator)
	']'	reduce using rule 124 (Operator)
	'}'	reduce using rule 124 (Operator)
	OP21_LIST_COMMA	reduce using rule 124 (Operator)
	OP23_LOGICAL_AND	reduce using rule 124 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 124 (Operator)

State 214:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression OP16_LOGICAL_OR Expression .	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140

	')'	reduce using rule 120 (Operator)
	'..'	reduce using rule 120 (Operator)
	';'	reduce using rule 120 (Operator)
	']'	reduce using rule 120 (Operator)
	'}'	reduce using rule 120 (Operator)
	OP16_LOGICAL_OR	reduce using rule 120 (Operator)
	OP17_LIST_RANGE	reduce using rule 120 (Operator)
	OP18_TERNARY	reduce using rule 120 (Operator)
	OP21_LIST_COMMA	reduce using rule 120 (Operator)
	OP23_LOGICAL_AND	reduce using rule 120 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 120 (Operator)

State 215:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression OP09_BITWISE_SHIFT Expression .	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136

	')'	reduce using rule 112 (Operator)
	'..'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 112 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NEQ	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 216:

	Operator -> Expression OP18_TERNARY Variable . COLON Variable	(Rule 122)

	COLON	shift, and go to state 261

State 217:

	Operator -> Expression OP06_REGEX_MATCH '/' . OP06_REGEX_PATTERN '/'	(Rule 108)

	OP06_REGEX_PATTERN	shift, and go to state 262

State 218:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 200)

	$default	reduce using rule 200 (ArrayDereferenced)

State 219:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 199)

	$default	reduce using rule 199 (ArrayDereferenced)

State 220:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 . ';'	(Rule 137)

	';'	shift, and go to state 263

State 221:

	OPTIONAL-46 -> ListElements .	(Rule 132)

	$default	reduce using rule 132 (OPTIONAL-46)

State 222:

	OperatorVoid -> OP01_NAMED_VOID OPTIONAL-45 ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 223:

	Conditional -> 'if (' Expression ')' . CodeBlock STAR-52 OPTIONAL-54	(Rule 169)

	'{'	shift, and go to state 265

	CodeBlock	go to state 264

State 224:

	Operator -> OP05_MATH_NEG Expression ')' .	(Rule 107)

	$default	reduce using rule 107 (Operator)

State 225:

	ArrayReference -> '[' OPTIONAL-59 ']' .	(Rule 198)

	$default	reduce using rule 198 (ArrayReference)

State 226:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 138)

	$default	reduce using rule 138 (OperatorVoid)

State 227:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' . ';'	(Rule 34)

	';'	shift, and go to state 266

State 228:

	PLUS-12 -> PLUS-12 WORD .	(Rule 31)

	$default	reduce using rule 31 (PLUS-12)

State 229:

	STAR-28 -> STAR-28 . Critic	(Rule 68)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 . STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'## no critic qw('	shift, and go to state 23

	'our %properties = ('	reduce using rule 71 (STAR-29)
	'use constant'	reduce using rule 71 (STAR-29)
	'use'	reduce using rule 71 (STAR-29)

	Critic	go to state 268
	STAR-29	go to state 267

State 230:

	Package -> 'package' WordScoped ';' Header STAR-7 STAR-8 STAR-9 PLUS-10 '1;' '1;' .	(Rule 26)

	$default	reduce using rule 26 (Package)

State 231:

	ConstantValue -> Literal .	(Rule 50)

	$default	reduce using rule 50 (ConstantValue)

State 232:

	ConstantValue -> '[' . OPTIONAL-13 Literal STAR-16 ']'	(Rule 51)

	'my'	shift, and go to state 161

	LITERAL_NUMBER	reduce using rule 37 (OPTIONAL-13)
	LITERAL_STRING	reduce using rule 37 (OPTIONAL-13)

	TypeInner	go to state 270
	OPTIONAL-13	go to state 269

State 233:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue . ';'	(Rule 35)

	';'	shift, and go to state 271

State 234:

	ConstantValue -> '{' . WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	WORD	shift, and go to state 272

State 235:

	PAREN-61 -> OP21_LIST_COMMA . HashEntry	(Rule 207)

	'%{'	shift, and go to state 54
	WORD	shift, and go to state 98

	HashDereferenced	go to state 97
	HashEntry	go to state 273

State 236:

	HashReference -> '{' HashEntry STAR-62 '}' .	(Rule 210)

	$default	reduce using rule 210 (HashReference)

State 237:

	STAR-62 -> STAR-62 PAREN-61 .	(Rule 208)

	$default	reduce using rule 208 (STAR-62)

State 238:

	OPTIONAL-60 -> TypeInner .	(Rule 201)

	$default	reduce using rule 201 (OPTIONAL-60)

State 239:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 . Expression	(Rule 203)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayDereferenced	go to state 74
	Operator	go to state 55
	HashReference	go to state 56
	Expression	go to state 274
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	ArrayReference	go to state 63
	Literal	go to state 81

State 240:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_ARRAY_THINARROW Expression . ']'	(Rule 182)

	']'	shift, and go to state 275
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 241:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 184)
	WordScoped -> WORD .	(Rule 213)

	'}'	shift, and go to state 276

	'('	reduce using rule 213 (WordScoped)

State 242:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableRetrieval -> OP02_HASH_THINARROW Expression . '}'	(Rule 183)

	'}'	shift, and go to state 277
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 243:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . '(' ListElements ')' CodeBlock	(Rule 174)

	'('	shift, and go to state 278

State 244:

	LoopWhile -> 'while (' Expression ')' . CodeBlock	(Rule 175)

	'{'	shift, and go to state 265

	CodeBlock	go to state 279

State 245:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' . Expression '..' Expression ')' CodeBlock	(Rule 173)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	HashReference	go to state 56
	Expression	go to state 280
	ArrayDereferenced	go to state 74
	Operator	go to state 55

State 246:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' . ';'	(Rule 135)

	';'	shift, and go to state 281

State 247:

	FileHandle -> '{*' WORD '}' .	(Rule 215)

	$default	reduce using rule 215 (FileHandle)

State 248:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 217)

	WORD	shift, and go to state 282

State 249:

	FileHandle -> 'my' 'filehandle_ref' VARIABLE_SYMBOL .	(Rule 216)

	$default	reduce using rule 216 (FileHandle)

State 250:

	PAREN-57 -> OP21_LIST_COMMA . ListElement	(Rule 189)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 161
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	ListElement	go to state 283
	Literal	go to state 81
	TypeInner	go to state 116
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	Expression	go to state 112
	HashReference	go to state 56
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111

State 251:

	STAR-58 -> STAR-58 PAREN-57 .	(Rule 190)

	$default	reduce using rule 190 (STAR-58)

State 252:

	OperatorVoid -> OP01_NAMED_VOID_PAREN OPTIONAL-43 ')' ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 253:

	Operator -> OP01_NAMED '(' OPTIONAL-42 ')' .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 254:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 187)

	$default	reduce using rule 187 (VariableModification)

State 255:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY Expression ';' .	(Rule 188)

	$default	reduce using rule 188 (VariableModification)

State 256:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' . OPTIONAL-48 ')'	(Rule 153)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 161
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	')'	reduce using rule 142 (OPTIONAL-48)

	ArrayDereferenced	go to state 74
	OPTIONAL-48	go to state 285
	Operator	go to state 55
	TypeInner	go to state 116
	Variable	go to state 111
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	HashReference	go to state 56
	ListElements	go to state 284
	Expression	go to state 112
	Literal	go to state 81
	ListElement	go to state 115
	ArrayReference	go to state 63

State 257:

	Expression -> WordScoped '(' OPTIONAL-47 ')' .	(Rule 152)

	$default	reduce using rule 152 (Expression)

State 258:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 185)

	$default	reduce using rule 185 (VariableDeclaration)

State 259:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . Expression ';'	(Rule 186)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	Expression	go to state 286
	HashReference	go to state 56
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	Literal	go to state 81
	ArrayReference	go to state 63

State 260:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-21 PLUS-22 '}' ';'	(Rule 57)

	'( my'	shift, and go to state 289

	'%{'	reduce using rule 54 (OPTIONAL-21)
	'('	reduce using rule 54 (OPTIONAL-21)
	'@{'	reduce using rule 54 (OPTIONAL-21)
	'['	reduce using rule 54 (OPTIONAL-21)
	'for my integer'	reduce using rule 54 (OPTIONAL-21)
	'foreach my'	reduce using rule 54 (OPTIONAL-21)
	'if ('	reduce using rule 54 (OPTIONAL-21)
	'my'	reduce using rule 54 (OPTIONAL-21)
	'undef'	reduce using rule 54 (OPTIONAL-21)
	'while ('	reduce using rule 54 (OPTIONAL-21)
	'{'	reduce using rule 54 (OPTIONAL-21)
	LITERAL_NUMBER	reduce using rule 54 (OPTIONAL-21)
	LITERAL_STRING	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID	reduce using rule 54 (OPTIONAL-21)
	OP01_NAMED_VOID_PAREN	reduce using rule 54 (OPTIONAL-21)
	OP03_MATH_INC_DEC	reduce using rule 54 (OPTIONAL-21)
	OP05_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-21)
	OP05_MATH_NEG	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY	reduce using rule 54 (OPTIONAL-21)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 54 (OPTIONAL-21)
	OP19_LOOP_CONTROL	reduce using rule 54 (OPTIONAL-21)
	OP22_LOGICAL_NOT	reduce using rule 54 (OPTIONAL-21)
	VARIABLE_SYMBOL	reduce using rule 54 (OPTIONAL-21)
	WORD	reduce using rule 54 (OPTIONAL-21)
	WORD_SCOPED	reduce using rule 54 (OPTIONAL-21)

	OPTIONAL-21	go to state 288
	SubroutineArguments	go to state 287

State 261:

	Operator -> Expression OP18_TERNARY Variable COLON . Variable	(Rule 122)

	VARIABLE_SYMBOL	shift, and go to state 47

	Variable	go to state 290

State 262:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN . '/'	(Rule 108)

	'/'	shift, and go to state 291

State 263:

	OperatorVoid -> OP01_NAMED_VOID FileHandle OPTIONAL-46 ';' .	(Rule 137)

	$default	reduce using rule 137 (OperatorVoid)

State 264:

	Conditional -> 'if (' Expression ')' CodeBlock . STAR-52 OPTIONAL-54	(Rule 169)

	$default	reduce using rule 165 (STAR-52)

	STAR-52	go to state 292

State 265:

	CodeBlock -> '{' . PLUS-55 '}'	(Rule 178)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'if ('	shift, and go to state 71
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_NAMED_VOID_PAREN	shift, and go to state 51
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 86
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 87
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	OPTIONAL-50	go to state 48
	ArrayDereferenced	go to state 74
	Conditional	go to state 53
	Operator	go to state 55
	LoopLabel	go to state 52
	HashReference	go to state 56
	WordScoped	go to state 60
	Variable	go to state 59
	ArrayReference	go to state 63
	PLUS-55	go to state 294
	VariableModification	go to state 82
	Operation	go to state 293
	OperatorVoid	go to state 80
	Literal	go to state 81
	PAREN-49	go to state 65
	Expression	go to state 68
	Statement	go to state 66
	VariableDeclaration	go to state 67
	HashDereferenced	go to state 88

State 266:

	Include -> 'use' WordScoped 'qw(' PLUS-12 ')' ';' .	(Rule 34)

	$default	reduce using rule 34 (Include)

State 267:

	STAR-29 -> STAR-29 . Include	(Rule 70)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 . STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'use'	shift, and go to state 28

	'our %properties = ('	reduce using rule 73 (STAR-30)
	'use constant'	reduce using rule 73 (STAR-30)

	STAR-30	go to state 295
	Include	go to state 296

State 268:

	STAR-28 -> STAR-28 Critic .	(Rule 68)

	$default	reduce using rule 68 (STAR-28)

State 269:

	ConstantValue -> '[' OPTIONAL-13 . Literal STAR-16 ']'	(Rule 51)

	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78

	Literal	go to state 297

State 270:

	OPTIONAL-13 -> TypeInner .	(Rule 36)

	$default	reduce using rule 36 (OPTIONAL-13)

State 271:

	Constant -> 'use constant' WORD OP20_HASH_FATARROW TypeInner ConstantValue ';' .	(Rule 35)

	$default	reduce using rule 35 (Constant)

State 272:

	ConstantValue -> '{' WORD . OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	OP20_HASH_FATARROW	shift, and go to state 298

State 273:

	PAREN-61 -> OP21_LIST_COMMA HashEntry .	(Rule 207)

	$default	reduce using rule 207 (PAREN-61)

State 274:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-60 Expression .	(Rule 203)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

	'}'	reduce using rule 203 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 203 (HashEntry)

State 275:

	VariableRetrieval -> OP02_ARRAY_THINARROW Expression ']' .	(Rule 182)

	$default	reduce using rule 182 (VariableRetrieval)

State 276:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 184)

	$default	reduce using rule 184 (VariableRetrieval)

State 277:

	VariableRetrieval -> OP02_HASH_THINARROW Expression '}' .	(Rule 183)

	$default	reduce using rule 183 (VariableRetrieval)

State 278:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' . ListElements ')' CodeBlock	(Rule 174)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'my'	shift, and go to state 161
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	KEYS_OR_VALUES	shift, and go to state 118
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	HashReference	go to state 56
	Expression	go to state 112
	ListElements	go to state 299
	TypeInner	go to state 116
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	Literal	go to state 81
	ListElement	go to state 115
	ArrayReference	go to state 63

State 279:

	LoopWhile -> 'while (' Expression ')' CodeBlock .	(Rule 175)

	$default	reduce using rule 175 (LoopWhile)

State 280:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression . '..' Expression ')' CodeBlock	(Rule 173)

	'..'	shift, and go to state 300
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 281:

	OperatorVoid -> OP01_NAMED_VOID_PAREN FileHandle OPTIONAL-44 ')' ';' .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 282:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 217)

	OP19_VARIABLE_ASSIGN	shift, and go to state 301

State 283:

	PAREN-57 -> OP21_LIST_COMMA ListElement .	(Rule 189)

	$default	reduce using rule 189 (PAREN-57)

State 284:

	OPTIONAL-48 -> ListElements .	(Rule 141)

	$default	reduce using rule 141 (OPTIONAL-48)

State 285:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 . ')'	(Rule 153)

	')'	shift, and go to state 302

State 286:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression . ';'	(Rule 186)

	';'	shift, and go to state 303
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 287:

	OPTIONAL-21 -> SubroutineArguments .	(Rule 53)

	$default	reduce using rule 53 (OPTIONAL-21)

State 288:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 . PLUS-22 '}' ';'	(Rule 57)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'if ('	shift, and go to state 71
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_NAMED_VOID_PAREN	shift, and go to state 51
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 86
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 87
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	OPTIONAL-50	go to state 48
	Variable	go to state 59
	WordScoped	go to state 60
	HashReference	go to state 56
	LoopLabel	go to state 52
	Conditional	go to state 53
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	OperatorVoid	go to state 80
	Literal	go to state 81
	Operation	go to state 304
	VariableModification	go to state 82
	ArrayReference	go to state 63
	HashDereferenced	go to state 88
	Statement	go to state 66
	VariableDeclaration	go to state 67
	Expression	go to state 68
	PAREN-49	go to state 65
	PLUS-22	go to state 305

State 289:

	SubroutineArguments -> '( my' . Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	WORD	shift, and go to state 131

	Type	go to state 306

State 290:

	Operator -> Expression OP18_TERNARY Variable COLON Variable .	(Rule 122)

	$default	reduce using rule 122 (Operator)

State 291:

	Operator -> Expression OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/' .	(Rule 108)

	$default	reduce using rule 108 (Operator)

State 292:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 164)
	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 . OPTIONAL-54	(Rule 169)

	'else'	shift, and go to state 308
	'elsif ('	shift, and go to state 311

	$end	reduce using rule 168 (OPTIONAL-54)
	'%{'	reduce using rule 168 (OPTIONAL-54)
	'('	reduce using rule 168 (OPTIONAL-54)
	'@{'	reduce using rule 168 (OPTIONAL-54)
	'['	reduce using rule 168 (OPTIONAL-54)
	'for my integer'	reduce using rule 168 (OPTIONAL-54)
	'foreach my'	reduce using rule 168 (OPTIONAL-54)
	'if ('	reduce using rule 168 (OPTIONAL-54)
	'my'	reduce using rule 168 (OPTIONAL-54)
	'undef'	reduce using rule 168 (OPTIONAL-54)
	'while ('	reduce using rule 168 (OPTIONAL-54)
	'{'	reduce using rule 168 (OPTIONAL-54)
	'}'	reduce using rule 168 (OPTIONAL-54)
	LITERAL_NUMBER	reduce using rule 168 (OPTIONAL-54)
	LITERAL_STRING	reduce using rule 168 (OPTIONAL-54)
	OP01_NAMED	reduce using rule 168 (OPTIONAL-54)
	OP01_NAMED_VOID	reduce using rule 168 (OPTIONAL-54)
	OP01_NAMED_VOID_PAREN	reduce using rule 168 (OPTIONAL-54)
	OP03_MATH_INC_DEC	reduce using rule 168 (OPTIONAL-54)
	OP05_LOGICAL_NEG	reduce using rule 168 (OPTIONAL-54)
	OP05_MATH_NEG	reduce using rule 168 (OPTIONAL-54)
	OP10_NAMED_UNARY	reduce using rule 168 (OPTIONAL-54)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 168 (OPTIONAL-54)
	OP19_LOOP_CONTROL	reduce using rule 168 (OPTIONAL-54)
	OP22_LOGICAL_NOT	reduce using rule 168 (OPTIONAL-54)
	VARIABLE_SYMBOL	reduce using rule 168 (OPTIONAL-54)
	WORD	reduce using rule 168 (OPTIONAL-54)
	WORD_SCOPED	reduce using rule 168 (OPTIONAL-54)

	OPTIONAL-54	go to state 307
	PAREN-51	go to state 310
	PAREN-53	go to state 309

State 293:

	PLUS-55 -> Operation .	(Rule 177)

	$default	reduce using rule 177 (PLUS-55)

State 294:

	PLUS-55 -> PLUS-55 . Operation	(Rule 176)
	CodeBlock -> '{' PLUS-55 . '}'	(Rule 178)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'if ('	shift, and go to state 71
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	'}'	shift, and go to state 313
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_NAMED_VOID_PAREN	shift, and go to state 51
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 86
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 87
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	OPTIONAL-50	go to state 48
	LoopLabel	go to state 52
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	Conditional	go to state 53
	HashReference	go to state 56
	Variable	go to state 59
	WordScoped	go to state 60
	ArrayReference	go to state 63
	OperatorVoid	go to state 80
	Operation	go to state 312
	Literal	go to state 81
	VariableModification	go to state 82
	PAREN-49	go to state 65
	Statement	go to state 66
	VariableDeclaration	go to state 67
	Expression	go to state 68
	HashDereferenced	go to state 88

State 295:

	STAR-30 -> STAR-30 . Constant	(Rule 72)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 . Properties STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	'our %properties = ('	shift, and go to state 314
	'use constant'	shift, and go to state 37

	Properties	go to state 315
	Constant	go to state 316

State 296:

	STAR-29 -> STAR-29 Include .	(Rule 70)

	$default	reduce using rule 70 (STAR-29)

State 297:

	ConstantValue -> '[' OPTIONAL-13 Literal . STAR-16 ']'	(Rule 51)

	$default	reduce using rule 42 (STAR-16)

	STAR-16	go to state 317

State 298:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW . OPTIONAL-17 Literal STAR-20 '}'	(Rule 52)

	'my'	shift, and go to state 161

	LITERAL_NUMBER	reduce using rule 44 (OPTIONAL-17)
	LITERAL_STRING	reduce using rule 44 (OPTIONAL-17)

	TypeInner	go to state 318
	OPTIONAL-17	go to state 319

State 299:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements . ')' CodeBlock	(Rule 174)

	')'	shift, and go to state 320

State 300:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' . Expression ')' CodeBlock	(Rule 173)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	HashReference	go to state 56
	Expression	go to state 321
	Operator	go to state 55
	ArrayDereferenced	go to state 74

State 301:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 217)

	$default	reduce using rule 217 (TypeInner)

State 302:

	Expression -> Variable OP02_METHOD_THINARROW WORD '(' OPTIONAL-48 ')' .	(Rule 153)

	$default	reduce using rule 153 (Expression)

State 303:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN Expression ';' .	(Rule 186)

	$default	reduce using rule 186 (VariableDeclaration)

State 304:

	PLUS-22 -> Operation .	(Rule 56)

	$default	reduce using rule 56 (PLUS-22)

State 305:

	PLUS-22 -> PLUS-22 . Operation	(Rule 55)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 . '}' ';'	(Rule 57)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'if ('	shift, and go to state 71
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	'}'	shift, and go to state 323
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_NAMED_VOID_PAREN	shift, and go to state 51
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 86
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 87
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	VariableModification	go to state 82
	Operation	go to state 322
	OperatorVoid	go to state 80
	Literal	go to state 81
	ArrayReference	go to state 63
	HashDereferenced	go to state 88
	Expression	go to state 68
	Statement	go to state 66
	VariableDeclaration	go to state 67
	PAREN-49	go to state 65
	OPTIONAL-50	go to state 48
	WordScoped	go to state 60
	Variable	go to state 59
	HashReference	go to state 56
	Conditional	go to state 53
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	LoopLabel	go to state 52

State 306:

	SubroutineArguments -> '( my' Type . VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	VARIABLE_SYMBOL	shift, and go to state 324

State 307:

	Conditional -> 'if (' Expression ')' CodeBlock STAR-52 OPTIONAL-54 .	(Rule 169)

	$default	reduce using rule 169 (Conditional)

State 308:

	PAREN-53 -> 'else' . CodeBlock	(Rule 166)

	'{'	shift, and go to state 265

	CodeBlock	go to state 325

State 309:

	OPTIONAL-54 -> PAREN-53 .	(Rule 167)

	$default	reduce using rule 167 (OPTIONAL-54)

State 310:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 164)

	$default	reduce using rule 164 (STAR-52)

State 311:

	PAREN-51 -> 'elsif (' . Expression ')' CodeBlock	(Rule 163)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Operator	go to state 55
	ArrayDereferenced	go to state 74
	WordScoped	go to state 60
	HashDereferenced	go to state 88
	Variable	go to state 111
	Expression	go to state 326
	HashReference	go to state 56
	Literal	go to state 81
	ArrayReference	go to state 63

State 312:

	PLUS-55 -> PLUS-55 Operation .	(Rule 176)

	$default	reduce using rule 176 (PLUS-55)

State 313:

	CodeBlock -> '{' PLUS-55 '}' .	(Rule 178)

	$default	reduce using rule 178 (CodeBlock)

State 314:

	Properties -> 'our %properties = (' . HashEntryTyped STAR-36 ')' ';'	(Rule 85)
	Properties -> 'our %properties = (' . ')' ';'	(Rule 86)

	'%{'	shift, and go to state 54
	')'	shift, and go to state 327
	WORD	shift, and go to state 328

	HashEntryTyped	go to state 330
	HashDereferenced	go to state 329

State 315:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties . STAR-31 '1;' '1;' OPTIONAL-34	(Rule 81)

	$default	reduce using rule 75 (STAR-31)

	STAR-31	go to state 331

State 316:

	STAR-30 -> STAR-30 Constant .	(Rule 72)

	$default	reduce using rule 72 (STAR-30)

State 317:

	STAR-16 -> STAR-16 . PAREN-15	(Rule 41)
	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 . ']'	(Rule 51)

	']'	shift, and go to state 333
	OP21_LIST_COMMA	shift, and go to state 332

	PAREN-15	go to state 334

State 318:

	OPTIONAL-17 -> TypeInner .	(Rule 43)

	$default	reduce using rule 43 (OPTIONAL-17)

State 319:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 . Literal STAR-20 '}'	(Rule 52)

	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78

	Literal	go to state 335

State 320:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' . CodeBlock	(Rule 174)

	'{'	shift, and go to state 265

	CodeBlock	go to state 336

State 321:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression . ')' CodeBlock	(Rule 173)

	')'	shift, and go to state 337
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 322:

	PLUS-22 -> PLUS-22 Operation .	(Rule 55)

	$default	reduce using rule 55 (PLUS-22)

State 323:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' . ';'	(Rule 57)

	';'	shift, and go to state 338

State 324:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL . STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	$default	reduce using rule 60 (STAR-24)

	STAR-24	go to state 339

State 325:

	PAREN-53 -> 'else' CodeBlock .	(Rule 166)

	$default	reduce using rule 166 (PAREN-53)

State 326:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	PAREN-51 -> 'elsif (' Expression . ')' CodeBlock	(Rule 163)

	')'	shift, and go to state 340
	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 327:

	Properties -> 'our %properties = (' ')' . ';'	(Rule 86)

	';'	shift, and go to state 341

State 328:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner Expression	(Rule 205)

	OP20_HASH_FATARROW	shift, and go to state 342

State 329:

	HashEntryTyped -> HashDereferenced .	(Rule 206)

	$default	reduce using rule 206 (HashEntryTyped)

State 330:

	Properties -> 'our %properties = (' HashEntryTyped . STAR-36 ')' ';'	(Rule 85)

	$default	reduce using rule 84 (STAR-36)

	STAR-36	go to state 343

State 331:

	STAR-31 -> STAR-31 . Method	(Rule 74)
	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 . '1;' '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 345
	'our'	shift, and go to state 346

	Method	go to state 344

State 332:

	PAREN-15 -> OP21_LIST_COMMA . OPTIONAL-14 Literal	(Rule 40)

	'my'	shift, and go to state 161

	LITERAL_NUMBER	reduce using rule 39 (OPTIONAL-14)
	LITERAL_STRING	reduce using rule 39 (OPTIONAL-14)

	OPTIONAL-14	go to state 347
	TypeInner	go to state 348

State 333:

	ConstantValue -> '[' OPTIONAL-13 Literal STAR-16 ']' .	(Rule 51)

	$default	reduce using rule 51 (ConstantValue)

State 334:

	STAR-16 -> STAR-16 PAREN-15 .	(Rule 41)

	$default	reduce using rule 41 (STAR-16)

State 335:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal . STAR-20 '}'	(Rule 52)

	$default	reduce using rule 49 (STAR-20)

	STAR-20	go to state 349

State 336:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL '(' ListElements ')' CodeBlock .	(Rule 174)

	$default	reduce using rule 174 (LoopForEach)

State 337:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' . CodeBlock	(Rule 173)

	'{'	shift, and go to state 265

	CodeBlock	go to state 350

State 338:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-21 PLUS-22 '}' ';' .	(Rule 57)

	$default	reduce using rule 57 (Subroutine)

State 339:

	STAR-24 -> STAR-24 . PAREN-23	(Rule 59)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	')'	shift, and go to state 353
	OP21_LIST_COMMA	shift, and go to state 352

	PAREN-23	go to state 351

State 340:

	PAREN-51 -> 'elsif (' Expression ')' . CodeBlock	(Rule 163)

	'{'	shift, and go to state 265

	CodeBlock	go to state 354

State 341:

	Properties -> 'our %properties = (' ')' ';' .	(Rule 86)

	$default	reduce using rule 86 (Properties)

State 342:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner Expression	(Rule 205)

	'my'	shift, and go to state 161

	TypeInner	go to state 355

State 343:

	STAR-36 -> STAR-36 . PAREN-35	(Rule 83)
	Properties -> 'our %properties = (' HashEntryTyped STAR-36 . ')' ';'	(Rule 85)

	')'	shift, and go to state 357
	OP21_LIST_COMMA	shift, and go to state 356

	PAREN-35	go to state 358

State 344:

	STAR-31 -> STAR-31 Method .	(Rule 74)

	$default	reduce using rule 74 (STAR-31)

State 345:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' . '1;' OPTIONAL-34	(Rule 81)

	'1;'	shift, and go to state 359

State 346:

	Method -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	WORD	shift, and go to state 131

	Type	go to state 360

State 347:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 . Literal	(Rule 40)

	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78

	Literal	go to state 361

State 348:

	OPTIONAL-14 -> TypeInner .	(Rule 38)

	$default	reduce using rule 38 (OPTIONAL-14)

State 349:

	STAR-20 -> STAR-20 . PAREN-19	(Rule 48)
	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 . '}'	(Rule 52)

	'}'	shift, and go to state 363
	OP21_LIST_COMMA	shift, and go to state 364

	PAREN-19	go to state 362

State 350:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL '(' Expression '..' Expression ')' CodeBlock .	(Rule 173)

	$default	reduce using rule 173 (LoopFor)

State 351:

	STAR-24 -> STAR-24 PAREN-23 .	(Rule 59)

	$default	reduce using rule 59 (STAR-24)

State 352:

	PAREN-23 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 58)

	'my'	shift, and go to state 365

State 353:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-25	(Rule 63)

	OP19_VARIABLE_ASSIGN	shift, and go to state 366

State 354:

	PAREN-51 -> 'elsif (' Expression ')' CodeBlock .	(Rule 163)

	$default	reduce using rule 163 (PAREN-51)

State 355:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . Expression	(Rule 205)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayReference	go to state 63
	Literal	go to state 81
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	HashReference	go to state 56
	Expression	go to state 367
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60

State 356:

	PAREN-35 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 82)

	'%{'	shift, and go to state 54
	WORD	shift, and go to state 328

	HashEntryTyped	go to state 368
	HashDereferenced	go to state 329

State 357:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' . ';'	(Rule 85)

	';'	shift, and go to state 369

State 358:

	STAR-36 -> STAR-36 PAREN-35 .	(Rule 83)

	$default	reduce using rule 83 (STAR-36)

State 359:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' . OPTIONAL-34	(Rule 81)

	'our'	shift, and go to state 62

	$end	reduce using rule 80 (OPTIONAL-34)
	'package'	reduce using rule 80 (OPTIONAL-34)

	Subroutine	go to state 372
	PAREN-33	go to state 371
	OPTIONAL-34	go to state 373
	PLUS-32	go to state 370

State 360:

	Method -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	VARIABLE_SYMBOL	shift, and go to state 374

State 361:

	PAREN-15 -> OP21_LIST_COMMA OPTIONAL-14 Literal .	(Rule 40)

	$default	reduce using rule 40 (PAREN-15)

State 362:

	STAR-20 -> STAR-20 PAREN-19 .	(Rule 48)

	$default	reduce using rule 48 (STAR-20)

State 363:

	ConstantValue -> '{' WORD OP20_HASH_FATARROW OPTIONAL-17 Literal STAR-20 '}' .	(Rule 52)

	$default	reduce using rule 52 (ConstantValue)

State 364:

	PAREN-19 -> OP21_LIST_COMMA . WORD OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	WORD	shift, and go to state 375

State 365:

	PAREN-23 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 58)

	WORD	shift, and go to state 131

	Type	go to state 376

State 366:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-25	(Rule 63)

	'@_;'	shift, and go to state 377

State 367:

	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner Expression .	(Rule 205)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

	')'	reduce using rule 205 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 205 (HashEntryTyped)

State 368:

	PAREN-35 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 82)

	$default	reduce using rule 82 (PAREN-35)

State 369:

	Properties -> 'our %properties = (' HashEntryTyped STAR-36 ')' ';' .	(Rule 85)

	$default	reduce using rule 85 (Properties)

State 370:

	PLUS-32 -> PLUS-32 . Subroutine	(Rule 76)
	PAREN-33 -> PLUS-32 . '1;' '1;'	(Rule 78)

	'1;'	shift, and go to state 379
	'our'	shift, and go to state 62

	Subroutine	go to state 378

State 371:

	OPTIONAL-34 -> PAREN-33 .	(Rule 79)

	$default	reduce using rule 79 (OPTIONAL-34)

State 372:

	PLUS-32 -> Subroutine .	(Rule 77)

	$default	reduce using rule 77 (PLUS-32)

State 373:

	Class -> 'package' WordScoped ';' Header 'use parent qw(' WordScoped ')' ';' Include STAR-28 STAR-29 STAR-30 Properties STAR-31 '1;' '1;' OPTIONAL-34 .	(Rule 81)

	$default	reduce using rule 81 (Class)

State 374:

	Method -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'= sub {'	shift, and go to state 380

State 375:

	PAREN-19 -> OP21_LIST_COMMA WORD . OP20_HASH_FATARROW OPTIONAL-18 Literal	(Rule 47)

	OP20_HASH_FATARROW	shift, and go to state 381

State 376:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 382

State 377:

	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-25	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 383

State 378:

	PLUS-32 -> PLUS-32 Subroutine .	(Rule 76)

	$default	reduce using rule 76 (PLUS-32)

State 379:

	PAREN-33 -> PLUS-32 '1;' . '1;'	(Rule 78)

	'1;'	shift, and go to state 384

State 380:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-37 PLUS-38 '}' ';'	(Rule 91)

	'( my'	shift, and go to state 385

	'%{'	reduce using rule 88 (OPTIONAL-37)
	'('	reduce using rule 88 (OPTIONAL-37)
	'@{'	reduce using rule 88 (OPTIONAL-37)
	'['	reduce using rule 88 (OPTIONAL-37)
	'for my integer'	reduce using rule 88 (OPTIONAL-37)
	'foreach my'	reduce using rule 88 (OPTIONAL-37)
	'if ('	reduce using rule 88 (OPTIONAL-37)
	'my'	reduce using rule 88 (OPTIONAL-37)
	'undef'	reduce using rule 88 (OPTIONAL-37)
	'while ('	reduce using rule 88 (OPTIONAL-37)
	'{'	reduce using rule 88 (OPTIONAL-37)
	LITERAL_NUMBER	reduce using rule 88 (OPTIONAL-37)
	LITERAL_STRING	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID	reduce using rule 88 (OPTIONAL-37)
	OP01_NAMED_VOID_PAREN	reduce using rule 88 (OPTIONAL-37)
	OP03_MATH_INC_DEC	reduce using rule 88 (OPTIONAL-37)
	OP05_LOGICAL_NEG	reduce using rule 88 (OPTIONAL-37)
	OP05_MATH_NEG	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY	reduce using rule 88 (OPTIONAL-37)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 88 (OPTIONAL-37)
	OP19_LOOP_CONTROL	reduce using rule 88 (OPTIONAL-37)
	OP22_LOGICAL_NOT	reduce using rule 88 (OPTIONAL-37)
	VARIABLE_SYMBOL	reduce using rule 88 (OPTIONAL-37)
	WORD	reduce using rule 88 (OPTIONAL-37)
	WORD_SCOPED	reduce using rule 88 (OPTIONAL-37)

	OPTIONAL-37	go to state 387
	MethodArguments	go to state 386

State 381:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW . OPTIONAL-18 Literal	(Rule 47)

	'my'	shift, and go to state 161

	LITERAL_NUMBER	reduce using rule 46 (OPTIONAL-18)
	LITERAL_STRING	reduce using rule 46 (OPTIONAL-18)

	TypeInner	go to state 389
	OPTIONAL-18	go to state 388

State 382:

	PAREN-23 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 58)

	$default	reduce using rule 58 (PAREN-23)

State 383:

	STAR-25 -> STAR-25 . ArgumentCheck	(Rule 61)
	SubroutineArguments -> '( my' Type VARIABLE_SYMBOL STAR-24 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-25 .	(Rule 63)

	CHECK_OR_CHECKTRACE	shift, and go to state 391

	'%{'	reduce using rule 63 (SubroutineArguments)
	'('	reduce using rule 63 (SubroutineArguments)
	'@{'	reduce using rule 63 (SubroutineArguments)
	'['	reduce using rule 63 (SubroutineArguments)
	'for my integer'	reduce using rule 63 (SubroutineArguments)
	'foreach my'	reduce using rule 63 (SubroutineArguments)
	'if ('	reduce using rule 63 (SubroutineArguments)
	'my'	reduce using rule 63 (SubroutineArguments)
	'undef'	reduce using rule 63 (SubroutineArguments)
	'while ('	reduce using rule 63 (SubroutineArguments)
	'{'	reduce using rule 63 (SubroutineArguments)
	LITERAL_NUMBER	reduce using rule 63 (SubroutineArguments)
	LITERAL_STRING	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID	reduce using rule 63 (SubroutineArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 63 (SubroutineArguments)
	OP03_MATH_INC_DEC	reduce using rule 63 (SubroutineArguments)
	OP05_LOGICAL_NEG	reduce using rule 63 (SubroutineArguments)
	OP05_MATH_NEG	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY	reduce using rule 63 (SubroutineArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 63 (SubroutineArguments)
	OP19_LOOP_CONTROL	reduce using rule 63 (SubroutineArguments)
	OP22_LOGICAL_NOT	reduce using rule 63 (SubroutineArguments)
	VARIABLE_SYMBOL	reduce using rule 63 (SubroutineArguments)
	WORD	reduce using rule 63 (SubroutineArguments)
	WORD_SCOPED	reduce using rule 63 (SubroutineArguments)

	ArgumentCheck	go to state 390

State 384:

	PAREN-33 -> PLUS-32 '1;' '1;' .	(Rule 78)

	$default	reduce using rule 78 (PAREN-33)

State 385:

	MethodArguments -> '( my' . TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	TYPE_CLASS_OR_SELF	shift, and go to state 392

State 386:

	OPTIONAL-37 -> MethodArguments .	(Rule 87)

	$default	reduce using rule 87 (OPTIONAL-37)

State 387:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 . PLUS-38 '}' ';'	(Rule 91)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'if ('	shift, and go to state 71
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_NAMED_VOID_PAREN	shift, and go to state 51
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 86
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 87
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	Statement	go to state 66
	VariableDeclaration	go to state 67
	Expression	go to state 68
	HashDereferenced	go to state 88
	PAREN-49	go to state 65
	PLUS-38	go to state 394
	ArrayReference	go to state 63
	OperatorVoid	go to state 80
	Operation	go to state 393
	Literal	go to state 81
	VariableModification	go to state 82
	HashReference	go to state 56
	Variable	go to state 59
	WordScoped	go to state 60
	LoopLabel	go to state 52
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	Conditional	go to state 53
	OPTIONAL-50	go to state 48

State 388:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 . Literal	(Rule 47)

	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78

	Literal	go to state 395

State 389:

	OPTIONAL-18 -> TypeInner .	(Rule 45)

	$default	reduce using rule 45 (OPTIONAL-18)

State 390:

	STAR-25 -> STAR-25 ArgumentCheck .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 391:

	ArgumentCheck -> CHECK_OR_CHECKTRACE . '(' Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'('	shift, and go to state 396

State 392:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF . STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	$default	reduce using rule 94 (STAR-40)

	STAR-40	go to state 397

State 393:

	PLUS-38 -> Operation .	(Rule 90)

	$default	reduce using rule 90 (PLUS-38)

State 394:

	PLUS-38 -> PLUS-38 . Operation	(Rule 89)
	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 . '}' ';'	(Rule 91)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'if ('	shift, and go to state 71
	'my'	shift, and go to state 61
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	'}'	shift, and go to state 399
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP01_NAMED_VOID	shift, and go to state 70
	OP01_NAMED_VOID_PAREN	shift, and go to state 51
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP19_LOOP_CONTROL	shift, and go to state 86
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 87
	WORD_SCOPED	shift, and go to state 11

	'for my integer'	reduce using rule 157 (OPTIONAL-50)
	'foreach my'	reduce using rule 157 (OPTIONAL-50)
	'while ('	reduce using rule 157 (OPTIONAL-50)

	ArrayReference	go to state 63
	VariableModification	go to state 82
	Literal	go to state 81
	OperatorVoid	go to state 80
	Operation	go to state 398
	PAREN-49	go to state 65
	Expression	go to state 68
	VariableDeclaration	go to state 67
	Statement	go to state 66
	HashDereferenced	go to state 88
	OPTIONAL-50	go to state 48
	Operator	go to state 55
	Conditional	go to state 53
	ArrayDereferenced	go to state 74
	LoopLabel	go to state 52
	HashReference	go to state 56
	WordScoped	go to state 60
	Variable	go to state 59

State 395:

	PAREN-19 -> OP21_LIST_COMMA WORD OP20_HASH_FATARROW OPTIONAL-18 Literal .	(Rule 47)

	$default	reduce using rule 47 (PAREN-19)

State 396:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' . Expression OPTIONAL-27 ')' ';'	(Rule 67)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	ArrayDereferenced	go to state 74
	Operator	go to state 55
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	Expression	go to state 400
	HashReference	go to state 56
	Literal	go to state 81
	ArrayReference	go to state 63

State 397:

	STAR-40 -> STAR-40 . PAREN-39	(Rule 93)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 . ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	')'	shift, and go to state 403
	OP21_LIST_COMMA	shift, and go to state 402

	PAREN-39	go to state 401

State 398:

	PLUS-38 -> PLUS-38 Operation .	(Rule 89)

	$default	reduce using rule 89 (PLUS-38)

State 399:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' . ';'	(Rule 91)

	';'	shift, and go to state 404

State 400:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression . OPTIONAL-27 ')' ';'	(Rule 67)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP21_LIST_COMMA	shift, and go to state 406
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

	')'	reduce using rule 66 (OPTIONAL-27)

	PAREN-26	go to state 407
	OPTIONAL-27	go to state 405

State 401:

	STAR-40 -> STAR-40 PAREN-39 .	(Rule 93)

	$default	reduce using rule 93 (STAR-40)

State 402:

	PAREN-39 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 92)

	'my'	shift, and go to state 408

State 403:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' . OP19_VARIABLE_ASSIGN '@_;' STAR-41	(Rule 97)

	OP19_VARIABLE_ASSIGN	shift, and go to state 409

State 404:

	Method -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-37 PLUS-38 '}' ';' .	(Rule 91)

	$default	reduce using rule 91 (Method)

State 405:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 . ')' ';'	(Rule 67)

	')'	shift, and go to state 410

State 406:

	PAREN-26 -> OP21_LIST_COMMA . Expression OP21_LIST_COMMA Expression	(Rule 64)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	Operator	go to state 55
	ArrayDereferenced	go to state 74
	Variable	go to state 111
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	HashReference	go to state 56
	Expression	go to state 411

State 407:

	OPTIONAL-27 -> PAREN-26 .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-27)

State 408:

	PAREN-39 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 92)

	WORD	shift, and go to state 131

	Type	go to state 412

State 409:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN . '@_;' STAR-41	(Rule 97)

	'@_;'	shift, and go to state 413

State 410:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' . ';'	(Rule 67)

	';'	shift, and go to state 414

State 411:

	PAREN-26 -> OP21_LIST_COMMA Expression . OP21_LIST_COMMA Expression	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP21_LIST_COMMA	shift, and go to state 415
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

State 412:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 92)

	VARIABLE_SYMBOL	shift, and go to state 416

State 413:

	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' . STAR-41	(Rule 97)

	$default	reduce using rule 96 (STAR-41)

	STAR-41	go to state 417

State 414:

	ArgumentCheck -> CHECK_OR_CHECKTRACE '(' Expression OPTIONAL-27 ')' ';' .	(Rule 67)

	$default	reduce using rule 67 (ArgumentCheck)

State 415:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA . Expression	(Rule 64)

	'%{'	shift, and go to state 54
	'('	shift, and go to state 57
	'@{'	shift, and go to state 69
	'['	shift, and go to state 77
	'undef'	shift, and go to state 64
	'{'	shift, and go to state 46
	LITERAL_NUMBER	shift, and go to state 75
	LITERAL_STRING	shift, and go to state 78
	OP01_NAMED	shift, and go to state 58
	OP03_MATH_INC_DEC	shift, and go to state 49
	OP05_LOGICAL_NEG	shift, and go to state 85
	OP05_MATH_NEG	shift, and go to state 76
	OP10_NAMED_UNARY	shift, and go to state 72
	OP10_NAMED_UNARY_STRINGIFY	shift, and go to state 83
	OP22_LOGICAL_NOT	shift, and go to state 84
	VARIABLE_SYMBOL	shift, and go to state 47
	WORD	shift, and go to state 10
	WORD_SCOPED	shift, and go to state 11

	Literal	go to state 81
	ArrayReference	go to state 63
	ArrayDereferenced	go to state 74
	Operator	go to state 55
	HashDereferenced	go to state 88
	WordScoped	go to state 60
	Variable	go to state 111
	Expression	go to state 418
	HashReference	go to state 56

State 416:

	PAREN-39 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 92)

	$default	reduce using rule 92 (PAREN-39)

State 417:

	STAR-41 -> STAR-41 . ArgumentCheck	(Rule 95)
	MethodArguments -> '( my' TYPE_CLASS_OR_SELF STAR-40 ')' OP19_VARIABLE_ASSIGN '@_;' STAR-41 .	(Rule 97)

	CHECK_OR_CHECKTRACE	shift, and go to state 391

	'%{'	reduce using rule 97 (MethodArguments)
	'('	reduce using rule 97 (MethodArguments)
	'@{'	reduce using rule 97 (MethodArguments)
	'['	reduce using rule 97 (MethodArguments)
	'for my integer'	reduce using rule 97 (MethodArguments)
	'foreach my'	reduce using rule 97 (MethodArguments)
	'if ('	reduce using rule 97 (MethodArguments)
	'my'	reduce using rule 97 (MethodArguments)
	'undef'	reduce using rule 97 (MethodArguments)
	'while ('	reduce using rule 97 (MethodArguments)
	'{'	reduce using rule 97 (MethodArguments)
	LITERAL_NUMBER	reduce using rule 97 (MethodArguments)
	LITERAL_STRING	reduce using rule 97 (MethodArguments)
	OP01_NAMED	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID	reduce using rule 97 (MethodArguments)
	OP01_NAMED_VOID_PAREN	reduce using rule 97 (MethodArguments)
	OP03_MATH_INC_DEC	reduce using rule 97 (MethodArguments)
	OP05_LOGICAL_NEG	reduce using rule 97 (MethodArguments)
	OP05_MATH_NEG	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY	reduce using rule 97 (MethodArguments)
	OP10_NAMED_UNARY_STRINGIFY	reduce using rule 97 (MethodArguments)
	OP19_LOOP_CONTROL	reduce using rule 97 (MethodArguments)
	OP22_LOGICAL_NOT	reduce using rule 97 (MethodArguments)
	VARIABLE_SYMBOL	reduce using rule 97 (MethodArguments)
	WORD	reduce using rule 97 (MethodArguments)
	WORD_SCOPED	reduce using rule 97 (MethodArguments)

	ArgumentCheck	go to state 419

State 418:

	PAREN-26 -> OP21_LIST_COMMA Expression OP21_LIST_COMMA Expression .	(Rule 64)
	Operator -> Expression . OP04_MATH_POW Expression	(Rule 105)
	Operator -> Expression . OP06_REGEX_MATCH '/' OP06_REGEX_PATTERN '/'	(Rule 108)
	Operator -> Expression . OP07_MATH_MULT_DIV_MOD Expression	(Rule 109)
	Operator -> Expression . OP08_MATH_ADD_SUB Expression	(Rule 110)
	Operator -> Expression . OP08_STRING_CAT Expression	(Rule 111)
	Operator -> Expression . OP09_BITWISE_SHIFT Expression	(Rule 112)
	Operator -> Expression . OP11_COMPARE_LT_GT Expression	(Rule 115)
	Operator -> Expression . OP12_COMPARE_EQ_NEQ Expression	(Rule 116)
	Operator -> Expression . OP13_BITWISE_AND Expression	(Rule 117)
	Operator -> Expression . OP14_BITWISE_OR_XOR Expression	(Rule 118)
	Operator -> Expression . OP15_LOGICAL_AND Expression	(Rule 119)
	Operator -> Expression . OP16_LOGICAL_OR Expression	(Rule 120)
	Operator -> Expression . OP17_LIST_RANGE Expression	(Rule 121)
	Operator -> Expression . OP18_TERNARY Variable COLON Variable	(Rule 122)
	Operator -> Expression . OP23_LOGICAL_AND Expression	(Rule 124)
	Operator -> Expression . OP24_LOGICAL_OR_XOR Expression	(Rule 125)

	OP04_MATH_POW	shift, and go to state 135
	OP06_REGEX_MATCH	shift, and go to state 149
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 144
	OP08_MATH_ADD_SUB	shift, and go to state 137
	OP08_STRING_CAT	shift, and go to state 136
	OP09_BITWISE_SHIFT	shift, and go to state 147
	OP11_COMPARE_LT_GT	shift, and go to state 134
	OP12_COMPARE_EQ_NEQ	shift, and go to state 143
	OP13_BITWISE_AND	shift, and go to state 138
	OP14_BITWISE_OR_XOR	shift, and go to state 133
	OP15_LOGICAL_AND	shift, and go to state 140
	OP16_LOGICAL_OR	shift, and go to state 146
	OP17_LIST_RANGE	shift, and go to state 139
	OP18_TERNARY	shift, and go to state 148
	OP23_LOGICAL_AND	shift, and go to state 145
	OP24_LOGICAL_OR_XOR	shift, and go to state 141

	')'	reduce using rule 64 (PAREN-26)

State 419:

	STAR-41 -> STAR-41 ArgumentCheck .	(Rule 95)

	$default	reduce using rule 95 (STAR-41)


Summary:
--------
Number of rules         : 222
Number of terminals     : 83
Number of non-terminals : 108
Number of states        : 420
