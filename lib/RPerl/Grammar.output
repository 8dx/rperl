Conflicts:
----------
Conflict in state 180 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 180 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 180 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 180 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 180 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 180 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 180 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 180 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 180 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 180 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 180 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 180 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 180 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 180 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 180 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 180 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 180 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 193 between rule 93 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 193 between rule 93 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 193 between rule 93 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 193 between rule 93 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 193 between rule 93 and token OP08_STRING_CAT resolved as shift.
Conflict in state 193 between rule 93 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 93 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 193 between rule 93 and token OP18_TERNARY resolved as reduce.
Conflict in state 193 between rule 93 and token OP04_MATH_POW resolved as shift.
Conflict in state 193 between rule 93 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 193 between rule 93 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 193 between rule 93 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 193 between rule 93 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 193 between rule 93 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 193 between rule 93 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 193 between rule 93 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 193 between rule 93 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 201 between rule 103 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 201 between rule 103 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 201 between rule 103 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 201 between rule 103 and token OP08_STRING_CAT resolved as shift.
Conflict in state 201 between rule 103 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 201 between rule 103 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 201 between rule 103 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 201 between rule 103 and token OP18_TERNARY resolved as shift.
Conflict in state 201 between rule 103 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 201 between rule 103 and token OP04_MATH_POW resolved as shift.
Conflict in state 201 between rule 103 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 201 between rule 103 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 201 between rule 103 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 201 between rule 103 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 201 between rule 103 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 201 between rule 103 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 201 between rule 103 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 202 between rule 85 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 202 between rule 85 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 202 between rule 85 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 202 between rule 85 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 202 between rule 85 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 202 between rule 85 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 202 between rule 85 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 202 between rule 85 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 202 between rule 85 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 202 between rule 85 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 202 between rule 85 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 202 between rule 85 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 202 between rule 85 and token OP04_MATH_POW resolved as shift.
Conflict in state 202 between rule 85 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 202 between rule 85 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 202 between rule 85 and token OP18_TERNARY resolved as reduce.
Conflict in state 202 between rule 85 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 218 between rule 105 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 218 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 218 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 218 between rule 105 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 218 between rule 105 and token OP08_STRING_CAT resolved as shift.
Conflict in state 218 between rule 105 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 218 between rule 105 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 218 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 218 between rule 105 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 218 between rule 105 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 218 between rule 105 and token OP18_TERNARY resolved as shift.
Conflict in state 218 between rule 105 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 218 between rule 105 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 218 between rule 105 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 218 between rule 105 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 218 between rule 105 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 218 between rule 105 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 219 between rule 89 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 219 between rule 89 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 219 between rule 89 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 219 between rule 89 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 219 between rule 89 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 219 between rule 89 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 89 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 219 between rule 89 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 219 between rule 89 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 219 between rule 89 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 219 between rule 89 and token OP04_MATH_POW resolved as shift.
Conflict in state 219 between rule 89 and token OP18_TERNARY resolved as reduce.
Conflict in state 219 between rule 89 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 219 between rule 89 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 219 between rule 89 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 219 between rule 89 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 219 between rule 89 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 220 between rule 92 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 220 between rule 92 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 220 between rule 92 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 220 between rule 92 and token OP08_STRING_CAT resolved as shift.
Conflict in state 220 between rule 92 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 92 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 220 between rule 92 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 220 between rule 92 and token OP18_TERNARY resolved as reduce.
Conflict in state 220 between rule 92 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 92 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 220 between rule 92 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 92 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 220 between rule 92 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 220 between rule 92 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 220 between rule 92 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 220 between rule 92 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 220 between rule 92 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 221 between rule 97 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 221 between rule 97 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 221 between rule 97 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 221 between rule 97 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 221 between rule 97 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 221 between rule 97 and token OP18_TERNARY resolved as reduce.
Conflict in state 221 between rule 97 and token OP04_MATH_POW resolved as shift.
Conflict in state 221 between rule 97 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 97 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 221 between rule 97 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 221 between rule 97 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 221 between rule 97 and token OP08_STRING_CAT resolved as shift.
Conflict in state 221 between rule 97 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 221 between rule 97 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 221 between rule 97 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 221 between rule 97 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 221 between rule 97 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 222 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 222 between rule 101 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 222 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 222 between rule 101 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 222 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 222 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 222 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 222 between rule 101 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 222 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 222 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 222 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 222 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 222 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 222 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 222 between rule 101 and token OP17_LIST_RANGE resolved as error.
Conflict in state 222 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 222 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 223 between rule 98 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 223 between rule 98 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 223 between rule 98 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 223 between rule 98 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 223 between rule 98 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 223 between rule 98 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 223 between rule 98 and token OP18_TERNARY resolved as reduce.
Conflict in state 223 between rule 98 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 223 between rule 98 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 98 and token OP04_MATH_POW resolved as shift.
Conflict in state 223 between rule 98 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 223 between rule 98 and token OP08_STRING_CAT resolved as shift.
Conflict in state 223 between rule 98 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 223 between rule 98 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 223 between rule 98 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 223 between rule 98 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 223 between rule 98 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 84 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 224 between rule 84 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 224 between rule 84 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 224 between rule 84 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 224 between rule 84 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 224 between rule 84 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 84 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 224 between rule 84 and token OP18_TERNARY resolved as reduce.
Conflict in state 224 between rule 84 and token OP04_MATH_POW resolved as shift.
Conflict in state 224 between rule 84 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 224 between rule 84 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 224 between rule 84 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 224 between rule 84 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 224 between rule 84 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 224 between rule 84 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 224 between rule 84 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 224 between rule 84 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 225 between rule 99 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 225 between rule 99 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 225 between rule 99 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 225 between rule 99 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 225 between rule 99 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 225 between rule 99 and token OP18_TERNARY resolved as reduce.
Conflict in state 225 between rule 99 and token OP04_MATH_POW resolved as shift.
Conflict in state 225 between rule 99 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 99 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 225 between rule 99 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 225 between rule 99 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 225 between rule 99 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 225 between rule 99 and token OP08_STRING_CAT resolved as shift.
Conflict in state 225 between rule 99 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 225 between rule 99 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 225 between rule 99 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 225 between rule 99 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 226 between rule 91 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 226 between rule 91 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 226 between rule 91 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 226 between rule 91 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 226 between rule 91 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 91 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 226 between rule 91 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 226 between rule 91 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 226 between rule 91 and token OP04_MATH_POW resolved as shift.
Conflict in state 226 between rule 91 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 226 between rule 91 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 226 between rule 91 and token OP18_TERNARY resolved as reduce.
Conflict in state 226 between rule 91 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 226 between rule 91 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 226 between rule 91 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 226 between rule 91 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 226 between rule 91 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 227 between rule 96 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 227 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 227 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 227 between rule 96 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 227 between rule 96 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 96 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 227 between rule 96 and token OP08_STRING_CAT resolved as shift.
Conflict in state 227 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 227 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 227 between rule 96 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 227 between rule 96 and token OP18_TERNARY resolved as reduce.
Conflict in state 227 between rule 96 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 227 between rule 96 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 227 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 227 between rule 96 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 227 between rule 96 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 227 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 228 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 228 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 228 between rule 100 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 228 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 228 between rule 100 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 228 between rule 100 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 228 between rule 100 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 228 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 228 between rule 100 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 228 between rule 100 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 228 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 228 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 228 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 228 between rule 100 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 228 between rule 100 and token OP08_STRING_CAT resolved as shift.
Conflict in state 228 between rule 100 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 228 between rule 100 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 229 between rule 88 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 229 between rule 88 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 229 between rule 88 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 229 between rule 88 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 229 between rule 88 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 229 between rule 88 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 229 between rule 88 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 229 between rule 88 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 229 between rule 88 and token OP18_TERNARY resolved as reduce.
Conflict in state 229 between rule 88 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 229 between rule 88 and token OP04_MATH_POW resolved as shift.
Conflict in state 229 between rule 88 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 229 between rule 88 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 229 between rule 88 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 229 between rule 88 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 229 between rule 88 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 229 between rule 88 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 230 between rule 90 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 230 between rule 90 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 230 between rule 90 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 90 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 230 between rule 90 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 230 between rule 90 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 230 between rule 90 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 230 between rule 90 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 230 between rule 90 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 230 between rule 90 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 230 between rule 90 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 230 between rule 90 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 230 between rule 90 and token OP18_TERNARY resolved as reduce.
Conflict in state 230 between rule 90 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 230 between rule 90 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 230 between rule 90 and token OP04_MATH_POW resolved as shift.
Conflict in state 230 between rule 90 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 234 between rule 104 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 234 between rule 104 and token OP04_MATH_POW resolved as shift.
Conflict in state 234 between rule 104 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 234 between rule 104 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 234 between rule 104 and token OP18_TERNARY resolved as shift.
Conflict in state 234 between rule 104 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 234 between rule 104 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 234 between rule 104 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 234 between rule 104 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 234 between rule 104 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 234 between rule 104 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 234 between rule 104 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 234 between rule 104 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 234 between rule 104 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 234 between rule 104 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 234 between rule 104 and token OP08_STRING_CAT resolved as shift.
Conflict in state 234 between rule 104 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 95 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 235 between rule 95 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 235 between rule 95 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 235 between rule 95 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 235 between rule 95 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 235 between rule 95 and token OP04_MATH_POW resolved as shift.
Conflict in state 235 between rule 95 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 95 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 235 between rule 95 and token OP18_TERNARY resolved as reduce.
Conflict in state 235 between rule 95 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 235 between rule 95 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 235 between rule 95 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 235 between rule 95 and token OP08_STRING_CAT resolved as shift.
Conflict in state 235 between rule 95 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 235 between rule 95 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 235 between rule 95 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 235 between rule 95 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 240 between rule 79 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 240 between rule 79 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 240 between rule 79 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 240 between rule 79 and token OP06_REGEX_MATCH resolved as reduce.
Conflict in state 240 between rule 79 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 79 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 240 between rule 79 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 240 between rule 79 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 240 between rule 79 and token OP18_TERNARY resolved as reduce.
Conflict in state 240 between rule 79 and token OP04_MATH_POW resolved as reduce.
Conflict in state 240 between rule 79 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 240 between rule 79 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 240 between rule 79 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 240 between rule 79 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 240 between rule 79 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 240 between rule 79 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 240 between rule 79 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 363 between rule 101 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 363 between rule 101 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 363 between rule 101 and token OP08_STRING_CAT resolved as shift.
Conflict in state 363 between rule 101 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 363 between rule 101 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 363 between rule 101 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 363 between rule 101 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 363 between rule 101 and token OP17_LIST_RANGE resolved as error.
Conflict in state 363 between rule 101 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 363 between rule 101 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 363 between rule 101 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 363 between rule 101 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 363 between rule 101 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 363 between rule 101 and token OP04_MATH_POW resolved as shift.
Conflict in state 363 between rule 101 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 363 between rule 101 and token OP18_TERNARY resolved as reduce.
Conflict in state 363 between rule 101 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 406 between rule 80 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 406 between rule 80 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 406 between rule 80 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 406 between rule 80 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 406 between rule 80 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 406 between rule 80 and token OP18_TERNARY resolved as shift.
Conflict in state 406 between rule 80 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 406 between rule 80 and token OP04_MATH_POW resolved as shift.
Conflict in state 406 between rule 80 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 406 between rule 80 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 406 between rule 80 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 406 between rule 80 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 406 between rule 80 and token OP06_REGEX_MATCH resolved as shift.
Conflict in state 406 between rule 80 and token OP08_STRING_CAT resolved as shift.
Conflict in state 406 between rule 80 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 406 between rule 80 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 406 between rule 80 and token OP07_MATH_MULT_DIV_MOD resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header
22:	Module -> Package
23:	Module -> Class
24:	STAR-10 -> STAR-10 Critic
25:	STAR-10 -> /* empty */
26:	STAR-11 -> STAR-11 Include
27:	STAR-11 -> /* empty */
28:	STAR-12 -> STAR-12 Constant
29:	STAR-12 -> /* empty */
30:	PLUS-13 -> PLUS-13 Subroutine
31:	PLUS-13 -> Subroutine
32:	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'
33:	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN
34:	PLUS-14 -> PLUS-14 WORD
35:	PLUS-14 -> WORD
36:	Critic -> '## no critic qw(' PLUS-14 ')'
37:	PLUS-15 -> PLUS-15 WORD
38:	PLUS-15 -> WORD
39:	Include -> 'use' WordScoped ';'
40:	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';'
41:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
42:	OPTIONAL-16 -> SubroutineArguments
43:	OPTIONAL-16 -> /* empty */
44:	PLUS-17 -> PLUS-17 Operation
45:	PLUS-17 -> Operation
46:	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'
47:	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
48:	STAR-19 -> STAR-19 PAREN-18
49:	STAR-19 -> /* empty */
50:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'
51:	STAR-20 -> STAR-20 Critic
52:	STAR-20 -> /* empty */
53:	STAR-21 -> STAR-21 Include
54:	STAR-21 -> /* empty */
55:	STAR-22 -> STAR-22 Constant
56:	STAR-22 -> /* empty */
57:	STAR-23 -> STAR-23 MethodOrSubroutine
58:	STAR-23 -> /* empty */
59:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'
60:	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped
61:	STAR-25 -> STAR-25 PAREN-24
62:	STAR-25 -> /* empty */
63:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'
64:	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
65:	OPTIONAL-26 -> MethodArguments
66:	OPTIONAL-26 -> /* empty */
67:	PLUS-27 -> PLUS-27 Operation
68:	PLUS-27 -> Operation
69:	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'
70:	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL
71:	STAR-29 -> STAR-29 PAREN-28
72:	STAR-29 -> /* empty */
73:	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'
74:	MethodOrSubroutine -> Method
75:	MethodOrSubroutine -> Subroutine
76:	Operation -> Expression ';'
77:	Operation -> Statement
78:	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'
79:	Operator -> OP01_NAMED SubExpression
80:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
81:	Operator -> OP01_CLOSE FH_REF_SYMBOL
82:	Operator -> OP03_MATH_INC_DEC Variable
83:	Operator -> Variable OP03_MATH_INC_DEC
84:	Operator -> SubExpression OP04_MATH_POW SubExpression
85:	Operator -> OP05_LOGICAL_NEG SubExpression
86:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
87:	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN
88:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
89:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
90:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
91:	Operator -> SubExpression OP08_STRING_CAT SubExpression
92:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
93:	Operator -> OP10_NAMED_UNARY SubExpression
94:	Operator -> OP10_NAMED_UNARY
95:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
96:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
97:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
98:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
99:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
100:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
101:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
102:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
103:	Operator -> OP22_LOGICAL_NEG SubExpression
104:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
105:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
106:	PAREN-30 -> STDOUT_STDERR
107:	OPTIONAL-31 -> PAREN-30
108:	OPTIONAL-31 -> /* empty */
109:	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';'
110:	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';'
111:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
112:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
113:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
114:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
115:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
116:	OPTIONAL-32 -> ListElements
117:	OPTIONAL-32 -> /* empty */
118:	OPTIONAL-33 -> ListElements
119:	OPTIONAL-33 -> /* empty */
120:	Expression -> Operator
121:	Expression -> WordScoped LPAREN OPTIONAL-32 ')'
122:	Expression -> WORD_UPPERCASE LPAREN ')'
123:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'
124:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')'
125:	SubExpression -> Expression
126:	SubExpression -> 'undef'
127:	SubExpression -> Literal
128:	SubExpression -> Variable
129:	SubExpression -> ArrayReference
130:	SubExpression -> ArrayDereferenced
131:	SubExpression -> HashReference
132:	SubExpression -> HashDereferenced
133:	SubExpression -> LPAREN SubExpression ')'
134:	SubExpressionOrStdin -> SubExpression
135:	SubExpressionOrStdin -> STDIN
136:	PAREN-34 -> LoopLabel COLON
137:	OPTIONAL-35 -> PAREN-34
138:	OPTIONAL-35 -> /* empty */
139:	Statement -> Conditional
140:	Statement -> OPTIONAL-35 Loop
141:	Statement -> OperatorVoid
142:	Statement -> VariableDeclaration
143:	Statement -> VariableModification
144:	PAREN-36 -> 'elsif (' SubExpression ')' CodeBlock
145:	STAR-37 -> STAR-37 PAREN-36
146:	STAR-37 -> /* empty */
147:	PAREN-38 -> 'else' CodeBlock
148:	OPTIONAL-39 -> PAREN-38
149:	OPTIONAL-39 -> /* empty */
150:	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-37 OPTIONAL-39
151:	Loop -> LoopFor
152:	Loop -> LoopForEach
153:	Loop -> LoopWhile
154:	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
155:	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
156:	LoopWhile -> 'while (' SubExpression ')' CodeBlock
157:	PLUS-40 -> PLUS-40 Operation
158:	PLUS-40 -> Operation
159:	CodeBlock -> LBRACE PLUS-40 '}'
160:	STAR-41 -> STAR-41 VariableRetrieval
161:	STAR-41 -> /* empty */
162:	Variable -> VARIABLE_SYMBOL STAR-41
163:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
164:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
165:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
166:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';'
167:	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
168:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'
169:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';'
170:	PAREN-42 -> OP21_LIST_COMMA ListElement
171:	STAR-43 -> STAR-43 PAREN-42
172:	STAR-43 -> /* empty */
173:	PLUS-44 -> PLUS-44 WORD
174:	PLUS-44 -> WORD
175:	ListElements -> ListElement STAR-43
176:	ListElements -> OP01_QW PLUS-44 ')'
177:	ListElement -> SubExpression
178:	ListElement -> TypeInner SubExpression
179:	OPTIONAL-45 -> ListElements
180:	OPTIONAL-45 -> /* empty */
181:	ArrayReference -> LBRACKET OPTIONAL-45 ']'
182:	ArrayDereferenced -> '@{' Variable '}'
183:	ArrayDereferenced -> '@{' ArrayReference '}'
184:	OPTIONAL-46 -> TypeInner
185:	OPTIONAL-46 -> /* empty */
186:	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 SubExpression
187:	HashEntry -> HashDereferenced
188:	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression
189:	HashEntryTyped -> HashDereferenced
190:	PAREN-47 -> OP21_LIST_COMMA HashEntry
191:	STAR-48 -> STAR-48 PAREN-47
192:	STAR-48 -> /* empty */
193:	HashReference -> LBRACE HashEntry STAR-48 '}'
194:	HashReference -> LBRACE '}'
195:	HashDereferenced -> '%{' Variable '}'
196:	HashDereferenced -> '%{' HashReference '}'
197:	WordScoped -> WORD
198:	WordScoped -> WORD_SCOPED
199:	LoopLabel -> WORD_UPPERCASE
200:	Type -> WORD
201:	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN
202:	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
203:	VariableOrLiteral -> Variable
204:	VariableOrLiteral -> Literal
205:	Literal -> LITERAL_STRING
206:	Literal -> LITERAL_NUMBER

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 8
	SHEBANG	shift, and go to state 9

	'package'	reduce using rule 20 (OPTIONAL-9)

	Program	go to state 1
	CompileUnit	go to state 6
	PLUS-2	go to state 2
	OPTIONAL-9	go to state 3
	PAREN-1	go to state 7
	ModuleHeader	go to state 4
	Critic	go to state 5

State 1:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 2:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 8

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)

	PAREN-1	go to state 10
	Critic	go to state 5
	ModuleHeader	go to state 4
	OPTIONAL-9	go to state 3

State 3:

	ModuleHeader -> OPTIONAL-9 . 'package' WordScoped ';' Header	(Rule 21)

	'package'	shift, and go to state 11

State 4:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 16

	'## no critic qw('	reduce using rule 25 (STAR-10)
	'our'	reduce using rule 25 (STAR-10)
	'use constant'	reduce using rule 25 (STAR-10)
	'use'	reduce using rule 25 (STAR-10)

	Module	go to state 14
	Class	go to state 12
	Package	go to state 15
	STAR-10	go to state 13

State 5:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 6:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 17

State 7:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 8:

	Critic -> '## no critic qw(' . PLUS-14 ')'	(Rule 36)

	WORD	shift, and go to state 18

	PLUS-14	go to state 19

State 9:

	Program -> SHEBANG . OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 8

	'use strict;'	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 21
	OPTIONAL-3	go to state 20

State 10:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 11:

	ModuleHeader -> OPTIONAL-9 'package' . WordScoped ';' Header	(Rule 21)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 22

State 12:

	Module -> Class .	(Rule 23)

	$default	reduce using rule 23 (Module)

State 13:

	STAR-10 -> STAR-10 . Critic	(Rule 24)
	Package -> STAR-10 . STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'## no critic qw('	shift, and go to state 8

	'our'	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	'use'	reduce using rule 27 (STAR-11)

	Critic	go to state 26
	STAR-11	go to state 25

State 14:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 15:

	Module -> Package .	(Rule 22)

	$default	reduce using rule 22 (Module)

State 16:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 27

State 17:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 18:

	PLUS-14 -> WORD .	(Rule 35)

	$default	reduce using rule 35 (PLUS-14)

State 19:

	PLUS-14 -> PLUS-14 . WORD	(Rule 34)
	Critic -> '## no critic qw(' PLUS-14 . ')'	(Rule 36)

	')'	shift, and go to state 29
	WORD	shift, and go to state 28

State 20:

	Program -> SHEBANG OPTIONAL-3 . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 31

	Header	go to state 30

State 21:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 22:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped . ';' Header	(Rule 21)

	';'	shift, and go to state 32

State 23:

	WordScoped -> WORD .	(Rule 197)

	$default	reduce using rule 197 (WordScoped)

State 24:

	WordScoped -> WORD_SCOPED .	(Rule 198)

	$default	reduce using rule 198 (WordScoped)

State 25:

	STAR-11 -> STAR-11 . Include	(Rule 26)
	Package -> STAR-10 STAR-11 . STAR-12 PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'use'	shift, and go to state 33

	'our'	reduce using rule 29 (STAR-12)
	'use constant'	reduce using rule 29 (STAR-12)

	STAR-12	go to state 35
	Include	go to state 34

State 26:

	STAR-10 -> STAR-10 Critic .	(Rule 24)

	$default	reduce using rule 24 (STAR-10)

State 27:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	')'	shift, and go to state 36

State 28:

	PLUS-14 -> PLUS-14 WORD .	(Rule 34)

	$default	reduce using rule 34 (PLUS-14)

State 29:

	Critic -> '## no critic qw(' PLUS-14 ')' .	(Rule 36)

	$default	reduce using rule 36 (Critic)

State 30:

	Program -> SHEBANG OPTIONAL-3 Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 37

State 31:

	Header -> 'use strict;' . 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use warnings;'	shift, and go to state 38

State 32:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' . Header	(Rule 21)

	'use strict;'	shift, and go to state 31

	Header	go to state 39

State 33:

	Include -> 'use' . WordScoped ';'	(Rule 39)
	Include -> 'use' . WordScoped 'qw(' PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24

	WordScoped	go to state 40

State 34:

	STAR-11 -> STAR-11 Include .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 35:

	STAR-12 -> STAR-12 . Constant	(Rule 28)
	Package -> STAR-10 STAR-11 STAR-12 . PLUS-13 LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 45
	'use constant'	shift, and go to state 44

	Constant	go to state 42
	Subroutine	go to state 43
	PLUS-13	go to state 41

State 36:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	';'	shift, and go to state 46

State 37:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 8

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for my integer'	reduce using rule 11 (STAR-5)
	'foreach my'	reduce using rule 11 (STAR-5)
	'if ('	reduce using rule 11 (STAR-5)
	'my'	reduce using rule 11 (STAR-5)
	'our'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'use'	reduce using rule 11 (STAR-5)
	'while ('	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	STAR-5	go to state 47
	Critic	go to state 48

State 38:

	Header -> 'use strict;' 'use warnings;' . 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'use RPerl;'	shift, and go to state 49

State 39:

	ModuleHeader -> OPTIONAL-9 'package' WordScoped ';' Header .	(Rule 21)

	$default	reduce using rule 21 (ModuleHeader)

State 40:

	Include -> 'use' WordScoped . ';'	(Rule 39)
	Include -> 'use' WordScoped . 'qw(' PLUS-15 ')' ';'	(Rule 40)

	';'	shift, and go to state 50
	'qw('	shift, and go to state 51

State 41:

	PLUS-13 -> PLUS-13 . Subroutine	(Rule 30)
	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 . LITERAL_NUMBER ';'	(Rule 32)

	'our'	shift, and go to state 45
	LITERAL_NUMBER	shift, and go to state 52

	Subroutine	go to state 53

State 42:

	STAR-12 -> STAR-12 Constant .	(Rule 28)

	$default	reduce using rule 28 (STAR-12)

State 43:

	PLUS-13 -> Subroutine .	(Rule 31)

	$default	reduce using rule 31 (PLUS-13)

State 44:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	WORD_UPPERCASE	shift, and go to state 54

State 45:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	WORD	shift, and go to state 56

	Type	go to state 55

State 46:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 33

	Include	go to state 57

State 47:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use'	shift, and go to state 33

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for my integer'	reduce using rule 13 (STAR-6)
	'foreach my'	reduce using rule 13 (STAR-6)
	'if ('	reduce using rule 13 (STAR-6)
	'my'	reduce using rule 13 (STAR-6)
	'our'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while ('	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	Include	go to state 58
	STAR-6	go to state 59

State 48:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 49:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' . 'our' VERSION_NUMBER_ASSIGN	(Rule 33)

	'our'	shift, and go to state 60

State 50:

	Include -> 'use' WordScoped ';' .	(Rule 39)

	$default	reduce using rule 39 (Include)

State 51:

	Include -> 'use' WordScoped 'qw(' . PLUS-15 ')' ';'	(Rule 40)

	WORD	shift, and go to state 62

	PLUS-15	go to state 61

State 52:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER . ';'	(Rule 32)

	';'	shift, and go to state 63

State 53:

	PLUS-13 -> PLUS-13 Subroutine .	(Rule 30)

	$default	reduce using rule 30 (PLUS-13)

State 54:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 41)

	OP20_HASH_FATARROW	shift, and go to state 64

State 55:

	Subroutine -> 'our' Type . VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	VARIABLE_SYMBOL	shift, and go to state 65

State 56:

	Type -> WORD .	(Rule 200)

	$default	reduce using rule 200 (Type)

State 57:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 52 (STAR-20)

	STAR-20	go to state 66

State 58:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 59:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 44

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for my integer'	reduce using rule 15 (STAR-7)
	'foreach my'	reduce using rule 15 (STAR-7)
	'if ('	reduce using rule 15 (STAR-7)
	'my'	reduce using rule 15 (STAR-7)
	'our'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while ('	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	Constant	go to state 67
	STAR-7	go to state 68

State 60:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' . VERSION_NUMBER_ASSIGN	(Rule 33)

	VERSION_NUMBER_ASSIGN	shift, and go to state 69

State 61:

	PLUS-15 -> PLUS-15 . WORD	(Rule 37)
	Include -> 'use' WordScoped 'qw(' PLUS-15 . ')' ';'	(Rule 40)

	')'	shift, and go to state 71
	WORD	shift, and go to state 70

State 62:

	PLUS-15 -> WORD .	(Rule 38)

	$default	reduce using rule 38 (PLUS-15)

State 63:

	Package -> STAR-10 STAR-11 STAR-12 PLUS-13 LITERAL_NUMBER ';' .	(Rule 32)

	$default	reduce using rule 32 (Package)

State 64:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 41)

	'my'	shift, and go to state 72

	TypeInnerConstant	go to state 73

State 65:

	Subroutine -> 'our' Type VARIABLE_SYMBOL . '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	'= sub {'	shift, and go to state 74

State 66:

	STAR-20 -> STAR-20 . Critic	(Rule 51)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 . STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'## no critic qw('	shift, and go to state 8

	'our hash_ref $properties'	reduce using rule 54 (STAR-21)
	'use constant'	reduce using rule 54 (STAR-21)
	'use'	reduce using rule 54 (STAR-21)

	STAR-21	go to state 76
	Critic	go to state 75

State 67:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 68:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'if ('	shift, and go to state 121
	'my'	shift, and go to state 94
	'our'	shift, and go to state 45
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 92
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_SCOLON	shift, and go to state 102
	OP01_PRINT	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 100
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 107

	'for my integer'	reduce using rule 138 (OPTIONAL-35)
	'foreach my'	reduce using rule 138 (OPTIONAL-35)
	'while ('	reduce using rule 138 (OPTIONAL-35)

	Statement	go to state 106
	PAREN-34	go to state 118
	LoopLabel	go to state 96
	Subroutine	go to state 95
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	OPTIONAL-35	go to state 90
	Operation	go to state 116
	ArrayDereferenced	go to state 93
	Literal	go to state 114
	ArrayReference	go to state 110
	SubExpression	go to state 82
	HashReference	go to state 81
	Variable	go to state 80
	PLUS-8	go to state 79
	Expression	go to state 78
	VariableModification	go to state 109
	Conditional	go to state 77
	Operator	go to state 111
	OperatorVoid	go to state 112
	VariableDeclaration	go to state 85

State 69:

	Header -> 'use strict;' 'use warnings;' 'use RPerl;' 'our' VERSION_NUMBER_ASSIGN .	(Rule 33)

	$default	reduce using rule 33 (Header)

State 70:

	PLUS-15 -> PLUS-15 WORD .	(Rule 37)

	$default	reduce using rule 37 (PLUS-15)

State 71:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' . ';'	(Rule 40)

	';'	shift, and go to state 122

State 72:

	TypeInnerConstant -> 'my' . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 202)

	WORD	shift, and go to state 56

	Type	go to state 123

State 73:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 41)

	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119

	Literal	go to state 124

State 74:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' . OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)

	LPAREN_MY	shift, and go to state 125

	'%{'	reduce using rule 43 (OPTIONAL-16)
	'@{'	reduce using rule 43 (OPTIONAL-16)
	'for my integer'	reduce using rule 43 (OPTIONAL-16)
	'foreach my'	reduce using rule 43 (OPTIONAL-16)
	'if ('	reduce using rule 43 (OPTIONAL-16)
	'my'	reduce using rule 43 (OPTIONAL-16)
	'undef'	reduce using rule 43 (OPTIONAL-16)
	'while ('	reduce using rule 43 (OPTIONAL-16)
	LBRACE	reduce using rule 43 (OPTIONAL-16)
	LBRACKET	reduce using rule 43 (OPTIONAL-16)
	LITERAL_NUMBER	reduce using rule 43 (OPTIONAL-16)
	LITERAL_STRING	reduce using rule 43 (OPTIONAL-16)
	LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP01_CLOSE	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID	reduce using rule 43 (OPTIONAL-16)
	OP01_NAMED_VOID_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP01_PRINT	reduce using rule 43 (OPTIONAL-16)
	OP03_MATH_INC_DEC	reduce using rule 43 (OPTIONAL-16)
	OP05_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	OP05_MATH_NEG_LPAREN	reduce using rule 43 (OPTIONAL-16)
	OP10_NAMED_UNARY	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL	reduce using rule 43 (OPTIONAL-16)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 43 (OPTIONAL-16)
	OP22_LOGICAL_NEG	reduce using rule 43 (OPTIONAL-16)
	VARIABLE_SYMBOL	reduce using rule 43 (OPTIONAL-16)
	WORD	reduce using rule 43 (OPTIONAL-16)
	WORD_SCOPED	reduce using rule 43 (OPTIONAL-16)
	WORD_UPPERCASE	reduce using rule 43 (OPTIONAL-16)

	SubroutineArguments	go to state 126
	OPTIONAL-16	go to state 127

State 75:

	STAR-20 -> STAR-20 Critic .	(Rule 51)

	$default	reduce using rule 51 (STAR-20)

State 76:

	STAR-21 -> STAR-21 . Include	(Rule 53)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 . STAR-22 Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'use'	shift, and go to state 33

	'our hash_ref $properties'	reduce using rule 56 (STAR-22)
	'use constant'	reduce using rule 56 (STAR-22)

	Include	go to state 129
	STAR-22	go to state 128

State 77:

	Statement -> Conditional .	(Rule 139)

	$default	reduce using rule 139 (Statement)

State 78:

	Operation -> Expression . ';'	(Rule 76)
	SubExpression -> Expression .	(Rule 125)

	';'	shift, and go to state 130

	OP04_MATH_POW	reduce using rule 125 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 125 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 125 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 125 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 125 (SubExpression)
	OP08_STRING_CAT	reduce using rule 125 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 125 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 125 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 125 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 125 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 125 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 125 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 125 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 125 (SubExpression)
	OP18_TERNARY	reduce using rule 125 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 125 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 125 (SubExpression)

State 79:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'if ('	shift, and go to state 121
	'my'	shift, and go to state 94
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 92
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_SCOLON	shift, and go to state 102
	OP01_PRINT	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 100
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 107

	$end	reduce using rule 18 (Program)
	'for my integer'	reduce using rule 138 (OPTIONAL-35)
	'foreach my'	reduce using rule 138 (OPTIONAL-35)
	'while ('	reduce using rule 138 (OPTIONAL-35)

	SubExpression	go to state 82
	HashReference	go to state 81
	ArrayReference	go to state 110
	VariableModification	go to state 109
	Expression	go to state 78
	Conditional	go to state 77
	Variable	go to state 80
	VariableDeclaration	go to state 85
	Operator	go to state 111
	OperatorVoid	go to state 112
	HashDereferenced	go to state 89
	OPTIONAL-35	go to state 90
	ArrayDereferenced	go to state 93
	Operation	go to state 131
	Literal	go to state 114
	LoopLabel	go to state 96
	WordScoped	go to state 97
	PAREN-34	go to state 118
	Statement	go to state 106

State 80:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 83)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 123)
	SubExpression -> Variable .	(Rule 128)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 168)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression ';'	(Rule 169)

	OP02_METHOD_THINARROW	shift, and go to state 135
	OP03_MATH_INC_DEC	shift, and go to state 133
	OP19_VARIABLE_ASSIGN	shift, and go to state 132
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 134

	OP04_MATH_POW	reduce using rule 128 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 128 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 128 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 128 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 128 (SubExpression)
	OP08_STRING_CAT	reduce using rule 128 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 128 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 128 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 128 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 128 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 128 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 128 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 128 (SubExpression)
	OP18_TERNARY	reduce using rule 128 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 128 (SubExpression)

State 81:

	SubExpression -> HashReference .	(Rule 131)

	$default	reduce using rule 131 (SubExpression)

State 82:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 83:

	ArrayReference -> LBRACKET . OPTIONAL-45 ']'	(Rule 181)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	']'	reduce using rule 180 (OPTIONAL-45)

	HashDereferenced	go to state 89
	TypeInner	go to state 154
	ListElements	go to state 155
	Literal	go to state 114
	ArrayDereferenced	go to state 93
	Expression	go to state 159
	Variable	go to state 160
	HashReference	go to state 81
	SubExpression	go to state 161
	ArrayReference	go to state 110
	WordScoped	go to state 97
	Operator	go to state 111
	OPTIONAL-45	go to state 153
	ListElement	go to state 162

State 84:

	OperatorVoid -> OP01_PRINT . OPTIONAL-31 ListElements ';'	(Rule 109)
	OperatorVoid -> OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ';'	(Rule 110)

	FH_REF_SYMBOL_BRACES	shift, and go to state 166
	STDOUT_STDERR	shift, and go to state 164

	'%{'	reduce using rule 108 (OPTIONAL-31)
	'@{'	reduce using rule 108 (OPTIONAL-31)
	'my'	reduce using rule 108 (OPTIONAL-31)
	'undef'	reduce using rule 108 (OPTIONAL-31)
	LBRACE	reduce using rule 108 (OPTIONAL-31)
	LBRACKET	reduce using rule 108 (OPTIONAL-31)
	LITERAL_NUMBER	reduce using rule 108 (OPTIONAL-31)
	LITERAL_STRING	reduce using rule 108 (OPTIONAL-31)
	LPAREN	reduce using rule 108 (OPTIONAL-31)
	OP01_CLOSE	reduce using rule 108 (OPTIONAL-31)
	OP01_NAMED	reduce using rule 108 (OPTIONAL-31)
	OP01_QW	reduce using rule 108 (OPTIONAL-31)
	OP03_MATH_INC_DEC	reduce using rule 108 (OPTIONAL-31)
	OP05_LOGICAL_NEG	reduce using rule 108 (OPTIONAL-31)
	OP05_MATH_NEG_LPAREN	reduce using rule 108 (OPTIONAL-31)
	OP10_NAMED_UNARY	reduce using rule 108 (OPTIONAL-31)
	OP22_LOGICAL_NEG	reduce using rule 108 (OPTIONAL-31)
	VARIABLE_SYMBOL	reduce using rule 108 (OPTIONAL-31)
	WORD	reduce using rule 108 (OPTIONAL-31)
	WORD_SCOPED	reduce using rule 108 (OPTIONAL-31)
	WORD_UPPERCASE	reduce using rule 108 (OPTIONAL-31)

	OPTIONAL-31	go to state 167
	PAREN-30	go to state 165

State 85:

	Statement -> VariableDeclaration .	(Rule 142)

	$default	reduce using rule 142 (Statement)

State 86:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 112)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	TypeInner	go to state 154
	ListElements	go to state 168
	Literal	go to state 114
	SubExpression	go to state 161
	ArrayReference	go to state 110
	HashReference	go to state 81
	Expression	go to state 159
	Variable	go to state 160
	ListElement	go to state 162
	WordScoped	go to state 97
	Operator	go to state 111

State 87:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 114)

	$default	reduce using rule 114 (OperatorVoid)

State 88:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 86)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	WordScoped	go to state 97
	Operator	go to state 111
	ArrayReference	go to state 110
	SubExpression	go to state 169
	HashReference	go to state 81
	Expression	go to state 159
	Variable	go to state 160
	ArrayDereferenced	go to state 93
	Literal	go to state 114
	HashDereferenced	go to state 89

State 89:

	SubExpression -> HashDereferenced .	(Rule 132)

	$default	reduce using rule 132 (SubExpression)

State 90:

	Statement -> OPTIONAL-35 . Loop	(Rule 140)

	'for my integer'	shift, and go to state 173
	'foreach my'	shift, and go to state 172
	'while ('	shift, and go to state 176

	LoopForEach	go to state 171
	Loop	go to state 175
	LoopFor	go to state 174
	LoopWhile	go to state 170

State 91:

	ArrayDereferenced -> '@{' . Variable '}'	(Rule 182)
	ArrayDereferenced -> '@{' . ArrayReference '}'	(Rule 183)

	LBRACKET	shift, and go to state 83
	VARIABLE_SYMBOL	shift, and go to state 113

	Variable	go to state 177
	ArrayReference	go to state 178

State 92:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 113)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Operator	go to state 111
	WordScoped	go to state 97
	ListElement	go to state 179
	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	SubExpression	go to state 180
	HashReference	go to state 81
	Literal	go to state 114
	TypeInner	go to state 154
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89

State 93:

	SubExpression -> ArrayDereferenced .	(Rule 130)

	$default	reduce using rule 130 (SubExpression)

State 94:

	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL ';'	(Rule 166)
	VariableDeclaration -> 'my' . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 167)

	WORD	shift, and go to state 56

	Type	go to state 181

State 95:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 96:

	PAREN-34 -> LoopLabel . COLON	(Rule 136)

	COLON	shift, and go to state 182

State 97:

	Expression -> WordScoped . LPAREN OPTIONAL-32 ')'	(Rule 121)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW ')'	(Rule 124)

	LPAREN	shift, and go to state 184
	OP02_METHOD_THINARROW_NEW	shift, and go to state 183

State 98:

	SubExpression -> 'undef' .	(Rule 126)

	$default	reduce using rule 126 (SubExpression)

State 99:

	HashReference -> LBRACE . HashEntry STAR-48 '}'	(Rule 193)
	HashReference -> LBRACE . '}'	(Rule 194)

	'%{'	shift, and go to state 101
	'}'	shift, and go to state 188
	WORD	shift, and go to state 185

	HashEntry	go to state 186
	HashDereferenced	go to state 187

State 100:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 115)

	WORD_UPPERCASE	shift, and go to state 189

	LoopLabel	go to state 190

State 101:

	HashDereferenced -> '%{' . Variable '}'	(Rule 195)
	HashDereferenced -> '%{' . HashReference '}'	(Rule 196)

	LBRACE	shift, and go to state 99
	VARIABLE_SYMBOL	shift, and go to state 113

	Variable	go to state 191
	HashReference	go to state 192

State 102:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 111)

	$default	reduce using rule 111 (OperatorVoid)

State 103:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 93)
	Operator -> OP10_NAMED_UNARY .	(Rule 94)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP04_MATH_POW	reduce using rule 94 (Operator)
	OP06_REGEX_MATCH	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP07_STRING_REPEAT	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

	Expression	go to state 159
	Variable	go to state 160
	ArrayReference	go to state 110
	SubExpression	go to state 193
	HashReference	go to state 81
	WordScoped	go to state 97
	Operator	go to state 111
	HashDereferenced	go to state 89
	Literal	go to state 114
	ArrayDereferenced	go to state 93

State 104:

	Literal -> LITERAL_NUMBER .	(Rule 206)

	$default	reduce using rule 206 (Literal)

State 105:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 82)

	VARIABLE_SYMBOL	shift, and go to state 113

	Variable	go to state 194

State 106:

	Operation -> Statement .	(Rule 77)

	$default	reduce using rule 77 (Operation)

State 107:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 122)
	LoopLabel -> WORD_UPPERCASE .	(Rule 199)

	LPAREN	shift, and go to state 195

	COLON	reduce using rule 199 (LoopLabel)

State 108:

	Operator -> LPAREN . OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 133)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 198
	OP01_PRINT	shift, and go to state 197
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	SubExpression	go to state 196
	HashReference	go to state 81
	ArrayReference	go to state 110
	Expression	go to state 159
	Variable	go to state 160
	WordScoped	go to state 97
	Operator	go to state 111
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114

State 109:

	Statement -> VariableModification .	(Rule 143)

	$default	reduce using rule 143 (Statement)

State 110:

	SubExpression -> ArrayReference .	(Rule 129)

	$default	reduce using rule 129 (SubExpression)

State 111:

	Expression -> Operator .	(Rule 120)

	$default	reduce using rule 120 (Expression)

State 112:

	Statement -> OperatorVoid .	(Rule 141)

	$default	reduce using rule 141 (Statement)

State 113:

	Variable -> VARIABLE_SYMBOL . STAR-41	(Rule 162)

	$default	reduce using rule 161 (STAR-41)

	STAR-41	go to state 199

State 114:

	SubExpression -> Literal .	(Rule 127)

	$default	reduce using rule 127 (SubExpression)

State 115:

	Operator -> OP01_CLOSE . FH_REF_SYMBOL	(Rule 81)

	FH_REF_SYMBOL	shift, and go to state 200

State 116:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 117:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 103)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	HashDereferenced	go to state 89
	Literal	go to state 114
	ArrayDereferenced	go to state 93
	Variable	go to state 160
	Expression	go to state 159
	HashReference	go to state 81
	SubExpression	go to state 201
	ArrayReference	go to state 110
	Operator	go to state 111
	WordScoped	go to state 97

State 118:

	OPTIONAL-35 -> PAREN-34 .	(Rule 137)

	$default	reduce using rule 137 (OPTIONAL-35)

State 119:

	Literal -> LITERAL_STRING .	(Rule 205)

	$default	reduce using rule 205 (Literal)

State 120:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 85)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	Operator	go to state 111
	WordScoped	go to state 97
	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	SubExpression	go to state 202
	HashReference	go to state 81

State 121:

	Conditional -> 'if (' . SubExpression ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 150)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	Operator	go to state 111
	WordScoped	go to state 97
	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 203

State 122:

	Include -> 'use' WordScoped 'qw(' PLUS-15 ')' ';' .	(Rule 40)

	$default	reduce using rule 40 (Include)

State 123:

	TypeInnerConstant -> 'my' Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 202)

	'$TYPED_'	shift, and go to state 204

State 124:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 41)

	';'	shift, and go to state 205

State 125:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	WORD	shift, and go to state 56

	Type	go to state 206

State 126:

	OPTIONAL-16 -> SubroutineArguments .	(Rule 42)

	$default	reduce using rule 42 (OPTIONAL-16)

State 127:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 . PLUS-17 '}' ';'	(Rule 46)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'if ('	shift, and go to state 121
	'my'	shift, and go to state 94
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 92
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_SCOLON	shift, and go to state 102
	OP01_PRINT	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 100
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 107

	'for my integer'	reduce using rule 138 (OPTIONAL-35)
	'foreach my'	reduce using rule 138 (OPTIONAL-35)
	'while ('	reduce using rule 138 (OPTIONAL-35)

	VariableDeclaration	go to state 85
	OperatorVoid	go to state 112
	Operator	go to state 111
	SubExpression	go to state 82
	ArrayReference	go to state 110
	HashReference	go to state 81
	VariableModification	go to state 109
	Expression	go to state 78
	Conditional	go to state 77
	Variable	go to state 80
	ArrayDereferenced	go to state 93
	Operation	go to state 208
	Literal	go to state 114
	PLUS-17	go to state 207
	HashDereferenced	go to state 89
	OPTIONAL-35	go to state 90
	WordScoped	go to state 97
	LoopLabel	go to state 96
	PAREN-34	go to state 118
	Statement	go to state 106

State 128:

	STAR-22 -> STAR-22 . Constant	(Rule 55)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 . Properties STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	'our hash_ref $properties'	shift, and go to state 209
	'use constant'	shift, and go to state 44

	Constant	go to state 211
	Properties	go to state 210

State 129:

	STAR-21 -> STAR-21 Include .	(Rule 53)

	$default	reduce using rule 53 (STAR-21)

State 130:

	Operation -> Expression ';' .	(Rule 76)

	$default	reduce using rule 76 (Operation)

State 131:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 132:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 168)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	STDIN	shift, and go to state 213
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Operator	go to state 111
	WordScoped	go to state 97
	Variable	go to state 160
	Expression	go to state 159
	SubExpression	go to state 214
	HashReference	go to state 81
	ArrayReference	go to state 110
	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	SubExpressionOrStdin	go to state 212

State 133:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 83)

	$default	reduce using rule 83 (Operator)

State 134:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression ';'	(Rule 169)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ArrayDereferenced	go to state 93
	Literal	go to state 114
	HashDereferenced	go to state 89
	WordScoped	go to state 97
	Operator	go to state 111
	HashReference	go to state 81
	ArrayReference	go to state 110
	SubExpression	go to state 215
	Expression	go to state 159
	Variable	go to state 160

State 135:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-33 ')'	(Rule 123)

	LPAREN	shift, and go to state 216

State 136:

	Operator -> SubExpression OP06_REGEX_MATCH . OP06_REGEX_PATTERN	(Rule 87)

	OP06_REGEX_PATTERN	shift, and go to state 217

State 137:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 105)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Operator	go to state 111
	WordScoped	go to state 97
	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 218
	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89

State 138:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 89)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	HashDereferenced	go to state 89
	Literal	go to state 114
	ArrayDereferenced	go to state 93
	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	SubExpression	go to state 219
	HashReference	go to state 81
	Operator	go to state 111
	WordScoped	go to state 97

State 139:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 92)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114
	SubExpression	go to state 220
	ArrayReference	go to state 110
	HashReference	go to state 81
	Variable	go to state 160
	Expression	go to state 159
	Operator	go to state 111
	WordScoped	go to state 97

State 140:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 97)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ArrayDereferenced	go to state 93
	Literal	go to state 114
	HashDereferenced	go to state 89
	WordScoped	go to state 97
	Operator	go to state 111
	HashReference	go to state 81
	SubExpression	go to state 221
	ArrayReference	go to state 110
	Expression	go to state 159
	Variable	go to state 160

State 141:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 101)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	SubExpression	go to state 222
	HashReference	go to state 81
	Operator	go to state 111
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	Literal	go to state 114
	ArrayDereferenced	go to state 93

State 142:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 98)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	WordScoped	go to state 97
	Operator	go to state 111
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 223
	Expression	go to state 159
	Variable	go to state 160
	ArrayDereferenced	go to state 93
	Literal	go to state 114
	HashDereferenced	go to state 89

State 143:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 84)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ArrayReference	go to state 110
	SubExpression	go to state 224
	HashReference	go to state 81
	Variable	go to state 160
	Expression	go to state 159
	Operator	go to state 111
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114

State 144:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 99)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	SubExpression	go to state 225
	ArrayReference	go to state 110
	HashReference	go to state 81
	Variable	go to state 160
	Expression	go to state 159
	Operator	go to state 111
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114

State 145:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 91)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 226
	Operator	go to state 111
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	Literal	go to state 114
	ArrayDereferenced	go to state 93

State 146:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 96)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Variable	go to state 160
	Expression	go to state 159
	HashReference	go to state 81
	ArrayReference	go to state 110
	SubExpression	go to state 227
	Operator	go to state 111
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	Literal	go to state 114
	ArrayDereferenced	go to state 93

State 147:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 100)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	Operator	go to state 111
	WordScoped	go to state 97
	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 228

State 148:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 88)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	Operator	go to state 111
	WordScoped	go to state 97
	Variable	go to state 160
	Expression	go to state 159
	SubExpression	go to state 229
	HashReference	go to state 81
	ArrayReference	go to state 110

State 149:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 90)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	WordScoped	go to state 97
	Operator	go to state 111
	Expression	go to state 159
	Variable	go to state 160
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 230

State 150:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 102)

	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	VARIABLE_SYMBOL	shift, and go to state 113

	Literal	go to state 233
	Variable	go to state 231
	VariableOrLiteral	go to state 232

State 151:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 104)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	SubExpression	go to state 234
	ArrayReference	go to state 110
	HashReference	go to state 81
	Expression	go to state 159
	Variable	go to state 160
	WordScoped	go to state 97
	Operator	go to state 111
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114

State 152:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 95)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 235
	Operator	go to state 111
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	Literal	go to state 114
	ArrayDereferenced	go to state 93

State 153:

	ArrayReference -> LBRACKET OPTIONAL-45 . ']'	(Rule 181)

	']'	shift, and go to state 236

State 154:

	ListElement -> TypeInner . SubExpression	(Rule 178)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ArrayReference	go to state 110
	SubExpression	go to state 237
	HashReference	go to state 81
	Expression	go to state 159
	Variable	go to state 160
	WordScoped	go to state 97
	Operator	go to state 111
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114

State 155:

	OPTIONAL-45 -> ListElements .	(Rule 179)

	$default	reduce using rule 179 (OPTIONAL-45)

State 156:

	ListElements -> OP01_QW . PLUS-44 ')'	(Rule 176)

	WORD	shift, and go to state 239

	PLUS-44	go to state 238

State 157:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	HashReference	go to state 81
	SubExpression	go to state 240
	ArrayReference	go to state 110
	Expression	go to state 159
	Variable	go to state 160
	WordScoped	go to state 97
	Operator	go to state 111
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114

State 158:

	TypeInner -> 'my' . Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 201)

	WORD	shift, and go to state 56

	Type	go to state 241

State 159:

	SubExpression -> Expression .	(Rule 125)

	$default	reduce using rule 125 (SubExpression)

State 160:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 83)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')'	(Rule 123)
	SubExpression -> Variable .	(Rule 128)

	OP02_METHOD_THINARROW	shift, and go to state 135
	OP03_MATH_INC_DEC	shift, and go to state 133

	')'	reduce using rule 128 (SubExpression)
	';'	reduce using rule 128 (SubExpression)
	']'	reduce using rule 128 (SubExpression)
	'}'	reduce using rule 128 (SubExpression)
	OP04_MATH_POW	reduce using rule 128 (SubExpression)
	OP06_REGEX_MATCH	reduce using rule 128 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 128 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 128 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 128 (SubExpression)
	OP08_STRING_CAT	reduce using rule 128 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 128 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 128 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 128 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 128 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 128 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 128 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 128 (SubExpression)
	OP18_TERNARY	reduce using rule 128 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 128 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 128 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 128 (SubExpression)

State 161:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	ListElement -> SubExpression .	(Rule 177)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

	')'	reduce using rule 177 (ListElement)
	';'	reduce using rule 177 (ListElement)
	']'	reduce using rule 177 (ListElement)
	OP21_LIST_COMMA	reduce using rule 177 (ListElement)

State 162:

	ListElements -> ListElement . STAR-43	(Rule 175)

	$default	reduce using rule 172 (STAR-43)

	STAR-43	go to state 242

State 163:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 122)

	LPAREN	shift, and go to state 195

State 164:

	PAREN-30 -> STDOUT_STDERR .	(Rule 106)

	$default	reduce using rule 106 (PAREN-30)

State 165:

	OPTIONAL-31 -> PAREN-30 .	(Rule 107)

	$default	reduce using rule 107 (OPTIONAL-31)

State 166:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ';'	(Rule 110)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ListElement	go to state 162
	Operator	go to state 111
	WordScoped	go to state 97
	HashReference	go to state 81
	ArrayReference	go to state 110
	SubExpression	go to state 161
	Variable	go to state 160
	Expression	go to state 159
	ArrayDereferenced	go to state 93
	Literal	go to state 114
	TypeInner	go to state 154
	ListElements	go to state 243
	HashDereferenced	go to state 89

State 167:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 . ListElements ';'	(Rule 109)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ArrayDereferenced	go to state 93
	Literal	go to state 114
	ListElements	go to state 244
	TypeInner	go to state 154
	HashDereferenced	go to state 89
	ListElement	go to state 162
	Operator	go to state 111
	WordScoped	go to state 97
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 161
	Variable	go to state 160
	Expression	go to state 159

State 168:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 112)

	';'	shift, and go to state 245

State 169:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 86)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	')'	shift, and go to state 246
	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 170:

	Loop -> LoopWhile .	(Rule 153)

	$default	reduce using rule 153 (Loop)

State 171:

	Loop -> LoopForEach .	(Rule 152)

	$default	reduce using rule 152 (Loop)

State 172:

	LoopForEach -> 'foreach my' . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 155)

	WORD	shift, and go to state 56

	Type	go to state 247

State 173:

	LoopFor -> 'for my integer' . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 154)

	VARIABLE_SYMBOL	shift, and go to state 248

State 174:

	Loop -> LoopFor .	(Rule 151)

	$default	reduce using rule 151 (Loop)

State 175:

	Statement -> OPTIONAL-35 Loop .	(Rule 140)

	$default	reduce using rule 140 (Statement)

State 176:

	LoopWhile -> 'while (' . SubExpression ')' CodeBlock	(Rule 156)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Expression	go to state 159
	Variable	go to state 160
	HashReference	go to state 81
	ArrayReference	go to state 110
	SubExpression	go to state 249
	WordScoped	go to state 97
	Operator	go to state 111
	HashDereferenced	go to state 89
	Literal	go to state 114
	ArrayDereferenced	go to state 93

State 177:

	ArrayDereferenced -> '@{' Variable . '}'	(Rule 182)

	'}'	shift, and go to state 250

State 178:

	ArrayDereferenced -> '@{' ArrayReference . '}'	(Rule 183)

	'}'	shift, and go to state 251

State 179:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 113)

	OP21_LIST_COMMA	shift, and go to state 252

State 180:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	ListElement -> SubExpression .	(Rule 177)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 177 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 181:

	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL ';'	(Rule 166)
	VariableDeclaration -> 'my' Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 167)

	VARIABLE_SYMBOL	shift, and go to state 253

State 182:

	PAREN-34 -> LoopLabel COLON .	(Rule 136)

	$default	reduce using rule 136 (PAREN-34)

State 183:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . ')'	(Rule 124)

	')'	shift, and go to state 254

State 184:

	Expression -> WordScoped LPAREN . OPTIONAL-32 ')'	(Rule 121)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	')'	reduce using rule 117 (OPTIONAL-32)

	Variable	go to state 160
	Expression	go to state 159
	HashReference	go to state 81
	ArrayReference	go to state 110
	SubExpression	go to state 161
	Operator	go to state 111
	WordScoped	go to state 97
	ListElement	go to state 162
	HashDereferenced	go to state 89
	OPTIONAL-32	go to state 255
	Literal	go to state 114
	TypeInner	go to state 154
	ListElements	go to state 256
	ArrayDereferenced	go to state 93

State 185:

	HashEntry -> WORD . OP20_HASH_FATARROW OPTIONAL-46 SubExpression	(Rule 186)

	OP20_HASH_FATARROW	shift, and go to state 257

State 186:

	HashReference -> LBRACE HashEntry . STAR-48 '}'	(Rule 193)

	$default	reduce using rule 192 (STAR-48)

	STAR-48	go to state 258

State 187:

	HashEntry -> HashDereferenced .	(Rule 187)

	$default	reduce using rule 187 (HashEntry)

State 188:

	HashReference -> LBRACE '}' .	(Rule 194)

	$default	reduce using rule 194 (HashReference)

State 189:

	LoopLabel -> WORD_UPPERCASE .	(Rule 199)

	$default	reduce using rule 199 (LoopLabel)

State 190:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 115)

	';'	shift, and go to state 259

State 191:

	HashDereferenced -> '%{' Variable . '}'	(Rule 195)

	'}'	shift, and go to state 260

State 192:

	HashDereferenced -> '%{' HashReference . '}'	(Rule 196)

	'}'	shift, and go to state 261

State 193:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 93)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139

	')'	reduce using rule 93 (Operator)
	';'	reduce using rule 93 (Operator)
	']'	reduce using rule 93 (Operator)
	'}'	reduce using rule 93 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 93 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 93 (Operator)
	OP13_BITWISE_AND	reduce using rule 93 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 93 (Operator)
	OP15_LOGICAL_AND	reduce using rule 93 (Operator)
	OP16_LOGICAL_OR	reduce using rule 93 (Operator)
	OP17_LIST_RANGE	reduce using rule 93 (Operator)
	OP18_TERNARY	reduce using rule 93 (Operator)
	OP21_LIST_COMMA	reduce using rule 93 (Operator)
	OP23_LOGICAL_AND	reduce using rule 93 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 93 (Operator)

State 194:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 82)

	$default	reduce using rule 82 (Operator)

State 195:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 122)

	')'	shift, and go to state 262

State 196:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 133)

	')'	shift, and go to state 263
	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 197:

	Operator -> LPAREN OP01_PRINT . FH_REF_SYMBOL_BRACES ListElements ')'	(Rule 78)

	FH_REF_SYMBOL_BRACES	shift, and go to state 264

State 198:

	Operator -> OP01_NAMED . SubExpression	(Rule 79)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	HashDereferenced	go to state 89
	TypeInner	go to state 154
	Literal	go to state 114
	ArrayDereferenced	go to state 93
	Expression	go to state 159
	Variable	go to state 160
	HashReference	go to state 81
	SubExpression	go to state 180
	ArrayReference	go to state 110
	WordScoped	go to state 97
	Operator	go to state 111
	ListElement	go to state 265

State 199:

	STAR-41 -> STAR-41 . VariableRetrieval	(Rule 160)
	Variable -> VARIABLE_SYMBOL STAR-41 .	(Rule 162)

	OP02_ARRAY_THINARROW	shift, and go to state 268
	OP02_HASH_THINARROW	shift, and go to state 266

	')'	reduce using rule 162 (Variable)
	';'	reduce using rule 162 (Variable)
	']'	reduce using rule 162 (Variable)
	'}'	reduce using rule 162 (Variable)
	COLON	reduce using rule 162 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 162 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 162 (Variable)
	OP04_MATH_POW	reduce using rule 162 (Variable)
	OP06_REGEX_MATCH	reduce using rule 162 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 162 (Variable)
	OP07_STRING_REPEAT	reduce using rule 162 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 162 (Variable)
	OP08_STRING_CAT	reduce using rule 162 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 162 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 162 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 162 (Variable)
	OP13_BITWISE_AND	reduce using rule 162 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 162 (Variable)
	OP15_LOGICAL_AND	reduce using rule 162 (Variable)
	OP16_LOGICAL_OR	reduce using rule 162 (Variable)
	OP17_LIST_RANGE	reduce using rule 162 (Variable)
	OP18_TERNARY	reduce using rule 162 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 162 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 162 (Variable)
	OP21_LIST_COMMA	reduce using rule 162 (Variable)
	OP23_LOGICAL_AND	reduce using rule 162 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 162 (Variable)

	VariableRetrieval	go to state 267

State 200:

	Operator -> OP01_CLOSE FH_REF_SYMBOL .	(Rule 81)

	$default	reduce using rule 81 (Operator)

State 201:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 103)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150

	')'	reduce using rule 103 (Operator)
	';'	reduce using rule 103 (Operator)
	']'	reduce using rule 103 (Operator)
	'}'	reduce using rule 103 (Operator)
	OP21_LIST_COMMA	reduce using rule 103 (Operator)
	OP23_LOGICAL_AND	reduce using rule 103 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 103 (Operator)

State 202:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 85)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143

	')'	reduce using rule 85 (Operator)
	';'	reduce using rule 85 (Operator)
	']'	reduce using rule 85 (Operator)
	'}'	reduce using rule 85 (Operator)
	OP06_REGEX_MATCH	reduce using rule 85 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 85 (Operator)
	OP07_STRING_REPEAT	reduce using rule 85 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 85 (Operator)
	OP08_STRING_CAT	reduce using rule 85 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 85 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 85 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 85 (Operator)
	OP13_BITWISE_AND	reduce using rule 85 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 85 (Operator)
	OP15_LOGICAL_AND	reduce using rule 85 (Operator)
	OP16_LOGICAL_OR	reduce using rule 85 (Operator)
	OP17_LIST_RANGE	reduce using rule 85 (Operator)
	OP18_TERNARY	reduce using rule 85 (Operator)
	OP21_LIST_COMMA	reduce using rule 85 (Operator)
	OP23_LOGICAL_AND	reduce using rule 85 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 85 (Operator)

State 203:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	Conditional -> 'if (' SubExpression . ')' CodeBlock STAR-37 OPTIONAL-39	(Rule 150)

	')'	shift, and go to state 269
	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 204:

	TypeInnerConstant -> 'my' Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 202)

	WORD_UPPERCASE	shift, and go to state 270

State 205:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 41)

	$default	reduce using rule 41 (Constant)

State 206:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	VARIABLE_SYMBOL	shift, and go to state 271

State 207:

	PLUS-17 -> PLUS-17 . Operation	(Rule 44)
	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 . '}' ';'	(Rule 46)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'if ('	shift, and go to state 121
	'my'	shift, and go to state 94
	'undef'	shift, and go to state 98
	'}'	shift, and go to state 273
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 92
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_SCOLON	shift, and go to state 102
	OP01_PRINT	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 100
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 107

	'for my integer'	reduce using rule 138 (OPTIONAL-35)
	'foreach my'	reduce using rule 138 (OPTIONAL-35)
	'while ('	reduce using rule 138 (OPTIONAL-35)

	OperatorVoid	go to state 112
	Operator	go to state 111
	VariableDeclaration	go to state 85
	HashReference	go to state 81
	SubExpression	go to state 82
	ArrayReference	go to state 110
	Variable	go to state 80
	Expression	go to state 78
	Conditional	go to state 77
	VariableModification	go to state 109
	Operation	go to state 272
	ArrayDereferenced	go to state 93
	Literal	go to state 114
	OPTIONAL-35	go to state 90
	HashDereferenced	go to state 89
	WordScoped	go to state 97
	LoopLabel	go to state 96
	Statement	go to state 106
	PAREN-34	go to state 118

State 208:

	PLUS-17 -> Operation .	(Rule 45)

	$default	reduce using rule 45 (PLUS-17)

State 209:

	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 64)

	OP19_VARIABLE_ASSIGN	shift, and go to state 274

State 210:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties . STAR-23 LITERAL_NUMBER ';'	(Rule 59)

	$default	reduce using rule 58 (STAR-23)

	STAR-23	go to state 275

State 211:

	STAR-22 -> STAR-22 Constant .	(Rule 55)

	$default	reduce using rule 55 (STAR-22)

State 212:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 168)

	';'	shift, and go to state 276

State 213:

	SubExpressionOrStdin -> STDIN .	(Rule 135)

	$default	reduce using rule 135 (SubExpressionOrStdin)

State 214:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	SubExpressionOrStdin -> SubExpression .	(Rule 134)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

	';'	reduce using rule 134 (SubExpressionOrStdin)

State 215:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression . ';'	(Rule 169)

	';'	shift, and go to state 277
	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 216:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-33 ')'	(Rule 123)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	')'	reduce using rule 119 (OPTIONAL-33)

	OPTIONAL-33	go to state 278
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	TypeInner	go to state 154
	ListElements	go to state 279
	Literal	go to state 114
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 161
	Expression	go to state 159
	Variable	go to state 160
	ListElement	go to state 162
	WordScoped	go to state 97
	Operator	go to state 111

State 217:

	Operator -> SubExpression OP06_REGEX_MATCH OP06_REGEX_PATTERN .	(Rule 87)

	$default	reduce using rule 87 (Operator)

State 218:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 219:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_STRING_REPEAT	shift, and go to state 148

	')'	reduce using rule 89 (Operator)
	';'	reduce using rule 89 (Operator)
	']'	reduce using rule 89 (Operator)
	'}'	reduce using rule 89 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 89 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 89 (Operator)
	OP08_STRING_CAT	reduce using rule 89 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 89 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 89 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 89 (Operator)
	OP13_BITWISE_AND	reduce using rule 89 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 89 (Operator)
	OP15_LOGICAL_AND	reduce using rule 89 (Operator)
	OP16_LOGICAL_OR	reduce using rule 89 (Operator)
	OP17_LIST_RANGE	reduce using rule 89 (Operator)
	OP18_TERNARY	reduce using rule 89 (Operator)
	OP21_LIST_COMMA	reduce using rule 89 (Operator)
	OP23_LOGICAL_AND	reduce using rule 89 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 89 (Operator)

State 220:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145

	')'	reduce using rule 92 (Operator)
	';'	reduce using rule 92 (Operator)
	']'	reduce using rule 92 (Operator)
	'}'	reduce using rule 92 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 92 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 92 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 92 (Operator)
	OP13_BITWISE_AND	reduce using rule 92 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 92 (Operator)
	OP15_LOGICAL_AND	reduce using rule 92 (Operator)
	OP16_LOGICAL_OR	reduce using rule 92 (Operator)
	OP17_LIST_RANGE	reduce using rule 92 (Operator)
	OP18_TERNARY	reduce using rule 92 (Operator)
	OP21_LIST_COMMA	reduce using rule 92 (Operator)
	OP23_LOGICAL_AND	reduce using rule 92 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 92 (Operator)

State 221:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146

	')'	reduce using rule 97 (Operator)
	';'	reduce using rule 97 (Operator)
	']'	reduce using rule 97 (Operator)
	'}'	reduce using rule 97 (Operator)
	OP13_BITWISE_AND	reduce using rule 97 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 97 (Operator)
	OP15_LOGICAL_AND	reduce using rule 97 (Operator)
	OP16_LOGICAL_OR	reduce using rule 97 (Operator)
	OP17_LIST_RANGE	reduce using rule 97 (Operator)
	OP18_TERNARY	reduce using rule 97 (Operator)
	OP21_LIST_COMMA	reduce using rule 97 (Operator)
	OP23_LOGICAL_AND	reduce using rule 97 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 97 (Operator)

State 222:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 101 (Operator)
	';'	reduce using rule 101 (Operator)
	']'	reduce using rule 101 (Operator)
	'}'	reduce using rule 101 (Operator)
	OP18_TERNARY	reduce using rule 101 (Operator)
	OP21_LIST_COMMA	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140

	')'	reduce using rule 98 (Operator)
	';'	reduce using rule 98 (Operator)
	']'	reduce using rule 98 (Operator)
	'}'	reduce using rule 98 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 98 (Operator)
	OP15_LOGICAL_AND	reduce using rule 98 (Operator)
	OP16_LOGICAL_OR	reduce using rule 98 (Operator)
	OP17_LIST_RANGE	reduce using rule 98 (Operator)
	OP18_TERNARY	reduce using rule 98 (Operator)
	OP21_LIST_COMMA	reduce using rule 98 (Operator)
	OP23_LOGICAL_AND	reduce using rule 98 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 98 (Operator)

State 224:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143

	')'	reduce using rule 84 (Operator)
	';'	reduce using rule 84 (Operator)
	']'	reduce using rule 84 (Operator)
	'}'	reduce using rule 84 (Operator)
	OP06_REGEX_MATCH	reduce using rule 84 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 84 (Operator)
	OP07_STRING_REPEAT	reduce using rule 84 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 84 (Operator)
	OP08_STRING_CAT	reduce using rule 84 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 84 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 84 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 84 (Operator)
	OP13_BITWISE_AND	reduce using rule 84 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 84 (Operator)
	OP15_LOGICAL_AND	reduce using rule 84 (Operator)
	OP16_LOGICAL_OR	reduce using rule 84 (Operator)
	OP17_LIST_RANGE	reduce using rule 84 (Operator)
	OP18_TERNARY	reduce using rule 84 (Operator)
	OP21_LIST_COMMA	reduce using rule 84 (Operator)
	OP23_LOGICAL_AND	reduce using rule 84 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 84 (Operator)

State 225:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142

	')'	reduce using rule 99 (Operator)
	';'	reduce using rule 99 (Operator)
	']'	reduce using rule 99 (Operator)
	'}'	reduce using rule 99 (Operator)
	OP15_LOGICAL_AND	reduce using rule 99 (Operator)
	OP16_LOGICAL_OR	reduce using rule 99 (Operator)
	OP17_LIST_RANGE	reduce using rule 99 (Operator)
	OP18_TERNARY	reduce using rule 99 (Operator)
	OP21_LIST_COMMA	reduce using rule 99 (Operator)
	OP23_LOGICAL_AND	reduce using rule 99 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 99 (Operator)

State 226:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149

	')'	reduce using rule 91 (Operator)
	';'	reduce using rule 91 (Operator)
	']'	reduce using rule 91 (Operator)
	'}'	reduce using rule 91 (Operator)
	OP08_STRING_CAT	reduce using rule 91 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 91 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 91 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 91 (Operator)
	OP13_BITWISE_AND	reduce using rule 91 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 91 (Operator)
	OP15_LOGICAL_AND	reduce using rule 91 (Operator)
	OP16_LOGICAL_OR	reduce using rule 91 (Operator)
	OP17_LIST_RANGE	reduce using rule 91 (Operator)
	OP18_TERNARY	reduce using rule 91 (Operator)
	OP21_LIST_COMMA	reduce using rule 91 (Operator)
	OP23_LOGICAL_AND	reduce using rule 91 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 91 (Operator)

State 227:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP13_BITWISE_AND	reduce using rule 96 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 96 (Operator)
	OP15_LOGICAL_AND	reduce using rule 96 (Operator)
	OP16_LOGICAL_OR	reduce using rule 96 (Operator)
	OP17_LIST_RANGE	reduce using rule 96 (Operator)
	OP18_TERNARY	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 228:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 229:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136

	')'	reduce using rule 88 (Operator)
	';'	reduce using rule 88 (Operator)
	']'	reduce using rule 88 (Operator)
	'}'	reduce using rule 88 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 88 (Operator)
	OP07_STRING_REPEAT	reduce using rule 88 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 88 (Operator)
	OP08_STRING_CAT	reduce using rule 88 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 88 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 88 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 88 (Operator)
	OP13_BITWISE_AND	reduce using rule 88 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 88 (Operator)
	OP15_LOGICAL_AND	reduce using rule 88 (Operator)
	OP16_LOGICAL_OR	reduce using rule 88 (Operator)
	OP17_LIST_RANGE	reduce using rule 88 (Operator)
	OP18_TERNARY	reduce using rule 88 (Operator)
	OP21_LIST_COMMA	reduce using rule 88 (Operator)
	OP23_LOGICAL_AND	reduce using rule 88 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 88 (Operator)

State 230:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148

	')'	reduce using rule 90 (Operator)
	';'	reduce using rule 90 (Operator)
	']'	reduce using rule 90 (Operator)
	'}'	reduce using rule 90 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 90 (Operator)
	OP08_STRING_CAT	reduce using rule 90 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 90 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 90 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 90 (Operator)
	OP13_BITWISE_AND	reduce using rule 90 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 90 (Operator)
	OP15_LOGICAL_AND	reduce using rule 90 (Operator)
	OP16_LOGICAL_OR	reduce using rule 90 (Operator)
	OP17_LIST_RANGE	reduce using rule 90 (Operator)
	OP18_TERNARY	reduce using rule 90 (Operator)
	OP21_LIST_COMMA	reduce using rule 90 (Operator)
	OP23_LOGICAL_AND	reduce using rule 90 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 90 (Operator)

State 231:

	VariableOrLiteral -> Variable .	(Rule 203)

	$default	reduce using rule 203 (VariableOrLiteral)

State 232:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 102)

	COLON	shift, and go to state 280

State 233:

	VariableOrLiteral -> Literal .	(Rule 204)

	$default	reduce using rule 204 (VariableOrLiteral)

State 234:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150

	')'	reduce using rule 104 (Operator)
	';'	reduce using rule 104 (Operator)
	']'	reduce using rule 104 (Operator)
	'}'	reduce using rule 104 (Operator)
	OP21_LIST_COMMA	reduce using rule 104 (Operator)
	OP23_LOGICAL_AND	reduce using rule 104 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 104 (Operator)

State 235:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 95 (Operator)
	';'	reduce using rule 95 (Operator)
	']'	reduce using rule 95 (Operator)
	'}'	reduce using rule 95 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 95 (Operator)
	OP13_BITWISE_AND	reduce using rule 95 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 95 (Operator)
	OP15_LOGICAL_AND	reduce using rule 95 (Operator)
	OP16_LOGICAL_OR	reduce using rule 95 (Operator)
	OP17_LIST_RANGE	reduce using rule 95 (Operator)
	OP18_TERNARY	reduce using rule 95 (Operator)
	OP21_LIST_COMMA	reduce using rule 95 (Operator)
	OP23_LOGICAL_AND	reduce using rule 95 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 95 (Operator)

State 236:

	ArrayReference -> LBRACKET OPTIONAL-45 ']' .	(Rule 181)

	$default	reduce using rule 181 (ArrayReference)

State 237:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	ListElement -> TypeInner SubExpression .	(Rule 178)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

	')'	reduce using rule 178 (ListElement)
	';'	reduce using rule 178 (ListElement)
	']'	reduce using rule 178 (ListElement)
	OP21_LIST_COMMA	reduce using rule 178 (ListElement)

State 238:

	PLUS-44 -> PLUS-44 . WORD	(Rule 173)
	ListElements -> OP01_QW PLUS-44 . ')'	(Rule 176)

	')'	shift, and go to state 281
	WORD	shift, and go to state 282

State 239:

	PLUS-44 -> WORD .	(Rule 174)

	$default	reduce using rule 174 (PLUS-44)

State 240:

	Operator -> OP01_NAMED SubExpression .	(Rule 79)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	')'	reduce using rule 79 (Operator)
	';'	reduce using rule 79 (Operator)
	']'	reduce using rule 79 (Operator)
	'}'	reduce using rule 79 (Operator)
	OP04_MATH_POW	reduce using rule 79 (Operator)
	OP06_REGEX_MATCH	reduce using rule 79 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 79 (Operator)
	OP07_STRING_REPEAT	reduce using rule 79 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 79 (Operator)
	OP08_STRING_CAT	reduce using rule 79 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 79 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 79 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 79 (Operator)
	OP13_BITWISE_AND	reduce using rule 79 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 79 (Operator)
	OP15_LOGICAL_AND	reduce using rule 79 (Operator)
	OP16_LOGICAL_OR	reduce using rule 79 (Operator)
	OP17_LIST_RANGE	reduce using rule 79 (Operator)
	OP18_TERNARY	reduce using rule 79 (Operator)
	OP21_LIST_COMMA	reduce using rule 79 (Operator)
	OP23_LOGICAL_AND	reduce using rule 79 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 79 (Operator)

State 241:

	TypeInner -> 'my' Type . '$TYPED_' WORD OP19_VARIABLE_ASSIGN	(Rule 201)

	'$TYPED_'	shift, and go to state 283

State 242:

	STAR-43 -> STAR-43 . PAREN-42	(Rule 171)
	ListElements -> ListElement STAR-43 .	(Rule 175)

	OP21_LIST_COMMA	shift, and go to state 284

	')'	reduce using rule 175 (ListElements)
	';'	reduce using rule 175 (ListElements)
	']'	reduce using rule 175 (ListElements)

	PAREN-42	go to state 285

State 243:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ';'	(Rule 110)

	';'	shift, and go to state 286

State 244:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements . ';'	(Rule 109)

	';'	shift, and go to state 287

State 245:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 112)

	$default	reduce using rule 112 (OperatorVoid)

State 246:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 86)

	$default	reduce using rule 86 (Operator)

State 247:

	LoopForEach -> 'foreach my' Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 155)

	VARIABLE_SYMBOL	shift, and go to state 288

State 248:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 154)

	LPAREN	shift, and go to state 289

State 249:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	LoopWhile -> 'while (' SubExpression . ')' CodeBlock	(Rule 156)

	')'	shift, and go to state 290
	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 250:

	ArrayDereferenced -> '@{' Variable '}' .	(Rule 182)

	$default	reduce using rule 182 (ArrayDereferenced)

State 251:

	ArrayDereferenced -> '@{' ArrayReference '}' .	(Rule 183)

	$default	reduce using rule 183 (ArrayDereferenced)

State 252:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 113)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	SubExpression	go to state 161
	HashReference	go to state 81
	ArrayReference	go to state 110
	Expression	go to state 159
	Variable	go to state 160
	ListElement	go to state 162
	WordScoped	go to state 97
	Operator	go to state 111
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	ListElements	go to state 291
	TypeInner	go to state 154
	Literal	go to state 114

State 253:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . ';'	(Rule 166)
	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';'	(Rule 167)

	';'	shift, and go to state 293
	OP19_VARIABLE_ASSIGN	shift, and go to state 292

State 254:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW ')' .	(Rule 124)

	$default	reduce using rule 124 (Expression)

State 255:

	Expression -> WordScoped LPAREN OPTIONAL-32 . ')'	(Rule 121)

	')'	shift, and go to state 294

State 256:

	OPTIONAL-32 -> ListElements .	(Rule 116)

	$default	reduce using rule 116 (OPTIONAL-32)

State 257:

	HashEntry -> WORD OP20_HASH_FATARROW . OPTIONAL-46 SubExpression	(Rule 186)

	'my'	shift, and go to state 158

	'%{'	reduce using rule 185 (OPTIONAL-46)
	'@{'	reduce using rule 185 (OPTIONAL-46)
	'undef'	reduce using rule 185 (OPTIONAL-46)
	LBRACE	reduce using rule 185 (OPTIONAL-46)
	LBRACKET	reduce using rule 185 (OPTIONAL-46)
	LITERAL_NUMBER	reduce using rule 185 (OPTIONAL-46)
	LITERAL_STRING	reduce using rule 185 (OPTIONAL-46)
	LPAREN	reduce using rule 185 (OPTIONAL-46)
	OP01_CLOSE	reduce using rule 185 (OPTIONAL-46)
	OP01_NAMED	reduce using rule 185 (OPTIONAL-46)
	OP03_MATH_INC_DEC	reduce using rule 185 (OPTIONAL-46)
	OP05_LOGICAL_NEG	reduce using rule 185 (OPTIONAL-46)
	OP05_MATH_NEG_LPAREN	reduce using rule 185 (OPTIONAL-46)
	OP10_NAMED_UNARY	reduce using rule 185 (OPTIONAL-46)
	OP22_LOGICAL_NEG	reduce using rule 185 (OPTIONAL-46)
	VARIABLE_SYMBOL	reduce using rule 185 (OPTIONAL-46)
	WORD	reduce using rule 185 (OPTIONAL-46)
	WORD_SCOPED	reduce using rule 185 (OPTIONAL-46)
	WORD_UPPERCASE	reduce using rule 185 (OPTIONAL-46)

	TypeInner	go to state 296
	OPTIONAL-46	go to state 295

State 258:

	STAR-48 -> STAR-48 . PAREN-47	(Rule 191)
	HashReference -> LBRACE HashEntry STAR-48 . '}'	(Rule 193)

	'}'	shift, and go to state 297
	OP21_LIST_COMMA	shift, and go to state 298

	PAREN-47	go to state 299

State 259:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 115)

	$default	reduce using rule 115 (OperatorVoid)

State 260:

	HashDereferenced -> '%{' Variable '}' .	(Rule 195)

	$default	reduce using rule 195 (HashDereferenced)

State 261:

	HashDereferenced -> '%{' HashReference '}' .	(Rule 196)

	$default	reduce using rule 196 (HashDereferenced)

State 262:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 122)

	$default	reduce using rule 122 (Expression)

State 263:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 133)

	$default	reduce using rule 133 (SubExpression)

State 264:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES . ListElements ')'	(Rule 78)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Expression	go to state 159
	Variable	go to state 160
	SubExpression	go to state 161
	ArrayReference	go to state 110
	HashReference	go to state 81
	WordScoped	go to state 97
	Operator	go to state 111
	ListElement	go to state 162
	HashDereferenced	go to state 89
	ListElements	go to state 300
	TypeInner	go to state 154
	Literal	go to state 114
	ArrayDereferenced	go to state 93

State 265:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	OP21_LIST_COMMA	shift, and go to state 301

State 266:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 164)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 165)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 303
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	WordScoped	go to state 97
	Operator	go to state 111
	Expression	go to state 159
	Variable	go to state 160
	HashReference	go to state 81
	ArrayReference	go to state 110
	SubExpression	go to state 302

State 267:

	STAR-41 -> STAR-41 VariableRetrieval .	(Rule 160)

	$default	reduce using rule 160 (STAR-41)

State 268:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 163)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ArrayReference	go to state 110
	SubExpression	go to state 304
	HashReference	go to state 81
	Variable	go to state 160
	Expression	go to state 159
	Operator	go to state 111
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114

State 269:

	Conditional -> 'if (' SubExpression ')' . CodeBlock STAR-37 OPTIONAL-39	(Rule 150)

	LBRACE	shift, and go to state 306

	CodeBlock	go to state 305

State 270:

	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 202)

	OP19_VARIABLE_ASSIGN	shift, and go to state 307

State 271:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	$default	reduce using rule 49 (STAR-19)

	STAR-19	go to state 308

State 272:

	PLUS-17 -> PLUS-17 Operation .	(Rule 44)

	$default	reduce using rule 44 (PLUS-17)

State 273:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' . ';'	(Rule 46)

	';'	shift, and go to state 309

State 274:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 64)

	LBRACE	shift, and go to state 310

State 275:

	STAR-23 -> STAR-23 . MethodOrSubroutine	(Rule 57)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 . LITERAL_NUMBER ';'	(Rule 59)

	'our'	shift, and go to state 311
	LITERAL_NUMBER	shift, and go to state 313

	MethodOrSubroutine	go to state 315
	Method	go to state 314
	Subroutine	go to state 312

State 276:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 168)

	$default	reduce using rule 168 (VariableModification)

State 277:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression ';' .	(Rule 169)

	$default	reduce using rule 169 (VariableModification)

State 278:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 . ')'	(Rule 123)

	')'	shift, and go to state 316

State 279:

	OPTIONAL-33 -> ListElements .	(Rule 118)

	$default	reduce using rule 118 (OPTIONAL-33)

State 280:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 102)

	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	VARIABLE_SYMBOL	shift, and go to state 113

	Literal	go to state 233
	VariableOrLiteral	go to state 317
	Variable	go to state 231

State 281:

	ListElements -> OP01_QW PLUS-44 ')' .	(Rule 176)

	$default	reduce using rule 176 (ListElements)

State 282:

	PLUS-44 -> PLUS-44 WORD .	(Rule 173)

	$default	reduce using rule 173 (PLUS-44)

State 283:

	TypeInner -> 'my' Type '$TYPED_' . WORD OP19_VARIABLE_ASSIGN	(Rule 201)

	WORD	shift, and go to state 318

State 284:

	PAREN-42 -> OP21_LIST_COMMA . ListElement	(Rule 170)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	SubExpression	go to state 161
	ArrayReference	go to state 110
	HashReference	go to state 81
	Expression	go to state 159
	Variable	go to state 160
	ListElement	go to state 319
	WordScoped	go to state 97
	Operator	go to state 111
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	TypeInner	go to state 154
	Literal	go to state 114

State 285:

	STAR-43 -> STAR-43 PAREN-42 .	(Rule 171)

	$default	reduce using rule 171 (STAR-43)

State 286:

	OperatorVoid -> OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ';' .	(Rule 110)

	$default	reduce using rule 110 (OperatorVoid)

State 287:

	OperatorVoid -> OP01_PRINT OPTIONAL-31 ListElements ';' .	(Rule 109)

	$default	reduce using rule 109 (OperatorVoid)

State 288:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 155)

	LPAREN	shift, and go to state 320

State 289:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 154)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ArrayReference	go to state 110
	SubExpression	go to state 321
	HashReference	go to state 81
	Variable	go to state 160
	Expression	go to state 159
	Operator	go to state 111
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114

State 290:

	LoopWhile -> 'while (' SubExpression ')' . CodeBlock	(Rule 156)

	LBRACE	shift, and go to state 306

	CodeBlock	go to state 322

State 291:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 113)

	';'	shift, and go to state 323

State 292:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrStdin ';'	(Rule 167)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	STDIN	shift, and go to state 213
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	HashDereferenced	go to state 89
	SubExpressionOrStdin	go to state 324
	Literal	go to state 114
	ArrayDereferenced	go to state 93
	Variable	go to state 160
	Expression	go to state 159
	ArrayReference	go to state 110
	SubExpression	go to state 214
	HashReference	go to state 81
	Operator	go to state 111
	WordScoped	go to state 97

State 293:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL ';' .	(Rule 166)

	$default	reduce using rule 166 (VariableDeclaration)

State 294:

	Expression -> WordScoped LPAREN OPTIONAL-32 ')' .	(Rule 121)

	$default	reduce using rule 121 (Expression)

State 295:

	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 . SubExpression	(Rule 186)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	Operator	go to state 111
	WordScoped	go to state 97
	Variable	go to state 160
	Expression	go to state 159
	HashReference	go to state 81
	ArrayReference	go to state 110
	SubExpression	go to state 325

State 296:

	OPTIONAL-46 -> TypeInner .	(Rule 184)

	$default	reduce using rule 184 (OPTIONAL-46)

State 297:

	HashReference -> LBRACE HashEntry STAR-48 '}' .	(Rule 193)

	$default	reduce using rule 193 (HashReference)

State 298:

	PAREN-47 -> OP21_LIST_COMMA . HashEntry	(Rule 190)

	'%{'	shift, and go to state 101
	WORD	shift, and go to state 185

	HashDereferenced	go to state 187
	HashEntry	go to state 326

State 299:

	STAR-48 -> STAR-48 PAREN-47 .	(Rule 191)

	$default	reduce using rule 191 (STAR-48)

State 300:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements . ')'	(Rule 78)

	')'	shift, and go to state 327

State 301:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	SubExpression	go to state 161
	ArrayReference	go to state 110
	HashReference	go to state 81
	Variable	go to state 160
	Expression	go to state 159
	ListElement	go to state 162
	Operator	go to state 111
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	ArrayDereferenced	go to state 93
	Literal	go to state 114
	ListElements	go to state 328
	TypeInner	go to state 154

State 302:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 164)

	'}'	shift, and go to state 329
	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 303:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 165)
	WordScoped -> WORD .	(Rule 197)

	'}'	shift, and go to state 330

	LPAREN	reduce using rule 197 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 197 (WordScoped)

State 304:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 163)

	']'	shift, and go to state 331
	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 305:

	Conditional -> 'if (' SubExpression ')' CodeBlock . STAR-37 OPTIONAL-39	(Rule 150)

	$default	reduce using rule 146 (STAR-37)

	STAR-37	go to state 332

State 306:

	CodeBlock -> LBRACE . PLUS-40 '}'	(Rule 159)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'if ('	shift, and go to state 121
	'my'	shift, and go to state 94
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 92
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_SCOLON	shift, and go to state 102
	OP01_PRINT	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 100
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 107

	'for my integer'	reduce using rule 138 (OPTIONAL-35)
	'foreach my'	reduce using rule 138 (OPTIONAL-35)
	'while ('	reduce using rule 138 (OPTIONAL-35)

	ArrayDereferenced	go to state 93
	Operation	go to state 333
	Literal	go to state 114
	HashDereferenced	go to state 89
	OPTIONAL-35	go to state 90
	PLUS-40	go to state 334
	VariableDeclaration	go to state 85
	OperatorVoid	go to state 112
	Operator	go to state 111
	ArrayReference	go to state 110
	SubExpression	go to state 82
	HashReference	go to state 81
	VariableModification	go to state 109
	Conditional	go to state 77
	Expression	go to state 78
	Variable	go to state 80
	PAREN-34	go to state 118
	Statement	go to state 106
	WordScoped	go to state 97
	LoopLabel	go to state 96

State 307:

	TypeInnerConstant -> 'my' Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 202)

	$default	reduce using rule 202 (TypeInnerConstant)

State 308:

	STAR-19 -> STAR-19 . PAREN-18	(Rule 48)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	')'	shift, and go to state 337
	OP21_LIST_COMMA	shift, and go to state 336

	PAREN-18	go to state 335

State 309:

	Subroutine -> 'our' Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';' .	(Rule 46)

	$default	reduce using rule 46 (Subroutine)

State 310:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryTyped STAR-25 '}' ';'	(Rule 63)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 64)

	'%{'	shift, and go to state 101
	'}'	shift, and go to state 341
	WORD	shift, and go to state 338

	HashDereferenced	go to state 339
	HashEntryTyped	go to state 340

State 311:

	Subroutine -> 'our' . Type VARIABLE_SYMBOL '= sub {' OPTIONAL-16 PLUS-17 '}' ';'	(Rule 46)
	Method -> 'our' . TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	TYPE_METHOD	shift, and go to state 342
	WORD	shift, and go to state 56

	Type	go to state 55

State 312:

	MethodOrSubroutine -> Subroutine .	(Rule 75)

	$default	reduce using rule 75 (MethodOrSubroutine)

State 313:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER . ';'	(Rule 59)

	';'	shift, and go to state 343

State 314:

	MethodOrSubroutine -> Method .	(Rule 74)

	$default	reduce using rule 74 (MethodOrSubroutine)

State 315:

	STAR-23 -> STAR-23 MethodOrSubroutine .	(Rule 57)

	$default	reduce using rule 57 (STAR-23)

State 316:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-33 ')' .	(Rule 123)

	$default	reduce using rule 123 (Expression)

State 317:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 102)

	$default	reduce using rule 102 (Operator)

State 318:

	TypeInner -> 'my' Type '$TYPED_' WORD . OP19_VARIABLE_ASSIGN	(Rule 201)

	OP19_VARIABLE_ASSIGN	shift, and go to state 344

State 319:

	PAREN-42 -> OP21_LIST_COMMA ListElement .	(Rule 170)

	$default	reduce using rule 170 (PAREN-42)

State 320:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 155)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'my'	shift, and go to state 158
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP01_QW	shift, and go to state 156
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ListElements	go to state 345
	TypeInner	go to state 154
	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	WordScoped	go to state 97
	Operator	go to state 111
	ListElement	go to state 162
	Expression	go to state 159
	Variable	go to state 160
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 161

State 321:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 154)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 346
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 322:

	LoopWhile -> 'while (' SubExpression ')' CodeBlock .	(Rule 156)

	$default	reduce using rule 156 (LoopWhile)

State 323:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 113)

	$default	reduce using rule 113 (OperatorVoid)

State 324:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin . ';'	(Rule 167)

	';'	shift, and go to state 347

State 325:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	HashEntry -> WORD OP20_HASH_FATARROW OPTIONAL-46 SubExpression .	(Rule 186)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

	'}'	reduce using rule 186 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 186 (HashEntry)

State 326:

	PAREN-47 -> OP21_LIST_COMMA HashEntry .	(Rule 190)

	$default	reduce using rule 190 (PAREN-47)

State 327:

	Operator -> LPAREN OP01_PRINT FH_REF_SYMBOL_BRACES ListElements ')' .	(Rule 78)

	$default	reduce using rule 78 (Operator)

State 328:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	')'	shift, and go to state 348

State 329:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 164)

	$default	reduce using rule 164 (VariableRetrieval)

State 330:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 165)

	$default	reduce using rule 165 (VariableRetrieval)

State 331:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 163)

	$default	reduce using rule 163 (VariableRetrieval)

State 332:

	STAR-37 -> STAR-37 . PAREN-36	(Rule 145)
	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-37 . OPTIONAL-39	(Rule 150)

	'else'	shift, and go to state 350
	'elsif ('	shift, and go to state 353

	$end	reduce using rule 149 (OPTIONAL-39)
	'%{'	reduce using rule 149 (OPTIONAL-39)
	'@{'	reduce using rule 149 (OPTIONAL-39)
	'for my integer'	reduce using rule 149 (OPTIONAL-39)
	'foreach my'	reduce using rule 149 (OPTIONAL-39)
	'if ('	reduce using rule 149 (OPTIONAL-39)
	'my'	reduce using rule 149 (OPTIONAL-39)
	'undef'	reduce using rule 149 (OPTIONAL-39)
	'while ('	reduce using rule 149 (OPTIONAL-39)
	'}'	reduce using rule 149 (OPTIONAL-39)
	LBRACE	reduce using rule 149 (OPTIONAL-39)
	LBRACKET	reduce using rule 149 (OPTIONAL-39)
	LITERAL_NUMBER	reduce using rule 149 (OPTIONAL-39)
	LITERAL_STRING	reduce using rule 149 (OPTIONAL-39)
	LPAREN	reduce using rule 149 (OPTIONAL-39)
	OP01_CLOSE	reduce using rule 149 (OPTIONAL-39)
	OP01_NAMED	reduce using rule 149 (OPTIONAL-39)
	OP01_NAMED_VOID	reduce using rule 149 (OPTIONAL-39)
	OP01_NAMED_VOID_SCOLON	reduce using rule 149 (OPTIONAL-39)
	OP01_PRINT	reduce using rule 149 (OPTIONAL-39)
	OP03_MATH_INC_DEC	reduce using rule 149 (OPTIONAL-39)
	OP05_LOGICAL_NEG	reduce using rule 149 (OPTIONAL-39)
	OP05_MATH_NEG_LPAREN	reduce using rule 149 (OPTIONAL-39)
	OP10_NAMED_UNARY	reduce using rule 149 (OPTIONAL-39)
	OP19_LOOP_CONTROL	reduce using rule 149 (OPTIONAL-39)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 149 (OPTIONAL-39)
	OP22_LOGICAL_NEG	reduce using rule 149 (OPTIONAL-39)
	VARIABLE_SYMBOL	reduce using rule 149 (OPTIONAL-39)
	WORD	reduce using rule 149 (OPTIONAL-39)
	WORD_SCOPED	reduce using rule 149 (OPTIONAL-39)
	WORD_UPPERCASE	reduce using rule 149 (OPTIONAL-39)

	OPTIONAL-39	go to state 351
	PAREN-38	go to state 352
	PAREN-36	go to state 349

State 333:

	PLUS-40 -> Operation .	(Rule 158)

	$default	reduce using rule 158 (PLUS-40)

State 334:

	PLUS-40 -> PLUS-40 . Operation	(Rule 157)
	CodeBlock -> LBRACE PLUS-40 . '}'	(Rule 159)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'if ('	shift, and go to state 121
	'my'	shift, and go to state 94
	'undef'	shift, and go to state 98
	'}'	shift, and go to state 354
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 92
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_SCOLON	shift, and go to state 102
	OP01_PRINT	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 100
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 107

	'for my integer'	reduce using rule 138 (OPTIONAL-35)
	'foreach my'	reduce using rule 138 (OPTIONAL-35)
	'while ('	reduce using rule 138 (OPTIONAL-35)

	Statement	go to state 106
	PAREN-34	go to state 118
	WordScoped	go to state 97
	LoopLabel	go to state 96
	Operation	go to state 355
	ArrayDereferenced	go to state 93
	Literal	go to state 114
	OPTIONAL-35	go to state 90
	HashDereferenced	go to state 89
	Operator	go to state 111
	OperatorVoid	go to state 112
	VariableDeclaration	go to state 85
	SubExpression	go to state 82
	ArrayReference	go to state 110
	HashReference	go to state 81
	Variable	go to state 80
	Expression	go to state 78
	VariableModification	go to state 109
	Conditional	go to state 77

State 335:

	STAR-19 -> STAR-19 PAREN-18 .	(Rule 48)

	$default	reduce using rule 48 (STAR-19)

State 336:

	PAREN-18 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 47)

	'my'	shift, and go to state 356

State 337:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 50)

	OP19_VARIABLE_ASSIGN	shift, and go to state 357

State 338:

	HashEntryTyped -> WORD . OP20_HASH_FATARROW TypeInner SubExpression	(Rule 188)

	OP20_HASH_FATARROW	shift, and go to state 358

State 339:

	HashEntryTyped -> HashDereferenced .	(Rule 189)

	$default	reduce using rule 189 (HashEntryTyped)

State 340:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped . STAR-25 '}' ';'	(Rule 63)

	$default	reduce using rule 62 (STAR-25)

	STAR-25	go to state 359

State 341:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 64)

	';'	shift, and go to state 360

State 342:

	Method -> 'our' TYPE_METHOD . VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	VARIABLE_SYMBOL	shift, and go to state 361

State 343:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-20 STAR-21 STAR-22 Properties STAR-23 LITERAL_NUMBER ';' .	(Rule 59)

	$default	reduce using rule 59 (Class)

State 344:

	TypeInner -> 'my' Type '$TYPED_' WORD OP19_VARIABLE_ASSIGN .	(Rule 201)

	$default	reduce using rule 201 (TypeInner)

State 345:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 155)

	')'	shift, and go to state 362

State 346:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 101)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 154)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	Operator	go to state 111
	WordScoped	go to state 97
	Variable	go to state 160
	Expression	go to state 159
	HashReference	go to state 81
	ArrayReference	go to state 110
	SubExpression	go to state 363

State 347:

	VariableDeclaration -> 'my' Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrStdin ';' .	(Rule 167)

	$default	reduce using rule 167 (VariableDeclaration)

State 348:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' . OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	OP01_OPEN	shift, and go to state 364

State 349:

	STAR-37 -> STAR-37 PAREN-36 .	(Rule 145)

	$default	reduce using rule 145 (STAR-37)

State 350:

	PAREN-38 -> 'else' . CodeBlock	(Rule 147)

	LBRACE	shift, and go to state 306

	CodeBlock	go to state 365

State 351:

	Conditional -> 'if (' SubExpression ')' CodeBlock STAR-37 OPTIONAL-39 .	(Rule 150)

	$default	reduce using rule 150 (Conditional)

State 352:

	OPTIONAL-39 -> PAREN-38 .	(Rule 148)

	$default	reduce using rule 148 (OPTIONAL-39)

State 353:

	PAREN-36 -> 'elsif (' . SubExpression ')' CodeBlock	(Rule 144)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	ArrayDereferenced	go to state 93
	Literal	go to state 114
	HashDereferenced	go to state 89
	WordScoped	go to state 97
	Operator	go to state 111
	SubExpression	go to state 366
	HashReference	go to state 81
	ArrayReference	go to state 110
	Expression	go to state 159
	Variable	go to state 160

State 354:

	CodeBlock -> LBRACE PLUS-40 '}' .	(Rule 159)

	$default	reduce using rule 159 (CodeBlock)

State 355:

	PLUS-40 -> PLUS-40 Operation .	(Rule 157)

	$default	reduce using rule 157 (PLUS-40)

State 356:

	PAREN-18 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 47)

	WORD	shift, and go to state 56

	Type	go to state 367

State 357:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 50)

	'@_;'	shift, and go to state 368

State 358:

	HashEntryTyped -> WORD OP20_HASH_FATARROW . TypeInner SubExpression	(Rule 188)

	'my'	shift, and go to state 158

	TypeInner	go to state 369

State 359:

	STAR-25 -> STAR-25 . PAREN-24	(Rule 61)
	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 . '}' ';'	(Rule 63)

	'}'	shift, and go to state 371
	OP21_LIST_COMMA	shift, and go to state 370

	PAREN-24	go to state 372

State 360:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 64)

	$default	reduce using rule 64 (Properties)

State 361:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL . '= sub {' OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	'= sub {'	shift, and go to state 373

State 362:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 155)

	LBRACE	shift, and go to state 306

	CodeBlock	go to state 374

State 363:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 154)

	')'	shift, and go to state 375
	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 101 (Operator)
	OP23_LOGICAL_AND	reduce using rule 101 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 101 (Operator)

State 364:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN . 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	'my'	shift, and go to state 376

State 365:

	PAREN-38 -> 'else' CodeBlock .	(Rule 147)

	$default	reduce using rule 147 (PAREN-38)

State 366:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	PAREN-36 -> 'elsif (' SubExpression . ')' CodeBlock	(Rule 144)

	')'	shift, and go to state 377
	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

State 367:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 47)

	VARIABLE_SYMBOL	shift, and go to state 378

State 368:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-19 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 50)

	$default	reduce using rule 50 (SubroutineArguments)

State 369:

	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner . SubExpression	(Rule 188)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Expression	go to state 159
	Variable	go to state 160
	SubExpression	go to state 379
	ArrayReference	go to state 110
	HashReference	go to state 81
	WordScoped	go to state 97
	Operator	go to state 111
	HashDereferenced	go to state 89
	Literal	go to state 114
	ArrayDereferenced	go to state 93

State 370:

	PAREN-24 -> OP21_LIST_COMMA . HashEntryTyped	(Rule 60)

	'%{'	shift, and go to state 101
	WORD	shift, and go to state 338

	HashDereferenced	go to state 339
	HashEntryTyped	go to state 380

State 371:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' . ';'	(Rule 63)

	';'	shift, and go to state 381

State 372:

	STAR-25 -> STAR-25 PAREN-24 .	(Rule 61)

	$default	reduce using rule 61 (STAR-25)

State 373:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' . OPTIONAL-26 PLUS-27 '}' ';'	(Rule 69)

	LPAREN_MY	shift, and go to state 384

	'%{'	reduce using rule 66 (OPTIONAL-26)
	'@{'	reduce using rule 66 (OPTIONAL-26)
	'for my integer'	reduce using rule 66 (OPTIONAL-26)
	'foreach my'	reduce using rule 66 (OPTIONAL-26)
	'if ('	reduce using rule 66 (OPTIONAL-26)
	'my'	reduce using rule 66 (OPTIONAL-26)
	'undef'	reduce using rule 66 (OPTIONAL-26)
	'while ('	reduce using rule 66 (OPTIONAL-26)
	LBRACE	reduce using rule 66 (OPTIONAL-26)
	LBRACKET	reduce using rule 66 (OPTIONAL-26)
	LITERAL_NUMBER	reduce using rule 66 (OPTIONAL-26)
	LITERAL_STRING	reduce using rule 66 (OPTIONAL-26)
	LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP01_CLOSE	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID	reduce using rule 66 (OPTIONAL-26)
	OP01_NAMED_VOID_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP01_PRINT	reduce using rule 66 (OPTIONAL-26)
	OP03_MATH_INC_DEC	reduce using rule 66 (OPTIONAL-26)
	OP05_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	OP05_MATH_NEG_LPAREN	reduce using rule 66 (OPTIONAL-26)
	OP10_NAMED_UNARY	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL	reduce using rule 66 (OPTIONAL-26)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 66 (OPTIONAL-26)
	OP22_LOGICAL_NEG	reduce using rule 66 (OPTIONAL-26)
	VARIABLE_SYMBOL	reduce using rule 66 (OPTIONAL-26)
	WORD	reduce using rule 66 (OPTIONAL-26)
	WORD_SCOPED	reduce using rule 66 (OPTIONAL-26)
	WORD_UPPERCASE	reduce using rule 66 (OPTIONAL-26)

	MethodArguments	go to state 382
	OPTIONAL-26	go to state 383

State 374:

	LoopForEach -> 'foreach my' Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 155)

	$default	reduce using rule 155 (LoopForEach)

State 375:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 154)

	LBRACE	shift, and go to state 306

	CodeBlock	go to state 385

State 376:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' . 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	'filehandle_ref'	shift, and go to state 386

State 377:

	PAREN-36 -> 'elsif (' SubExpression ')' . CodeBlock	(Rule 144)

	LBRACE	shift, and go to state 306

	CodeBlock	go to state 387

State 378:

	PAREN-18 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 47)

	$default	reduce using rule 47 (PAREN-18)

State 379:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)
	HashEntryTyped -> WORD OP20_HASH_FATARROW TypeInner SubExpression .	(Rule 188)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150
	OP23_LOGICAL_AND	shift, and go to state 151
	OP24_LOGICAL_OR_XOR	shift, and go to state 137

	'}'	reduce using rule 188 (HashEntryTyped)
	OP21_LIST_COMMA	reduce using rule 188 (HashEntryTyped)

State 380:

	PAREN-24 -> OP21_LIST_COMMA HashEntryTyped .	(Rule 60)

	$default	reduce using rule 60 (PAREN-24)

State 381:

	Properties -> 'our hash_ref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryTyped STAR-25 '}' ';' .	(Rule 63)

	$default	reduce using rule 63 (Properties)

State 382:

	OPTIONAL-26 -> MethodArguments .	(Rule 65)

	$default	reduce using rule 65 (OPTIONAL-26)

State 383:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 . PLUS-27 '}' ';'	(Rule 69)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'if ('	shift, and go to state 121
	'my'	shift, and go to state 94
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 92
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_SCOLON	shift, and go to state 102
	OP01_PRINT	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 100
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 107

	'for my integer'	reduce using rule 138 (OPTIONAL-35)
	'foreach my'	reduce using rule 138 (OPTIONAL-35)
	'while ('	reduce using rule 138 (OPTIONAL-35)

	OperatorVoid	go to state 112
	Operator	go to state 111
	VariableDeclaration	go to state 85
	PLUS-27	go to state 388
	Variable	go to state 80
	Expression	go to state 78
	VariableModification	go to state 109
	Conditional	go to state 77
	HashReference	go to state 81
	ArrayReference	go to state 110
	SubExpression	go to state 82
	Literal	go to state 114
	Operation	go to state 389
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	OPTIONAL-35	go to state 90
	WordScoped	go to state 97
	LoopLabel	go to state 96
	Statement	go to state 106
	PAREN-34	go to state 118

State 384:

	MethodArguments -> LPAREN_MY . TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	TYPE_SELF	shift, and go to state 390

State 385:

	LoopFor -> 'for my integer' VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 154)

	$default	reduce using rule 154 (LoopFor)

State 386:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' . FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	FH_REF_SYMBOL	shift, and go to state 391

State 387:

	PAREN-36 -> 'elsif (' SubExpression ')' CodeBlock .	(Rule 144)

	$default	reduce using rule 144 (PAREN-36)

State 388:

	PLUS-27 -> PLUS-27 . Operation	(Rule 67)
	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 . '}' ';'	(Rule 69)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'if ('	shift, and go to state 121
	'my'	shift, and go to state 94
	'undef'	shift, and go to state 98
	'}'	shift, and go to state 393
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 92
	OP01_NAMED_VOID	shift, and go to state 86
	OP01_NAMED_VOID_SCOLON	shift, and go to state 102
	OP01_PRINT	shift, and go to state 84
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP19_LOOP_CONTROL	shift, and go to state 100
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 87
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 107

	'for my integer'	reduce using rule 138 (OPTIONAL-35)
	'foreach my'	reduce using rule 138 (OPTIONAL-35)
	'while ('	reduce using rule 138 (OPTIONAL-35)

	Statement	go to state 106
	PAREN-34	go to state 118
	LoopLabel	go to state 96
	WordScoped	go to state 97
	HashDereferenced	go to state 89
	OPTIONAL-35	go to state 90
	Literal	go to state 114
	Operation	go to state 392
	ArrayDereferenced	go to state 93
	Variable	go to state 80
	VariableModification	go to state 109
	Expression	go to state 78
	Conditional	go to state 77
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 82
	OperatorVoid	go to state 112
	Operator	go to state 111
	VariableDeclaration	go to state 85

State 389:

	PLUS-27 -> Operation .	(Rule 68)

	$default	reduce using rule 68 (PLUS-27)

State 390:

	MethodArguments -> LPAREN_MY TYPE_SELF . STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	$default	reduce using rule 72 (STAR-29)

	STAR-29	go to state 394

State 391:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	OP21_LIST_COMMA	shift, and go to state 395

State 392:

	PLUS-27 -> PLUS-27 Operation .	(Rule 67)

	$default	reduce using rule 67 (PLUS-27)

State 393:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' . ';'	(Rule 69)

	';'	shift, and go to state 396

State 394:

	STAR-29 -> STAR-29 . PAREN-28	(Rule 71)
	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 . ')' OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	')'	shift, and go to state 399
	OP21_LIST_COMMA	shift, and go to state 398

	PAREN-28	go to state 397

State 395:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 80)

	LITERAL_STRING	shift, and go to state 400

State 396:

	Method -> 'our' TYPE_METHOD VARIABLE_SYMBOL '= sub {' OPTIONAL-26 PLUS-27 '}' ';' .	(Rule 69)

	$default	reduce using rule 69 (Method)

State 397:

	STAR-29 -> STAR-29 PAREN-28 .	(Rule 71)

	$default	reduce using rule 71 (STAR-29)

State 398:

	PAREN-28 -> OP21_LIST_COMMA . 'my' Type VARIABLE_SYMBOL	(Rule 70)

	'my'	shift, and go to state 401

State 399:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' . OP19_VARIABLE_ASSIGN '@_;'	(Rule 73)

	OP19_VARIABLE_ASSIGN	shift, and go to state 402

State 400:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 80)

	OP21_LIST_COMMA	shift, and go to state 403

State 401:

	PAREN-28 -> OP21_LIST_COMMA 'my' . Type VARIABLE_SYMBOL	(Rule 70)

	WORD	shift, and go to state 56

	Type	go to state 404

State 402:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN . '@_;'	(Rule 73)

	'@_;'	shift, and go to state 405

State 403:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 80)

	'%{'	shift, and go to state 101
	'@{'	shift, and go to state 91
	'undef'	shift, and go to state 98
	LBRACE	shift, and go to state 99
	LBRACKET	shift, and go to state 83
	LITERAL_NUMBER	shift, and go to state 104
	LITERAL_STRING	shift, and go to state 119
	LPAREN	shift, and go to state 108
	OP01_CLOSE	shift, and go to state 115
	OP01_NAMED	shift, and go to state 157
	OP03_MATH_INC_DEC	shift, and go to state 105
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 88
	OP10_NAMED_UNARY	shift, and go to state 103
	OP22_LOGICAL_NEG	shift, and go to state 117
	VARIABLE_SYMBOL	shift, and go to state 113
	WORD	shift, and go to state 23
	WORD_SCOPED	shift, and go to state 24
	WORD_UPPERCASE	shift, and go to state 163

	Literal	go to state 114
	ArrayDereferenced	go to state 93
	HashDereferenced	go to state 89
	WordScoped	go to state 97
	Operator	go to state 111
	Expression	go to state 159
	Variable	go to state 160
	ArrayReference	go to state 110
	HashReference	go to state 81
	SubExpression	go to state 406

State 404:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type . VARIABLE_SYMBOL	(Rule 70)

	VARIABLE_SYMBOL	shift, and go to state 407

State 405:

	MethodArguments -> LPAREN_MY TYPE_SELF STAR-29 ')' OP19_VARIABLE_ASSIGN '@_;' .	(Rule 73)

	$default	reduce using rule 73 (MethodArguments)

State 406:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' OP01_OPEN 'my' 'filehandle_ref' FH_REF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 80)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 84)
	Operator -> SubExpression . OP06_REGEX_MATCH OP06_REGEX_PATTERN	(Rule 87)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 88)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 89)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 90)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 91)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 92)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 95)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 96)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 97)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 98)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 99)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 100)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 101)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 102)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 104)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 105)

	OP04_MATH_POW	shift, and go to state 143
	OP06_REGEX_MATCH	shift, and go to state 136
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 138
	OP07_STRING_REPEAT	shift, and go to state 148
	OP08_MATH_ADD_SUB	shift, and go to state 149
	OP08_STRING_CAT	shift, and go to state 145
	OP09_BITWISE_SHIFT	shift, and go to state 139
	OP11_COMPARE_LT_GT	shift, and go to state 152
	OP12_COMPARE_EQ_NE	shift, and go to state 146
	OP13_BITWISE_AND	shift, and go to state 140
	OP14_BITWISE_OR_XOR	shift, and go to state 142
	OP15_LOGICAL_AND	shift, and go to state 144
	OP16_LOGICAL_OR	shift, and go to state 147
	OP17_LIST_RANGE	shift, and go to state 141
	OP18_TERNARY	shift, and go to state 150

	')'	reduce using rule 80 (Operator)
	';'	reduce using rule 80 (Operator)
	']'	reduce using rule 80 (Operator)
	'}'	reduce using rule 80 (Operator)
	OP21_LIST_COMMA	reduce using rule 80 (Operator)
	OP23_LOGICAL_AND	reduce using rule 80 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 80 (Operator)

State 407:

	PAREN-28 -> OP21_LIST_COMMA 'my' Type VARIABLE_SYMBOL .	(Rule 70)

	$default	reduce using rule 70 (PAREN-28)


Summary:
--------
Number of rules         : 207
Number of terminals     : 89
Number of non-terminals : 97
Number of states        : 408
